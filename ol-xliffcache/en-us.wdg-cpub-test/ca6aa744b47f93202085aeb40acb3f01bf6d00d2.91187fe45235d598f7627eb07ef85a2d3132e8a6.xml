{"nodes":[{"pos":[60,81],"content":"Use the accelerometer","needQuote":true,"needEscape":true,"nodes":[{"content":"Use the accelerometer","pos":[0,21]}]},{"pos":[95,158],"content":"Learn how to use the accelerometer to respond to user movement.","needQuote":true,"needEscape":true,"nodes":[{"content":"Learn how to use the accelerometer to respond to user movement.","pos":[0,63]}]},{"content":"Use the accelerometer","pos":[165,186]},{"content":"\\[ Updated for UWP apps on Windows 10.","pos":[188,226]},{"content":"For Windows 8.x articles, see the <bpt id=\"p1\">[</bpt>archive<ept id=\"p1\">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept> \\]","pos":[227,322],"source":" For Windows 8.x articles, see the [archive](http://go.microsoft.com/fwlink/p/?linkid=619132) \\]"},{"content":"Important APIs","pos":[327,341]},{"content":"Windows.Devices.Sensors","pos":[353,376]},{"content":"Accelerometer","pos":[445,458]},{"content":"\\[Some information relates to pre-released product which may be substantially modified before it's commercially released.","pos":[521,642]},{"content":"Microsoft makes no warranties, express or implied, with respect to the information provided here.\\]","pos":[643,742]},{"content":"Learn how to use the accelerometer to respond to user movement.","pos":[744,807]},{"content":"A simple game app relies on a single sensor, the accelerometer, as an input device.","pos":[809,892]},{"content":"These apps typically use only one or two axes for input; but they may also use the shake event as another input source.","pos":[893,1012]},{"content":"Prerequisites","pos":[1017,1030]},{"content":"You should be familiar with Extensible Application Markup Language (XAML), Microsoft Visual C#, and events.","pos":[1032,1139]},{"content":"The device or emulator that you're using must support an accelerometer.","pos":[1141,1212]},{"content":"Create a simple accelerometer app","pos":[1217,1250]},{"content":"This section is divided into two subsections.","pos":[1252,1297]},{"content":"The first subsection will take you through the steps necessary to create a simple accelerometer application from scratch.","pos":[1298,1419]},{"content":"The following subsection explains the app you have just created.","pos":[1420,1484]},{"content":"Instructions","pos":[1490,1502]},{"pos":[1508,1616],"content":"Create a new project, choosing a <bpt id=\"p1\">**</bpt>Blank App (Universal Windows)<ept id=\"p1\">**</ept> from the <bpt id=\"p2\">**</bpt>Visual C#<ept id=\"p2\">**</ept> project templates.","source":"Create a new project, choosing a **Blank App (Universal Windows)** from the **Visual C#** project templates."},{"content":"Open your project's MainPage.xaml.cs file and replace the existing code with the following.","pos":[1622,1713]},{"content":"You'll need to rename the namespace in the previous snippet with the name you gave your project.","pos":[3975,4071]},{"content":"For example, if you created a project named <bpt id=\"p1\">**</bpt>AccelerometerCS<ept id=\"p1\">**</ept>, you'd replace <ph id=\"ph1\">`namespace App1`</ph> with <ph id=\"ph2\">`namespace AccelerometerCS`</ph>.","pos":[4072,4201],"source":" For example, if you created a project named **AccelerometerCS**, you'd replace `namespace App1` with `namespace AccelerometerCS`."},{"content":"Open the file MainPage.xaml and replace the original contents with the following XML.","pos":[4207,4292]},{"content":"You'll need to replace the first part of the class name in the previous snippet with the namespace of your app.","pos":[5897,6008]},{"content":"For example, if you created a project named <bpt id=\"p1\">**</bpt>AccelerometerCS<ept id=\"p1\">**</ept>, you'd replace <ph id=\"ph1\">`x:Class=\"App1.MainPage\"`</ph> with <ph id=\"ph2\">`x:Class=\"AccelerometerCS.MainPage\"`</ph>.","pos":[6009,6156],"source":" For example, if you created a project named **AccelerometerCS**, you'd replace `x:Class=\"App1.MainPage\"` with `x:Class=\"AccelerometerCS.MainPage\"`."},{"content":"You should also replace <ph id=\"ph1\">`xmlns:local=\"using:App1\"`</ph> with <ph id=\"ph2\">`xmlns:local=\"using:AccelerometerCS\"`</ph>.","pos":[6157,6251],"source":" You should also replace `xmlns:local=\"using:App1\"` with `xmlns:local=\"using:AccelerometerCS\"`."},{"pos":[6257,6345],"content":"Press F5 or select <bpt id=\"p1\">**</bpt>Debug<ept id=\"p1\">**</ept> <ph id=\"ph1\">&amp;gt;</ph> <bpt id=\"p2\">**</bpt>Start Debugging<ept id=\"p2\">**</ept> to build, deploy, and run the app.","source":"Press F5 or select **Debug** &gt; **Start Debugging** to build, deploy, and run the app."},{"content":"Once the app is running, you can change the accelerometer values by moving the device or using the emulator tools.","pos":[6347,6461]},{"pos":[6467,6592],"content":"Stop the app by returning to Visual Studio and pressing Shift+F5 or select <bpt id=\"p1\">**</bpt>Debug<ept id=\"p1\">**</ept> <ph id=\"ph1\">&amp;gt;</ph> <bpt id=\"p2\">**</bpt>Stop Debugging<ept id=\"p2\">**</ept> to stop the app.","source":"Stop the app by returning to Visual Studio and pressing Shift+F5 or select **Debug** &gt; **Stop Debugging** to stop the app."},{"content":"Explanation","pos":[6598,6609]},{"content":"The previous example demonstrates how little code you'll need to write in order to integrate accelerometer input in your app.","pos":[6611,6736]},{"pos":[6738,6829],"content":"The app establishes a connection with the default accelerometer in the <bpt id=\"p1\">**</bpt>MainPage<ept id=\"p1\">**</ept> method.","source":"The app establishes a connection with the default accelerometer in the **MainPage** method."},{"content":"The app establishes the report interval within the <bpt id=\"p1\">**</bpt>MainPage<ept id=\"p1\">**</ept> method.","pos":[6891,6962],"source":"The app establishes the report interval within the **MainPage** method."},{"content":"This code retrieves the minimum interval supported by the device and compares it to a requested interval of 16 milliseconds (which approximates a 60-Hz refresh rate).","pos":[6963,7129]},{"content":"If the minimum supported interval is greater than the requested interval, the code sets the value to the minimum.","pos":[7130,7243]},{"content":"Otherwise, it sets the value to the requested interval.","pos":[7244,7299]},{"content":"The new accelerometer data is captured in the <bpt id=\"p1\">**</bpt>ReadingChanged<ept id=\"p1\">**</ept> method.","pos":[7498,7570],"source":"The new accelerometer data is captured in the **ReadingChanged** method."},{"content":"Each time the sensor driver receives new data from the sensor, it passes the values to your app using this event handler.","pos":[7571,7692]},{"content":"The app registers this event handler on the following line.","pos":[7693,7752]},{"content":"These new values are written to the TextBlocks found in the project's XAML.","pos":[7895,7970]},{"content":"Related topics","pos":[8540,8554]},{"content":"Accelerometer Sample","pos":[8559,8579]}],"content":"---\nms.assetid: F90686F5-641A-42D9-BC44-EC6CA11B8A42\ntitle: Use the accelerometer\ndescription: Learn how to use the accelerometer to respond to user movement.\n---\n# Use the accelerometer\n\n\\[ Updated for UWP apps on Windows 10. For Windows 8.x articles, see the [archive](http://go.microsoft.com/fwlink/p/?linkid=619132) \\]\n\n** Important APIs **\n\n-   [**Windows.Devices.Sensors**](https://msdn.microsoft.com/library/windows/apps/BR206408)\n-   [**Accelerometer**](https://msdn.microsoft.com/library/windows/apps/BR225687)\n\n\\[Some information relates to pre-released product which may be substantially modified before it's commercially released. Microsoft makes no warranties, express or implied, with respect to the information provided here.\\]\n\nLearn how to use the accelerometer to respond to user movement.\n\nA simple game app relies on a single sensor, the accelerometer, as an input device. These apps typically use only one or two axes for input; but they may also use the shake event as another input source.\n\n## Prerequisites\n\nYou should be familiar with Extensible Application Markup Language (XAML), Microsoft Visual C#, and events.\n\nThe device or emulator that you're using must support an accelerometer.\n\n## Create a simple accelerometer app\n\nThis section is divided into two subsections. The first subsection will take you through the steps necessary to create a simple accelerometer application from scratch. The following subsection explains the app you have just created.\n\n### Instructions\n\n-   Create a new project, choosing a **Blank App (Universal Windows)** from the **Visual C#** project templates.\n\n-   Open your project's MainPage.xaml.cs file and replace the existing code with the following.\n\n```csharp\n    using System;\n    using System.Collections.Generic;\n    using System.IO;\n    using System.Linq;\n    using Windows.Foundation;\n    using Windows.Foundation.Collections;\n    using Windows.UI.Xaml;\n    using Windows.UI.Xaml.Controls;\n    using Windows.UI.Xaml.Controls.Primitives;\n    using Windows.UI.Xaml.Data;\n    using Windows.UI.Xaml.Input;\n    using Windows.UI.Xaml.Media;\n    using Windows.UI.Xaml.Navigation;\n\n    // Required to support the core dispatcher and the accelerometer\n\n    using Windows.UI.Core;\n    using Windows.Devices.Sensors;\n\n    namespace App1\n    {\n\n        public sealed partial class MainPage : Page\n        {\n            // Sensor and dispatcher variables\n            private Accelerometer _accelerometer;\n\n            // This event handler writes the current accelerometer reading to \n            // the three acceleration text blocks on the app' s main page.\n\n            private async void ReadingChanged(object sender, AccelerometerReadingChangedEventArgs e)\n            {\n                await Dispatcher.RunAsync(CoreDispatcherPriority.Normal, () =>\n                {\n                    AccelerometerReading reading = e.Reading;\n                    txtXAxis.Text = String.Format(\"{0,5:0.00}\", reading.AccelerationX);\n                    txtYAxis.Text = String.Format(\"{0,5:0.00}\", reading.AccelerationY);\n                    txtZAxis.Text = String.Format(\"{0,5:0.00}\", reading.AccelerationZ);\n\n                });\n            }\n\n            public MainPage()\n            {\n                this.InitializeComponent();\n                _accelerometer = Accelerometer.GetDefault();\n\n                if (_accelerometer != null)\n                {\n                    // Establish the report interval\n                    uint minReportInterval = _accelerometer.MinimumReportInterval;\n                    uint reportInterval = minReportInterval > 16 ? minReportInterval : 16;\n                    _accelerometer.ReportInterval = reportInterval;\n\n                    // Assign an event handler for the reading-changed event\n                    _accelerometer.ReadingChanged += new TypedEventHandler<Accelerometer, AccelerometerReadingChangedEventArgs>(ReadingChanged);\n                }\n            }\n        }\n    }\n```\n\nYou'll need to rename the namespace in the previous snippet with the name you gave your project. For example, if you created a project named **AccelerometerCS**, you'd replace `namespace App1` with `namespace AccelerometerCS`.\n\n-   Open the file MainPage.xaml and replace the original contents with the following XML.\n\n```xml\n        <Page\n        x:Class=\"App1.MainPage\"\n        xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\n        xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\n        xmlns:local=\"using:App1\"\n        xmlns:d=\"http://schemas.microsoft.com/expression/blend/2008\"\n        xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\"\n        mc:Ignorable=\"d\">\n\n        <Grid x:Name=\"LayoutRoot\" Background=\"#FF0C0C0C\">\n            <TextBlock HorizontalAlignment=\"Left\" Height=\"25\" Margin=\"8,20,0,0\" TextWrapping=\"Wrap\" Text=\"X-axis:\" VerticalAlignment=\"Top\" Width=\"62\" Foreground=\"#FFEDE6E6\"/>\n            <TextBlock HorizontalAlignment=\"Left\" Height=\"27\" Margin=\"8,49,0,0\" TextWrapping=\"Wrap\" Text=\"Y-axis:\" VerticalAlignment=\"Top\" Width=\"62\" Foreground=\"#FFF5F2F2\"/>\n            <TextBlock HorizontalAlignment=\"Left\" Height=\"23\" Margin=\"8,80,0,0\" TextWrapping=\"Wrap\" Text=\"Z-axis:\" VerticalAlignment=\"Top\" Width=\"62\" Foreground=\"#FFF6F0F0\"/>\n            <TextBlock x:Name=\"txtXAxis\" HorizontalAlignment=\"Left\" Height=\"15\" Margin=\"70,16,0,0\" TextWrapping=\"Wrap\" Text=\"TextBlock\" VerticalAlignment=\"Top\" Width=\"61\" Foreground=\"#FFF2F2F2\"/>\n            <TextBlock x:Name=\"txtYAxis\" HorizontalAlignment=\"Left\" Height=\"15\" Margin=\"70,49,0,0\" TextWrapping=\"Wrap\" Text=\"TextBlock\" VerticalAlignment=\"Top\" Width=\"53\" Foreground=\"#FFF2EEEE\"/>\n            <TextBlock x:Name=\"txtZAxis\" HorizontalAlignment=\"Left\" Height=\"15\" Margin=\"70,80,0,0\" TextWrapping=\"Wrap\" Text=\"TextBlock\" VerticalAlignment=\"Top\" Width=\"53\" Foreground=\"#FFFFF8F8\"/>\n\n        </Grid>\n    </Page>\n```\n\nYou'll need to replace the first part of the class name in the previous snippet with the namespace of your app. For example, if you created a project named **AccelerometerCS**, you'd replace `x:Class=\"App1.MainPage\"` with `x:Class=\"AccelerometerCS.MainPage\"`. You should also replace `xmlns:local=\"using:App1\"` with `xmlns:local=\"using:AccelerometerCS\"`.\n\n-   Press F5 or select **Debug** &gt; **Start Debugging** to build, deploy, and run the app.\n\nOnce the app is running, you can change the accelerometer values by moving the device or using the emulator tools.\n\n-   Stop the app by returning to Visual Studio and pressing Shift+F5 or select **Debug** &gt; **Stop Debugging** to stop the app.\n\n### Explanation\n\nThe previous example demonstrates how little code you'll need to write in order to integrate accelerometer input in your app.\n\nThe app establishes a connection with the default accelerometer in the **MainPage** method.\n\n```csharp\n_accelerometer = Accelerometer.GetDefault();\n```\n\nThe app establishes the report interval within the **MainPage** method. This code retrieves the minimum interval supported by the device and compares it to a requested interval of 16 milliseconds (which approximates a 60-Hz refresh rate). If the minimum supported interval is greater than the requested interval, the code sets the value to the minimum. Otherwise, it sets the value to the requested interval.\n\n```csharp\nuint minReportInterval = _accelerometer.MinimumReportInterval;\nuint reportInterval = minReportInterval > 16 ? minReportInterval : 16;\n_accelerometer.ReportInterval = reportInterval;\n```\n\nThe new accelerometer data is captured in the **ReadingChanged** method. Each time the sensor driver receives new data from the sensor, it passes the values to your app using this event handler. The app registers this event handler on the following line.\n\n```csharp\n_accelerometer.ReadingChanged += new TypedEventHandler<Accelerometer, \nAccelerometerReadingChangedEventArgs>(ReadingChanged);\n```\n\nThese new values are written to the TextBlocks found in the project's XAML.\n\n```xml\n<TextBlock x:Name=\"txtXAxis\" HorizontalAlignment=\"Left\" Height=\"15\" Margin=\"70,16,0,0\" TextWrapping=\"Wrap\" Text=\"TextBlock\" VerticalAlignment=\"Top\" Width=\"61\" Foreground=\"#FFF2F2F2\"/>\n <TextBlock x:Name=\"txtYAxis\" HorizontalAlignment=\"Left\" Height=\"15\" Margin=\"70,49,0,0\" TextWrapping=\"Wrap\" Text=\"TextBlock\" VerticalAlignment=\"Top\" Width=\"53\" Foreground=\"#FFF2EEEE\"/>\n <TextBlock x:Name=\"txtZAxis\" HorizontalAlignment=\"Left\" Height=\"15\" Margin=\"70,80,0,0\" TextWrapping=\"Wrap\" Text=\"TextBlock\" VerticalAlignment=\"Top\" Width=\"53\" Foreground=\"#FFFFF8F8\"/>\n```\n## Related topics\n\n* [Accelerometer Sample](http://go.microsoft.com/fwlink/p/?linkid=241377)\n\n"}