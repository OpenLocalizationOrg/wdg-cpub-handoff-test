<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="en-us" version="2.0" xml:space="preserve" xmlns="urn:oasis:names:tc:xliff:document:2.0">
	<file id="1">
		<mda:metadata>
			<mda:metaGroup>
				<mda:meta type="tool-id">mdxliff</mda:meta>
				<mda:meta type="tool-name">mdxliff</mda:meta>
				<mda:meta type="tool-version">1.0-c5d768e</mda:meta>
				<mda:meta type="tool-company">Microsoft</mda:meta>
			</mda:metaGroup>
		<mda:metaGroup><mda:meta type="olfilehash">29e438752a2f90079e6b3f516b27f2f1fa0829ee</mda:meta><mda:meta type="olfilepath">wdg-cpub-test\ndolci2\gaming\index.md</mda:meta><mda:meta type="oltranslationpriority"></mda:meta><mda:meta type="oltranslationtype">Human Translation</mda:meta><mda:meta type="olskeletonhash">f1f1a4090aa966e865aff2ab1e4c3c4c834c74e6</mda:meta><mda:meta type="olxliffhash">f7e1e5c18a53f906b4e854f3d770ce41ff9937ca</mda:meta></mda:metaGroup></mda:metadata>
		<group id="content">
			<unit id="101" translate="yes">
				<segment state="initial">
					<source>Games and DirectX</source>
					<target>Games and DirectX</target>
				</segment>
			</unit>
			<unit id="102" translate="yes">
				<segment state="initial">
					<source>Universal Windows Platform (UWP) offers new opportunities to create, distribute, and monetize games.</source>
					<target>Universal Windows Platform (UWP) offers new opportunities to create, distribute, and monetize games.</target>
				</segment>
			</unit>
			<unit id="103" translate="yes">
				<segment state="initial">
					<source>Learn about starting a new game or porting an existing game.</source>
					<target>Learn about starting a new game or porting an existing game.</target>
				</segment>
			</unit>
			<unit id="104" translate="yes">
				<segment state="initial">
					<source>Games and DirectX</source>
					<target>Games and DirectX</target>
				</segment>
			</unit>
			<unit id="105" translate="yes">
				<segment state="initial">
					<source>\[ Updated for UWP apps on Windows 10.</source>
					<target>\[ Updated for UWP apps on Windows 10.</target>
				</segment>
			</unit>
			<unit id="106" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](http://go.microsoft.com/fwlink/p/?linkid=619132)</data>
				</originalData>
				<segment state="initial">
					<source>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</source>
					<target>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</target>
				</segment>
			</unit>
			<unit id="107" translate="yes">
				<segment state="initial">
					<source>Universal Windows Platform (UWP) offers new opportunities to create, distribute, and monetize games.</source>
					<target>Universal Windows Platform (UWP) offers new opportunities to create, distribute, and monetize games.</target>
				</segment>
			</unit>
			<unit id="108" translate="yes">
				<segment state="initial">
					<source>Learn about starting a new game or porting an existing game.</source>
					<target>Learn about starting a new game or porting an existing game.</target>
				</segment>
			</unit>
			<unit id="109" translate="yes">
				<segment state="initial">
					<source>Topic</source>
					<target>Topic</target>
				</segment>
			</unit>
			<unit id="110" translate="yes">
				<segment state="initial">
					<source>Description</source>
					<target>Description</target>
				</segment>
			</unit>
			<unit id="111" translate="yes">
				<segment state="initial">
					<source>Windows 10 game development guide</source>
					<target>Windows 10 game development guide</target>
				</segment>
			</unit>
			<unit id="112" translate="yes">
				<segment state="initial">
					<source>An end-to-end guide to resources and information for developing UWP games.</source>
					<target>An end-to-end guide to resources and information for developing UWP games.</target>
				</segment>
			</unit>
			<unit id="113" translate="yes">
				<segment state="initial">
					<source>Game technologies for Universal Windows Platform apps</source>
					<target>Game technologies for Universal Windows Platform apps</target>
				</segment>
			</unit>
			<unit id="114" translate="yes">
				<segment state="initial">
					<source>In this guide, you'll learn about the technologies available for developing UWP games.</source>
					<target>In this guide, you'll learn about the technologies available for developing UWP games.</target>
				</segment>
			</unit>
			<unit id="115" translate="yes">
				<segment state="initial">
					<source>Project templates and tools for games</source>
					<target>Project templates and tools for games</target>
				</segment>
			</unit>
			<unit id="116" translate="yes">
				<segment state="initial">
					<source>Shows you what you need to start programming DirectX games for the UWP.</source>
					<target>Shows you what you need to start programming DirectX games for the UWP.</target>
				</segment>
			</unit>
			<unit id="117" translate="yes">
				<segment state="initial">
					<source>The app object and DirectX</source>
					<target>The app object and DirectX</target>
				</segment>
			</unit>
			<unit id="118" translate="yes">
				<segment state="initial">
					<source>UWP with DirectX games don't use many of the Windows UI user interface elements and objects.</source>
					<target>UWP with DirectX games don't use many of the Windows UI user interface elements and objects.</target>
				</segment>
			</unit>
			<unit id="119" translate="yes">
				<segment state="initial">
					<source>Rather, because they run at a lower level in the Windows Runtime stack, they must interoperate with the user interface framework in a more fundamental way: by accessing and interoperating with the app object directly.</source>
					<target>Rather, because they run at a lower level in the Windows Runtime stack, they must interoperate with the user interface framework in a more fundamental way: by accessing and interoperating with the app object directly.</target>
				</segment>
			</unit>
			<unit id="120" translate="yes">
				<segment state="initial">
					<source>Learn when and how this interoperation occurs, and how you, as a DirectX developer, can effectively use this model in the development of your UWP app.</source>
					<target>Learn when and how this interoperation occurs, and how you, as a DirectX developer, can effectively use this model in the development of your UWP app.</target>
				</segment>
			</unit>
			<unit id="121" translate="yes">
				<segment state="initial">
					<source>Launching and resuming apps</source>
					<target>Launching and resuming apps</target>
				</segment>
			</unit>
			<unit id="122" translate="yes">
				<segment state="initial">
					<source>Learn how to launch, suspend, and resume your UWP DirectX app.</source>
					<target>Learn how to launch, suspend, and resume your UWP DirectX app.</target>
				</segment>
			</unit>
			<unit id="123" translate="yes">
				<segment state="initial">
					<source>2D graphics for DirectX games</source>
					<target>2D graphics for DirectX games</target>
				</segment>
			</unit>
			<unit id="124" translate="yes">
				<segment state="initial">
					<source>We discuss the use of 2D bitmap graphics and effects, and how to use them in your game.</source>
					<target>We discuss the use of 2D bitmap graphics and effects, and how to use them in your game.</target>
				</segment>
			</unit>
			<unit id="125" translate="yes">
				<segment state="initial">
					<source>Basic 3D graphics for DirectX games</source>
					<target>Basic 3D graphics for DirectX games</target>
				</segment>
			</unit>
			<unit id="126" translate="yes">
				<segment state="initial">
					<source>We show how to use DirectX programming to implement the fundamental concepts of 3D graphics.</source>
					<target>We show how to use DirectX programming to implement the fundamental concepts of 3D graphics.</target>
				</segment>
			</unit>
			<unit id="127" translate="yes">
				<segment state="initial">
					<source>Load resources in your DirectX game</source>
					<target>Load resources in your DirectX game</target>
				</segment>
			</unit>
			<unit id="128" translate="yes">
				<segment state="initial">
					<source>Most games, at some point, load resources and assets (such as shaders, textures, predefined meshes or other graphics data) from local storage or some other data stream.</source>
					<target>Most games, at some point, load resources and assets (such as shaders, textures, predefined meshes or other graphics data) from local storage or some other data stream.</target>
				</segment>
			</unit>
			<unit id="129" translate="yes">
				<segment state="initial">
					<source>Here, we walk you through a high-level view of what you must consider when loading these files to use in your UWP game.</source>
					<target>Here, we walk you through a high-level view of what you must consider when loading these files to use in your UWP game.</target>
				</segment>
			</unit>
			<unit id="130" translate="yes">
				<segment state="initial">
					<source>Create a simple UWP game with DirectX</source>
					<target>Create a simple UWP game with DirectX</target>
				</segment>
			</unit>
			<unit id="131" translate="yes">
				<segment state="initial">
					<source>In this set of tutorials, you learn how to create a basic UWP game with DirectX and C++.</source>
					<target>In this set of tutorials, you learn how to create a basic UWP game with DirectX and C++.</target>
				</segment>
			</unit>
			<unit id="132" translate="yes">
				<segment state="initial">
					<source>We cover all the major parts of a game, including the processes for loading assets such as arts and meshes, creating a main game loop, implementing a simple rendering pipeline, and adding sound and controls.</source>
					<target>We cover all the major parts of a game, including the processes for loading assets such as arts and meshes, creating a main game loop, implementing a simple rendering pipeline, and adding sound and controls.</target>
				</segment>
			</unit>
			<unit id="133" translate="yes">
				<segment state="initial">
					<source>Developing Marble Maze, a Universal Windows Platform game in C++ and DirectX</source>
					<target>Developing Marble Maze, a Universal Windows Platform game in C++ and DirectX</target>
				</segment>
			</unit>
			<unit id="134" translate="yes">
				<segment state="initial">
					<source>This section of the documentation describes how to use DirectX and Visual C++ to create a 3-D UWP game.</source>
					<target>This section of the documentation describes how to use DirectX and Visual C++ to create a 3-D UWP game.</target>
				</segment>
			</unit>
			<unit id="135" translate="yes">
				<segment state="initial">
					<source>This documentation shows how to create a 3-D game named Marble Maze that embraces new form factors such as tablets and also works on traditional desktop and laptop PCs.</source>
					<target>This documentation shows how to create a 3-D game named Marble Maze that embraces new form factors such as tablets and also works on traditional desktop and laptop PCs.</target>
				</segment>
			</unit>
			<unit id="136" translate="yes">
				<segment state="initial">
					<source>Supporting screen orientation</source>
					<target>Supporting screen orientation</target>
				</segment>
			</unit>
			<unit id="137" translate="yes">
				<segment state="initial">
					<source>Here, we'll discuss best practices for handling screen rotation in your UWP DirectX app, so that the Windows 10 device's graphics hardware are used efficiently and effectively.</source>
					<target>Here, we'll discuss best practices for handling screen rotation in your UWP DirectX app, so that the Windows 10 device's graphics hardware are used efficiently and effectively.</target>
				</segment>
			</unit>
			<unit id="138" translate="yes">
				<segment state="initial">
					<source>Audio for games</source>
					<target>Audio for games</target>
				</segment>
			</unit>
			<unit id="139" translate="yes">
				<segment state="initial">
					<source>Learn how to develop and incorporate music and sounds into your DirectX game, and how to process the audio signals to create dynamic and positional sounds.</source>
					<target>Learn how to develop and incorporate music and sounds into your DirectX game, and how to process the audio signals to create dynamic and positional sounds.</target>
				</segment>
			</unit>
			<unit id="140" translate="yes">
				<segment state="initial">
					<source>Touch controls for games</source>
					<target>Touch controls for games</target>
				</segment>
			</unit>
			<unit id="141" translate="yes">
				<segment state="initial">
					<source>Learn how to add basic touch controls to your UWP C++ game with DirectX.</source>
					<target>Learn how to add basic touch controls to your UWP C++ game with DirectX.</target>
				</segment>
			</unit>
			<unit id="142" translate="yes">
				<segment state="initial">
					<source>We show you how to add touch-based controls to move a fixed-plane camera in a Direct3D environment, where dragging with a finger or stylus shifts the camera perspective.</source>
					<target>We show you how to add touch-based controls to move a fixed-plane camera in a Direct3D environment, where dragging with a finger or stylus shifts the camera perspective.</target>
				</segment>
			</unit>
			<unit id="143" translate="yes">
				<segment state="initial">
					<source>Move-look controls for games</source>
					<target>Move-look controls for games</target>
				</segment>
			</unit>
			<unit id="144" translate="yes">
				<segment state="initial">
					<source>Learn how to add traditional mouse and keyboard move-look controls (also known as mouselook controls) to your DirectX game.</source>
					<target>Learn how to add traditional mouse and keyboard move-look controls (also known as mouselook controls) to your DirectX game.</target>
				</segment>
			</unit>
			<unit id="145" translate="yes">
				<segment state="initial">
					<source>Optimize input and rendering loop</source>
					<target>Optimize input and rendering loop</target>
				</segment>
			</unit>
			<unit id="146" translate="yes">
				<segment state="initial">
					<source>Input latency can significantly impact the experience of a game, and optimizing it can make a game feel more polished.</source>
					<target>Input latency can significantly impact the experience of a game, and optimizing it can make a game feel more polished.</target>
				</segment>
			</unit>
			<unit id="147" translate="yes">
				<segment state="initial">
					<source>Additionally, proper input event optimization can improve battery life.</source>
					<target>Additionally, proper input event optimization can improve battery life.</target>
				</segment>
			</unit>
			<unit id="148" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](optimize-performance-for-windows-store-direct3d-11-apps-with-coredispatcher.md)</data>
				</originalData>
				<segment state="initial">
					<source>Learn how to choose the right <pc dataRefEnd="id2" dataRefStart="id1" id="p1">CoreDispatcher</pc> input event processing options to make sure your game handles input as smoothly as possible.</source>
					<target>Learn how to choose the right <pc dataRefEnd="id2" dataRefStart="id1" id="p1">CoreDispatcher</pc> input event processing options to make sure your game handles input as smoothly as possible.</target>
				</segment>
			</unit>
			<unit id="149" translate="yes">
				<segment state="initial">
					<source>Swap chain scaling and overlays</source>
					<target>Swap chain scaling and overlays</target>
				</segment>
			</unit>
			<unit id="150" translate="yes">
				<segment state="initial">
					<source>Learn how to create scaled swap chains for faster rendering on mobile devices, and use overlay swap chains (when available) to increase the visual quality.</source>
					<target>Learn how to create scaled swap chains for faster rendering on mobile devices, and use overlay swap chains (when available) to increase the visual quality.</target>
				</segment>
			</unit>
			<unit id="151" translate="yes">
				<segment state="initial">
					<source>Reduce latency with DXGI 1.3 swap chains</source>
					<target>Reduce latency with DXGI 1.3 swap chains</target>
				</segment>
			</unit>
			<unit id="152" translate="yes">
				<segment state="initial">
					<source>Use DXGI 1.3 to reduce the effective frame latency by waiting for the swap chain to signal the appropriate time to begin rendering a new frame.</source>
					<target>Use DXGI 1.3 to reduce the effective frame latency by waiting for the swap chain to signal the appropriate time to begin rendering a new frame.</target>
				</segment>
			</unit>
			<unit id="153" translate="yes">
				<segment state="initial">
					<source>Multisampling in UWP apps</source>
					<target>Multisampling in UWP apps</target>
				</segment>
			</unit>
			<unit id="154" translate="yes">
				<segment state="initial">
					<source>Learn how to use multisampling in UWP apps built with Direct3D.</source>
					<target>Learn how to use multisampling in UWP apps built with Direct3D.</target>
				</segment>
			</unit>
			<unit id="155" translate="yes">
				<segment state="initial">
					<source>Handle device removed scenarios in Direct3D 11</source>
					<target>Handle device removed scenarios in Direct3D 11</target>
				</segment>
			</unit>
			<unit id="156" translate="yes">
				<segment state="initial">
					<source>This topic explains how to recreate the Direct3D and DXGI device interface chain when the graphics adapter is removed or reinitialized.</source>
					<target>This topic explains how to recreate the Direct3D and DXGI device interface chain when the graphics adapter is removed or reinitialized.</target>
				</segment>
			</unit>
			<unit id="157" translate="yes">
				<segment state="initial">
					<source>Asynchronous programming for games</source>
					<target>Asynchronous programming for games</target>
				</segment>
			</unit>
			<unit id="158" translate="yes">
				<segment state="initial">
					<source>This topic covers various points to consider when you are using asynchronous programming and threading with DirectX.</source>
					<target>This topic covers various points to consider when you are using asynchronous programming and threading with DirectX.</target>
				</segment>
			</unit>
			<unit id="159" translate="yes">
				<segment state="initial">
					<source>Networking for games</source>
					<target>Networking for games</target>
				</segment>
			</unit>
			<unit id="160" translate="yes">
				<segment state="initial">
					<source>Learn how to develop and incorporate networking features into your DirectX game.</source>
					<target>Learn how to develop and incorporate networking features into your DirectX game.</target>
				</segment>
			</unit>
			<unit id="161" translate="yes">
				<segment state="initial">
					<source>DirectX and XAML interop</source>
					<target>DirectX and XAML interop</target>
				</segment>
			</unit>
			<unit id="162" translate="yes">
				<segment state="initial">
					<source>You can use Extensible Application Markup Language (XAML) and Microsoft DirectX together in your UWP game.</source>
					<target>You can use Extensible Application Markup Language (XAML) and Microsoft DirectX together in your UWP game.</target>
				</segment>
			</unit>
			<unit id="163" translate="yes">
				<segment state="initial">
					<source>Package your game</source>
					<target>Package your game</target>
				</segment>
			</unit>
			<unit id="164" translate="yes">
				<segment state="initial">
					<source>Larger UWP games, especially those that support multiple languages with region-specific assets or feature optional high-definition assets, can easily balloon to large sizes.</source>
					<target>Larger UWP games, especially those that support multiple languages with region-specific assets or feature optional high-definition assets, can easily balloon to large sizes.</target>
				</segment>
			</unit>
			<unit id="165" translate="yes">
				<segment state="initial">
					<source>In this topic, learn how to use app packages and app bundles to customize your app so that your customers only receive the resources they actually need.</source>
					<target>In this topic, learn how to use app packages and app bundles to customize your app so that your customers only receive the resources they actually need.</target>
				</segment>
			</unit>
			<unit id="166" translate="yes">
				<segment state="initial">
					<source>Game porting guides</source>
					<target>Game porting guides</target>
				</segment>
			</unit>
			<unit id="167" translate="yes">
				<segment state="initial">
					<source>Provides guides for porting your existing games to Direct3D 11, UWP, and Windows 10.</source>
					<target>Provides guides for porting your existing games to Direct3D 11, UWP, and Windows 10.</target>
				</segment>
			</unit>
			<unit id="168" translate="yes">
				<segment state="initial">
					<source>Game programming resources</source>
					<target>Game programming resources</target>
				</segment>
			</unit>
			<unit id="169" translate="yes">
				<segment state="initial">
					<source>For more info about game programming on Windows, check out the following resources.</source>
					<target>For more info about game programming on Windows, check out the following resources.</target>
				</segment>
			</unit>
			<unit id="170" translate="yes">
				<segment state="initial">
					<source>Note</source>
					<target>Note</target>
				</segment>
			</unit>
			<unit id="171" translate="yes">
				<segment state="initial">
					<source>This article is for Windows 10 developers writing Universal Windows Platform (UWP) apps.</source>
					<target>This article is for Windows 10 developers writing Universal Windows Platform (UWP) apps.</target>
				</segment>
			</unit>
			<unit id="172" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](http://go.microsoft.com/fwlink/p/?linkid=619132)</data>
				</originalData>
				<segment state="initial">
					<source>If you’re developing for Windows 8.x or Windows Phone 8.x, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archived documentation</pc>.</source>
					<target>If you’re developing for Windows 8.x or Windows Phone 8.x, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archived documentation</pc>.</target>
				</segment>
			</unit>
			<unit id="173" translate="yes">
				<segment state="initial">
					<source>To make the best use of the game development overviews and tutorials, you should be familiar with the following subjects:</source>
					<target>To make the best use of the game development overviews and tutorials, you should be familiar with the following subjects:</target>
				</segment>
			</unit>
			<unit id="174" translate="yes">
				<segment state="initial">
					<source>Microsoft C++ with Component Extensions (C++/CX).</source>
					<target>Microsoft C++ with Component Extensions (C++/CX).</target>
				</segment>
			</unit>
			<unit id="175" translate="yes">
				<segment state="initial">
					<source>This is an update to Microsoft C++ that incorporates automatic reference counting, and is the language for developing UWP games with DirectX 11.1 or later versions.</source>
					<target>This is an update to Microsoft C++ that incorporates automatic reference counting, and is the language for developing UWP games with DirectX 11.1 or later versions.</target>
				</segment>
			</unit>
			<unit id="176" translate="yes">
				<segment state="initial">
					<source>Basic graphics programming terminology.</source>
					<target>Basic graphics programming terminology.</target>
				</segment>
			</unit>
			<unit id="177" translate="yes">
				<segment state="initial">
					<source>Basic Windows programming concepts.</source>
					<target>Basic Windows programming concepts.</target>
				</segment>
			</unit>
			<unit id="178" translate="yes">
				<segment state="initial">
					<source>Basic familiarity with the Direct3D 9 or 11 APIs.</source>
					<target>Basic familiarity with the Direct3D 9 or 11 APIs.</target>
				</segment>
			</unit>
		</group>
	</file>
</xliff>