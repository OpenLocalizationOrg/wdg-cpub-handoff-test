{"nodes":[{"pos":[17,105],"content":"Use a RichTextBlock with RichTextBlockOverflow elements to create advanced text layouts.","needQuote":true,"needEscape":true,"nodes":[{"content":"Use a RichTextBlock with RichTextBlockOverflow elements to create advanced text layouts.","pos":[0,88]}]},{"pos":[113,126],"content":"RichTextBlock","needQuote":true,"needEscape":true,"nodes":[{"content":"RichTextBlock","pos":[0,13]}]},{"content":"Rich text block","pos":[226,241]},{"content":"Rich text blocks provide several features for advanced text layout that you can use when you need support for paragraphs, inline UI elements, or complex text layouts.","pos":[242,408]},{"pos":[468,482],"content":"Important APIs"},{"content":"RichTextBlock class","pos":[498,517]},{"content":"RichTextBlockOverflow class","pos":[626,653]},{"content":"Paragraph class","pos":[770,785]},{"content":"Typography class","pos":[891,907]},{"content":"Is this the right control?","pos":[1011,1037]},{"pos":[1039,1188],"content":"Use a <bpt id=\"p1\">**</bpt>RichTextBlock<ept id=\"p1\">**</ept> when you need support for multiple paragraphs, multi-column or other complex text layouts, or inline UI elements like images.","source":"Use a **RichTextBlock** when you need support for multiple paragraphs, multi-column or other complex text layouts, or inline UI elements like images."},{"content":"Use a <bpt id=\"p1\">**</bpt>TextBlock<ept id=\"p1\">**</ept> to display most read-only text in your app.","pos":[1190,1253],"source":"Use a **TextBlock** to display most read-only text in your app."},{"content":"You can use it to display single-line or multi-line text, inline hyperlinks, and text with formatting like bold, italic, or underlined.","pos":[1254,1389]},{"content":"TextBlock provides a simpler content model, so it’s typically easier to use, and it can provide better text rendering performance than RichTextBlock.","pos":[1390,1539]},{"content":"It's preferred for most app UI text.","pos":[1540,1576]},{"content":"Although you can put line breaks in the text, TextBlock is designed to display a single paragraph and doesn’t support text indentation.","pos":[1577,1712]},{"pos":[1714,1817],"content":"For more info about choosing the right text control, see the <bpt id=\"p1\">[</bpt>Text controls<ept id=\"p1\">](text-controls.md)</ept> article.","source":"For more info about choosing the right text control, see the [Text controls](text-controls.md) article."},{"content":"Examples","pos":[1822,1830]},{"content":"Create a rich text block","pos":[1836,1860]},{"content":"The content property of RichTextBlock is the <bpt id=\"p1\">[</bpt>Blocks<ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.richtextblock.blocks.aspx)</ept> property, which supports paragraph based text via the <bpt id=\"p2\">[</bpt>Paragraph<ept id=\"p2\">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.documents.paragraph.aspx)</ept> element.","pos":[1862,2190],"source":"The content property of RichTextBlock is the [Blocks](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.richtextblock.blocks.aspx) property, which supports paragraph based text via the [Paragraph](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.documents.paragraph.aspx) element."},{"content":"It doesn't have a <bpt id=\"p1\">**</bpt>Text<ept id=\"p1\">**</ept> property that you can use to easily access the control's text content in your app.","pos":[2191,2300],"source":" It doesn't have a **Text** property that you can use to easily access the control's text content in your app."},{"content":"However, RichTextBlock provides several unique features that TextBlock doesn’t provide.","pos":[2301,2388]},{"content":"RichTextBlock supports:","pos":[2391,2414]},{"content":"Multiple paragraphs.","pos":[2417,2437]},{"content":"Set the indentation for paragraphs by setting the <bpt id=\"p1\">[</bpt>TextIndent<ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.richtextblock.textindent.aspx)</ept> property.","pos":[2438,2619],"source":" Set the indentation for paragraphs by setting the [TextIndent](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.richtextblock.textindent.aspx) property."},{"content":"Inline UI elements.","pos":[2622,2641]},{"content":"Use an <bpt id=\"p1\">[</bpt>InlineUIContainer<ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.documents.inlineuicontainer.aspx)</ept> to display UI elements, such as images, inline with your text.","pos":[2642,2834],"source":" Use an [InlineUIContainer](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.documents.inlineuicontainer.aspx) to display UI elements, such as images, inline with your text."},{"content":"Overflow containers.","pos":[2837,2857]},{"content":"Use <bpt id=\"p1\">[</bpt>RichTextBlockOverflow<ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.richtextblockoverflow.aspx)</ept> elements to create multi-column text layouts.","pos":[2858,3037],"source":" Use [RichTextBlockOverflow](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.richtextblockoverflow.aspx) elements to create multi-column text layouts."},{"content":"Paragraphs","pos":[3043,3053]},{"content":"You use <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>Paragraph<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.documents.paragraph.aspx)</ept> elements to define the blocks of text to display within a RichTextBlock control.","pos":[3055,3254],"source":"You use [**Paragraph**](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.documents.paragraph.aspx) elements to define the blocks of text to display within a RichTextBlock control."},{"content":"Every RichTextBlock should include at least one Paragraph.","pos":[3255,3313]},{"content":"You can set the indent amount for all paragraphs in a RichTextBlock by setting the <bpt id=\"p1\">[</bpt>RichTextBlock.TextIndent<ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.richtextblock.textindent.aspx)</ept> property.","pos":[3316,3544],"source":"You can set the indent amount for all paragraphs in a RichTextBlock by setting the [RichTextBlock.TextIndent](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.richtextblock.textindent.aspx) property."},{"content":"You can override this setting for specific paragraphs in a RichTextBlock by setting the <bpt id=\"p1\">[</bpt>Paragraph.TextIndent<ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.documents.paragraph.textindent.aspx)</ept> property to a different value.","pos":[3545,3792],"source":" You can override this setting for specific paragraphs in a RichTextBlock by setting the [Paragraph.TextIndent](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.documents.paragraph.textindent.aspx) property to a different value."},{"content":"Inline UI elements","pos":[4032,4050]},{"content":"The <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>InlineUIContainer<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.documents.inlineuicontainer.aspx)</ept> class lets you embed any UIElement inline with your text.","pos":[4052,4240],"source":"The [**InlineUIContainer**](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.documents.inlineuicontainer.aspx) class lets you embed any UIElement inline with your text."},{"content":"A common scenario is to place an Image inline with your text, but you can also use interactive elements, like a Button or CheckBox.","pos":[4241,4372]},{"content":"If you want to embed more than one element inline in the same position, consider using a panel as the single InlineUIContainer child, and then place the multiple elements within that panel.","pos":[4374,4563]},{"content":"This example shows how to use an InlineUIContainer to insert an image into a RichTextBlock.","pos":[4565,4656]},{"content":"Overflow containers","pos":[4968,4987]},{"content":"You can use a RichTextBlock with <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>RichTextBlockOverflow<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.richtextblockoverflow.aspx)</ept> elements to create multi-column or other advanced page layouts.","pos":[4989,5219],"source":"You can use a RichTextBlock with [**RichTextBlockOverflow**](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.richtextblockoverflow.aspx) elements to create multi-column or other advanced page layouts."},{"content":"The content for a RichTextBlockOverflow element always comes from a RichTextBlock element.","pos":[5220,5310]},{"content":"You link RichTextBlockOverflow elements by setting them as the OverflowContentTarget of a RichTextBlock or another RichTextBlockOverflow.","pos":[5311,5448]},{"content":"Here's a simple example that creates a two column layout.","pos":[5450,5507]},{"content":"See the Examples section for a more complex example.","pos":[5508,5560]},{"content":"Formatting text","pos":[6016,6031]},{"content":"Although the RichTextBlock stores plain text, you can apply various formatting options to customize how the text is rendered in your app.","pos":[6033,6170]},{"content":"You can set standard control properties like FontFamily, FontSize, FontStyle, Foreground, and CharacterSpacing to change the look of the text.","pos":[6171,6313]},{"content":"You can also use inline text elements and Typography attached properties to format your text.","pos":[6314,6407]},{"content":"These options affect only how the RichTextBlock displays the text locally, so if you copy and paste the text into a rich text control, for example, no formatting is applied.","pos":[6408,6581]},{"content":"Inline elements","pos":[6587,6602]},{"content":"The <bpt id=\"p1\">[</bpt>Windows.UI.Xaml.Documents<ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.documents.aspx)</ept> namespace provides a variety of inline text elements that you can use to format your text, such as Bold, Italic, Run, Span, and LineBreak.","pos":[6604,6859],"source":"The [Windows.UI.Xaml.Documents](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.documents.aspx) namespace provides a variety of inline text elements that you can use to format your text, such as Bold, Italic, Run, Span, and LineBreak."},{"content":"A typical way to apply formatting to sections of text is to place the text in a Run or Span element, and then set properties on that element.","pos":[6860,7001]},{"content":"Here's a Paragraph with the first phrase shown in bold, blue, 16pt text.","pos":[7003,7075]},{"content":"Typography","pos":[7252,7262]},{"content":"The attached properties of the <bpt id=\"p1\">[</bpt>Typography<ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.documents.typography.aspx)</ept> class provide access to a set of Microsoft OpenType typography properties.","pos":[7264,7478],"source":"The attached properties of the [Typography](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.documents.typography.aspx) class provide access to a set of Microsoft OpenType typography properties."},{"content":"You can set these attached properties either on the RichTextBlock, or on individual inline text elements, as shown here.","pos":[7479,7599]},{"content":"Recommendations","pos":[7834,7849]},{"content":"See Typography and Guidelines for fonts.","pos":[7851,7891]},{"content":"\\[This article contains information that is specific to Universal Windows Platform (UWP) apps and Windows 10.","pos":[7893,8002]},{"content":"For Windows 8.1 guidance, please download the <bpt id=\"p1\">[</bpt>Windows 8.1 guidelines PDF<ept id=\"p1\">](https://go.microsoft.com/fwlink/p/?linkid=258743)</ept>.\\]","pos":[8003,8130],"source":" For Windows 8.1 guidance, please download the [Windows 8.1 guidelines PDF](https://go.microsoft.com/fwlink/p/?linkid=258743).\\]"},{"content":"Related articles","pos":[8135,8151]},{"content":"Text controls","pos":[8154,8167]},{"content":"For designers","pos":[8190,8203]},{"content":"Guidelines for spell checking","pos":[8209,8238]},{"content":"Adding search","pos":[8277,8290]},{"content":"Guidelines for text input","pos":[8353,8378]},{"content":"For developers (XAML)","pos":[8401,8422]},{"content":"TextBox class","pos":[8430,8443]},{"content":"Windows.UI.Xaml.Controls PasswordBox class","pos":[8510,8552]},{"content":"For developers (other)","pos":[8618,8640]},{"content":"String.Length property","pos":[8646,8668]}],"content":"---\nDescription: Use a RichTextBlock with RichTextBlockOverflow elements to create advanced text layouts.\ntitle: RichTextBlock\nms.assetid: E4BE4B1B-418E-4075-88F1-22C09DDF8E45\nlabel: Rich text block\ntemplate: detail.hbs\n---\n# Rich text block\nRich text blocks provide several features for advanced text layout that you can use when you need support for paragraphs, inline UI elements, or complex text layouts.\n\n\n<span class=\"sidebar_heading\" style=\"font-weight: bold;\">Important APIs</span>\n\n-   [**RichTextBlock class**](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.richtextblock.aspx)\n-   [**RichTextBlockOverflow class**](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.richtextblockoverflow.aspx)\n-   [**Paragraph class**](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.documents.paragraph.aspx)\n-   [**Typography class**](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.documents.typography.aspx)\n\n## Is this the right control?\n\nUse a **RichTextBlock** when you need support for multiple paragraphs, multi-column or other complex text layouts, or inline UI elements like images.\n\nUse a **TextBlock** to display most read-only text in your app. You can use it to display single-line or multi-line text, inline hyperlinks, and text with formatting like bold, italic, or underlined. TextBlock provides a simpler content model, so it’s typically easier to use, and it can provide better text rendering performance than RichTextBlock. It's preferred for most app UI text. Although you can put line breaks in the text, TextBlock is designed to display a single paragraph and doesn’t support text indentation.\n\nFor more info about choosing the right text control, see the [Text controls](text-controls.md) article.\n\n## Examples\n\n\n## Create a rich text block\n\nThe content property of RichTextBlock is the [Blocks](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.richtextblock.blocks.aspx) property, which supports paragraph based text via the [Paragraph](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.documents.paragraph.aspx) element. It doesn't have a **Text** property that you can use to easily access the control's text content in your app. However, RichTextBlock provides several unique features that TextBlock doesn’t provide. \n\nRichTextBlock supports:\n- Multiple paragraphs. Set the indentation for paragraphs by setting the [TextIndent](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.richtextblock.textindent.aspx) property.\n- Inline UI elements. Use an [InlineUIContainer](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.documents.inlineuicontainer.aspx) to display UI elements, such as images, inline with your text.\n- Overflow containers. Use [RichTextBlockOverflow](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.richtextblockoverflow.aspx) elements to create multi-column text layouts.\n\n### Paragraphs\n\nYou use [**Paragraph**](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.documents.paragraph.aspx) elements to define the blocks of text to display within a RichTextBlock control. Every RichTextBlock should include at least one Paragraph. \n\nYou can set the indent amount for all paragraphs in a RichTextBlock by setting the [RichTextBlock.TextIndent](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.richtextblock.textindent.aspx) property. You can override this setting for specific paragraphs in a RichTextBlock by setting the [Paragraph.TextIndent](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.documents.paragraph.textindent.aspx) property to a different value.\n\n```xaml\n<RichTextBlock TextIndent=\"12\">\n  <Paragraph TextIndent=\"24\">First paragraph.</Paragraph>\n  <Paragraph>Second paragraph.</Paragraph>\n  <Paragraph>Third paragraph. <Bold>With an inline.</Bold></Paragraph>\n</RichTextBlock>\n```\n\n### Inline UI elements\n\nThe [**InlineUIContainer**](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.documents.inlineuicontainer.aspx) class lets you embed any UIElement inline with your text. A common scenario is to place an Image inline with your text, but you can also use interactive elements, like a Button or CheckBox.\n\nIf you want to embed more than one element inline in the same position, consider using a panel as the single InlineUIContainer child, and then place the multiple elements within that panel.\n\nThis example shows how to use an InlineUIContainer to insert an image into a RichTextBlock. \n\n```xaml\n<RichTextBlock>\n    <Paragraph>\n        <Italic>This is an inline image.</Italic>\n        <InlineUIContainer>\n            <Image Source=\"Assets/Square44x44Logo.png\" Height=\"30\" Width=\"30\"/>\n        </InlineUIContainer>\n        Mauris auctor tincidunt auctor.\n    </Paragraph>\n</RichTextBlock>\n```\n\n## Overflow containers\n\nYou can use a RichTextBlock with [**RichTextBlockOverflow**](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.richtextblockoverflow.aspx) elements to create multi-column or other advanced page layouts. The content for a RichTextBlockOverflow element always comes from a RichTextBlock element. You link RichTextBlockOverflow elements by setting them as the OverflowContentTarget of a RichTextBlock or another RichTextBlockOverflow.\n\nHere's a simple example that creates a two column layout. See the Examples section for a more complex example.\n\n```xaml\n<Grid>\n    <Grid.ColumnDefinitions>\n        <ColumnDefinition/>\n        <ColumnDefinition/>\n    </Grid.ColumnDefinitions>\n    <RichTextBlock Grid.Column=\"0\" \n                   OverflowContentTarget=\"{Binding ElementName=overflowContainer}\" >\n        <Paragraph>\n            Proin ac metus at quam luctus ultricies.\n        </Paragraph>\n    </RichTextBlock>\n    <RichTextBlockOverflow x:Name=\"overflowContainer\" Grid.Column=\"1\"/>\n</Grid>\n```\n\n## Formatting text\n\nAlthough the RichTextBlock stores plain text, you can apply various formatting options to customize how the text is rendered in your app. You can set standard control properties like FontFamily, FontSize, FontStyle, Foreground, and CharacterSpacing to change the look of the text. You can also use inline text elements and Typography attached properties to format your text. These options affect only how the RichTextBlock displays the text locally, so if you copy and paste the text into a rich text control, for example, no formatting is applied.\n\n### Inline elements\n\nThe [Windows.UI.Xaml.Documents](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.documents.aspx) namespace provides a variety of inline text elements that you can use to format your text, such as Bold, Italic, Run, Span, and LineBreak. A typical way to apply formatting to sections of text is to place the text in a Run or Span element, and then set properties on that element.\n\nHere's a Paragraph with the first phrase shown in bold, blue, 16pt text.\n\n```xaml\n<Paragraph>\n    <Bold><Span Foreground=\"DarkSlateBlue\" FontSize=\"16\">Lorem ipsum dolor sit amet</Span></Bold>\n    , consectetur adipiscing elit.\n</Paragraph>\n```\n\n### Typography\n\nThe attached properties of the [Typography](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.documents.typography.aspx) class provide access to a set of Microsoft OpenType typography properties. You can set these attached properties either on the RichTextBlock, or on individual inline text elements, as shown here.\n\n```xaml\n<RichTextBlock Typography.StylisticSet4=\"True\">\n    <Paragraph>\n        <Span Typography.Capitals=\"SmallCaps\">Lorem ipsum dolor sit amet</Span>\n        , consectetur adipiscing elit.\n    </Paragraph>\n</RichTextBlock>\n```\n\n## Recommendations\n\nSee Typography and Guidelines for fonts.\n\n\\[This article contains information that is specific to Universal Windows Platform (UWP) apps and Windows 10. For Windows 8.1 guidance, please download the [Windows 8.1 guidelines PDF](https://go.microsoft.com/fwlink/p/?linkid=258743).\\]\n\n## Related articles\n\n[Text controls](text-controls.md)\n\n**For designers**\n- [Guidelines for spell checking](spell-checking-and-prediction.md)\n- [Adding search](https://msdn.microsoft.com/library/windows/apps/hh465231)\n- [Guidelines for text input](text-controls.md)\n\n**For developers (XAML)**\n- [**TextBox class**](https://msdn.microsoft.com/library/windows/apps/br209683)\n- [**Windows.UI.Xaml.Controls PasswordBox class**](https://msdn.microsoft.com/library/windows/apps/br227519)\n\n\n**For developers (other)**\n- [String.Length property](https://msdn.microsoft.com/library/system.string.length(v=vs.110).aspx)\n"}