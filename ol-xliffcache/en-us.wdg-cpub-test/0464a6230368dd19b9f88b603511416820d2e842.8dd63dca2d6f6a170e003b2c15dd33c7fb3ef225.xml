{"nodes":[{"pos":[11,31],"content":"Handle app prelaunch","needQuote":true,"needEscape":true,"nodes":[{"content":"Handle app prelaunch","pos":[0,20]}]},{"pos":[45,115],"content":"Learn how to handle app prelaunch by overriding the OnLaunched method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Learn how to handle app prelaunch by overriding the OnLaunched method.","pos":[0,70]}]},{"content":"Handle app prelaunch","pos":[172,192]},{"content":"\\[ Updated for UWP apps on Windows 10.","pos":[195,233]},{"content":"For Windows 8.x articles, see the <bpt id=\"p1\">[</bpt>archive<ept id=\"p1\">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept> \\]","pos":[234,329],"source":" For Windows 8.x articles, see the [archive](http://go.microsoft.com/fwlink/p/?linkid=619132) \\]"},{"content":"Important APIs","pos":[334,348]},{"content":"OnLaunched","pos":[359,369]},{"pos":[432,566],"content":"Learn how to handle app prelaunch by overriding the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>OnLaunched<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br242335)</ept> method.","source":"Learn how to handle app prelaunch by overriding the [**OnLaunched**](https://msdn.microsoft.com/library/windows/apps/br242335) method."},{"content":"Introduction","pos":[571,583]},{"content":"When available system resources allow, the startup performance of Windows Store apps is improved by proactively launching the user’s most frequently used apps in the background.","pos":[586,763]},{"content":"A prelaunched app is put into the suspended state shortly after it is launched.","pos":[764,843]},{"content":"When the user invokes the app, the app is resumed by bringing it from the suspended state to the running state--which is faster than launching the app cold.","pos":[844,1000]},{"content":"Prior to Windows 10, apps did not automatically take advantage of prelaunch.","pos":[1002,1078]},{"content":"Starting in Windows 10, all Universal Windows Platform (UWP) apps automatically take advantage of prelaunch.","pos":[1079,1187]},{"content":"Most apps should work with prelaunch without any change.","pos":[1189,1245]},{"content":"However, some types of apps may need to change their startup behavior to work well with prelaunch.","pos":[1246,1344]},{"content":"For example, a messaging app that changes the users's online visibility during startup, or a game which assumes the user is present and displays elaborate visuals when the app starts up.","pos":[1345,1531]},{"content":"Prelaunch and app lifecycle","pos":[1536,1563]},{"content":"Once an app is prelaunched, it soon enters the suspended state.","pos":[1566,1629]},{"content":"(see <bpt id=\"p1\">[</bpt>Handle app suspend<ept id=\"p1\">](suspend-an-app.md)</ept>).","pos":[1630,1676],"source":" (see [Handle app suspend](suspend-an-app.md))."},{"content":"Detect and handle prelaunch","pos":[1681,1708]},{"content":"Apps receive the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>LaunchActivatedEventArgs.PrelaunchActivated<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/dn263740)</ept> flag during activation.","pos":[1711,1859],"source":"Apps receive the [**LaunchActivatedEventArgs.PrelaunchActivated**](https://msdn.microsoft.com/library/windows/apps/dn263740) flag during activation."},{"content":"Use this flag to determine whether to perform operations that should only be performed when the user explicitly launches the app as shown in the following excerpt from<bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>Application.OnLaunched<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br242335)</ept>.","pos":[1860,2114],"source":" Use this flag to determine whether to perform operations that should only be performed when the user explicitly launches the app as shown in the following excerpt from[**Application.OnLaunched**](https://msdn.microsoft.com/library/windows/apps/br242335)."},{"content":"<bpt id=\"p1\">**</bpt>Tip<ept id=\"p1\">**</ept>  If you wish to opt-out of prelaunch, check the <bpt id=\"p2\">[</bpt><bpt id=\"p3\">**</bpt>LaunchActivatedEventArgs.PrelaunchActivated<ept id=\"p3\">**</ept><ept id=\"p2\">](https://msdn.microsoft.com/library/windows/apps/dn263740)</ept> flag.","pos":[3555,3724],"source":"**Tip**  If you wish to opt-out of prelaunch, check the [**LaunchActivatedEventArgs.PrelaunchActivated**](https://msdn.microsoft.com/library/windows/apps/dn263740) flag."},{"content":"If it is set, return from OnLaunched() before doing any work to create a frame or activate the window.","pos":[3725,3827]},{"content":"Use the VisibilityChanged event","pos":[3835,3866]},{"content":"Apps activated by prelaunch are not visible to the user.","pos":[3869,3925]},{"content":"They become visible when the user switches to them.","pos":[3926,3977]},{"content":"You may want to delay certain operations until your app's main window becomes visible.","pos":[3978,4064]},{"content":"For example, if your app displays a list of what's new items from a feed, you could update the list during the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>VisibilityChanged<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/hh702458)</ept> event rather than rely on a list that was built when the app was prelaunched that may be stale by the time the user activates the app.","pos":[4065,4392],"source":" For example, if your app displays a list of what's new items from a feed, you could update the list during the [**VisibilityChanged**](https://msdn.microsoft.com/library/windows/apps/hh702458) event rather than rely on a list that was built when the app was prelaunched that may be stale by the time the user activates the app."},{"content":"The following code handles the <bpt id=\"p1\">**</bpt>VisibilityChanged<ept id=\"p1\">**</ept> event for <bpt id=\"p2\">**</bpt>MainPage<ept id=\"p2\">**</ept>:","pos":[4393,4469],"source":" The following code handles the **VisibilityChanged** event for **MainPage**:"},{"content":"Guidance","pos":[4989,4997]},{"content":"Apps should not perform long running operations during prelaunch because the app will terminate if it can't be suspended quickly.","pos":[5004,5133]},{"pos":[5138,5383],"content":"Apps should not initiate audio playback from <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>Application.OnLaunched<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br242335)</ept> when the app is prelaunched because the app won't be visible and it won't be apparent why there is audio playing.","source":"Apps should not initiate audio playback from [**Application.OnLaunched**](https://msdn.microsoft.com/library/windows/apps/br242335) when the app is prelaunched because the app won't be visible and it won't be apparent why there is audio playing."},{"content":"Apps should not perform any operations during launch which assume that the app is visible to the user, or assume that the app was explicitly launched by the user.","pos":[5388,5550]},{"content":"Because an app can now be launched in the background without explicit user action, developers should consider the privacy, user experience and performance implications.","pos":[5551,5719]},{"content":"An example privacy consideration is when a social app should change the user state to online.","pos":[5728,5821]},{"content":"It should wait until the user switches to the app instead of changing the status when the app is prelaunched.","pos":[5822,5931]},{"content":"An example user experience consideration is that if you have an app, such as a game, that displays an introductory sequence when it is launched, you might delay the introductory sequence until the user switches to the app.","pos":[5940,6162]},{"content":"An example performance implication is that you might wait until the user switches to the app to retrieve the current weather information instead of loading it when the app is prelaunched and then need to load it again when the app becomes visible to ensure that the information is current.","pos":[6171,6460]},{"content":"If your app clears its Live Tile when launched, defer this until the visibility changed event.","pos":[6465,6559]},{"content":"Telemetry for your app should distinguish between normal tile activations and prelaunch activations so that you can identify the scenario where problems occur.","pos":[6564,6723]},{"pos":[6728,6972],"content":"If you have Microsoft Visual Studio 2015 Update 1 and Windows 10, Version 1511, you can simulate prelaunch for App your app in Visual Studio 2015 by choosing <bpt id=\"p1\">**</bpt>Debug<ept id=\"p1\">**</ept> <ph id=\"ph1\">&amp;gt;</ph> <bpt id=\"p2\">**</bpt>Other Debug Targets<ept id=\"p2\">**</ept> <ph id=\"ph2\">&amp;gt;</ph> <bpt id=\"p3\">**</bpt>Debug Windows Universal App PreLaunch<ept id=\"p3\">**</ept>.","source":"If you have Microsoft Visual Studio 2015 Update 1 and Windows 10, Version 1511, you can simulate prelaunch for App your app in Visual Studio 2015 by choosing **Debug** &gt; **Other Debug Targets** &gt; **Debug Windows Universal App PreLaunch**."},{"content":"Related topics","pos":[6977,6991]},{"content":"App lifecycle","pos":[6996,7009]}],"content":"---\ntitle: Handle app prelaunch\ndescription: Learn how to handle app prelaunch by overriding the OnLaunched method.\nms.assetid: A4838AC2-22D7-46BA-9EB2-F3C248E22F52\n---\n\n# Handle app prelaunch\n\n\n\\[ Updated for UWP apps on Windows 10. For Windows 8.x articles, see the [archive](http://go.microsoft.com/fwlink/p/?linkid=619132) \\]\n\n\n**Important APIs**\n\n-   [**OnLaunched**](https://msdn.microsoft.com/library/windows/apps/br242335)\n\nLearn how to handle app prelaunch by overriding the [**OnLaunched**](https://msdn.microsoft.com/library/windows/apps/br242335) method.\n\n## Introduction\n\n\nWhen available system resources allow, the startup performance of Windows Store apps is improved by proactively launching the user’s most frequently used apps in the background. A prelaunched app is put into the suspended state shortly after it is launched. When the user invokes the app, the app is resumed by bringing it from the suspended state to the running state--which is faster than launching the app cold.\n\nPrior to Windows 10, apps did not automatically take advantage of prelaunch. Starting in Windows 10, all Universal Windows Platform (UWP) apps automatically take advantage of prelaunch.\n\nMost apps should work with prelaunch without any change. However, some types of apps may need to change their startup behavior to work well with prelaunch. For example, a messaging app that changes the users's online visibility during startup, or a game which assumes the user is present and displays elaborate visuals when the app starts up.\n\n## Prelaunch and app lifecycle\n\n\nOnce an app is prelaunched, it soon enters the suspended state. (see [Handle app suspend](suspend-an-app.md)).\n\n## Detect and handle prelaunch\n\n\nApps receive the [**LaunchActivatedEventArgs.PrelaunchActivated**](https://msdn.microsoft.com/library/windows/apps/dn263740) flag during activation. Use this flag to determine whether to perform operations that should only be performed when the user explicitly launches the app as shown in the following excerpt from[**Application.OnLaunched**](https://msdn.microsoft.com/library/windows/apps/br242335).\n\n```cs\nprotected override void OnLaunched(LaunchActivatedEventArgs e)\n{\n    Frame rootFrame = Window.Current.Content as Frame;\n\n    // Do not repeat app initialization when the Window already has content - rather just ensure that the window is active\n    if (rootFrame == null)\n    {\n        // Create a Frame to act as the navigation context and navigate to the first page\n        rootFrame = new Frame();\n\n        rootFrame.NavigationFailed += OnNavigationFailed;\n\n        if (e.PreviousExecutionState == ApplicationExecutionState.Terminated)\n        {\n            //TODO: Load state from previously suspended application\n        }\n\n        if (!e.PrelaunchActivated)\n        {\n            // TODO: This is not a prelaunch activation. Perform operations which\n            // assume that the user explicitly launched the app such as updating\n            // the online presence of the user on a social network, updating a \n            // what&#39;s new feed, etc.\n        }\n\n        // Place the frame in the current Window\n        Window.Current.Content = rootFrame;\n    }\n\n    if (rootFrame.Content == null)\n    {\n        // When the navigation stack isn&#39;t restored navigate to the first page,\n        // configuring the new page by passing required information as a navigation parameter\n        rootFrame.Navigate(typeof(MainPage), e.Arguments);\n    }\n    // Ensure the current window is active\n    Window.Current.Activate();\n}\n```\n\n**Tip**  If you wish to opt-out of prelaunch, check the [**LaunchActivatedEventArgs.PrelaunchActivated**](https://msdn.microsoft.com/library/windows/apps/dn263740) flag. If it is set, return from OnLaunched() before doing any work to create a frame or activate the window.\n\n \n\n## Use the VisibilityChanged event\n\n\nApps activated by prelaunch are not visible to the user. They become visible when the user switches to them. You may want to delay certain operations until your app's main window becomes visible. For example, if your app displays a list of what's new items from a feed, you could update the list during the [**VisibilityChanged**](https://msdn.microsoft.com/library/windows/apps/hh702458) event rather than rely on a list that was built when the app was prelaunched that may be stale by the time the user activates the app. The following code handles the **VisibilityChanged** event for **MainPage**:\n\n```cs\npublic sealed partial class MainPage : Page\n{\n    public MainPage()\n    {\n        this.InitializeComponent();\n\n        Window.Current.VisibilityChanged += WindowVisibilityChangedEventHandler;\n    }\n\n    void WindowVisibilityChangedEventHandler(System.Object sender, Windows.UI.Core.VisibilityChangedEventArgs e)\n    {\n        // Perform operations that should take place when the application becomes visible rather than \n        // when it is prelaunched, such as building a what&#39;s new feed \n    }\n}\n```\n\n## Guidance\n\n\n-   Apps should not perform long running operations during prelaunch because the app will terminate if it can't be suspended quickly.\n-   Apps should not initiate audio playback from [**Application.OnLaunched**](https://msdn.microsoft.com/library/windows/apps/br242335) when the app is prelaunched because the app won't be visible and it won't be apparent why there is audio playing.\n-   Apps should not perform any operations during launch which assume that the app is visible to the user, or assume that the app was explicitly launched by the user. Because an app can now be launched in the background without explicit user action, developers should consider the privacy, user experience and performance implications.\n    -   An example privacy consideration is when a social app should change the user state to online. It should wait until the user switches to the app instead of changing the status when the app is prelaunched.\n    -   An example user experience consideration is that if you have an app, such as a game, that displays an introductory sequence when it is launched, you might delay the introductory sequence until the user switches to the app.\n    -   An example performance implication is that you might wait until the user switches to the app to retrieve the current weather information instead of loading it when the app is prelaunched and then need to load it again when the app becomes visible to ensure that the information is current.\n-   If your app clears its Live Tile when launched, defer this until the visibility changed event.\n-   Telemetry for your app should distinguish between normal tile activations and prelaunch activations so that you can identify the scenario where problems occur.\n-   If you have Microsoft Visual Studio 2015 Update 1 and Windows 10, Version 1511, you can simulate prelaunch for App your app in Visual Studio 2015 by choosing **Debug** &gt; **Other Debug Targets** &gt; **Debug Windows Universal App PreLaunch**.\n\n## Related topics\n\n* [App lifecycle](app-lifecycle.md)\n\n \n\n \n\n\n\n"}