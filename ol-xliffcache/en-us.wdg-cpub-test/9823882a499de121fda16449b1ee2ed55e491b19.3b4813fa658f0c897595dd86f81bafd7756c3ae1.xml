{"nodes":[{"pos":[17,167],"content":"This topic describes best practices for accessibility of text in an app, by assuring that colors and backgrounds satisfy the necessary contrast ratio.","needQuote":true,"needEscape":true,"nodes":[{"content":"This topic describes best practices for accessibility of text in an app, by assuring that colors and backgrounds satisfy the necessary contrast ratio.","pos":[0,150]}]},{"pos":[175,203],"content":"Accessible text requirements","needQuote":true,"needEscape":true,"nodes":[{"content":"Accessible text requirements","pos":[0,28]}]},{"content":"Accessible text requirements","pos":[306,334]},{"content":"\\[ Updated for UWP apps on Windows 10.","pos":[336,374]},{"content":"For Windows 8.x articles, see the <bpt id=\"p1\">[</bpt>archive<ept id=\"p1\">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept> \\]","pos":[375,470],"source":" For Windows 8.x articles, see the [archive](http://go.microsoft.com/fwlink/p/?linkid=619132) \\]"},{"content":"This topic describes best practices for accessibility of text in an app, by assuring that colors and backgrounds satisfy the necessary contrast ratio.","pos":[473,623]},{"content":"This topic also discusses the Microsoft UI Automation roles that text elements in a Universal Windows Platform (UWP) app can have, and best practices for text in graphics.","pos":[624,795]},{"content":"Contrast ratios","pos":[800,815]},{"content":"Although users always have the option to switch to a high-contrast mode, your app design for text should regard that option as a last resort.","pos":[817,958]},{"content":"A much better practice is to make sure that your app text meets certain established guidelines for the level of contrast between text and its background.","pos":[959,1112]},{"content":"Evaluation of the level of contrast is based on deterministic techniques that do not consider color hue.","pos":[1113,1217]},{"content":"For example, if you have red text on a green background, that text might not be readable to someone with a color blindness impairment.","pos":[1218,1352]},{"content":"Checking and correcting the contrast ratio can prevent these types of accessibility issues.","pos":[1353,1444]},{"content":"The recommendations for text contrast documented here are based on a web accessibility standard, <bpt id=\"p1\">[</bpt>G18: Ensuring that a contrast ratio of at least 4.5:1 exists between text (and images of text) and background behind the text<ept id=\"p1\">](http://go.microsoft.com/fwlink/p/?linkid=221823)</ept>.","pos":[1446,1720],"source":"The recommendations for text contrast documented here are based on a web accessibility standard, [G18: Ensuring that a contrast ratio of at least 4.5:1 exists between text (and images of text) and background behind the text](http://go.microsoft.com/fwlink/p/?linkid=221823)."},{"content":"This guidance exists in the <bpt id=\"p1\">*</bpt>W3C Techniques for WCAG 2.0<ept id=\"p1\">*</ept> specification.","pos":[1721,1793],"source":" This guidance exists in the *W3C Techniques for WCAG 2.0* specification."},{"content":"To be considered accessible, visible text must have a minimum luminosity contrast ratio of 4.5:1 against the background.","pos":[1795,1915]},{"content":"Exceptions include logos and incidental text, such as text that is part of an inactive UI component.","pos":[1916,2016]},{"content":"Text that is decorative and conveys no information is excluded.","pos":[2018,2081]},{"content":"For example, if random words are used to create a background, and the words can be rearranged or substituted without changing meaning, the words are considered to be decorative and do not need to meet this criterion.","pos":[2082,2298]},{"content":"Use color contrast tools to verify that the visible text contrast ratio is acceptable.","pos":[2300,2386]},{"content":"See <bpt id=\"p1\">[</bpt>Techniques for WCAG 2.0 G18 (Resources section)<ept id=\"p1\">](http://www.w3.org/TR/WCAG20-TECHS/G18.html#G18-resources)</ept> for tools that can test contrast ratios.","pos":[2387,2539],"source":" See [Techniques for WCAG 2.0 G18 (Resources section)](http://www.w3.org/TR/WCAG20-TECHS/G18.html#G18-resources) for tools that can test contrast ratios."},{"content":"<bpt id=\"p1\">**</bpt>Note<ept id=\"p1\">**</ept>  Some of the tools listed by Techniques for WCAG 2.0 G18 can't be used interactively with a UWP app.","pos":[2541,2650],"source":"**Note**  Some of the tools listed by Techniques for WCAG 2.0 G18 can't be used interactively with a UWP app."},{"content":"You may need to enter foreground and background color values manually in the tool, or make screen captures of app UI and then run the contrast ratio tool over the screen capture image.","pos":[2651,2835]},{"content":"Text element roles","pos":[2843,2861]},{"pos":[2863,2961],"content":"A UWP app can use these default elements (commonly called <bpt id=\"p1\">*</bpt>text elements<ept id=\"p1\">*</ept> or <bpt id=\"p2\">*</bpt>textedit controls<ept id=\"p2\">*</ept>):","source":"A UWP app can use these default elements (commonly called *text elements* or *textedit controls*):"},{"pos":[2967,3118],"content":"<bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>TextBlock<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/BR209652)</ept>: role is <bpt id=\"p3\">[</bpt><bpt id=\"p4\">**</bpt>Text<ept id=\"p4\">**</ept><ept id=\"p3\">](https://msdn.microsoft.com/library/windows/apps/BR209182)</ept>","source":"[**TextBlock**](https://msdn.microsoft.com/library/windows/apps/BR209652): role is [**Text**](https://msdn.microsoft.com/library/windows/apps/BR209182)"},{"pos":[3123,3272],"content":"<bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>TextBox<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/BR209683)</ept>: role is <bpt id=\"p3\">[</bpt><bpt id=\"p4\">**</bpt>Edit<ept id=\"p4\">**</ept><ept id=\"p3\">](https://msdn.microsoft.com/library/windows/apps/BR209182)</ept>","source":"[**TextBox**](https://msdn.microsoft.com/library/windows/apps/BR209683): role is [**Edit**](https://msdn.microsoft.com/library/windows/apps/BR209182)"},{"pos":[3277,3547],"content":"<bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>RichTextBlock<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/BR227565)</ept> (and overflow class <bpt id=\"p3\">[</bpt><bpt id=\"p4\">**</bpt>RichTextBlockOverflow<ept id=\"p4\">**</ept><ept id=\"p3\">](https://msdn.microsoft.com/library/windows/apps/BR227565overflow)</ept>): role is <bpt id=\"p5\">[</bpt><bpt id=\"p6\">**</bpt>Text<ept id=\"p6\">**</ept><ept id=\"p5\">](https://msdn.microsoft.com/library/windows/apps/BR209182)</ept>","source":"[**RichTextBlock**](https://msdn.microsoft.com/library/windows/apps/BR227565) (and overflow class [**RichTextBlockOverflow**](https://msdn.microsoft.com/library/windows/apps/BR227565overflow)): role is [**Text**](https://msdn.microsoft.com/library/windows/apps/BR209182)"},{"pos":[3552,3705],"content":"<bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>RichEditBox<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/BR227548)</ept>: role is <bpt id=\"p3\">[</bpt><bpt id=\"p4\">**</bpt>Edit<ept id=\"p4\">**</ept><ept id=\"p3\">](https://msdn.microsoft.com/library/windows/apps/BR209182)</ept>","source":"[**RichEditBox**](https://msdn.microsoft.com/library/windows/apps/BR227548): role is [**Edit**](https://msdn.microsoft.com/library/windows/apps/BR209182)"},{"content":"When a control reports that is has a role of <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>Edit<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/BR209182)</ept>, assistive technologies assume that there are ways for users to change the values.","pos":[3707,3903],"source":"When a control reports that is has a role of [**Edit**](https://msdn.microsoft.com/library/windows/apps/BR209182), assistive technologies assume that there are ways for users to change the values."},{"content":"So if you put static text in a <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>TextBox<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/BR209683)</ept>, you are misreporting the role and thus misreporting the structure of your app to the accessibility user.","pos":[3904,4112],"source":" So if you put static text in a [**TextBox**](https://msdn.microsoft.com/library/windows/apps/BR209683), you are misreporting the role and thus misreporting the structure of your app to the accessibility user."},{"content":"In the text models for XAML, there are two elements that are primarily used for static text, <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>TextBlock<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/BR209652)</ept> and <bpt id=\"p3\">[</bpt><bpt id=\"p4\">**</bpt>RichTextBlock<ept id=\"p4\">**</ept><ept id=\"p3\">](https://msdn.microsoft.com/library/windows/apps/BR227565)</ept>.","pos":[4114,4363],"source":"In the text models for XAML, there are two elements that are primarily used for static text, [**TextBlock**](https://msdn.microsoft.com/library/windows/apps/BR209652) and [**RichTextBlock**](https://msdn.microsoft.com/library/windows/apps/BR227565)."},{"content":"Neither of these are a <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>Control<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/BR209390)</ept> subclass, and as such neither of them are keyboard-focusable or can appear in the tab order.","pos":[4364,4551],"source":" Neither of these are a [**Control**](https://msdn.microsoft.com/library/windows/apps/BR209390) subclass, and as such neither of them are keyboard-focusable or can appear in the tab order."},{"content":"But that does not mean that assistive technologies can't or won't read them.","pos":[4552,4628]},{"content":"Screen readers are typically designed to support multiple modes of reading the content in an app, including a dedicated reading mode or navigation patterns that go beyond focus and the tab order, like a \"virtual cursor\".","pos":[4629,4849]},{"content":"So don't put your static text into focusable containers just so that tab order gets the user there.","pos":[4850,4949]},{"content":"Assistive technology users expect that anything in the tab order is interactive, and if they encounter static text there, that is more confusing than helpful.","pos":[4950,5108]},{"content":"You should test this out yourself with Narrator to get a sense of the user experience with your app when using a screen reader to examine your app's static text.","pos":[5109,5270]},{"content":"Text in graphics","pos":[5275,5291]},{"content":"Whenever possible, avoid including text in a graphic.","pos":[5293,5346]},{"content":"For example, any text that you include in the image source file that is displayed in the app as an <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>Image<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/BR242752)</ept> element is not automatically accessible or readable by assistive technologies.","pos":[5347,5594],"source":" For example, any text that you include in the image source file that is displayed in the app as an [**Image**](https://msdn.microsoft.com/library/windows/apps/BR242752) element is not automatically accessible or readable by assistive technologies."},{"content":"If you must use text in graphics, make sure that the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>AutomationProperties.Name<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/Hh759770)</ept> value that you provide as the equivalent of \"alt text\" includes that text or a summary of the text's meaning.","pos":[5595,5847],"source":" If you must use text in graphics, make sure that the [**AutomationProperties.Name**](https://msdn.microsoft.com/library/windows/apps/Hh759770) value that you provide as the equivalent of \"alt text\" includes that text or a summary of the text's meaning."},{"content":"Similar considerations apply if you are creating text characters from vectors as part of a <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>Path<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/BR243355)</ept>, or by using <bpt id=\"p3\">[</bpt><bpt id=\"p4\">**</bpt>Glyphs<ept id=\"p4\">**</ept><ept id=\"p3\">](https://msdn.microsoft.com/library/windows/apps/BR209921)</ept>.","pos":[5848,6092],"source":" Similar considerations apply if you are creating text characters from vectors as part of a [**Path**](https://msdn.microsoft.com/library/windows/apps/BR243355), or by using [**Glyphs**](https://msdn.microsoft.com/library/windows/apps/BR209921)."},{"content":"Text font size","pos":[6097,6111]},{"content":"Many readers have difficulty reading text in an app when that text is using a text font size that's simply too small for them to read.","pos":[6113,6247]},{"content":"You can prevent this issue by making the text in your app's UI reasonably large in the first place.","pos":[6248,6347]},{"content":"There are also assistive technologies that are part of Windows, and these enable users to change the view sizes of apps, or the display in general.","pos":[6348,6495]},{"content":"Some users change dots per inch (dpi) values of their primary display as an accessibility option.","pos":[6501,6598]},{"content":"That option is available from <bpt id=\"p1\">**</bpt>Make things on the screen larger<ept id=\"p1\">**</ept> in <bpt id=\"p2\">**</bpt>Ease of Access<ept id=\"p2\">**</ept>, which redirects to a <bpt id=\"p3\">**</bpt>Control Panel<ept id=\"p3\">**</ept> UI for <bpt id=\"p4\">**</bpt>Appearance and Personalization<ept id=\"p4\">**</ept><ph id=\"ph1\"> / </ph><bpt id=\"p5\">**</bpt>Display<ept id=\"p5\">**</ept>.","pos":[6599,6784],"source":" That option is available from **Make things on the screen larger** in **Ease of Access**, which redirects to a **Control Panel** UI for **Appearance and Personalization** / **Display**."},{"content":"Exactly which sizing options are available can vary because this depends on the capabilities of the display device.","pos":[6785,6900]},{"content":"The Magnifier tool can enlarge a selected area of the UI.","pos":[6905,6962]},{"content":"However, it's difficult to use the Magnifier tool for reading text.","pos":[6963,7030]},{"content":"Text scale factor","pos":[7035,7052]},{"content":"Various text elements and controls have an <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>IsTextScaleFactorEnabled<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/BR209652_istextscalefactorenabled)</ept> property.","pos":[7054,7220],"source":"Various text elements and controls have an [**IsTextScaleFactorEnabled**](https://msdn.microsoft.com/library/windows/apps/BR209652_istextscalefactorenabled) property."},{"content":"This property has the value <bpt id=\"p1\">**</bpt>true<ept id=\"p1\">**</ept> by default.","pos":[7221,7269],"source":" This property has the value **true** by default."},{"content":"When its value is <bpt id=\"p1\">**</bpt>true<ept id=\"p1\">**</ept>, the setting called <bpt id=\"p2\">**</bpt>Text scaling<ept id=\"p2\">**</ept> on the phone (<bpt id=\"p3\">**</bpt>Settings <ph id=\"ph1\">&amp;gt;</ph> Ease of access<ept id=\"p3\">**</ept>), causes the text size of text in that element to be scaled up.","pos":[7270,7444],"source":" When its value is **true**, the setting called **Text scaling** on the phone (**Settings &gt; Ease of access**), causes the text size of text in that element to be scaled up."},{"content":"The scaling will affect text that has a small <bpt id=\"p1\">**</bpt>FontSize<ept id=\"p1\">**</ept> to a greater degree than it will affect text that has a large <bpt id=\"p2\">**</bpt>FontSize<ept id=\"p2\">**</ept>.","pos":[7445,7579],"source":" The scaling will affect text that has a small **FontSize** to a greater degree than it will affect text that has a large **FontSize**."},{"content":"But you can disable that automatic enlargement by setting an element's <bpt id=\"p1\">**</bpt>IsTextScaleFactorEnabled<ept id=\"p1\">**</ept> property to <bpt id=\"p2\">**</bpt>false<ept id=\"p2\">**</ept>.","pos":[7580,7702],"source":" But you can disable that automatic enlargement by setting an element's **IsTextScaleFactorEnabled** property to **false**."},{"content":"Try this markup, adjust the <bpt id=\"p1\">**</bpt>Text size<ept id=\"p1\">**</ept> setting on the phone, and see what happens to the <bpt id=\"p2\">**</bpt>TextBlock<ept id=\"p2\">**</ept>s:","pos":[7703,7810],"source":" Try this markup, adjust the **Text size** setting on the phone, and see what happens to the **TextBlock**s:"},{"content":"Please don't disable automatic enlargement routinely, though, because scaling UI text universally across all apps is an important accessibility experience for users and they will expect it to work in your app too.","pos":[8196,8409]},{"content":"You can also use the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>TextScaleFactorChanged<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/Dn633867)</ept> event and the <bpt id=\"p3\">[</bpt><bpt id=\"p4\">**</bpt>TextScaleFactor<ept id=\"p4\">**</ept><ept id=\"p3\">](https://msdn.microsoft.com/library/windows/apps/Dn633866)</ept> property to find out about changes to the <bpt id=\"p5\">**</bpt>Text size<ept id=\"p5\">**</ept> setting on the phone.","pos":[8411,8690],"source":"You can also use the [**TextScaleFactorChanged**](https://msdn.microsoft.com/library/windows/apps/Dn633867) event and the [**TextScaleFactor**](https://msdn.microsoft.com/library/windows/apps/Dn633866) property to find out about changes to the **Text size** setting on the phone."},{"content":"Here’s how:","pos":[8691,8702]},{"content":"The value of <bpt id=\"p1\">**</bpt>TextScaleFactor<ept id=\"p1\">**</ept> is a double in the range \\[1,2\\].","pos":[9210,9276],"source":"The value of **TextScaleFactor** is a double in the range \\[1,2\\]."},{"content":"The smallest text is scaled up by this amount.","pos":[9277,9323]},{"content":"You might be able to use the value to, say, scale graphics to match the text.","pos":[9324,9401]},{"content":"But remember that not all text is scaled by the same factor.","pos":[9402,9462]},{"content":"Generally speaking, the larger text is to begin with, the less it’s affected by scaling.","pos":[9463,9551]},{"pos":[9553,9611],"content":"These types have an <bpt id=\"p1\">**</bpt>IsTextScaleFactorEnabled<ept id=\"p1\">**</ept> property:","source":"These types have an **IsTextScaleFactorEnabled** property:"},{"content":"ContentPresenter","pos":[9620,9636]},{"pos":[9702,9793],"content":"<bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>Control<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/BR209390)</ept> and derived classes","source":"[**Control**](https://msdn.microsoft.com/library/windows/apps/BR209390) and derived classes"},{"content":"FontIcon","pos":[9801,9809]},{"content":"RichTextBlock","pos":[9878,9891]},{"content":"TextBlock","pos":[9960,9969]},{"pos":[10035,10130],"content":"<bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>TextElement<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/BR209967)</ept> and derived classes","source":"[**TextElement**](https://msdn.microsoft.com/library/windows/apps/BR209967) and derived classes"},{"content":"Related topics","pos":[10135,10149]},{"content":"Accessibility","pos":[10154,10167]},{"content":"Basic accessibility information","pos":[10190,10221]},{"content":"XAML text display sample","pos":[10262,10286]},{"content":"XAML text editing sample","pos":[10340,10364]},{"content":"XAML accessibility sample","pos":[10418,10443]}],"content":"---\nDescription: This topic describes best practices for accessibility of text in an app, by assuring that colors and backgrounds satisfy the necessary contrast ratio.\ntitle: Accessible text requirements\nms.assetid: BA689C76-FE68-4B5B-9E8D-1E7697F737E6\nlabel: Text requirements\ntemplate: detail.hbs\n---\n\n# Accessible text requirements\n\n\\[ Updated for UWP apps on Windows 10. For Windows 8.x articles, see the [archive](http://go.microsoft.com/fwlink/p/?linkid=619132) \\]\n\n\nThis topic describes best practices for accessibility of text in an app, by assuring that colors and backgrounds satisfy the necessary contrast ratio. This topic also discusses the Microsoft UI Automation roles that text elements in a Universal Windows Platform (UWP) app can have, and best practices for text in graphics.\n\n## Contrast ratios\n\nAlthough users always have the option to switch to a high-contrast mode, your app design for text should regard that option as a last resort. A much better practice is to make sure that your app text meets certain established guidelines for the level of contrast between text and its background. Evaluation of the level of contrast is based on deterministic techniques that do not consider color hue. For example, if you have red text on a green background, that text might not be readable to someone with a color blindness impairment. Checking and correcting the contrast ratio can prevent these types of accessibility issues.\n\nThe recommendations for text contrast documented here are based on a web accessibility standard, [G18: Ensuring that a contrast ratio of at least 4.5:1 exists between text (and images of text) and background behind the text](http://go.microsoft.com/fwlink/p/?linkid=221823). This guidance exists in the *W3C Techniques for WCAG 2.0* specification.\n\nTo be considered accessible, visible text must have a minimum luminosity contrast ratio of 4.5:1 against the background. Exceptions include logos and incidental text, such as text that is part of an inactive UI component.\n\nText that is decorative and conveys no information is excluded. For example, if random words are used to create a background, and the words can be rearranged or substituted without changing meaning, the words are considered to be decorative and do not need to meet this criterion.\n\nUse color contrast tools to verify that the visible text contrast ratio is acceptable. See [Techniques for WCAG 2.0 G18 (Resources section)](http://www.w3.org/TR/WCAG20-TECHS/G18.html#G18-resources) for tools that can test contrast ratios.\n\n**Note**  Some of the tools listed by Techniques for WCAG 2.0 G18 can't be used interactively with a UWP app. You may need to enter foreground and background color values manually in the tool, or make screen captures of app UI and then run the contrast ratio tool over the screen capture image.\n\n \n\n## Text element roles\n\nA UWP app can use these default elements (commonly called *text elements* or *textedit controls*):\n\n-   [**TextBlock**](https://msdn.microsoft.com/library/windows/apps/BR209652): role is [**Text**](https://msdn.microsoft.com/library/windows/apps/BR209182)\n-   [**TextBox**](https://msdn.microsoft.com/library/windows/apps/BR209683): role is [**Edit**](https://msdn.microsoft.com/library/windows/apps/BR209182)\n-   [**RichTextBlock**](https://msdn.microsoft.com/library/windows/apps/BR227565) (and overflow class [**RichTextBlockOverflow**](https://msdn.microsoft.com/library/windows/apps/BR227565overflow)): role is [**Text**](https://msdn.microsoft.com/library/windows/apps/BR209182)\n-   [**RichEditBox**](https://msdn.microsoft.com/library/windows/apps/BR227548): role is [**Edit**](https://msdn.microsoft.com/library/windows/apps/BR209182)\n\nWhen a control reports that is has a role of [**Edit**](https://msdn.microsoft.com/library/windows/apps/BR209182), assistive technologies assume that there are ways for users to change the values. So if you put static text in a [**TextBox**](https://msdn.microsoft.com/library/windows/apps/BR209683), you are misreporting the role and thus misreporting the structure of your app to the accessibility user.\n\nIn the text models for XAML, there are two elements that are primarily used for static text, [**TextBlock**](https://msdn.microsoft.com/library/windows/apps/BR209652) and [**RichTextBlock**](https://msdn.microsoft.com/library/windows/apps/BR227565). Neither of these are a [**Control**](https://msdn.microsoft.com/library/windows/apps/BR209390) subclass, and as such neither of them are keyboard-focusable or can appear in the tab order. But that does not mean that assistive technologies can't or won't read them. Screen readers are typically designed to support multiple modes of reading the content in an app, including a dedicated reading mode or navigation patterns that go beyond focus and the tab order, like a \"virtual cursor\". So don't put your static text into focusable containers just so that tab order gets the user there. Assistive technology users expect that anything in the tab order is interactive, and if they encounter static text there, that is more confusing than helpful. You should test this out yourself with Narrator to get a sense of the user experience with your app when using a screen reader to examine your app's static text.\n\n## Text in graphics\n\nWhenever possible, avoid including text in a graphic. For example, any text that you include in the image source file that is displayed in the app as an [**Image**](https://msdn.microsoft.com/library/windows/apps/BR242752) element is not automatically accessible or readable by assistive technologies. If you must use text in graphics, make sure that the [**AutomationProperties.Name**](https://msdn.microsoft.com/library/windows/apps/Hh759770) value that you provide as the equivalent of \"alt text\" includes that text or a summary of the text's meaning. Similar considerations apply if you are creating text characters from vectors as part of a [**Path**](https://msdn.microsoft.com/library/windows/apps/BR243355), or by using [**Glyphs**](https://msdn.microsoft.com/library/windows/apps/BR209921).\n\n## Text font size\n\nMany readers have difficulty reading text in an app when that text is using a text font size that's simply too small for them to read. You can prevent this issue by making the text in your app's UI reasonably large in the first place. There are also assistive technologies that are part of Windows, and these enable users to change the view sizes of apps, or the display in general.\n\n-   Some users change dots per inch (dpi) values of their primary display as an accessibility option. That option is available from **Make things on the screen larger** in **Ease of Access**, which redirects to a **Control Panel** UI for **Appearance and Personalization** / **Display**. Exactly which sizing options are available can vary because this depends on the capabilities of the display device.\n-   The Magnifier tool can enlarge a selected area of the UI. However, it's difficult to use the Magnifier tool for reading text.\n\n## Text scale factor\n\nVarious text elements and controls have an [**IsTextScaleFactorEnabled**](https://msdn.microsoft.com/library/windows/apps/BR209652_istextscalefactorenabled) property. This property has the value **true** by default. When its value is **true**, the setting called **Text scaling** on the phone (**Settings &gt; Ease of access**), causes the text size of text in that element to be scaled up. The scaling will affect text that has a small **FontSize** to a greater degree than it will affect text that has a large **FontSize**. But you can disable that automatic enlargement by setting an element's **IsTextScaleFactorEnabled** property to **false**. Try this markup, adjust the **Text size** setting on the phone, and see what happens to the **TextBlock**s:\n\n```xaml\n<TextBlock Text=&quot;In this case, IsTextScaleFactorEnabled has been left set to its default value of true.&quot; \n    Style=&quot;{StaticResource BodyTextBlockStyle}&quot;/>\n\n<TextBlock Text=&quot;In this case, IsTextScaleFactorEnabled has been set to false.&quot; \n    Style=&quot;{StaticResource BodyTextBlockStyle}&quot; IsTextScaleFactorEnabled=&quot;False&quot;/>\n```\n\nPlease don't disable automatic enlargement routinely, though, because scaling UI text universally across all apps is an important accessibility experience for users and they will expect it to work in your app too.\n\nYou can also use the [**TextScaleFactorChanged**](https://msdn.microsoft.com/library/windows/apps/Dn633867) event and the [**TextScaleFactor**](https://msdn.microsoft.com/library/windows/apps/Dn633866) property to find out about changes to the **Text size** setting on the phone. Here’s how:\n\n```csharp\n{\n    ...\n    var uiSettings = new Windows.UI.ViewManagement.UISettings();\n    uiSettings.TextScaleFactorChanged += UISettings_TextScaleFactorChanged;\n    ...\n}\n\nprivate async void UISettings_TextScaleFactorChanged(Windows.UI.ViewManagement.UISettings sender, object args)\n{\n    var messageDialog = new Windows.UI.Popups.MessageDialog(string.Format(&quot;It&#39;s now {0}&quot;, sender.TextScaleFactor), &quot;The text scale factor has changed&quot;);\n    await messageDialog.ShowAsync();\n}\n```\n\nThe value of **TextScaleFactor** is a double in the range \\[1,2\\]. The smallest text is scaled up by this amount. You might be able to use the value to, say, scale graphics to match the text. But remember that not all text is scaled by the same factor. Generally speaking, the larger text is to begin with, the less it’s affected by scaling.\n\nThese types have an **IsTextScaleFactorEnabled** property:\n\n-   [**ContentPresenter**](https://msdn.microsoft.com/library/windows/apps/BR209378)\n-   [**Control**](https://msdn.microsoft.com/library/windows/apps/BR209390) and derived classes\n-   [**FontIcon**](https://msdn.microsoft.com/library/windows/apps/Dn279514)\n-   [**RichTextBlock**](https://msdn.microsoft.com/library/windows/apps/BR227565)\n-   [**TextBlock**](https://msdn.microsoft.com/library/windows/apps/BR209652)\n-   [**TextElement**](https://msdn.microsoft.com/library/windows/apps/BR209967) and derived classes\n\n## Related topics\n\n* [Accessibility](accessibility.md)\n* [Basic accessibility information](basic-accessibility-information.md)\n* [XAML text display sample](http://go.microsoft.com/fwlink/p/?linkid=238579)\n* [XAML text editing sample](http://go.microsoft.com/fwlink/p/?linkid=251417)\n* [XAML accessibility sample](http://go.microsoft.com/fwlink/p/?linkid=238570)\n \n\n \n\n\n\n"}