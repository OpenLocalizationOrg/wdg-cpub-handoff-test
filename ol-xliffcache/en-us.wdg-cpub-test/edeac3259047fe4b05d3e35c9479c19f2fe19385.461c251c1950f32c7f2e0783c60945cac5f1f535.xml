{"nodes":[{"pos":[17,89],"content":"The media player is used to view and listen to video, audio, and images.","needQuote":true,"needEscape":true,"nodes":[{"content":"The media player is used to view and listen to video, audio, and images.","pos":[0,72]}]},{"pos":[97,109],"content":"Media player","needQuote":true,"needEscape":true,"nodes":[{"content":"Media player","pos":[0,12]}]},{"content":"Media player","pos":[256,268]},{"content":"The media player is used to view and listen to video, audio, and images.","pos":[270,342]},{"content":"Media playback can be inline (embedded in a page or with a group of other controls) or in a dedicated full-screen view.","pos":[343,462]},{"content":"You can modify the player's button set, change the background of the control bar, and arrange layouts as you see fit.","pos":[463,580]},{"content":"Just keep in mind that users expect a basic control set (play/pause, skip back, skip forward).","pos":[581,675]},{"content":"Media element with transport controls","pos":[679,716]},{"pos":[822,836],"content":"Important APIs"},{"content":"MediaElement class","pos":[852,870]},{"content":"MediaTransportControls class","pos":[939,967]},{"content":"Is this the right control?","pos":[1072,1098]},{"content":"Use a media player when you want to play audio or video in your app.","pos":[1100,1168]},{"content":"To display a collection of images, use a <bpt id=\"p1\">[</bpt>Flip view<ept id=\"p1\">](flipview.md)</ept>.","pos":[1169,1235],"source":" To display a collection of images, use a [Flip view](flipview.md)."},{"content":"Examples","pos":[1240,1248]},{"content":"A media element in the Windows 10 Get Started app.","pos":[1250,1300]},{"content":"A media elementin the Windows 10 Get Started app","pos":[1304,1352]},{"content":"Create a media player","pos":[1412,1433]},{"pos":[1434,1722],"content":"Add media to your app by creating a <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>MediaElement<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br242926)</ept> object in XAML and set the <bpt id=\"p3\">[</bpt><bpt id=\"p4\">**</bpt>Source<ept id=\"p4\">**</ept><ept id=\"p3\">](https://msdn.microsoft.com/library/windows/apps/br227419)</ept> to a Uniform Resource Identifier (URI) that points to an audio or video file.","source":"Add media to your app by creating a [**MediaElement**](https://msdn.microsoft.com/library/windows/apps/br242926) object in XAML and set the [**Source**](https://msdn.microsoft.com/library/windows/apps/br227419) to a Uniform Resource Identifier (URI) that points to an audio or video file."},{"content":"This XAML creates a <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>MediaElement<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br242926)</ept> and sets its <bpt id=\"p3\">[</bpt><bpt id=\"p4\">**</bpt>Source<ept id=\"p4\">**</ept><ept id=\"p3\">](https://msdn.microsoft.com/library/windows/apps/br227419)</ept> property to the URI of a video file that's local to the app.","pos":[1724,1965],"source":"This XAML creates a [**MediaElement**](https://msdn.microsoft.com/library/windows/apps/br242926) and sets its [**Source**](https://msdn.microsoft.com/library/windows/apps/br227419) property to the URI of a video file that's local to the app."},{"content":"The <bpt id=\"p1\">**</bpt>MediaElement<ept id=\"p1\">**</ept> begins playing when the page loads.","pos":[1966,2022],"source":" The **MediaElement** begins playing when the page loads."},{"content":"To suppress media from starting right away, you can set the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>AutoPlay<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br227360)</ept> property to <bpt id=\"p3\">**</bpt>false<ept id=\"p3\">**</ept>.","pos":[2023,2178],"source":" To suppress media from starting right away, you can set the [**AutoPlay**](https://msdn.microsoft.com/library/windows/apps/br227360) property to **false**."},{"pos":[2316,2565],"content":"This XAML creates a <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>MediaElement<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br242926)</ept> with the built in transport controls enabled and the <bpt id=\"p3\">[</bpt><bpt id=\"p4\">**</bpt>AutoPlay<ept id=\"p4\">**</ept><ept id=\"p3\">](https://msdn.microsoft.com/library/windows/apps/br227360)</ept> property set to <bpt id=\"p5\">**</bpt>false.<ept id=\"p5\">**</ept>","source":"This XAML creates a [**MediaElement**](https://msdn.microsoft.com/library/windows/apps/br242926) with the built in transport controls enabled and the [**AutoPlay**](https://msdn.microsoft.com/library/windows/apps/br227360) property set to **false.**"},{"content":"Media transport controls","pos":[2774,2798]},{"content":"MediaElement has built in transport controls that handle play, stop, pause, volume, mute, seeking/progress, and audio track selection.","pos":[2799,2933]},{"content":"To enable these controls, set <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>AreTransportControlsEnabled<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/dn298977)</ept> to <bpt id=\"p3\">**</bpt>true<ept id=\"p3\">**</ept>.","pos":[2934,3068],"source":" To enable these controls, set [**AreTransportControlsEnabled**](https://msdn.microsoft.com/library/windows/apps/dn298977) to **true**."},{"content":"To disable them, set <bpt id=\"p1\">**</bpt>AreTransportControlsEnabled<ept id=\"p1\">**</ept> to <bpt id=\"p2\">**</bpt>false<ept id=\"p2\">**</ept>.","pos":[3069,3135],"source":" To disable them, set **AreTransportControlsEnabled** to **false**."},{"content":"The transport controls are represented by the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>MediaTransportControls<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/dn831962)</ept> class.","pos":[3136,3275],"source":" The transport controls are represented by the [**MediaTransportControls**](https://msdn.microsoft.com/library/windows/apps/dn831962) class."},{"content":"You can use the transport controls as-is, or customize them in various ways.","pos":[3276,3352]},{"content":"For more info, see the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>MediaTransportControls<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/dn831962)</ept> class reference and <bpt id=\"p3\">[</bpt>Create custom transport controls<ept id=\"p3\">](custom-transport-controls.md)</ept>.","pos":[3353,3548],"source":" For more info, see the [**MediaTransportControls**](https://msdn.microsoft.com/library/windows/apps/dn831962) class reference and [Create custom transport controls](custom-transport-controls.md)."},{"content":"The transport controls let the user control most aspects of the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>MediaElement<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br242926)</ept>, but the <bpt id=\"p3\">**</bpt>MediaElement<ept id=\"p3\">**</ept> also provides numerous properties and methods that you can use to control audio and video playback.","pos":[3550,3816],"source":"The transport controls let the user control most aspects of the [**MediaElement**](https://msdn.microsoft.com/library/windows/apps/br242926), but the **MediaElement** also provides numerous properties and methods that you can use to control audio and video playback."},{"content":"For more info, see the <bpt id=\"p1\">[</bpt>Control MediaElement programmatically<ept id=\"p1\">](#control_mediaelement_programmatically)</ept> section later in this article.","pos":[3817,3950],"source":" For more info, see the [Control MediaElement programmatically](#control_mediaelement_programmatically) section later in this article."},{"content":"The transport controls support single- and double-row layouts.","pos":[3952,4014]},{"content":"The first example here is a single-row layout, with the play/pause button located to the left of the media timeline.","pos":[4015,4131]},{"content":"This layout is best reserved for compact screens.","pos":[4132,4181]},{"content":"Example of MTC controls on phone, single row","pos":[4186,4230]},{"content":"The double-row controls layout (below) is recommended for most usage scenarios, especially on larger screens.","pos":[4274,4383]},{"content":"This layout provides more space for controls and makes the timeline easier for the user to operate.","pos":[4384,4483]},{"content":"Example of MTC controls on phone, double row","pos":[4487,4531]},{"content":"System media transport controls","pos":[4577,4608]},{"content":"You can also integrate <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>MediaElement<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br242926)</ept> with the system media transport controls.","pos":[4612,4753],"source":"You can also integrate [**MediaElement**](https://msdn.microsoft.com/library/windows/apps/br242926) with the system media transport controls."},{"content":"The system transport controls are the controls that pop up when hardware media keys are pressed, such as the media buttons on keyboards.","pos":[4754,4890]},{"content":"If the user presses the pause key on a keyboard and your app supports the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>SystemMediaTransportControls<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/dn278677)</ept>, your app is notified and you can take the appropriate action.","pos":[4891,5120],"source":" If the user presses the pause key on a keyboard and your app supports the [**SystemMediaTransportControls**](https://msdn.microsoft.com/library/windows/apps/dn278677), your app is notified and you can take the appropriate action."},{"content":"For more info, see <bpt id=\"p1\">[</bpt>System Media Transport Controls<ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/mt228338)</ept>.","pos":[5121,5232],"source":" For more info, see [System Media Transport Controls](https://msdn.microsoft.com/library/windows/apps/mt228338)."},{"content":"Set the media source","pos":[5238,5258]},{"pos":[5259,5432],"content":"To play files on the network or files embedded with the app, set the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>Source<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br227419)</ept> property to the path of the file.","source":"To play files on the network or files embedded with the app, set the [**Source**](https://msdn.microsoft.com/library/windows/apps/br227419) property to the path of the file."},{"content":"<bpt id=\"p1\">**</bpt>Tip<ept id=\"p1\">**</ept>  To open files from the internet, you need to declare the <bpt id=\"p2\">**</bpt>Internet (Client)<ept id=\"p2\">**</ept> capability in your app's manifest (Package.appxmanifest).","pos":[5434,5579],"source":"**Tip**  To open files from the internet, you need to declare the **Internet (Client)** capability in your app's manifest (Package.appxmanifest)."},{"content":"For more info about declaring capabilities, see <bpt id=\"p1\">[</bpt>App capability declarations<ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/mt270968)</ept>.","pos":[5580,5716],"source":" For more info about declaring capabilities, see [App capability declarations](https://msdn.microsoft.com/library/windows/apps/mt270968)."},{"pos":[5721,6040],"content":"This code attempts to set the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>Source<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br227419)</ept> property of the <bpt id=\"p3\">[</bpt><bpt id=\"p4\">**</bpt>MediaElement<ept id=\"p4\">**</ept><ept id=\"p3\">](https://msdn.microsoft.com/library/windows/apps/br242926)</ept> defined in XAML to the path of a file entered into a <bpt id=\"p5\">[</bpt><bpt id=\"p6\">**</bpt>TextBox<ept id=\"p6\">**</ept><ept id=\"p5\">](https://msdn.microsoft.com/library/windows/apps/br209683)</ept>.","source":"This code attempts to set the [**Source**](https://msdn.microsoft.com/library/windows/apps/br227419) property of the [**MediaElement**](https://msdn.microsoft.com/library/windows/apps/br242926) defined in XAML to the path of a file entered into a [**TextBox**](https://msdn.microsoft.com/library/windows/apps/br209683)."},{"content":"To set the media source to a media file embedded in the app, create a <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>Uri<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br226017)</ept> with the path prefixed with <bpt id=\"p3\">**</bpt>ms-appx:///<ept id=\"p3\">**</ept> and then set the <bpt id=\"p4\">[</bpt><bpt id=\"p5\">**</bpt>Source<ept id=\"p5\">**</ept><ept id=\"p4\">](https://msdn.microsoft.com/library/windows/apps/br227419)</ept> to it.","pos":[6860,7136],"source":"To set the media source to a media file embedded in the app, create a [**Uri**](https://msdn.microsoft.com/library/windows/apps/br226017) with the path prefixed with **ms-appx:///** and then set the [**Source**](https://msdn.microsoft.com/library/windows/apps/br227419) to it."},{"content":"For example, for a file called <bpt id=\"p1\">**</bpt>video1.mp4<ept id=\"p1\">**</ept> that is in a <bpt id=\"p2\">**</bpt>Videos<ept id=\"p2\">**</ept> subfolder, the path would look like: <bpt id=\"p3\">**</bpt>ms-appx:///Videos/video1.mp4<ept id=\"p3\">**</ept>","pos":[7137,7276],"source":" For example, for a file called **video1.mp4** that is in a **Videos** subfolder, the path would look like: **ms-appx:///Videos/video1.mp4**"},{"pos":[7278,7524],"content":"This code sets the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>Source<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br227419)</ept> property of the <bpt id=\"p3\">[</bpt><bpt id=\"p4\">**</bpt>MediaElement<ept id=\"p4\">**</ept><ept id=\"p3\">](https://msdn.microsoft.com/library/windows/apps/br242926)</ept> defined previously in XAML to <bpt id=\"p5\">**</bpt>ms-appx:///Videos/video1.mp4<ept id=\"p5\">**</ept>.","source":"This code sets the [**Source**](https://msdn.microsoft.com/library/windows/apps/br227419) property of the [**MediaElement**](https://msdn.microsoft.com/library/windows/apps/br242926) defined previously in XAML to **ms-appx:///Videos/video1.mp4**."},{"content":"Open local media files","pos":[7902,7924]},{"pos":[7925,8249],"content":"To open files on the local system or from OneDrive, you can use the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>FileOpenPicker<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br207847)</ept> to get the file and <bpt id=\"p3\">[</bpt><bpt id=\"p4\">**</bpt>SetSource<ept id=\"p4\">**</ept><ept id=\"p3\">](https://msdn.microsoft.com/library/windows/apps/br244338)</ept> to set the media source, or you can programmatically access the user media folders.","source":"To open files on the local system or from OneDrive, you can use the [**FileOpenPicker**](https://msdn.microsoft.com/library/windows/apps/br207847) to get the file and [**SetSource**](https://msdn.microsoft.com/library/windows/apps/br244338) to set the media source, or you can programmatically access the user media folders."},{"content":"If your app needs access without user interaction to the <bpt id=\"p1\">**</bpt>Music<ept id=\"p1\">**</ept> or <bpt id=\"p2\">**</bpt>Video<ept id=\"p2\">**</ept> folders, for example, if you are enumerating all the music or video files in the user's collection and displaying them in your app, then you need to declare the <bpt id=\"p3\">**</bpt>Music Library<ept id=\"p3\">**</ept> and <bpt id=\"p4\">**</bpt>Video Library<ept id=\"p4\">**</ept> capabilities.","pos":[8251,8545],"source":"If your app needs access without user interaction to the **Music** or **Video** folders, for example, if you are enumerating all the music or video files in the user's collection and displaying them in your app, then you need to declare the **Music Library** and **Video Library** capabilities."},{"content":"For more info, see <bpt id=\"p1\">[</bpt>Files and folders in the Music, Pictures, and Videos libraries<ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/mt188703)</ept>.","pos":[8546,8688],"source":" For more info, see [Files and folders in the Music, Pictures, and Videos libraries](https://msdn.microsoft.com/library/windows/apps/mt188703)."},{"content":"The <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>FileOpenPicker<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br207847)</ept> does not require special capabilities to access files on the local file system, such as the user's <bpt id=\"p3\">**</bpt>Music<ept id=\"p3\">**</ept> or <bpt id=\"p4\">**</bpt>Video<ept id=\"p4\">**</ept> folders, since the user has complete control over which file is being accessed.","pos":[8690,8974],"source":"The [**FileOpenPicker**](https://msdn.microsoft.com/library/windows/apps/br207847) does not require special capabilities to access files on the local file system, such as the user's **Music** or **Video** folders, since the user has complete control over which file is being accessed."},{"content":"From a security and privacy standpoint, it is best to minimize the number of capabilities your app uses.","pos":[8975,9079]},{"content":"To open local media using FileOpenPicker","pos":[9083,9123]},{"pos":[9131,9249],"content":"Call <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>FileOpenPicker<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br207847)</ept> to let the user pick a media file.","source":"Call [**FileOpenPicker**](https://msdn.microsoft.com/library/windows/apps/br207847) to let the user pick a media file."},{"content":"Use the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>FileOpenPicker<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br207847)</ept> class to select a media file.","pos":[9255,9371],"source":"Use the [**FileOpenPicker**](https://msdn.microsoft.com/library/windows/apps/br207847) class to select a media file."},{"content":"Set the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>FileTypeFilter<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br207850)</ept> to specify which file types the <bpt id=\"p3\">**</bpt>FileOpenPicker<ept id=\"p3\">**</ept> displays.","pos":[9372,9519],"source":" Set the [**FileTypeFilter**](https://msdn.microsoft.com/library/windows/apps/br207850) to specify which file types the **FileOpenPicker** displays."},{"content":"Call <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>PickSingleFileAsync<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/jj635275)</ept> to launch the file picker and get the file.","pos":[9520,9652],"source":" Call [**PickSingleFileAsync**](https://msdn.microsoft.com/library/windows/apps/jj635275) to launch the file picker and get the file."},{"pos":[9658,9857],"content":"Call <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>SetSource<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br244338)</ept> to set the chosen media file as the <bpt id=\"p3\">[</bpt><bpt id=\"p4\">**</bpt>MediaElement.Source<ept id=\"p4\">**</ept><ept id=\"p3\">](https://msdn.microsoft.com/library/windows/apps/br227419)</ept>.","source":"Call [**SetSource**](https://msdn.microsoft.com/library/windows/apps/br244338) to set the chosen media file as the [**MediaElement.Source**](https://msdn.microsoft.com/library/windows/apps/br227419)."},{"content":"To set the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>Source<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br227419)</ept> of the <bpt id=\"p3\">[</bpt><bpt id=\"p4\">**</bpt>MediaElement<ept id=\"p4\">**</ept><ept id=\"p3\">](https://msdn.microsoft.com/library/windows/apps/br242926)</ept> to the <bpt id=\"p5\">[</bpt><bpt id=\"p6\">**</bpt>StorageFile<ept id=\"p6\">**</ept><ept id=\"p5\">](https://msdn.microsoft.com/library/windows/apps/br227171)</ept> returned from the <bpt id=\"p7\">[</bpt><bpt id=\"p8\">**</bpt>FileOpenPicker<ept id=\"p8\">**</ept><ept id=\"p7\">](https://msdn.microsoft.com/library/windows/apps/br207847)</ept>, you need to open a stream.","pos":[9863,10236],"source":"To set the [**Source**](https://msdn.microsoft.com/library/windows/apps/br227419) of the [**MediaElement**](https://msdn.microsoft.com/library/windows/apps/br242926) to the [**StorageFile**](https://msdn.microsoft.com/library/windows/apps/br227171) returned from the [**FileOpenPicker**](https://msdn.microsoft.com/library/windows/apps/br207847), you need to open a stream."},{"content":"Call the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>OpenAsync<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/dn889851)</ept> method on the <bpt id=\"p3\">**</bpt>StorageFile<ept id=\"p3\">**</ept>, which returns a stream that you can pass into the <bpt id=\"p4\">[</bpt><bpt id=\"p5\">**</bpt>MediaElement.SetSource<ept id=\"p5\">**</ept><ept id=\"p4\">](https://msdn.microsoft.com/library/windows/apps/br244338)</ept> method.","pos":[10237,10495],"source":" Call the [**OpenAsync**](https://msdn.microsoft.com/library/windows/apps/dn889851) method on the **StorageFile**, which returns a stream that you can pass into the [**MediaElement.SetSource**](https://msdn.microsoft.com/library/windows/apps/br244338) method."},{"content":"Then call <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>Play<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br227402)</ept> on the <bpt id=\"p3\">**</bpt>MediaElement<ept id=\"p3\">**</ept> to start the media.","pos":[10496,10618],"source":" Then call [**Play**](https://msdn.microsoft.com/library/windows/apps/br227402) on the **MediaElement** to start the media."},{"pos":[10620,10927],"content":"This example shows how to use the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>FileOpenPicker<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br207847)</ept> to choose a file and set the file as the <bpt id=\"p3\">[</bpt><bpt id=\"p4\">**</bpt>Source<ept id=\"p4\">**</ept><ept id=\"p3\">](https://msdn.microsoft.com/library/windows/apps/br227419)</ept> of a <bpt id=\"p5\">[</bpt><bpt id=\"p6\">**</bpt>MediaElement<ept id=\"p6\">**</ept><ept id=\"p5\">](https://msdn.microsoft.com/library/windows/apps/br242926)</ept>.","source":"This example shows how to use the [**FileOpenPicker**](https://msdn.microsoft.com/library/windows/apps/br207847) to choose a file and set the file as the [**Source**](https://msdn.microsoft.com/library/windows/apps/br227419) of a [**MediaElement**](https://msdn.microsoft.com/library/windows/apps/br242926)."},{"content":"Set the poster source","pos":[11769,11790]},{"content":"You can use the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>PosterSource<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br227409)</ept> property to provide your <bpt id=\"p3\">[</bpt><bpt id=\"p4\">**</bpt>MediaElement<ept id=\"p4\">**</ept><ept id=\"p3\">](https://msdn.microsoft.com/library/windows/apps/br242926)</ept> with a visual representation before the media is loaded.","pos":[11791,12042],"source":"You can use the [**PosterSource**](https://msdn.microsoft.com/library/windows/apps/br227409) property to provide your [**MediaElement**](https://msdn.microsoft.com/library/windows/apps/br242926) with a visual representation before the media is loaded."},{"content":"A <bpt id=\"p1\">**</bpt>PosterSource<ept id=\"p1\">**</ept> is an image, such as a screen shot or movie poster, that is displayed in place of the media.","pos":[12043,12154],"source":" A **PosterSource** is an image, such as a screen shot or movie poster, that is displayed in place of the media."},{"content":"The <bpt id=\"p1\">**</bpt>PosterSource<ept id=\"p1\">**</ept> is displayed in the following situations:","pos":[12155,12217],"source":" The **PosterSource** is displayed in the following situations:"},{"content":"When a valid source is not set.","pos":[12223,12254]},{"content":"For example, <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>Source<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br227419)</ept> is not set, <bpt id=\"p3\">**</bpt>Source<ept id=\"p3\">**</ept> was set to <bpt id=\"p4\">**</bpt>Null<ept id=\"p4\">**</ept>, or the source is invalid (as is the case when a <bpt id=\"p5\">[</bpt><bpt id=\"p6\">**</bpt>MediaFailed<ept id=\"p6\">**</ept><ept id=\"p5\">](https://msdn.microsoft.com/library/windows/apps/br227393)</ept> event occurs).","pos":[12255,12521],"source":" For example, [**Source**](https://msdn.microsoft.com/library/windows/apps/br227419) is not set, **Source** was set to **Null**, or the source is invalid (as is the case when a [**MediaFailed**](https://msdn.microsoft.com/library/windows/apps/br227393) event occurs)."},{"content":"While media is loading.","pos":[12526,12549]},{"content":"For example, a valid source is set, but the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>MediaOpened<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br227394)</ept> event has not occurred yet.","pos":[12550,12697],"source":" For example, a valid source is set, but the [**MediaOpened**](https://msdn.microsoft.com/library/windows/apps/br227394) event has not occurred yet."},{"content":"When media is streaming to another device.","pos":[12702,12744]},{"content":"When the media is audio only.","pos":[12749,12778]},{"pos":[12780,13090],"content":"Here's a <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>MediaElement<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br242926)</ept> with its <bpt id=\"p3\">[</bpt><bpt id=\"p4\">**</bpt>Source<ept id=\"p4\">**</ept><ept id=\"p3\">](https://msdn.microsoft.com/library/windows/apps/br227419)</ept> set to an album track, and it's <bpt id=\"p5\">[</bpt><bpt id=\"p6\">**</bpt>PosterSource<ept id=\"p6\">**</ept><ept id=\"p5\">](https://msdn.microsoft.com/library/windows/apps/br227409)</ept> set to an image of the album cover.","source":"Here's a [**MediaElement**](https://msdn.microsoft.com/library/windows/apps/br242926) with its [**Source**](https://msdn.microsoft.com/library/windows/apps/br227419) set to an album track, and it's [**PosterSource**](https://msdn.microsoft.com/library/windows/apps/br227409) set to an image of the album cover."},{"content":"Keep the device's screen active","pos":[13188,13219]},{"content":"Typically, a device dims the display (and eventually turns it off) to save battery life when the user is away, but video apps need to keep the screen on so the user can see the video.","pos":[13220,13403]},{"content":"To prevent the display from being deactivated when user action is no longer detected, such as when an app is playing full-screen video, you can call <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>DisplayRequest.RequestActive<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br241818)</ept>.","pos":[13404,13646],"source":" To prevent the display from being deactivated when user action is no longer detected, such as when an app is playing full-screen video, you can call [**DisplayRequest.RequestActive**](https://msdn.microsoft.com/library/windows/apps/br241818)."},{"content":"The <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>DisplayRequest<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br241816)</ept> class lets you tell Windows to keep the display turned on so the user can see the video.","pos":[13647,13818],"source":" The [**DisplayRequest**](https://msdn.microsoft.com/library/windows/apps/br241816) class lets you tell Windows to keep the display turned on so the user can see the video."},{"content":"To conserve power and battery life, you should call <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>DisplayRequest.RequestRelease<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br241819)</ept> to release the display request when it is no longer required.","pos":[13820,14027],"source":"To conserve power and battery life, you should call [**DisplayRequest.RequestRelease**](https://msdn.microsoft.com/library/windows/apps/br241819) to release the display request when it is no longer required."},{"content":"Windows automatically deactivates your app's active display requests when your app moves off screen, and re-activates them when your app comes back to the foreground.","pos":[14028,14194]},{"content":"Here are some situations when you should release the display request:","pos":[14196,14265]},{"content":"Video playback is paused, for example, by user action, buffering, or adjustment due to limited bandwidth.","pos":[14271,14376]},{"content":"Playback stops.","pos":[14381,14396]},{"content":"For example, the video is done playing or the presentation is over.","pos":[14397,14464]},{"content":"A playback error has occurred.","pos":[14469,14499]},{"content":"For example, network connectivity issues or a corrupted file.","pos":[14500,14561]},{"content":"To keep the screen active","pos":[14565,14590]},{"content":"Create a global <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>DisplayRequest<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br241816)</ept> variable.","pos":[14598,14702],"source":"Create a global [**DisplayRequest**](https://msdn.microsoft.com/library/windows/apps/br241816) variable."},{"content":"Initialize it to null.","pos":[14703,14725]},{"pos":[14853,15001],"content":"Call <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>RequestActive<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br241818)</ept> to notify Windows that the app requires the display to remain on.","source":"Call [**RequestActive**](https://msdn.microsoft.com/library/windows/apps/br241818) to notify Windows that the app requires the display to remain on."},{"content":"Call <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>RequestRelease<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br241819)</ept> to release the display request whenever video playback is stopped, paused, or interrupted by a playback error.","pos":[15007,15201],"source":"Call [**RequestRelease**](https://msdn.microsoft.com/library/windows/apps/br241819) to release the display request whenever video playback is stopped, paused, or interrupted by a playback error."},{"content":"When your app no longer has any active display requests, Windows saves battery life by dimming the display (and eventually turning it off) when the device is not being used.","pos":[15202,15375]},{"content":"Here, you use the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>CurrentStateChanged<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br227375)</ept> event to detect these situations.","pos":[15381,15516],"source":"Here, you use the [**CurrentStateChanged**](https://msdn.microsoft.com/library/windows/apps/br227375) event to detect these situations."},{"content":"Then, use the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>IsAudioOnly<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/hh965334)</ept> property to determine whether an audio or video file is playing, and keep the screen active only if video is playing.","pos":[15517,15724],"source":" Then, use the [**IsAudioOnly**](https://msdn.microsoft.com/library/windows/apps/hh965334) property to determine whether an audio or video file is playing, and keep the screen active only if video is playing."},{"content":"Control the media player programmatically","pos":[16844,16885]},{"content":"<bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>MediaElement<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br242926)</ept> provides numerous properties, methods, and events for controlling audio and video playback.","pos":[16886,17054],"source":"[**MediaElement**](https://msdn.microsoft.com/library/windows/apps/br242926) provides numerous properties, methods, and events for controlling audio and video playback."},{"content":"For a full listing of properties, methods, and events, see the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>MediaElement<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br242926)</ept> reference page.","pos":[17055,17210],"source":" For a full listing of properties, methods, and events, see the [**MediaElement**](https://msdn.microsoft.com/library/windows/apps/br242926) reference page."},{"content":"Select audio tracks in different languages","pos":[17221,17263]},{"content":"Use the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>AudioStreamIndex<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br227358)</ept> property and the <bpt id=\"p3\">[</bpt><bpt id=\"p4\">**</bpt>GetAudioStreamLanguage<ept id=\"p4\">**</ept><ept id=\"p3\">](https://msdn.microsoft.com/library/windows/apps/br227384)</ept> method to change the audio to a different language track on a video.","pos":[17265,17526],"source":"Use the [**AudioStreamIndex**](https://msdn.microsoft.com/library/windows/apps/br227358) property and the [**GetAudioStreamLanguage**](https://msdn.microsoft.com/library/windows/apps/br227384) method to change the audio to a different language track on a video."},{"content":"Videos can also contain multiple audio tracks in the same language, such as director commentaries on films.","pos":[17527,17634]},{"content":"This example specifically shows how to switch between different languages, but you can modify this code to switch between any audio tracks.","pos":[17635,17774]},{"content":"To select audio tracks in different languages","pos":[17778,17823]},{"content":"Get the audio tracks.","pos":[17831,17852]},{"content":"To search for a track in a specific language, start by iterating through each audio track on the video.","pos":[17858,17961]},{"content":"Use <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>AudioStreamCount<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br227356)</ept> as the max value for a <bpt id=\"p3\">**</bpt>for<ept id=\"p3\">**</ept> loop.","pos":[17962,18083],"source":" Use [**AudioStreamCount**](https://msdn.microsoft.com/library/windows/apps/br227356) as the max value for a **for** loop."},{"content":"Get the language of the audio track.","pos":[18089,18125]},{"content":"Use the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>GetAudioStreamLanguage<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br227384)</ept> method to get the language of the track.","pos":[18131,18266],"source":"Use the [**GetAudioStreamLanguage**](https://msdn.microsoft.com/library/windows/apps/br227384) method to get the language of the track."},{"content":"The language of the track is identified by a <bpt id=\"p1\">[</bpt>language code<ept id=\"p1\">](http://msdn.microsoft.com/library/ms533052(vs.85).aspx)</ept>, such as <bpt id=\"p2\">**</bpt>\"en\"<ept id=\"p2\">**</ept> for English or <bpt id=\"p3\">**</bpt>\"ja\"<ept id=\"p3\">**</ept> for Japanese.","pos":[18267,18439],"source":" The language of the track is identified by a [language code](http://msdn.microsoft.com/library/ms533052(vs.85).aspx), such as **\"en\"** for English or **\"ja\"** for Japanese."},{"content":"Set the active audio track.","pos":[18445,18472]},{"content":"When you find the track with the desired language, set the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>AudioStreamIndex<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br227358)</ept> to the index of the track.","pos":[18478,18644],"source":"When you find the track with the desired language, set the [**AudioStreamIndex**](https://msdn.microsoft.com/library/windows/apps/br227358) to the index of the track."},{"content":"Setting <bpt id=\"p1\">**</bpt>AudioStreamIndex<ept id=\"p1\">**</ept> to <bpt id=\"p2\">**</bpt>null<ept id=\"p2\">**</ept> selects the default audio track, which is defined by the content.","pos":[18645,18751],"source":" Setting **AudioStreamIndex** to **null** selects the default audio track, which is defined by the content."},{"content":"Here's some code that attempts to set the audio track to the specified language.","pos":[18753,18833]},{"content":"It iterates through the audio tracks on a <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>MediaElement<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br242926)</ept> object and uses <bpt id=\"p3\">[</bpt><bpt id=\"p4\">**</bpt>GetAudioStreamLanguage<ept id=\"p4\">**</ept><ept id=\"p3\">](https://msdn.microsoft.com/library/windows/apps/br227384)</ept> to get the language of each track.","pos":[18834,19090],"source":" It iterates through the audio tracks on a [**MediaElement**](https://msdn.microsoft.com/library/windows/apps/br242926) object and uses [**GetAudioStreamLanguage**](https://msdn.microsoft.com/library/windows/apps/br227384) to get the language of each track."},{"content":"If the desired language track exists, the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>AudioStreamIndex<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br227358)</ept> is set to the index of that track.","pos":[19091,19248],"source":" If the desired language track exists, the [**AudioStreamIndex**](https://msdn.microsoft.com/library/windows/apps/br227358) is set to the index of that track."},{"content":"Enable full window video rendering","pos":[19878,19912]},{"content":"Set the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>IsFullWindow<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/dn298980)</ept> property to enable and disable full window rendering.","pos":[19914,20052],"source":"Set the [**IsFullWindow**](https://msdn.microsoft.com/library/windows/apps/dn298980) property to enable and disable full window rendering."},{"content":"When you programmatically set full window rendering in your app, you should always use <bpt id=\"p1\">**</bpt>IsFullWindow<ept id=\"p1\">**</ept> instead of doing it manually.","pos":[20053,20186],"source":" When you programmatically set full window rendering in your app, you should always use **IsFullWindow** instead of doing it manually."},{"content":"<bpt id=\"p1\">**</bpt>IsFullWindow<ept id=\"p1\">**</ept> insures that system level optimizations are performed that improve performance and battery life.","pos":[20187,20300],"source":"**IsFullWindow** insures that system level optimizations are performed that improve performance and battery life."},{"content":"If full window rendering is not set up correctly, these optimizations may not be enabled.","pos":[20301,20390]},{"pos":[20392,20538],"content":"Here is some code that creates an <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>AppBarButton<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/dn279244)</ept> that toggles full window rendering.","source":"Here is some code that creates an [**AppBarButton**](https://msdn.microsoft.com/library/windows/apps/dn279244) that toggles full window rendering."},{"content":"Resize and stretch video","pos":[20792,20816]},{"content":"Use the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>Stretch<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br227422)</ept> property to change how the video content fills the container it's in.","pos":[20818,20967],"source":"Use the [**Stretch**](https://msdn.microsoft.com/library/windows/apps/br227422) property to change how the video content fills the container it's in."},{"content":"This resizes and stretches the video depending on the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>Stretch<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br242968)</ept> value.","pos":[20968,21100],"source":" This resizes and stretches the video depending on the [**Stretch**](https://msdn.microsoft.com/library/windows/apps/br242968) value."},{"content":"The <bpt id=\"p1\">**</bpt>Stretch<ept id=\"p1\">**</ept> states are similar to picture size settings on many TV sets.","pos":[21101,21177],"source":" The **Stretch** states are similar to picture size settings on many TV sets."},{"content":"You can hook this up to a button and allow the user to choose which setting they prefer.","pos":[21178,21266]},{"pos":[21272,21408],"content":"<bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>None<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br242968)</ept> displays the native resolution of the content in its original size.","source":"[**None**](https://msdn.microsoft.com/library/windows/apps/br242968) displays the native resolution of the content in its original size."},{"content":"<bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>Uniform<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br242968)</ept> fills up as much of the space as possible while preserving the aspect ratio and the image content.","pos":[21413,21583],"source":"[**Uniform**](https://msdn.microsoft.com/library/windows/apps/br242968) fills up as much of the space as possible while preserving the aspect ratio and the image content."},{"content":"This can result in horizontal or vertical black bars at the edges of the video.","pos":[21584,21663]},{"content":"This is similar to wide-screen modes.","pos":[21664,21701]},{"content":"<bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>UniformToFill<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br242968)</ept> fills up the entire space while preserving the aspect ratio.","pos":[21706,21844],"source":"[**UniformToFill**](https://msdn.microsoft.com/library/windows/apps/br242968) fills up the entire space while preserving the aspect ratio."},{"content":"This can result in some of the image being cropped.","pos":[21845,21896]},{"content":"This is similar to full-screen modes.","pos":[21897,21934]},{"content":"<bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>Fill<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br242968)</ept> fills up the entire space, but does not preserve the aspect ratio.","pos":[21939,22074],"source":"[**Fill**](https://msdn.microsoft.com/library/windows/apps/br242968) fills up the entire space, but does not preserve the aspect ratio."},{"content":"None of image is cropped, but stretching may occur.","pos":[22075,22126]},{"content":"This is similar to stretch modes.","pos":[22127,22160]},{"content":"Stretch enumeration values<ph id=\"ph1\">](images/Image_Stretch.jpg)</ph> Here, an <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>AppBarButton<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/dn279244)</ept> is used to cycle through the <bpt id=\"p3\">[</bpt><bpt id=\"p4\">**</bpt>Stretch<ept id=\"p4\">**</ept><ept id=\"p3\">](https://msdn.microsoft.com/library/windows/apps/br242968)</ept> options.","pos":[22164,22413],"source":"Stretch enumeration values](images/Image_Stretch.jpg)\nHere, an [**AppBarButton**](https://msdn.microsoft.com/library/windows/apps/dn279244) is used to cycle through the [**Stretch**](https://msdn.microsoft.com/library/windows/apps/br242968) options."},{"content":"A <bpt id=\"p1\">**</bpt>switch<ept id=\"p1\">**</ept> statement checks the current state of the <bpt id=\"p2\">[</bpt><bpt id=\"p3\">**</bpt>Stretch<ept id=\"p3\">**</ept><ept id=\"p2\">](https://msdn.microsoft.com/library/windows/apps/br227422)</ept> property and sets it to the next value in the <bpt id=\"p4\">**</bpt>Stretch<ept id=\"p4\">**</ept> enumeration.","pos":[22414,22611],"source":" A **switch** statement checks the current state of the [**Stretch**](https://msdn.microsoft.com/library/windows/apps/br227422) property and sets it to the next value in the **Stretch** enumeration."},{"content":"This lets the user cycle through the different stretch states.","pos":[22612,22674]},{"content":"Enable low-latency playback","pos":[23365,23392]},{"content":"Set the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>RealTimePlayback<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br227414)</ept> property to <bpt id=\"p3\">**</bpt>true<ept id=\"p3\">**</ept> on a <bpt id=\"p4\">[</bpt><bpt id=\"p5\">**</bpt>MediaElement<ept id=\"p5\">**</ept><ept id=\"p4\">](https://msdn.microsoft.com/library/windows/apps/br242926)</ept> to enable the media element to reduce the initial latency for playback.","pos":[23394,23657],"source":"Set the [**RealTimePlayback**](https://msdn.microsoft.com/library/windows/apps/br227414) property to **true** on a [**MediaElement**](https://msdn.microsoft.com/library/windows/apps/br242926) to enable the media element to reduce the initial latency for playback."},{"content":"This is critical for two-way communications apps, and can be applicable to some gaming scenarios.","pos":[23658,23755]},{"content":"Be aware that this mode is more resource intensive and less power-efficient.","pos":[23756,23832]},{"pos":[23834,24036],"content":"This example creates a <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>MediaElement<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br242926)</ept> and sets <bpt id=\"p3\">[</bpt><bpt id=\"p4\">**</bpt>RealTimePlayback<ept id=\"p4\">**</ept><ept id=\"p3\">](https://msdn.microsoft.com/library/windows/apps/br227414)</ept> to <bpt id=\"p5\">**</bpt>true<ept id=\"p5\">**</ept>.","source":"This example creates a [**MediaElement**](https://msdn.microsoft.com/library/windows/apps/br242926) and sets [**RealTimePlayback**](https://msdn.microsoft.com/library/windows/apps/br227414) to **true**."},{"content":"Recommendations","pos":[24218,24233]},{"content":"The media player comes in a dark theme and a light theme, but opt for the dark theme in most situations.","pos":[24236,24340]},{"content":"The dark background provides better contrast, in particular for low-light conditions, and limits the control bar from interfering in the viewing experience.","pos":[24341,24497]},{"content":"Encourage a dedicated viewing experience by promoting full-screen mode over inline mode.","pos":[24499,24587]},{"content":"The full-screen viewing experience is optimal, and options are restricted in the inline mode.","pos":[24588,24681]},{"content":"If you have the screen real estate, go with the double-row layout.","pos":[24683,24749]},{"content":"It provides more space for controls than the compact single-row layout.","pos":[24750,24821]},{"content":"Add whatever custom options you need to the media player to provide the best experience for your app, but keep in mind the following:","pos":[24823,24956]},{"content":"Limit the customization of the default controls, which have been optimized for the media playback experience.","pos":[24962,25071]},{"content":"On phones and other mobile devices, the device chrome remains black, but on laptops and desktops, the device chrome inherits the user's theme color.","pos":[25076,25224]},{"content":"Try not to overload the control bar with too many options.","pos":[25229,25287]},{"content":"Don't shrink the media timeline below its default minimum size, which will severely limit its effectiveness.","pos":[25292,25400]},{"content":"\\[This article contains information that is specific to Universal Windows Platform (UWP) apps and Windows 10.","pos":[25402,25511]},{"content":"For Windows 8.1 guidance, please download the <bpt id=\"p1\">[</bpt>Windows 8.1 guidelines PDF<ept id=\"p1\">](https://go.microsoft.com/fwlink/p/?linkid=258743)</ept>.\\]","pos":[25512,25639],"source":" For Windows 8.1 guidance, please download the [Windows 8.1 guidelines PDF](https://go.microsoft.com/fwlink/p/?linkid=258743).\\]"},{"content":"Related articles","pos":[25644,25660]},{"content":"Command design basics for UWP apps","pos":[25665,25699]},{"content":"Content design basics for UWP apps","pos":[25762,25796]}],"content":"---\nDescription: The media player is used to view and listen to video, audio, and images.\ntitle: Media player\nms.assetid: 9AABB5DE-1D81-4791-AB47-7F058F64C491\ndev.assetid: AF2F2008-9B53-430C-BBC3-8888F631B0B0\nlabel: Media player\ntemplate: detail.hbs\n---\n# Media player\n\nThe media player is used to view and listen to video, audio, and images. Media playback can be inline (embedded in a page or with a group of other controls) or in a dedicated full-screen view. You can modify the player's button set, change the background of the control bar, and arrange layouts as you see fit. Just keep in mind that users expect a basic control set (play/pause, skip back, skip forward).\n\n![Media element with transport controls](images/controls/media-transport-controls.png)\n\n<span class=\"sidebar_heading\" style=\"font-weight: bold;\">Important APIs</span>\n\n-   [**MediaElement class**](https://msdn.microsoft.com/library/windows/apps/br242926)\n-   [**MediaTransportControls class**](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.mediatransportcontrols)\n\n## Is this the right control?\n\nUse a media player when you want to play audio or video in your app. To display a collection of images, use a [Flip view](flipview.md).\n\n## Examples\n\nA media element in the Windows 10 Get Started app.\n\n![A media elementin the Windows 10 Get Started app](images/control-examples/media-element-getstarted.png)\n\n## Create a media player\nAdd media to your app by creating a [**MediaElement**](https://msdn.microsoft.com/library/windows/apps/br242926) object in XAML and set the [**Source**](https://msdn.microsoft.com/library/windows/apps/br227419) to a Uniform Resource Identifier (URI) that points to an audio or video file.\n\nThis XAML creates a [**MediaElement**](https://msdn.microsoft.com/library/windows/apps/br242926) and sets its [**Source**](https://msdn.microsoft.com/library/windows/apps/br227419) property to the URI of a video file that's local to the app. The **MediaElement** begins playing when the page loads. To suppress media from starting right away, you can set the [**AutoPlay**](https://msdn.microsoft.com/library/windows/apps/br227360) property to **false**.\n\n```xaml\n<MediaElement x:Name=\"mediaSimple\" \n              Source=\"Videos/video1.mp4\" \n              Width=\"400\" AutoPlay=\"False\"/>\n```\n\nThis XAML creates a [**MediaElement**](https://msdn.microsoft.com/library/windows/apps/br242926) with the built in transport controls enabled and the [**AutoPlay**](https://msdn.microsoft.com/library/windows/apps/br227360) property set to **false.**\n\n\n```csharp\n<MediaElement x:Name=\"mediaPlayer\" \n              Source=\"Videos/video1.mp4\" \n              Width=\"400\" \n              AutoPlay=\"False\"\n              AreTransportControlsEnabled=\"True\"/>\n```\n\n### Media transport controls\nMediaElement has built in transport controls that handle play, stop, pause, volume, mute, seeking/progress, and audio track selection. To enable these controls, set [**AreTransportControlsEnabled**](https://msdn.microsoft.com/library/windows/apps/dn298977) to **true**. To disable them, set **AreTransportControlsEnabled** to **false**. The transport controls are represented by the [**MediaTransportControls**](https://msdn.microsoft.com/library/windows/apps/dn831962) class. You can use the transport controls as-is, or customize them in various ways. For more info, see the [**MediaTransportControls**](https://msdn.microsoft.com/library/windows/apps/dn831962) class reference and [Create custom transport controls](custom-transport-controls.md).\n\nThe transport controls let the user control most aspects of the [**MediaElement**](https://msdn.microsoft.com/library/windows/apps/br242926), but the **MediaElement** also provides numerous properties and methods that you can use to control audio and video playback. For more info, see the [Control MediaElement programmatically](#control_mediaelement_programmatically) section later in this article.\n\nThe transport controls support single- and double-row layouts. The first example here is a single-row layout, with the play/pause button located to the left of the media timeline. This layout is best reserved for compact screens. \n\n![Example of MTC controls on phone, single row](images/controls_mtc_singlerow_phone.png)\n\nThe double-row controls layout (below) is recommended for most usage scenarios, especially on larger screens. This layout provides more space for controls and makes the timeline easier for the user to operate.\n\n![Example of MTC controls on phone, double row](images/controls_mtc_doublerow_phone.png)\n\n**System media transport controls**\n\nYou can also integrate [**MediaElement**](https://msdn.microsoft.com/library/windows/apps/br242926) with the system media transport controls. The system transport controls are the controls that pop up when hardware media keys are pressed, such as the media buttons on keyboards. If the user presses the pause key on a keyboard and your app supports the [**SystemMediaTransportControls**](https://msdn.microsoft.com/library/windows/apps/dn278677), your app is notified and you can take the appropriate action. For more info, see [System Media Transport Controls](https://msdn.microsoft.com/library/windows/apps/mt228338).\n\n### Set the media source\nTo play files on the network or files embedded with the app, set the [**Source**](https://msdn.microsoft.com/library/windows/apps/br227419) property to the path of the file.\n\n**Tip**  To open files from the internet, you need to declare the **Internet (Client)** capability in your app's manifest (Package.appxmanifest). For more info about declaring capabilities, see [App capability declarations](https://msdn.microsoft.com/library/windows/apps/mt270968).\n\n \n\nThis code attempts to set the [**Source**](https://msdn.microsoft.com/library/windows/apps/br227419) property of the [**MediaElement**](https://msdn.microsoft.com/library/windows/apps/br242926) defined in XAML to the path of a file entered into a [**TextBox**](https://msdn.microsoft.com/library/windows/apps/br209683).\n\n```xaml\n<TextBox x:Name=\"txtFilePath\" Width=\"400\" \n         FontSize=\"20\"\n         KeyUp=\"TxtFilePath_KeyUp\"\n         Header=\"File path\"\n         PlaceholderText=\"Enter file path\"/>\n```\n\n```csharp\nprivate void TxtFilePath_KeyUp(object sender, KeyRoutedEventArgs e)\n{\n    if (e.Key == Windows.System.VirtualKey.Enter)\n    {\n        TextBox tbPath = sender as TextBox;\n\n        if (tbPath != null)\n        {\n            LoadMediaFromString(tbPath.Text);\n        }\n    }\n}\n\nprivate void LoadMediaFromString(string path)\n{\n    try\n    {\n        Uri pathUri = new Uri(path);\n        mediaPlayer.Source = pathUri;\n    }\n    catch (Exception ex)\n    {\n        if (ex is FormatException)\n        {\n            // handle exception. \n            // For example: Log error or notify user problem with file\n        }\n    }\n}\n```\n\nTo set the media source to a media file embedded in the app, create a [**Uri**](https://msdn.microsoft.com/library/windows/apps/br226017) with the path prefixed with **ms-appx:///** and then set the [**Source**](https://msdn.microsoft.com/library/windows/apps/br227419) to it. For example, for a file called **video1.mp4** that is in a **Videos** subfolder, the path would look like: **ms-appx:///Videos/video1.mp4**\n\nThis code sets the [**Source**](https://msdn.microsoft.com/library/windows/apps/br227419) property of the [**MediaElement**](https://msdn.microsoft.com/library/windows/apps/br242926) defined previously in XAML to **ms-appx:///Videos/video1.mp4**.\n\n```csharp\nprivate void LoadEmbeddedAppFile()\n{\n    try\n    {\n        Uri pathUri = new Uri(\"ms-appx:///Videos/video1.mp4\");\n        mediaPlayer.Source = pathUri;\n    }\n    catch (Exception ex)\n    {\n        if (ex is FormatException)\n        {\n            // handle exception. \n            // For example: Log error or notify user problem with file\n        }\n    }\n}\n```\n\n### Open local media files\nTo open files on the local system or from OneDrive, you can use the [**FileOpenPicker**](https://msdn.microsoft.com/library/windows/apps/br207847) to get the file and [**SetSource**](https://msdn.microsoft.com/library/windows/apps/br244338) to set the media source, or you can programmatically access the user media folders.\n\nIf your app needs access without user interaction to the **Music** or **Video** folders, for example, if you are enumerating all the music or video files in the user's collection and displaying them in your app, then you need to declare the **Music Library** and **Video Library** capabilities. For more info, see [Files and folders in the Music, Pictures, and Videos libraries](https://msdn.microsoft.com/library/windows/apps/mt188703).\n\nThe [**FileOpenPicker**](https://msdn.microsoft.com/library/windows/apps/br207847) does not require special capabilities to access files on the local file system, such as the user's **Music** or **Video** folders, since the user has complete control over which file is being accessed. From a security and privacy standpoint, it is best to minimize the number of capabilities your app uses.\n\n**To open local media using FileOpenPicker**\n\n1.  Call [**FileOpenPicker**](https://msdn.microsoft.com/library/windows/apps/br207847) to let the user pick a media file.\n\n    Use the [**FileOpenPicker**](https://msdn.microsoft.com/library/windows/apps/br207847) class to select a media file. Set the [**FileTypeFilter**](https://msdn.microsoft.com/library/windows/apps/br207850) to specify which file types the **FileOpenPicker** displays. Call [**PickSingleFileAsync**](https://msdn.microsoft.com/library/windows/apps/jj635275) to launch the file picker and get the file.\n\n2.  Call [**SetSource**](https://msdn.microsoft.com/library/windows/apps/br244338) to set the chosen media file as the [**MediaElement.Source**](https://msdn.microsoft.com/library/windows/apps/br227419).\n\n    To set the [**Source**](https://msdn.microsoft.com/library/windows/apps/br227419) of the [**MediaElement**](https://msdn.microsoft.com/library/windows/apps/br242926) to the [**StorageFile**](https://msdn.microsoft.com/library/windows/apps/br227171) returned from the [**FileOpenPicker**](https://msdn.microsoft.com/library/windows/apps/br207847), you need to open a stream. Call the [**OpenAsync**](https://msdn.microsoft.com/library/windows/apps/dn889851) method on the **StorageFile**, which returns a stream that you can pass into the [**MediaElement.SetSource**](https://msdn.microsoft.com/library/windows/apps/br244338) method. Then call [**Play**](https://msdn.microsoft.com/library/windows/apps/br227402) on the **MediaElement** to start the media.\n\nThis example shows how to use the [**FileOpenPicker**](https://msdn.microsoft.com/library/windows/apps/br207847) to choose a file and set the file as the [**Source**](https://msdn.microsoft.com/library/windows/apps/br227419) of a [**MediaElement**](https://msdn.microsoft.com/library/windows/apps/br242926).\n\n```xaml\n<MediaElement x:Name=\"mediaPlayer\"/>\n...\n<Button Content=\"Choose file\" Click=\"Button_Click\"/>\n```\n\n```csharp\nprivate async void Button_Click(object sender, RoutedEventArgs e)\n{\n    await SetLocalMedia();\n}\n\nasync private System.Threading.Tasks.Task SetLocalMedia()\n{\n    var openPicker = new Windows.Storage.Pickers.FileOpenPicker();\n\n    openPicker.FileTypeFilter.Add(\".wmv\");\n    openPicker.FileTypeFilter.Add(\".mp4\");\n    openPicker.FileTypeFilter.Add(\".wma\");\n    openPicker.FileTypeFilter.Add(\".mp3\");\n\n    var file = await openPicker.PickSingleFileAsync();\n    \n    // mediaPlayer is a MediaElement defined in XAML\n    if (file != null)\n    {\n        var stream = await file.OpenAsync(Windows.Storage.FileAccessMode.Read);\n        mediaPlayer.SetSource(stream, file.ContentType);\n\n        mediaPlayer.Play();\n    }\n}\n```\n\n### Set the poster source\nYou can use the [**PosterSource**](https://msdn.microsoft.com/library/windows/apps/br227409) property to provide your [**MediaElement**](https://msdn.microsoft.com/library/windows/apps/br242926) with a visual representation before the media is loaded. A **PosterSource** is an image, such as a screen shot or movie poster, that is displayed in place of the media. The **PosterSource** is displayed in the following situations:\n\n-   When a valid source is not set. For example, [**Source**](https://msdn.microsoft.com/library/windows/apps/br227419) is not set, **Source** was set to **Null**, or the source is invalid (as is the case when a [**MediaFailed**](https://msdn.microsoft.com/library/windows/apps/br227393) event occurs).\n-   While media is loading. For example, a valid source is set, but the [**MediaOpened**](https://msdn.microsoft.com/library/windows/apps/br227394) event has not occurred yet.\n-   When media is streaming to another device.\n-   When the media is audio only.\n\nHere's a [**MediaElement**](https://msdn.microsoft.com/library/windows/apps/br242926) with its [**Source**](https://msdn.microsoft.com/library/windows/apps/br227419) set to an album track, and it's [**PosterSource**](https://msdn.microsoft.com/library/windows/apps/br227409) set to an image of the album cover.\n\n```xaml\n<MediaElement Source=\"Media/Track1.mp4\" PosterSource=\"Media/AlbumCover.png\"/> \n```\n\n### Keep the device's screen active\nTypically, a device dims the display (and eventually turns it off) to save battery life when the user is away, but video apps need to keep the screen on so the user can see the video. To prevent the display from being deactivated when user action is no longer detected, such as when an app is playing full-screen video, you can call [**DisplayRequest.RequestActive**](https://msdn.microsoft.com/library/windows/apps/br241818). The [**DisplayRequest**](https://msdn.microsoft.com/library/windows/apps/br241816) class lets you tell Windows to keep the display turned on so the user can see the video.\n\nTo conserve power and battery life, you should call [**DisplayRequest.RequestRelease**](https://msdn.microsoft.com/library/windows/apps/br241819) to release the display request when it is no longer required. Windows automatically deactivates your app's active display requests when your app moves off screen, and re-activates them when your app comes back to the foreground.\n\nHere are some situations when you should release the display request:\n\n-   Video playback is paused, for example, by user action, buffering, or adjustment due to limited bandwidth.\n-   Playback stops. For example, the video is done playing or the presentation is over.\n-   A playback error has occurred. For example, network connectivity issues or a corrupted file.\n\n**To keep the screen active**\n\n1.  Create a global [**DisplayRequest**](https://msdn.microsoft.com/library/windows/apps/br241816) variable. Initialize it to null.\n```csharp\n// Create this variable at a global scope. Set it to null.\nprivate DisplayRequest appDisplayRequest = null;\n```\n\n2.  Call [**RequestActive**](https://msdn.microsoft.com/library/windows/apps/br241818) to notify Windows that the app requires the display to remain on.\n\n3.  Call [**RequestRelease**](https://msdn.microsoft.com/library/windows/apps/br241819) to release the display request whenever video playback is stopped, paused, or interrupted by a playback error. When your app no longer has any active display requests, Windows saves battery life by dimming the display (and eventually turning it off) when the device is not being used.\n\n    Here, you use the [**CurrentStateChanged**](https://msdn.microsoft.com/library/windows/apps/br227375) event to detect these situations. Then, use the [**IsAudioOnly**](https://msdn.microsoft.com/library/windows/apps/hh965334) property to determine whether an audio or video file is playing, and keep the screen active only if video is playing.\n    ```xaml\n<MediaElement Source=\"Media/video1.mp4\"\n              CurrentStateChanged=\"MediaElement_CurrentStateChanged\"/>\n    ```\n \n    ```csharp\nprivate void MediaElement_CurrentStateChanged(object sender, RoutedEventArgs e)\n{\n    MediaElement mediaElement = sender as MediaElement;\n    if (mediaElement != null && mediaElement.IsAudioOnly == false)\n    {\n        if (mediaElement.CurrentState == Windows.UI.Xaml.Media.MediaElementState.Playing)\n        {                \n            if (appDisplayRequest == null)\n            {\n                // This call creates an instance of the DisplayRequest object. \n                appDisplayRequest = new DisplayRequest();\n                appDisplayRequest.RequestActive();\n            }\n        }\n        else // CurrentState is Buffering, Closed, Opening, Paused, or Stopped. \n        {\n            if (appDisplayRequest != null)\n            {\n                // Deactivate the display request and set the var to null.\n                appDisplayRequest.RequestRelease();\n                appDisplayRequest = null;\n            }\n        }            \n    }\n} \n    ```\n\n### Control the media player programmatically\n[**MediaElement**](https://msdn.microsoft.com/library/windows/apps/br242926) provides numerous properties, methods, and events for controlling audio and video playback. For a full listing of properties, methods, and events, see the [**MediaElement**](https://msdn.microsoft.com/library/windows/apps/br242926) reference page.\n    \n\n### Select audio tracks in different languages\n\nUse the [**AudioStreamIndex**](https://msdn.microsoft.com/library/windows/apps/br227358) property and the [**GetAudioStreamLanguage**](https://msdn.microsoft.com/library/windows/apps/br227384) method to change the audio to a different language track on a video. Videos can also contain multiple audio tracks in the same language, such as director commentaries on films. This example specifically shows how to switch between different languages, but you can modify this code to switch between any audio tracks.\n\n**To select audio tracks in different languages**\n\n1.  Get the audio tracks.\n\n    To search for a track in a specific language, start by iterating through each audio track on the video. Use [**AudioStreamCount**](https://msdn.microsoft.com/library/windows/apps/br227356) as the max value for a **for** loop.\n\n2.  Get the language of the audio track.\n\n    Use the [**GetAudioStreamLanguage**](https://msdn.microsoft.com/library/windows/apps/br227384) method to get the language of the track. The language of the track is identified by a [language code](http://msdn.microsoft.com/library/ms533052(vs.85).aspx), such as **\"en\"** for English or **\"ja\"** for Japanese.\n\n3.  Set the active audio track.\n\n    When you find the track with the desired language, set the [**AudioStreamIndex**](https://msdn.microsoft.com/library/windows/apps/br227358) to the index of the track. Setting **AudioStreamIndex** to **null** selects the default audio track, which is defined by the content.\n\nHere's some code that attempts to set the audio track to the specified language. It iterates through the audio tracks on a [**MediaElement**](https://msdn.microsoft.com/library/windows/apps/br242926) object and uses [**GetAudioStreamLanguage**](https://msdn.microsoft.com/library/windows/apps/br227384) to get the language of each track. If the desired language track exists, the [**AudioStreamIndex**](https://msdn.microsoft.com/library/windows/apps/br227358) is set to the index of that track.\n\n```csharp\n/// <summary>\n/// Attemps to set the audio track of a video to a specific language\n/// </summary>\n/// <param name=\"lcid\">The id of the language. For example, \"en\" or \"ja\"</param>\n/// <returns>true if the track was set; otherwise, false.</returns>\nprivate bool SetAudioLanguage(string lcid, MediaElement media)\n{\n    bool wasLanguageSet = false;\n\n    for (int index = 0; index < media.AudioStreamCount; index++)\n    {\n        if (media.GetAudioStreamLanguage(index) == lcid)\n        {\n            media.AudioStreamIndex = index;\n            wasLanguageSet = true;\n        }\n    }\n\n    return wasLanguageSet;\n}\n```\n\n### Enable full window video rendering\n\nSet the [**IsFullWindow**](https://msdn.microsoft.com/library/windows/apps/dn298980) property to enable and disable full window rendering. When you programmatically set full window rendering in your app, you should always use **IsFullWindow** instead of doing it manually. **IsFullWindow** insures that system level optimizations are performed that improve performance and battery life. If full window rendering is not set up correctly, these optimizations may not be enabled.\n\nHere is some code that creates an [**AppBarButton**](https://msdn.microsoft.com/library/windows/apps/dn279244) that toggles full window rendering.\n\n```xaml\n<AppBarButton Icon=\"FullScreen\" \n              Label=\"Full Window\"\n              Click=\"FullWindow_Click\"/>>\n```\n\n```csharp\nprivate void FullWindow_Click(object sender, object e)\n{\n    mediaPlayer.IsFullWindow = !media.IsFullWindow;\n}\n```\n\n### Resize and stretch video\n\nUse the [**Stretch**](https://msdn.microsoft.com/library/windows/apps/br227422) property to change how the video content fills the container it's in. This resizes and stretches the video depending on the [**Stretch**](https://msdn.microsoft.com/library/windows/apps/br242968) value. The **Stretch** states are similar to picture size settings on many TV sets. You can hook this up to a button and allow the user to choose which setting they prefer.\n\n-   [**None**](https://msdn.microsoft.com/library/windows/apps/br242968) displays the native resolution of the content in its original size.\n-   [**Uniform**](https://msdn.microsoft.com/library/windows/apps/br242968) fills up as much of the space as possible while preserving the aspect ratio and the image content. This can result in horizontal or vertical black bars at the edges of the video. This is similar to wide-screen modes.\n-   [**UniformToFill**](https://msdn.microsoft.com/library/windows/apps/br242968) fills up the entire space while preserving the aspect ratio. This can result in some of the image being cropped. This is similar to full-screen modes.\n-   [**Fill**](https://msdn.microsoft.com/library/windows/apps/br242968) fills up the entire space, but does not preserve the aspect ratio. None of image is cropped, but stretching may occur. This is similar to stretch modes.\n\n![Stretch enumeration values](images/Image_Stretch.jpg)\nHere, an [**AppBarButton**](https://msdn.microsoft.com/library/windows/apps/dn279244) is used to cycle through the [**Stretch**](https://msdn.microsoft.com/library/windows/apps/br242968) options. A **switch** statement checks the current state of the [**Stretch**](https://msdn.microsoft.com/library/windows/apps/br227422) property and sets it to the next value in the **Stretch** enumeration. This lets the user cycle through the different stretch states.\n\n```xaml\n<AppBarButton Icon=\"Switch\" \n              Label=\"Resize Video\"\n              Click=\"PictureSize_Click\" />\n```\n\n```csharp\nprivate void PictureSize_Click(object sender, RoutedEventArgs e)\n{\n    switch (mediaPlayer.Stretch)\n    {\n        case Stretch.Fill:\n            mediaPlayer.Stretch = Stretch.None;\n            break;\n        case Stretch.None:\n            mediaPlayer.Stretch = Stretch.Uniform;\n            break;\n        case Stretch.Uniform:\n            mediaPlayer.Stretch = Stretch.UniformToFill;\n            break;\n        case Stretch.UniformToFill:\n            mediaPlayer.Stretch = Stretch.Fill;\n            break;\n        default:\n            break;\n    }\n}\n```\n\n### Enable low-latency playback\n\nSet the [**RealTimePlayback**](https://msdn.microsoft.com/library/windows/apps/br227414) property to **true** on a [**MediaElement**](https://msdn.microsoft.com/library/windows/apps/br242926) to enable the media element to reduce the initial latency for playback. This is critical for two-way communications apps, and can be applicable to some gaming scenarios. Be aware that this mode is more resource intensive and less power-efficient.\n\nThis example creates a [**MediaElement**](https://msdn.microsoft.com/library/windows/apps/br242926) and sets [**RealTimePlayback**](https://msdn.microsoft.com/library/windows/apps/br227414) to **true**.\n\n```xaml\n<MediaElement x:Name=\"mediaPlayer\" RealTimePlayback=\"True\"/>\n```\n\n```csharp\nMediaElement mediaPlayer = new MediaElement();\nmediaPlayer.RealTimePlayback = true;\n```\n    \n## Recommendations \n\nThe media player comes in a dark theme and a light theme, but opt for the dark theme in most situations. The dark background provides better contrast, in particular for low-light conditions, and limits the control bar from interfering in the viewing experience.\n\nEncourage a dedicated viewing experience by promoting full-screen mode over inline mode. The full-screen viewing experience is optimal, and options are restricted in the inline mode.\n\nIf you have the screen real estate, go with the double-row layout. It provides more space for controls than the compact single-row layout.\n\nAdd whatever custom options you need to the media player to provide the best experience for your app, but keep in mind the following:\n\n-   Limit the customization of the default controls, which have been optimized for the media playback experience.\n-   On phones and other mobile devices, the device chrome remains black, but on laptops and desktops, the device chrome inherits the user's theme color.\n-   Try not to overload the control bar with too many options.\n-   Don't shrink the media timeline below its default minimum size, which will severely limit its effectiveness.\n\n\\[This article contains information that is specific to Universal Windows Platform (UWP) apps and Windows 10. For Windows 8.1 guidance, please download the [Windows 8.1 guidelines PDF](https://go.microsoft.com/fwlink/p/?linkid=258743).\\]\n\n## Related articles\n\n- [Command design basics for UWP apps](https://msdn.microsoft.com/library/windows/apps/dn958433)\n- [Content design basics for UWP apps](https://msdn.microsoft.com/library/windows/apps/dn958434)\n"}