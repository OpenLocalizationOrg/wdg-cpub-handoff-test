<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="ja-jp" version="2.0" xml:space="preserve" xmlns="urn:oasis:names:tc:xliff:document:2.0">
	<file id="1">
		<mda:metadata>
			<mda:metaGroup>
				<mda:meta type="tool-id">mdxliff</mda:meta>
				<mda:meta type="tool-name">mdxliff</mda:meta>
				<mda:meta type="tool-version">1.0-00ddeee</mda:meta>
				<mda:meta type="tool-company">Microsoft</mda:meta>
			</mda:metaGroup>
		<mda:metaGroup><mda:meta type="olfilehash">81e61ebc1d9b7ad6b7954562f6183a6e84166058</mda:meta><mda:meta type="olfilepath">wdg-cpub-test\ndolci2\security\intro-to-secure-windows-app-development.md</mda:meta><mda:meta type="oltranslationpriority"></mda:meta><mda:meta type="oltranslationtype">Human Translation</mda:meta><mda:meta type="olskeletonhash">4b8831ea59edfd9027e020ec4f4b1da815731f0d</mda:meta><mda:meta type="olxliffhash">ba22719cf09476365748e2d22e5bca21aa23fa55</mda:meta></mda:metaGroup></mda:metadata>
		<group id="content">
			<unit id="101" translate="yes">
				<segment state="initial">
					<source>Intro to secure Windows app development</source>
					<target>Intro to secure Windows app development</target>
				</segment>
			</unit>
			<unit id="102" translate="yes">
				<segment state="initial">
					<source>This introductory article helps app architects and developers better understand the various Windows 10 platform capabilities that accelerate creating secure Universal Windows Platform (UWP) apps.</source>
					<target>This introductory article helps app architects and developers better understand the various Windows 10 platform capabilities that accelerate creating secure Universal Windows Platform (UWP) apps.</target>
				</segment>
			</unit>
			<unit id="103" translate="yes">
				<segment state="initial">
					<source>Intro to secure Windows app development</source>
					<target>Intro to secure Windows app development</target>
				</segment>
			</unit>
			<unit id="104" translate="yes">
				<segment state="initial">
					<source>\[ Updated for UWP apps on Windows 10.</source>
					<target>\[ Updated for UWP apps on Windows 10.</target>
				</segment>
			</unit>
			<unit id="105" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](http://go.microsoft.com/fwlink/p/?linkid=619132)</data>
				</originalData>
				<segment state="initial">
					<source>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</source>
					<target>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</target>
				</segment>
			</unit>
			<unit id="106" translate="yes">
				<segment state="initial">
					<source>This introductory article helps app architects and developers better understand the various Windows 10 platform capabilities that accelerate creating secure Universal Windows Platform (UWP) apps.</source>
					<target>This introductory article helps app architects and developers better understand the various Windows 10 platform capabilities that accelerate creating secure Universal Windows Platform (UWP) apps.</target>
				</segment>
			</unit>
			<unit id="107" translate="yes">
				<segment state="initial">
					<source>It details how to use the Windows security features available at each of the following stages: authentication, data-in-flight, and data-at-rest.</source>
					<target>It details how to use the Windows security features available at each of the following stages: authentication, data-in-flight, and data-at-rest.</target>
				</segment>
			</unit>
			<unit id="108" translate="yes">
				<segment state="initial">
					<source>You can find more in-depth information on each topic by reviewing the additional resources included in each chapter.</source>
					<target>You can find more in-depth information on each topic by reviewing the additional resources included in each chapter.</target>
				</segment>
			</unit>
			<unit id="109" translate="yes">
				<segment state="initial">
					<source>1 Introduction</source>
					<target>1 Introduction</target>
				</segment>
			</unit>
			<unit id="110" translate="yes">
				<segment state="initial">
					<source>Developing a secure app can be a challenge.</source>
					<target>Developing a secure app can be a challenge.</target>
				</segment>
			</unit>
			<unit id="111" translate="yes">
				<segment state="initial">
					<source>In today’s fast-paced world of mobile, social, cloud, and complex enterprise apps, customers expect apps to become available and updated faster than ever.</source>
					<target>In today’s fast-paced world of mobile, social, cloud, and complex enterprise apps, customers expect apps to become available and updated faster than ever.</target>
				</segment>
			</unit>
			<unit id="112" translate="yes">
				<segment state="initial">
					<source>They also use many types of devices, further adding to the complexity of creating app experiences.</source>
					<target>They also use many types of devices, further adding to the complexity of creating app experiences.</target>
				</segment>
			</unit>
			<unit id="113" translate="yes">
				<segment state="initial">
					<source>If you build for the Windows 10 Universal Windows Platform (UWP), that could include the traditional list of desktops, laptops, tablets, and mobile devices; in addition to a growing list of new devices spanning the Internet of Things, Xbox One, Microsoft Surface Hub, and HoloLens.</source>
					<target>If you build for the Windows 10 Universal Windows Platform (UWP), that could include the traditional list of desktops, laptops, tablets, and mobile devices; in addition to a growing list of new devices spanning the Internet of Things, Xbox One, Microsoft Surface Hub, and HoloLens.</target>
				</segment>
			</unit>
			<unit id="114" translate="yes">
				<segment state="initial">
					<source>As the developer, you must ensure your apps communicate and store data securely, across all the platforms or devices involved.</source>
					<target>As the developer, you must ensure your apps communicate and store data securely, across all the platforms or devices involved.</target>
				</segment>
			</unit>
			<unit id="115" translate="yes">
				<segment state="initial">
					<source>Here are some of the benefits of utilizing Windows 10 security features.</source>
					<target>Here are some of the benefits of utilizing Windows 10 security features.</target>
				</segment>
			</unit>
			<unit id="116" translate="yes">
				<segment state="initial">
					<source>You will have standardized security across all devices that support Windows 10, by using consistent APIs for security components and technologies.</source>
					<target>You will have standardized security across all devices that support Windows 10, by using consistent APIs for security components and technologies.</target>
				</segment>
			</unit>
			<unit id="117" translate="yes">
				<segment state="initial">
					<source>You write, test, and maintain less code than you would if you implemented custom code to cover these security scenarios.</source>
					<target>You write, test, and maintain less code than you would if you implemented custom code to cover these security scenarios.</target>
				</segment>
			</unit>
			<unit id="118" translate="yes">
				<segment state="initial">
					<source>Your apps become more stable and secure because you use the operating system to control how the app accesses its resources and local or remote system resources.</source>
					<target>Your apps become more stable and secure because you use the operating system to control how the app accesses its resources and local or remote system resources.</target>
				</segment>
			</unit>
			<unit id="119" translate="yes">
				<segment state="initial">
					<source>During authentication, the identity of a user requesting access to a particular service is validated.</source>
					<target>During authentication, the identity of a user requesting access to a particular service is validated.</target>
				</segment>
			</unit>
			<unit id="120" translate="yes">
				<segment state="initial">
					<source>Microsoft Passport and Windows Hello are the components in Windows 10 that help create a more secure authentication mechanism in Windows apps.</source>
					<target>Microsoft Passport and Windows Hello are the components in Windows 10 that help create a more secure authentication mechanism in Windows apps.</target>
				</segment>
			</unit>
			<unit id="121" translate="yes">
				<segment state="initial">
					<source>With them, you can use a Personal Identification Number (PIN), or biometrics such as the user’s fingerprints, face, or iris to implement multi-factor authentication for your apps.</source>
					<target>With them, you can use a Personal Identification Number (PIN), or biometrics such as the user’s fingerprints, face, or iris to implement multi-factor authentication for your apps.</target>
				</segment>
			</unit>
			<unit id="122" translate="yes">
				<segment state="initial">
					<source>Data-in-flight refers to the connection and the messages transferred across it.</source>
					<target>Data-in-flight refers to the connection and the messages transferred across it.</target>
				</segment>
			</unit>
			<unit id="123" translate="yes">
				<segment state="initial">
					<source>An example of this is retrieving data from a remote server using web services.</source>
					<target>An example of this is retrieving data from a remote server using web services.</target>
				</segment>
			</unit>
			<unit id="124" translate="yes">
				<segment state="initial">
					<source>The use of Secure Sockets Layer (SSL) and Secure Hypertext Transfer Protocol (HTTPS) ensures the security of the connection.</source>
					<target>The use of Secure Sockets Layer (SSL) and Secure Hypertext Transfer Protocol (HTTPS) ensures the security of the connection.</target>
				</segment>
			</unit>
			<unit id="125" translate="yes">
				<segment state="initial">
					<source>Preventing intermediary parties from accessing these messages, or unauthorized apps from communicating with the web services, is key to securing data in flight.</source>
					<target>Preventing intermediary parties from accessing these messages, or unauthorized apps from communicating with the web services, is key to securing data in flight.</target>
				</segment>
			</unit>
			<unit id="126" translate="yes">
				<segment state="initial">
					<source>Lastly, data-at-rest relates to data residing in memory or on storage media.</source>
					<target>Lastly, data-at-rest relates to data residing in memory or on storage media.</target>
				</segment>
			</unit>
			<unit id="127" translate="yes">
				<segment state="initial">
					<source>Windows 10 has an app model that prevents unauthorized data access between apps, and offers encryption APIs to further secure data on the device.</source>
					<target>Windows 10 has an app model that prevents unauthorized data access between apps, and offers encryption APIs to further secure data on the device.</target>
				</segment>
			</unit>
			<unit id="128" translate="yes">
				<segment state="initial">
					<source>A feature called Credential Locker can be used to securely store user credentials on the device, with the operating system preventing other apps from accessing them.</source>
					<target>A feature called Credential Locker can be used to securely store user credentials on the device, with the operating system preventing other apps from accessing them.</target>
				</segment>
			</unit>
			<unit id="129" translate="yes">
				<segment state="initial">
					<source>2 Authentication Factors</source>
					<target>2 Authentication Factors</target>
				</segment>
			</unit>
			<unit id="130" translate="yes">
				<segment state="initial">
					<source>To protect data, the person requesting access to it must be identified and authorized to access the data resources they request.</source>
					<target>To protect data, the person requesting access to it must be identified and authorized to access the data resources they request.</target>
				</segment>
			</unit>
			<unit id="131" translate="yes">
				<segment state="initial">
					<source>The process of identifying a user is called authentication, and determining access privileges to a resource is called authorization.</source>
					<target>The process of identifying a user is called authentication, and determining access privileges to a resource is called authorization.</target>
				</segment>
			</unit>
			<unit id="132" translate="yes">
				<segment state="initial">
					<source>These are closely related operations, and to the user they might be indistinguishable.</source>
					<target>These are closely related operations, and to the user they might be indistinguishable.</target>
				</segment>
			</unit>
			<unit id="133" translate="yes">
				<segment state="initial">
					<source>They can be relatively simple or complex operations, depending on many factors: for example, whether the data resides on one server or is distributed across many systems.</source>
					<target>They can be relatively simple or complex operations, depending on many factors: for example, whether the data resides on one server or is distributed across many systems.</target>
				</segment>
			</unit>
			<unit id="134" translate="yes">
				<segment state="initial">
					<source>The server providing the authentication and authorization services is referred to as the identity provider.</source>
					<target>The server providing the authentication and authorization services is referred to as the identity provider.</target>
				</segment>
			</unit>
			<unit id="135" translate="yes">
				<segment state="initial">
					<source>To authenticate themselves with a particular service and/or app, the user employs credentials made up of something they know, something they have, and/or something they are.</source>
					<target>To authenticate themselves with a particular service and/or app, the user employs credentials made up of something they know, something they have, and/or something they are.</target>
				</segment>
			</unit>
			<unit id="136" translate="yes">
				<segment state="initial">
					<source>Each of these are called authentication factors.</source>
					<target>Each of these are called authentication factors.</target>
				</segment>
			</unit>
			<unit id="137" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Something the user knows</pc> is usually a password, but it can also be a personal identification number (PIN) or a “secret” question-and-answer pair.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Something the user knows</pc> is usually a password, but it can also be a personal identification number (PIN) or a “secret” question-and-answer pair.</target>
				</segment>
			</unit>
			<unit id="138" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Something the user has</pc> is most often a hardware memory device such as a USB stick containing the authentication data unique to the user.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Something the user has</pc> is most often a hardware memory device such as a USB stick containing the authentication data unique to the user.</target>
				</segment>
			</unit>
			<unit id="139" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Something the user is</pc> often encompasses their fingerprints, but there are increasingly popular factors like the user’s speech, facial, ocular (eye) characteristics, or patterns of behavior.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Something the user is</pc> often encompasses their fingerprints, but there are increasingly popular factors like the user’s speech, facial, ocular (eye) characteristics, or patterns of behavior.</target>
				</segment>
			</unit>
			<unit id="140" translate="yes">
				<segment state="initial">
					<source>When stored as data, these measurements are called biometrics.</source>
					<target>When stored as data, these measurements are called biometrics.</target>
				</segment>
			</unit>
			<unit id="141" translate="yes">
				<segment state="initial">
					<source>A password created by the user is an authentication factor in itself, but it often isn’t sufficient; anyone who knows the password can impersonate the user who owns it.</source>
					<target>A password created by the user is an authentication factor in itself, but it often isn’t sufficient; anyone who knows the password can impersonate the user who owns it.</target>
				</segment>
			</unit>
			<unit id="142" translate="yes">
				<segment state="initial">
					<source>A smart card can provide a higher level of security, but it might be stolen, lost, or misplaced.</source>
					<target>A smart card can provide a higher level of security, but it might be stolen, lost, or misplaced.</target>
				</segment>
			</unit>
			<unit id="143" translate="yes">
				<segment state="initial">
					<source>A system that can authenticate a user by their fingerprint or by an ocular scan might provide the highest and most convenient level of security, but it requires expensive and specialized hardware (for example, an Intel RealSense camera for facial recognition) that might not be available to all users.</source>
					<target>A system that can authenticate a user by their fingerprint or by an ocular scan might provide the highest and most convenient level of security, but it requires expensive and specialized hardware (for example, an Intel RealSense camera for facial recognition) that might not be available to all users.</target>
				</segment>
			</unit>
			<unit id="144" translate="yes">
				<segment state="initial">
					<source>Designing the method of authentication used by a system is a complex and important aspect of data security.</source>
					<target>Designing the method of authentication used by a system is a complex and important aspect of data security.</target>
				</segment>
			</unit>
			<unit id="145" translate="yes">
				<segment state="initial">
					<source>In general, the greater number of factors you use in authentication, the more secure the system is.</source>
					<target>In general, the greater number of factors you use in authentication, the more secure the system is.</target>
				</segment>
			</unit>
			<unit id="146" translate="yes">
				<segment state="initial">
					<source>At the same time, authentication must be usable.</source>
					<target>At the same time, authentication must be usable.</target>
				</segment>
			</unit>
			<unit id="147" translate="yes">
				<segment state="initial">
					<source>A user will usually log in many times a day, so the process must be fast.</source>
					<target>A user will usually log in many times a day, so the process must be fast.</target>
				</segment>
			</unit>
			<unit id="148" translate="yes">
				<segment state="initial">
					<source>Your choice of authentication type is a trade-off between security and ease of use; single-factor authentication is the least secure and easiest to use, and multi-factor authentication becomes more secure, but more complex as more factors are added.</source>
					<target>Your choice of authentication type is a trade-off between security and ease of use; single-factor authentication is the least secure and easiest to use, and multi-factor authentication becomes more secure, but more complex as more factors are added.</target>
				</segment>
			</unit>
			<unit id="149" translate="yes">
				<segment state="initial">
					<source>2.1 Single-factor authentication</source>
					<target>2.1 Single-factor authentication</target>
				</segment>
			</unit>
			<unit id="150" translate="yes">
				<segment state="initial">
					<source>This form of authentication is based on a single user credential.</source>
					<target>This form of authentication is based on a single user credential.</target>
				</segment>
			</unit>
			<unit id="151" translate="yes">
				<segment state="initial">
					<source>This is usually a password, but it could also be a personal identification number (PIN).</source>
					<target>This is usually a password, but it could also be a personal identification number (PIN).</target>
				</segment>
			</unit>
			<unit id="152" translate="yes">
				<segment state="initial">
					<source>Here’s the process of single-factor authentication.</source>
					<target>Here’s the process of single-factor authentication.</target>
				</segment>
			</unit>
			<unit id="153" translate="yes">
				<segment state="initial">
					<source>The user provides their username and password to the identity provider.</source>
					<target>The user provides their username and password to the identity provider.</target>
				</segment>
			</unit>
			<unit id="154" translate="yes">
				<segment state="initial">
					<source>The identity provider is the server process that verifies the identity of the user.</source>
					<target>The identity provider is the server process that verifies the identity of the user.</target>
				</segment>
			</unit>
			<unit id="155" translate="yes">
				<segment state="initial">
					<source>The identity provider checks whether the username and password are the same as those stored in the system.</source>
					<target>The identity provider checks whether the username and password are the same as those stored in the system.</target>
				</segment>
			</unit>
			<unit id="156" translate="yes">
				<segment state="initial">
					<source>In most cases, the password will be encrypted, providing additional security so that others cannot read it.</source>
					<target>In most cases, the password will be encrypted, providing additional security so that others cannot read it.</target>
				</segment>
			</unit>
			<unit id="157" translate="yes">
				<segment state="initial">
					<source>The identity provider returns an authentication status that indicates whether the authentication was successful.</source>
					<target>The identity provider returns an authentication status that indicates whether the authentication was successful.</target>
				</segment>
			</unit>
			<unit id="158" translate="yes">
				<segment state="initial">
					<source>If successful, data exchange begins.</source>
					<target>If successful, data exchange begins.</target>
				</segment>
			</unit>
			<unit id="159" translate="yes">
				<segment state="initial">
					<source>If unsuccessful, the user must be re-authenticated.</source>
					<target>If unsuccessful, the user must be re-authenticated.</target>
				</segment>
			</unit>
			<unit id="160" translate="yes">
				<segment state="initial">
					<source>single-factor authentication</source>
					<target>single-factor authentication</target>
				</segment>
			</unit>
			<unit id="161" translate="yes">
				<segment state="initial">
					<source>Today, this method of authentication is the most commonly used one across services.</source>
					<target>Today, this method of authentication is the most commonly used one across services.</target>
				</segment>
			</unit>
			<unit id="162" translate="yes">
				<segment state="initial">
					<source>It is also the least secure form of authentication when used as the only means of authentication.</source>
					<target>It is also the least secure form of authentication when used as the only means of authentication.</target>
				</segment>
			</unit>
			<unit id="163" translate="yes">
				<segment state="initial">
					<source>Password complexity requirements, "secret questions," and regular password changes can make using passwords more secure, but they put more burden on users and they’re not an effective deterrent against hackers.</source>
					<target>Password complexity requirements, "secret questions," and regular password changes can make using passwords more secure, but they put more burden on users and they’re not an effective deterrent against hackers.</target>
				</segment>
			</unit>
			<unit id="164" translate="yes">
				<segment state="initial">
					<source>The challenge with passwords is that it is easier to guess them successfully than systems that have more than one factor.</source>
					<target>The challenge with passwords is that it is easier to guess them successfully than systems that have more than one factor.</target>
				</segment>
			</unit>
			<unit id="165" translate="yes">
				<segment state="initial">
					<source>If they steal a database with user accounts and hashed password from a little web shop, they can use the passwords used on other web sites.</source>
					<target>If they steal a database with user accounts and hashed password from a little web shop, they can use the passwords used on other web sites.</target>
				</segment>
			</unit>
			<unit id="166" translate="yes">
				<segment state="initial">
					<source>Users tend to reuse accounts all the time, because complex passwords are hard to remember.</source>
					<target>Users tend to reuse accounts all the time, because complex passwords are hard to remember.</target>
				</segment>
			</unit>
			<unit id="167" translate="yes">
				<segment state="initial">
					<source>For an IT department, managing passwords also brings with it the complexity of having to offer reset mechanisms, requiring frequent updates to passwords, and storing them in a safe manner.</source>
					<target>For an IT department, managing passwords also brings with it the complexity of having to offer reset mechanisms, requiring frequent updates to passwords, and storing them in a safe manner.</target>
				</segment>
			</unit>
			<unit id="168" translate="yes">
				<segment state="initial">
					<source>For all of its disadvantages, single-factor authentication gives the user control of the credential.</source>
					<target>For all of its disadvantages, single-factor authentication gives the user control of the credential.</target>
				</segment>
			</unit>
			<unit id="169" translate="yes">
				<segment state="initial">
					<source>They create it and modify it, and only a keyboard is needed for the authentication process.</source>
					<target>They create it and modify it, and only a keyboard is needed for the authentication process.</target>
				</segment>
			</unit>
			<unit id="170" translate="yes">
				<segment state="initial">
					<source>This is the main aspect that distinguishes single-factor from multi-factor authentication.</source>
					<target>This is the main aspect that distinguishes single-factor from multi-factor authentication.</target>
				</segment>
			</unit>
			<unit id="171" translate="yes">
				<segment state="initial">
					<source>2.1.1 Web authentication broker</source>
					<target>2.1.1 Web authentication broker</target>
				</segment>
			</unit>
			<unit id="172" translate="yes">
				<segment state="initial">
					<source>As previously discussed, one of the challenges with password authentication for an IT department is the added overhead of managing the base of usernames/passwords, reset mechanisms, etc. An increasingly popular option is to rely on third-party identity providers that offer authentication through OAuth, an open standard for authentication.</source>
					<target>As previously discussed, one of the challenges with password authentication for an IT department is the added overhead of managing the base of usernames/passwords, reset mechanisms, etc. An increasingly popular option is to rely on third-party identity providers that offer authentication through OAuth, an open standard for authentication.</target>
				</segment>
			</unit>
			<unit id="173" translate="yes">
				<segment state="initial">
					<source>Using OAuth, IT departments can effectively "outsource" the complexity of maintaining a database with usernames and passwords, reset password functionality, etc. to a third party identity provider like Facebook, Twitter or Microsoft.</source>
					<target>Using OAuth, IT departments can effectively "outsource" the complexity of maintaining a database with usernames and passwords, reset password functionality, etc. to a third party identity provider like Facebook, Twitter or Microsoft.</target>
				</segment>
			</unit>
			<unit id="174" translate="yes">
				<segment state="initial">
					<source>Users have complete control over their identity on these platforms, but apps can request a token from the provider, after the user is authenticated and with their consent, which can be used to authorize authenticated users.</source>
					<target>Users have complete control over their identity on these platforms, but apps can request a token from the provider, after the user is authenticated and with their consent, which can be used to authorize authenticated users.</target>
				</segment>
			</unit>
			<unit id="175" translate="yes">
				<segment state="initial">
					<source>The web authentication broker in Windows 10 provides a set of APIs and infrastructure for apps to use authentication and authorization protocols like OAuth and OpenID.</source>
					<target>The web authentication broker in Windows 10 provides a set of APIs and infrastructure for apps to use authentication and authorization protocols like OAuth and OpenID.</target>
				</segment>
			</unit>
			<unit id="176" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br227025)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/br227038)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>Apps can initiate authentication operations through the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">WebAuthenticationBroker</pc></pc> API, resulting in the return of a <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">WebAuthenticationResult</pc></pc>.</source>
					<target>Apps can initiate authentication operations through the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">WebAuthenticationBroker</pc></pc> API, resulting in the return of a <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">WebAuthenticationResult</pc></pc>.</target>
				</segment>
			</unit>
			<unit id="177" translate="yes">
				<segment state="initial">
					<source>An overview of the communication flow is illustrated in the following figure.</source>
					<target>An overview of the communication flow is illustrated in the following figure.</target>
				</segment>
			</unit>
			<unit id="178" translate="yes">
				<segment state="initial">
					<source>wab workflow</source>
					<target>wab workflow</target>
				</segment>
			</unit>
			<unit id="179" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br227702)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>The app acts as the broker, initiating the authentication with the identity provider through a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">WebView</pc></pc> in the app.</source>
					<target>The app acts as the broker, initiating the authentication with the identity provider through a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">WebView</pc></pc> in the app.</target>
				</segment>
			</unit>
			<unit id="180" translate="yes">
				<segment state="initial">
					<source>When the identity provider has authenticated the user, it returns a token to the app that can be used to request information about the user from the identity provider.</source>
					<target>When the identity provider has authenticated the user, it returns a token to the app that can be used to request information about the user from the identity provider.</target>
				</segment>
			</unit>
			<unit id="181" translate="yes">
				<segment state="initial">
					<source>As a security measure, the app must be registered with the identity provider before it can broker the authentication processes with the identity provider.</source>
					<target>As a security measure, the app must be registered with the identity provider before it can broker the authentication processes with the identity provider.</target>
				</segment>
			</unit>
			<unit id="182" translate="yes">
				<segment state="initial">
					<source>This registration steps differ for each provider.</source>
					<target>This registration steps differ for each provider.</target>
				</segment>
			</unit>
			<unit id="183" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br227025)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Here’s the general workflow for calling the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">WebAuthenticationBroker</pc></pc> API to communicate with the provider.</source>
					<target>Here’s the general workflow for calling the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">WebAuthenticationBroker</pc></pc> API to communicate with the provider.</target>
				</segment>
			</unit>
			<unit id="184" translate="yes">
				<segment state="initial">
					<source>Construct the request strings to be sent to the identity provider.</source>
					<target>Construct the request strings to be sent to the identity provider.</target>
				</segment>
			</unit>
			<unit id="185" translate="yes">
				<segment state="initial">
					<source>The number of strings, and the information in each string, is different for each web service but it usually includes two URI strings each containing a URL: one to which the authentication request is sent, and one to which the user is redirected after authorization is complete.</source>
					<target>The number of strings, and the information in each string, is different for each web service but it usually includes two URI strings each containing a URL: one to which the authentication request is sent, and one to which the user is redirected after authorization is complete.</target>
				</segment>
			</unit>
			<unit id="186" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br212066)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Call <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">WebAuthenticationBroker.AuthenticateAsync</pc></pc>, passing in the request strings, and wait for the response from the identity provider.</source>
					<target>Call <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">WebAuthenticationBroker.AuthenticateAsync</pc></pc>, passing in the request strings, and wait for the response from the identity provider.</target>
				</segment>
			</unit>
			<unit id="187" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br227041)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Call <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">WebAuthenticationResult.ResponseStatus</pc></pc> to get the status when the response is received.</source>
					<target>Call <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">WebAuthenticationResult.ResponseStatus</pc></pc> to get the status when the response is received.</target>
				</segment>
			</unit>
			<unit id="188" translate="yes">
				<segment state="initial">
					<source>If the communication is successful, process the response string returned by the identity provider.</source>
					<target>If the communication is successful, process the response string returned by the identity provider.</target>
				</segment>
			</unit>
			<unit id="189" translate="yes">
				<segment state="initial">
					<source>If unsuccessful, process the error.</source>
					<target>If unsuccessful, process the error.</target>
				</segment>
			</unit>
			<unit id="190" translate="yes">
				<segment state="initial">
					<source>If the communication is successful, process the response string returned by the identity provider.</source>
					<target>If the communication is successful, process the response string returned by the identity provider.</target>
				</segment>
			</unit>
			<unit id="191" translate="yes">
				<segment state="initial">
					<source>If unsuccessful, process the error.</source>
					<target>If unsuccessful, process the error.</target>
				</segment>
			</unit>
			<unit id="192" translate="yes">
				<segment state="initial">
					<source>Sample C# code that for this process is below.</source>
					<target>Sample C# code that for this process is below.</target>
				</segment>
			</unit>
			<unit id="193" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](web-authentication-broker.md)</data>
				</originalData>
				<segment state="initial">
					<source>For information and a detailed walkthrough, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">WebAuthenticationBroker</pc>.</source>
					<target>For information and a detailed walkthrough, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">WebAuthenticationBroker</pc>.</target>
				</segment>
			</unit>
			<unit id="194" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](http://go.microsoft.com/fwlink/p/?LinkId=620622)</data>
				</originalData>
				<segment state="initial">
					<source>For a complete code sample, check out the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">WebAuthenticationBroker sample on GitHub</pc>.</source>
					<target>For a complete code sample, check out the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">WebAuthenticationBroker sample on GitHub</pc>.</target>
				</segment>
			</unit>
			<unit id="195" translate="yes">
				<segment state="initial">
					<source>2.2 Multi-factor authentication</source>
					<target>2.2 Multi-factor authentication</target>
				</segment>
			</unit>
			<unit id="196" translate="yes">
				<segment state="initial">
					<source>Multi-factor authentication makes use of more than one authentication factor.</source>
					<target>Multi-factor authentication makes use of more than one authentication factor.</target>
				</segment>
			</unit>
			<unit id="197" translate="yes">
				<segment state="initial">
					<source>Usually, "something you know," such as a password, is combined with "something you have," which can be a mobile phone or a smart card.</source>
					<target>Usually, "something you know," such as a password, is combined with "something you have," which can be a mobile phone or a smart card.</target>
				</segment>
			</unit>
			<unit id="198" translate="yes">
				<segment state="initial">
					<source>Even if an attacker discovers the user’s password, the account is still inaccessible without the device or card.</source>
					<target>Even if an attacker discovers the user’s password, the account is still inaccessible without the device or card.</target>
				</segment>
			</unit>
			<unit id="199" translate="yes">
				<segment state="initial">
					<source>And if only the device or card is compromised, it is not useful to the attacker without the password.</source>
					<target>And if only the device or card is compromised, it is not useful to the attacker without the password.</target>
				</segment>
			</unit>
			<unit id="200" translate="yes">
				<segment state="initial">
					<source>Multi-factor authentication is therefore more secure, but also more complex, than single-factor authentication.</source>
					<target>Multi-factor authentication is therefore more secure, but also more complex, than single-factor authentication.</target>
				</segment>
			</unit>
			<unit id="201" translate="yes">
				<segment state="initial">
					<source>Services that use multi-factor authentication will often give the user a choice in how they receive the second credential.</source>
					<target>Services that use multi-factor authentication will often give the user a choice in how they receive the second credential.</target>
				</segment>
			</unit>
			<unit id="202" translate="yes">
				<segment state="initial">
					<source>An example of this type of authentication is a commonly used process where a verification code is sent to the user’s mobile phone using SMS.</source>
					<target>An example of this type of authentication is a commonly used process where a verification code is sent to the user’s mobile phone using SMS.</target>
				</segment>
			</unit>
			<unit id="203" translate="yes">
				<segment state="initial">
					<source>The user provides their username and password to the identity provider.</source>
					<target>The user provides their username and password to the identity provider.</target>
				</segment>
			</unit>
			<unit id="204" translate="yes">
				<segment state="initial">
					<source>The identity provider verifies the username and password as in single-factor authorization, and then looks up the user’s mobile phone number stored in the system.</source>
					<target>The identity provider verifies the username and password as in single-factor authorization, and then looks up the user’s mobile phone number stored in the system.</target>
				</segment>
			</unit>
			<unit id="205" translate="yes">
				<segment state="initial">
					<source>The server sends an SMS message containing a generated verification code to the user’s mobile phone.</source>
					<target>The server sends an SMS message containing a generated verification code to the user’s mobile phone.</target>
				</segment>
			</unit>
			<unit id="206" translate="yes">
				<segment state="initial">
					<source>The user provides the verification code to the identity provider; through a form presented to the user.</source>
					<target>The user provides the verification code to the identity provider; through a form presented to the user.</target>
				</segment>
			</unit>
			<unit id="207" translate="yes">
				<segment state="initial">
					<source>The identity provider returns an authentication status that indicates whether the authentication of both credentials were successful.</source>
					<target>The identity provider returns an authentication status that indicates whether the authentication of both credentials were successful.</target>
				</segment>
			</unit>
			<unit id="208" translate="yes">
				<segment state="initial">
					<source>If successful, data exchange begins.</source>
					<target>If successful, data exchange begins.</target>
				</segment>
			</unit>
			<unit id="209" translate="yes">
				<segment state="initial">
					<source>Otherwise, the user must be re-authenticated.</source>
					<target>Otherwise, the user must be re-authenticated.</target>
				</segment>
			</unit>
			<unit id="210" translate="yes">
				<segment state="initial">
					<source>two-factor authentication</source>
					<target>two-factor authentication</target>
				</segment>
			</unit>
			<unit id="211" translate="yes">
				<segment state="initial">
					<source>As you can see, this process also differs from single-factor authentication in that the second user credential is sent to the user instead of being created or provided by the user.</source>
					<target>As you can see, this process also differs from single-factor authentication in that the second user credential is sent to the user instead of being created or provided by the user.</target>
				</segment>
			</unit>
			<unit id="212" translate="yes">
				<segment state="initial">
					<source>The user is therefore not in complete control of the necessary credentials.</source>
					<target>The user is therefore not in complete control of the necessary credentials.</target>
				</segment>
			</unit>
			<unit id="213" translate="yes">
				<segment state="initial">
					<source>This also applies when a smart card is used as the second credential: the organization is in charge of creating and providing it to the user.</source>
					<target>This also applies when a smart card is used as the second credential: the organization is in charge of creating and providing it to the user.</target>
				</segment>
			</unit>
			<unit id="214" translate="yes">
				<segment state="initial">
					<source>2.2.1 Azure Active Directory</source>
					<target>2.2.1 Azure Active Directory</target>
				</segment>
			</unit>
			<unit id="215" translate="yes">
				<segment state="initial">
					<source>Azure Active Directory (Azure AD) is a cloud-based identity and access management service that can serve as the identity provider in single-factor or multi-factor authentication.</source>
					<target>Azure Active Directory (Azure AD) is a cloud-based identity and access management service that can serve as the identity provider in single-factor or multi-factor authentication.</target>
				</segment>
			</unit>
			<unit id="216" translate="yes">
				<segment state="initial">
					<source>Azure AD authentication can be used with or without a verification code.</source>
					<target>Azure AD authentication can be used with or without a verification code.</target>
				</segment>
			</unit>
			<unit id="217" translate="yes">
				<segment state="initial">
					<source>While Azure AD can also implement single-factor authentication, enterprises usually require the higher security of multi-factor authentication.</source>
					<target>While Azure AD can also implement single-factor authentication, enterprises usually require the higher security of multi-factor authentication.</target>
				</segment>
			</unit>
			<unit id="218" translate="yes">
				<segment state="initial">
					<source>In a multi-factor authentication configuration, a user authenticating with an Azure AD account has the option of having a verification code sent as an SMS message either to their mobile phone or the Azure Authenticator mobile app.</source>
					<target>In a multi-factor authentication configuration, a user authenticating with an Azure AD account has the option of having a verification code sent as an SMS message either to their mobile phone or the Azure Authenticator mobile app.</target>
				</segment>
			</unit>
			<unit id="219" translate="yes">
				<segment state="initial">
					<source>Additionally, Azure AD can be used as an OAuth provider, providing the standard user with an authentication and authorization mechanism to apps across various platforms.</source>
					<target>Additionally, Azure AD can be used as an OAuth provider, providing the standard user with an authentication and authorization mechanism to apps across various platforms.</target>
				</segment>
			</unit>
			<unit id="220" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://azure.microsoft.com/services/active-directory/)</data>
					<data id="id3">[</data>
					<data id="id4">](https://azure.microsoft.com/services/multi-factor-authentication/)</data>
				</originalData>
				<segment state="initial">
					<source>To learn more, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Azure Active Directory</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Multi-Factor Authentication on Azure</pc>.</source>
					<target>To learn more, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Azure Active Directory</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Multi-Factor Authentication on Azure</pc>.</target>
				</segment>
			</unit>
			<unit id="221" translate="yes">
				<segment state="initial">
					<source>2.4 Microsoft Passport and Windows Hello</source>
					<target>2.4 Microsoft Passport and Windows Hello</target>
				</segment>
			</unit>
			<unit id="222" translate="yes">
				<segment state="initial">
					<source>In Windows 10, a convenient multi-factor authentication mechanism is built into the operating system.</source>
					<target>In Windows 10, a convenient multi-factor authentication mechanism is built into the operating system.</target>
				</segment>
			</unit>
			<unit id="223" translate="yes">
				<segment state="initial">
					<source>The two components involved are called Microsoft Passport and Windows Hello.</source>
					<target>The two components involved are called Microsoft Passport and Windows Hello.</target>
				</segment>
			</unit>
			<unit id="224" translate="yes">
				<segment state="initial">
					<source>Windows Hello is the new biometric sign-in system built into Windows 10.</source>
					<target>Windows Hello is the new biometric sign-in system built into Windows 10.</target>
				</segment>
			</unit>
			<unit id="225" translate="yes">
				<segment state="initial">
					<source>Because it is built directly into the operating system, Windows Hello allows face or fingerprint identification to unlock users’ devices.</source>
					<target>Because it is built directly into the operating system, Windows Hello allows face or fingerprint identification to unlock users’ devices.</target>
				</segment>
			</unit>
			<unit id="226" translate="yes">
				<segment state="initial">
					<source>The Windows secure credential store protects biometric data on the device.</source>
					<target>The Windows secure credential store protects biometric data on the device.</target>
				</segment>
			</unit>
			<unit id="227" translate="yes">
				<segment state="initial">
					<source>Windows Hello provides a robust way for a device to recognize an individual user, which addresses the first part of the path between a user and a requested service or data item.</source>
					<target>Windows Hello provides a robust way for a device to recognize an individual user, which addresses the first part of the path between a user and a requested service or data item.</target>
				</segment>
			</unit>
			<unit id="228" translate="yes">
				<segment state="initial">
					<source>After the device has recognized the user, it still must authenticate the user before determining whether to grant access to a requested resource.</source>
					<target>After the device has recognized the user, it still must authenticate the user before determining whether to grant access to a requested resource.</target>
				</segment>
			</unit>
			<unit id="229" translate="yes">
				<segment state="initial">
					<source>Microsoft Passport provides strong two-factor authentication (2FA) that is fully integrated into Windows and replaces reusable passwords with the combination of a specific device, and a biometric gesture or PIN.</source>
					<target>Microsoft Passport provides strong two-factor authentication (2FA) that is fully integrated into Windows and replaces reusable passwords with the combination of a specific device, and a biometric gesture or PIN.</target>
				</segment>
			</unit>
			<unit id="230" translate="yes">
				<segment state="initial">
					<source>The PIN is specified by the user as part of their Microsoft Passport enrollment.</source>
					<target>The PIN is specified by the user as part of their Microsoft Passport enrollment.</target>
				</segment>
			</unit>
			<unit id="231" translate="yes">
				<segment state="initial">
					<source>Microsoft Passport isn’t just a replacement for traditional 2FA systems, though.</source>
					<target>Microsoft Passport isn’t just a replacement for traditional 2FA systems, though.</target>
				</segment>
			</unit>
			<unit id="232" translate="yes">
				<segment state="initial">
					<source>It’s conceptually similar to smart cards: authentication is performed by using cryptographic primitives instead of string comparisons, and the user’s key material is secure inside tamper-resistant hardware.</source>
					<target>It’s conceptually similar to smart cards: authentication is performed by using cryptographic primitives instead of string comparisons, and the user’s key material is secure inside tamper-resistant hardware.</target>
				</segment>
			</unit>
			<unit id="233" translate="yes">
				<segment state="initial">
					<source>Microsoft Passport doesn’t require the extra infrastructure components required for smart card deployment, either.</source>
					<target>Microsoft Passport doesn’t require the extra infrastructure components required for smart card deployment, either.</target>
				</segment>
			</unit>
			<unit id="234" translate="yes">
				<segment state="initial">
					<source>In particular, you don’t need a Public Key Infrastructure (PKI) to manage certificates, if you don’t currently have one.</source>
					<target>In particular, you don’t need a Public Key Infrastructure (PKI) to manage certificates, if you don’t currently have one.</target>
				</segment>
			</unit>
			<unit id="235" translate="yes">
				<segment state="initial">
					<source>Microsoft Passport combines the major advantages of smart cards—deployment flexibility for virtual smart cards and robust security for physical smart cards—without any of their drawbacks.</source>
					<target>Microsoft Passport combines the major advantages of smart cards—deployment flexibility for virtual smart cards and robust security for physical smart cards—without any of their drawbacks.</target>
				</segment>
			</unit>
			<unit id="236" translate="yes">
				<segment state="initial">
					<source>A device must be registered with Microsoft Passport before users can authenticate with it.</source>
					<target>A device must be registered with Microsoft Passport before users can authenticate with it.</target>
				</segment>
			</unit>
			<unit id="237" translate="yes">
				<segment state="initial">
					<source>Microsoft Passport uses asymmetric (public/private key) encryption in which one party uses a public key to encrypt the data that the other party can decrypt using a private key.</source>
					<target>Microsoft Passport uses asymmetric (public/private key) encryption in which one party uses a public key to encrypt the data that the other party can decrypt using a private key.</target>
				</segment>
			</unit>
			<unit id="238" translate="yes">
				<segment state="initial">
					<source>In the case of Microsoft Passport, it creates a set of public/private key pairs and writes the private keys to the device’s Trusted Platform Module (TPM) chip.</source>
					<target>In the case of Microsoft Passport, it creates a set of public/private key pairs and writes the private keys to the device’s Trusted Platform Module (TPM) chip.</target>
				</segment>
			</unit>
			<unit id="239" translate="yes">
				<segment state="initial">
					<source>After a device has been registered, UWP apps can call system APIs to retrieve the user’s public key, which can be used to register the user on the server.</source>
					<target>After a device has been registered, UWP apps can call system APIs to retrieve the user’s public key, which can be used to register the user on the server.</target>
				</segment>
			</unit>
			<unit id="240" translate="yes">
				<segment state="initial">
					<source>The registration workflow of an app might look like the following:</source>
					<target>The registration workflow of an app might look like the following:</target>
				</segment>
			</unit>
			<unit id="241" translate="yes">
				<segment state="initial">
					<source>microsoft passport registration</source>
					<target>microsoft passport registration</target>
				</segment>
			</unit>
			<unit id="242" translate="yes">
				<segment state="initial">
					<source>The registration information you collect may include a lot more identifying information than it does in this simple scenario.</source>
					<target>The registration information you collect may include a lot more identifying information than it does in this simple scenario.</target>
				</segment>
			</unit>
			<unit id="243" translate="yes">
				<segment state="initial">
					<source>For example, if your app accesses a secured service such as one for banking, you’d need to request proof of identity and other things as part of the sign-up process.</source>
					<target>For example, if your app accesses a secured service such as one for banking, you’d need to request proof of identity and other things as part of the sign-up process.</target>
				</segment>
			</unit>
			<unit id="244" translate="yes">
				<segment state="initial">
					<source>Once all the conditions are met, the public key of this user will be stored in the back-end and used to validate the next time the user uses the service.</source>
					<target>Once all the conditions are met, the public key of this user will be stored in the back-end and used to validate the next time the user uses the service.</target>
				</segment>
			</unit>
			<unit id="245" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/mt589441)</data>
					<data id="id3">[</data>
					<data id="id4">](microsoft-passport.md)</data>
				</originalData>
				<segment state="initial">
					<source>For more information on Microsoft Passport and Windows Hello, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Microsoft Passport guide</pc> and the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Microsoft Passport developer guide</pc>.</source>
					<target>For more information on Microsoft Passport and Windows Hello, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Microsoft Passport guide</pc> and the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Microsoft Passport developer guide</pc>.</target>
				</segment>
			</unit>
			<unit id="246" translate="yes">
				<segment state="initial">
					<source>3 Data-in-flight security methods</source>
					<target>3 Data-in-flight security methods</target>
				</segment>
			</unit>
			<unit id="247" translate="yes">
				<segment state="initial">
					<source>Data-in-flight security methods apply to data in transit between devices connected to a network.</source>
					<target>Data-in-flight security methods apply to data in transit between devices connected to a network.</target>
				</segment>
			</unit>
			<unit id="248" translate="yes">
				<segment state="initial">
					<source>The data may be transferred between systems on the high-security environment of a private corporate intranet, or between a client and web service in the non-secure environment of the web.</source>
					<target>The data may be transferred between systems on the high-security environment of a private corporate intranet, or between a client and web service in the non-secure environment of the web.</target>
				</segment>
			</unit>
			<unit id="249" translate="yes">
				<segment state="initial">
					<source>Windows 10 apps support standards such as SSL through their networking APIs, and work with technologies such as Azure API Management with which developers can ensure the appropriate level of security for their apps.</source>
					<target>Windows 10 apps support standards such as SSL through their networking APIs, and work with technologies such as Azure API Management with which developers can ensure the appropriate level of security for their apps.</target>
				</segment>
			</unit>
			<unit id="250" translate="yes">
				<segment state="initial">
					<source>3.1 Remote system authentication</source>
					<target>3.1 Remote system authentication</target>
				</segment>
			</unit>
			<unit id="251" translate="yes">
				<segment state="initial">
					<source>There are two general scenarios where communication occurs with a remote computer system.</source>
					<target>There are two general scenarios where communication occurs with a remote computer system.</target>
				</segment>
			</unit>
			<unit id="252" translate="yes">
				<segment state="initial">
					<source>A local server authenticates a user over a direct connection.</source>
					<target>A local server authenticates a user over a direct connection.</target>
				</segment>
			</unit>
			<unit id="253" translate="yes">
				<segment state="initial">
					<source>For example, when the server and the client are on a corporate intranet.</source>
					<target>For example, when the server and the client are on a corporate intranet.</target>
				</segment>
			</unit>
			<unit id="254" translate="yes">
				<segment state="initial">
					<source>A web service is communicated with over the Internet.</source>
					<target>A web service is communicated with over the Internet.</target>
				</segment>
			</unit>
			<unit id="255" translate="yes">
				<segment state="initial">
					<source>Security requirements for web service communication are higher than those in direct connection scenarios, as data is no longer only a part of a secure network and the likelihood of malicious attackers looking to intercept data is also higher.</source>
					<target>Security requirements for web service communication are higher than those in direct connection scenarios, as data is no longer only a part of a secure network and the likelihood of malicious attackers looking to intercept data is also higher.</target>
				</segment>
			</unit>
			<unit id="256" translate="yes">
				<segment state="initial">
					<source>Because various types of devices will access the service, they will likely be built as RESTful services, as opposed to WCF, for instance, which means authentication and authorization to the service also introduces new challenges.</source>
					<target>Because various types of devices will access the service, they will likely be built as RESTful services, as opposed to WCF, for instance, which means authentication and authorization to the service also introduces new challenges.</target>
				</segment>
			</unit>
			<unit id="257" translate="yes">
				<segment state="initial">
					<source>We’ll discuss two requirements for secure remote system communication.</source>
					<target>We’ll discuss two requirements for secure remote system communication.</target>
				</segment>
			</unit>
			<unit id="258" translate="yes">
				<segment state="initial">
					<source>The first requirement is message confidentiality: The information passed between the client and the web services (for example, the identity of the user and other personal information) must not be readable by third parties while in transit.</source>
					<target>The first requirement is message confidentiality: The information passed between the client and the web services (for example, the identity of the user and other personal information) must not be readable by third parties while in transit.</target>
				</segment>
			</unit>
			<unit id="259" translate="yes">
				<segment state="initial">
					<source>This is usually accomplished by encrypting the connection over which messages are sent and by encrypting the message itself.</source>
					<target>This is usually accomplished by encrypting the connection over which messages are sent and by encrypting the message itself.</target>
				</segment>
			</unit>
			<unit id="260" translate="yes">
				<segment state="initial">
					<source>In private/public key encryption, the public key is available to anyone, and is used to encrypt messages to be sent to a specific receiver.</source>
					<target>In private/public key encryption, the public key is available to anyone, and is used to encrypt messages to be sent to a specific receiver.</target>
				</segment>
			</unit>
			<unit id="261" translate="yes">
				<segment state="initial">
					<source>The private key is only held by the receiver and is used to decrypt the message.</source>
					<target>The private key is only held by the receiver and is used to decrypt the message.</target>
				</segment>
			</unit>
			<unit id="262" translate="yes">
				<segment state="initial">
					<source>The second requirement is message integrity: The client and the web service must be able to verify that the messages they receive are the ones intended to be sent by the other party, and that the message has not been altered in transit.</source>
					<target>The second requirement is message integrity: The client and the web service must be able to verify that the messages they receive are the ones intended to be sent by the other party, and that the message has not been altered in transit.</target>
				</segment>
			</unit>
			<unit id="263" translate="yes">
				<segment state="initial">
					<source>This is accomplished by signing messages with digital signatures and using certificate authentication.</source>
					<target>This is accomplished by signing messages with digital signatures and using certificate authentication.</target>
				</segment>
			</unit>
			<unit id="264" translate="yes">
				<segment state="initial">
					<source>3.2 SSL connections</source>
					<target>3.2 SSL connections</target>
				</segment>
			</unit>
			<unit id="265" translate="yes">
				<segment state="initial">
					<source>To establish and maintain secure connections to clients, web services can use Secure Sockets Layer (SSL), which is supported by the Secure Hypertext Transfer Protocol (HTTPS).</source>
					<target>To establish and maintain secure connections to clients, web services can use Secure Sockets Layer (SSL), which is supported by the Secure Hypertext Transfer Protocol (HTTPS).</target>
				</segment>
			</unit>
			<unit id="266" translate="yes">
				<segment state="initial">
					<source>SSL provides message confidentiality and integrity by supporting public key encryption as well as server certificates.</source>
					<target>SSL provides message confidentiality and integrity by supporting public key encryption as well as server certificates.</target>
				</segment>
			</unit>
			<unit id="267" translate="yes">
				<segment state="initial">
					<source>SSL is superseded by Transport Layer Security (TLS), but TLS is often casually referred to as SSL.</source>
					<target>SSL is superseded by Transport Layer Security (TLS), but TLS is often casually referred to as SSL.</target>
				</segment>
			</unit>
			<unit id="268" translate="yes">
				<segment state="initial">
					<source>When a client requests access to a resource on a server, SSL starts a negotiation process with the server.</source>
					<target>When a client requests access to a resource on a server, SSL starts a negotiation process with the server.</target>
				</segment>
			</unit>
			<unit id="269" translate="yes">
				<segment state="initial">
					<source>This is called an SSL handshake.</source>
					<target>This is called an SSL handshake.</target>
				</segment>
			</unit>
			<unit id="270" translate="yes">
				<segment state="initial">
					<source>An encryption level, a set of public and private encryption keys, and the identity information in the client and server certificates are agreed upon as the basis of all communication for the duration of the SSL connection.</source>
					<target>An encryption level, a set of public and private encryption keys, and the identity information in the client and server certificates are agreed upon as the basis of all communication for the duration of the SSL connection.</target>
				</segment>
			</unit>
			<unit id="271" translate="yes">
				<segment state="initial">
					<source>The server may also require the client to be authenticated at this time.</source>
					<target>The server may also require the client to be authenticated at this time.</target>
				</segment>
			</unit>
			<unit id="272" translate="yes">
				<segment state="initial">
					<source>Once the connection is established, all messages are encrypted with the negotiated public key until the connection closes.</source>
					<target>Once the connection is established, all messages are encrypted with the negotiated public key until the connection closes.</target>
				</segment>
			</unit>
			<unit id="273" translate="yes">
				<segment state="initial">
					<source>3.2.1 SSL pinning</source>
					<target>3.2.1 SSL pinning</target>
				</segment>
			</unit>
			<unit id="274" translate="yes">
				<segment state="initial">
					<source>While SSL can provide message confidentiality using encryption and certificates, it does nothing to verify that the server with which the client is communicating is the correct one.</source>
					<target>While SSL can provide message confidentiality using encryption and certificates, it does nothing to verify that the server with which the client is communicating is the correct one.</target>
				</segment>
			</unit>
			<unit id="275" translate="yes">
				<segment state="initial">
					<source>The server’s behavior can be mimicked by an unauthorized third-party, intercepting the sensitive data that the client transmits.</source>
					<target>The server’s behavior can be mimicked by an unauthorized third-party, intercepting the sensitive data that the client transmits.</target>
				</segment>
			</unit>
			<unit id="276" translate="yes">
				<segment state="initial">
					<source>To prevent this, a technique called SSL pinning is used to verify that the certificate on the server is the certificate that the client expects and trusts.</source>
					<target>To prevent this, a technique called SSL pinning is used to verify that the certificate on the server is the certificate that the client expects and trusts.</target>
				</segment>
			</unit>
			<unit id="277" translate="yes">
				<segment state="initial">
					<source>There are a few different ways to implement SSL pinning in apps, each with their own pros and cons.</source>
					<target>There are a few different ways to implement SSL pinning in apps, each with their own pros and cons.</target>
				</segment>
			</unit>
			<unit id="278" translate="yes">
				<segment state="initial">
					<source>The easiest approach is via the Certificates declaration in the app’s package manifest.</source>
					<target>The easiest approach is via the Certificates declaration in the app’s package manifest.</target>
				</segment>
			</unit>
			<unit id="279" translate="yes">
				<segment state="initial">
					<source>This declaration enables the app package to install digital certificates and specify exclusive trust in them.</source>
					<target>This declaration enables the app package to install digital certificates and specify exclusive trust in them.</target>
				</segment>
			</unit>
			<unit id="280" translate="yes">
				<segment state="initial">
					<source>This results in SSL connections being allowed only between the app and servers that have the corresponding certificates in their certificate chain.</source>
					<target>This results in SSL connections being allowed only between the app and servers that have the corresponding certificates in their certificate chain.</target>
				</segment>
			</unit>
			<unit id="281" translate="yes">
				<segment state="initial">
					<source>This mechanism also enables the secure use of self-signed certificates, as no third party dependency is needed on trusted public certification authorities.</source>
					<target>This mechanism also enables the secure use of self-signed certificates, as no third party dependency is needed on trusted public certification authorities.</target>
				</segment>
			</unit>
			<unit id="282" translate="yes">
				<segment state="initial">
					<source>ssl manifest</source>
					<target>ssl manifest</target>
				</segment>
			</unit>
			<unit id="283" translate="yes">
				<segment state="initial">
					<source>For more control over the validation logic, APIs are available to validate the certificate(s) returned by the server in response to an HTTPS request.</source>
					<target>For more control over the validation logic, APIs are available to validate the certificate(s) returned by the server in response to an HTTPS request.</target>
				</segment>
			</unit>
			<unit id="284" translate="yes">
				<segment state="initial">
					<source>Note that this method requires sending a request and inspecting the response, so be sure to add this as a validation before actually sending sensitive information in a request.</source>
					<target>Note that this method requires sending a request and inspecting the response, so be sure to add this as a validation before actually sending sensitive information in a request.</target>
				</segment>
			</unit>
			<unit id="285" translate="yes">
				<segment state="initial">
					<source>The following C# code illustrates this method of SSL pinning.</source>
					<target>The following C# code illustrates this method of SSL pinning.</target>
				</segment>
			</unit>
			<unit id="286" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">[</data>
					<data id="id4">](https://msdn.microsoft.com/library/windows/apps/dn298639)</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ValidateSSLRoot</pc> method uses the <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">HttpClient</pc></pc> class to execute an HTTP request.</source>
					<target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ValidateSSLRoot</pc> method uses the <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">HttpClient</pc></pc> class to execute an HTTP request.</target>
				</segment>
			</unit>
			<unit id="287" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn279681)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>After the client sends the response, it uses the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">RequestMessage.TransportInformation.ServerIntermediateCertificates</pc></pc> collection to inspect the certificates returned by the server.</source>
					<target>After the client sends the response, it uses the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">RequestMessage.TransportInformation.ServerIntermediateCertificates</pc></pc> collection to inspect the certificates returned by the server.</target>
				</segment>
			</unit>
			<unit id="288" translate="yes">
				<segment state="initial">
					<source>The client can then validate the entire certificate chain with the thumbprints it has included.</source>
					<target>The client can then validate the entire certificate chain with the thumbprints it has included.</target>
				</segment>
			</unit>
			<unit id="289" translate="yes">
				<segment state="initial">
					<source>This method does require the certificate thumbprints to be updated in the app when the server certificate expires and is renewed.</source>
					<target>This method does require the certificate thumbprints to be updated in the app when the server certificate expires and is renewed.</target>
				</segment>
			</unit>
			<unit id="290" translate="yes">
				<segment state="initial">
					<source>3.3 Publishing and securing access to REST APIs</source>
					<target>3.3 Publishing and securing access to REST APIs</target>
				</segment>
			</unit>
			<unit id="291" translate="yes">
				<segment state="initial">
					<source>To ensure authorized access to web services, they must require authentication every time an API call is made.</source>
					<target>To ensure authorized access to web services, they must require authentication every time an API call is made.</target>
				</segment>
			</unit>
			<unit id="292" translate="yes">
				<segment state="initial">
					<source>Being able to control performance and scale is also something to consider when web services are exposed across the web.</source>
					<target>Being able to control performance and scale is also something to consider when web services are exposed across the web.</target>
				</segment>
			</unit>
			<unit id="293" translate="yes">
				<segment state="initial">
					<source>Azure API Management is a service that can help expose APIs across the web, while providing features on three levels.</source>
					<target>Azure API Management is a service that can help expose APIs across the web, while providing features on three levels.</target>
				</segment>
			</unit>
			<unit id="294" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Publishers/Administrators</pc> of the API can easily configure the API through the Publisher Portal of Azure API Management.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Publishers/Administrators</pc> of the API can easily configure the API through the Publisher Portal of Azure API Management.</target>
				</segment>
			</unit>
			<unit id="295" translate="yes">
				<segment state="initial">
					<source>Here, API sets can be created and access to them can be managed to control who has access to which APIs.</source>
					<target>Here, API sets can be created and access to them can be managed to control who has access to which APIs.</target>
				</segment>
			</unit>
			<unit id="296" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Developers</pc> wanting access to these APIs can make requests through the Developer Portal, which can either immediately provide access or require approval by the publisher/administrator.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Developers</pc> wanting access to these APIs can make requests through the Developer Portal, which can either immediately provide access or require approval by the publisher/administrator.</target>
				</segment>
			</unit>
			<unit id="297" translate="yes">
				<segment state="initial">
					<source>Developers can also view the API documentation and sample code in the Developer Portal, to rapidly adopt the APIs offered by the web service.</source>
					<target>Developers can also view the API documentation and sample code in the Developer Portal, to rapidly adopt the APIs offered by the web service.</target>
				</segment>
			</unit>
			<unit id="298" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">apps</pc> that these developers create then access the API through the proxy offered by Azure API Management.</source>
					<target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">apps</pc> that these developers create then access the API through the proxy offered by Azure API Management.</target>
				</segment>
			</unit>
			<unit id="299" translate="yes">
				<segment state="initial">
					<source>The proxy both provides a layer of obscurity, hiding the actual end-point of the API on the publisher/administrator’s server and can also include additional logic like API translation to ensure the exposed API is kept consistent when a call to one API is redirected to another.</source>
					<target>The proxy both provides a layer of obscurity, hiding the actual end-point of the API on the publisher/administrator’s server and can also include additional logic like API translation to ensure the exposed API is kept consistent when a call to one API is redirected to another.</target>
				</segment>
			</unit>
			<unit id="300" translate="yes">
				<segment state="initial">
					<source>It can also use IP filtering to block API calls originating from a specific IP domain or set of domains.</source>
					<target>It can also use IP filtering to block API calls originating from a specific IP domain or set of domains.</target>
				</segment>
			</unit>
			<unit id="301" translate="yes">
				<segment state="initial">
					<source>Azure API Management also keeps its web services secure by using a set of public keys, called API keys, to authenticate and authorize each API call.</source>
					<target>Azure API Management also keeps its web services secure by using a set of public keys, called API keys, to authenticate and authorize each API call.</target>
				</segment>
			</unit>
			<unit id="302" translate="yes">
				<segment state="initial">
					<source>When authorization fails, access to the API and the functionality it supports is blocked.</source>
					<target>When authorization fails, access to the API and the functionality it supports is blocked.</target>
				</segment>
			</unit>
			<unit id="303" translate="yes">
				<segment state="initial">
					<source>Azure API Management can also reduce the number of API calls to a service (a procedure called throttling) to optimizes the performance of the web service.</source>
					<target>Azure API Management can also reduce the number of API calls to a service (a procedure called throttling) to optimizes the performance of the web service.</target>
				</segment>
			</unit>
			<unit id="304" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://azure.microsoft.com/services/api-management/)</data>
					<data id="id3">[</data>
					<data id="id4">](https://channel9.msdn.com/events/Microsoft-Azure/AzureCon-2015/ACON313)</data>
				</originalData>
				<segment state="initial">
					<source>To learn more, review <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Azure API Management</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Azure API Management at AzureCon 2015.</pc></source>
					<target>To learn more, review <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Azure API Management</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Azure API Management at AzureCon 2015.</pc></target>
				</segment>
			</unit>
			<unit id="305" translate="yes">
				<segment state="initial">
					<source>4 Data-at-rest security methods</source>
					<target>4 Data-at-rest security methods</target>
				</segment>
			</unit>
			<unit id="306" translate="yes">
				<segment state="initial">
					<source>When data arrives on a device, we refer to it as "data-at-rest."</source>
					<target>When data arrives on a device, we refer to it as "data-at-rest."</target>
				</segment>
			</unit>
			<unit id="307" translate="yes">
				<segment state="initial">
					<source>This data needs to be stored on the device in a secure manner, so that it cannot be accessed by unauthorized users or apps.</source>
					<target>This data needs to be stored on the device in a secure manner, so that it cannot be accessed by unauthorized users or apps.</target>
				</segment>
			</unit>
			<unit id="308" translate="yes">
				<segment state="initial">
					<source>The app model in Windows 10 does a lot to ensure that the data stored by any app is only accessible to that app, while providing APIs to share the data when necessary.</source>
					<target>The app model in Windows 10 does a lot to ensure that the data stored by any app is only accessible to that app, while providing APIs to share the data when necessary.</target>
				</segment>
			</unit>
			<unit id="309" translate="yes">
				<segment state="initial">
					<source>Additional APIs are also available to ensure that data can be encrypted and credentials can be stored safely.</source>
					<target>Additional APIs are also available to ensure that data can be encrypted and credentials can be stored safely.</target>
				</segment>
			</unit>
			<unit id="310" translate="yes">
				<segment state="initial">
					<source>4.1 Windows app model</source>
					<target>4.1 Windows app model</target>
				</segment>
			</unit>
			<unit id="311" translate="yes">
				<segment state="initial">
					<source>Traditionally, Windows has never had a definition of an app.</source>
					<target>Traditionally, Windows has never had a definition of an app.</target>
				</segment>
			</unit>
			<unit id="312" translate="yes">
				<segment state="initial">
					<source>It was most commonly referred to as an executable (.exe), and this never included installation, storage of state, execution length, versioning, OS integration, or app-to-app communication.</source>
					<target>It was most commonly referred to as an executable (.exe), and this never included installation, storage of state, execution length, versioning, OS integration, or app-to-app communication.</target>
				</segment>
			</unit>
			<unit id="313" translate="yes">
				<segment state="initial">
					<source>The Universal Windows Platform model defines an app model that covers installation, runtime environment, resource management, updates, data model, and uninstallation.</source>
					<target>The Universal Windows Platform model defines an app model that covers installation, runtime environment, resource management, updates, data model, and uninstallation.</target>
				</segment>
			</unit>
			<unit id="314" translate="yes">
				<segment state="initial">
					<source>Windows 10 apps run in a container, which means that they have limited privileges by default (additional privileges can be requested and granted by the user).</source>
					<target>Windows 10 apps run in a container, which means that they have limited privileges by default (additional privileges can be requested and granted by the user).</target>
				</segment>
			</unit>
			<unit id="315" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br207928)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>For example, if an app wants to access files on the system, a file picker from the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.Storage.Pickers</pc></pc> namespace has to be used to let the user pick a file (no direct access to files is enabled).</source>
					<target>For example, if an app wants to access files on the system, a file picker from the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.Storage.Pickers</pc></pc> namespace has to be used to let the user pick a file (no direct access to files is enabled).</target>
				</segment>
			</unit>
			<unit id="316" translate="yes">
				<segment state="initial">
					<source>Another example is if an app wants to access the user’s location data, it needs to enable the location device capability needs to be declared, prompting the user at download time that this app will request access to the user’s location.</source>
					<target>Another example is if an app wants to access the user’s location data, it needs to enable the location device capability needs to be declared, prompting the user at download time that this app will request access to the user’s location.</target>
				</segment>
			</unit>
			<unit id="317" translate="yes">
				<segment state="initial">
					<source>On top of that, the first time the app wants to access the user’s location, an additional consent prompt is shown to the user, requesting permission to access the data.</source>
					<target>On top of that, the first time the app wants to access the user’s location, an additional consent prompt is shown to the user, requesting permission to access the data.</target>
				</segment>
			</unit>
			<unit id="318" translate="yes">
				<segment state="initial">
					<source>Note that this app model acts as a "jail" for apps, meaning that they can’t reach out, but it is not a “castle” that cannot be reached from the outside (applications with administrator privileges can of course still reach in).</source>
					<target>Note that this app model acts as a "jail" for apps, meaning that they can’t reach out, but it is not a “castle” that cannot be reached from the outside (applications with administrator privileges can of course still reach in).</target>
				</segment>
			</unit>
			<unit id="319" translate="yes">
				<segment state="initial">
					<source>Device Guard in Windows 10, which enables organizations/IT to specify which (Win32) apps are allowed to execute, can further help limit this access.</source>
					<target>Device Guard in Windows 10, which enables organizations/IT to specify which (Win32) apps are allowed to execute, can further help limit this access.</target>
				</segment>
			</unit>
			<unit id="320" translate="yes">
				<segment state="initial">
					<source>The app model also manages the app lifecycle.</source>
					<target>The app model also manages the app lifecycle.</target>
				</segment>
			</unit>
			<unit id="321" translate="yes">
				<segment state="initial">
					<source>It limits the background execution of apps by default, for example; as soon as an app goes into the background, the process is suspended – after giving the app a brief period to address app suspension in code – and its memory is frozen.</source>
					<target>It limits the background execution of apps by default, for example; as soon as an app goes into the background, the process is suspended – after giving the app a brief period to address app suspension in code – and its memory is frozen.</target>
				</segment>
			</unit>
			<unit id="322" translate="yes">
				<segment state="initial">
					<source>The operating system does provide mechanisms for apps to ask for specific background task execution (on a schedule, triggered by various events such as Internet/Bluetooth connectivity, power changes, etc., and in specific scenarios such as music playing or GPS tracking).</source>
					<target>The operating system does provide mechanisms for apps to ask for specific background task execution (on a schedule, triggered by various events such as Internet/Bluetooth connectivity, power changes, etc., and in specific scenarios such as music playing or GPS tracking).</target>
				</segment>
			</unit>
			<unit id="323" translate="yes">
				<segment state="initial">
					<source>When memory resources on the device are running low, Windows frees memory space by terminating apps.</source>
					<target>When memory resources on the device are running low, Windows frees memory space by terminating apps.</target>
				</segment>
			</unit>
			<unit id="324" translate="yes">
				<segment state="initial">
					<source>This lifecycle model forces apps to persist data whenever they’re suspended, because there is no additional time available between suspension and termination.</source>
					<target>This lifecycle model forces apps to persist data whenever they’re suspended, because there is no additional time available between suspension and termination.</target>
				</segment>
			</unit>
			<unit id="325" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://visualstudiomagazine.com/articles/2015/09/01/its-universal.aspx)</data>
				</originalData>
				<segment state="initial">
					<source>For more information, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">It's Universal: Understanding the Lifecycle of a Windows 10 Application</pc>.</source>
					<target>For more information, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">It's Universal: Understanding the Lifecycle of a Windows 10 Application</pc>.</target>
				</segment>
			</unit>
			<unit id="326" translate="yes">
				<segment state="initial">
					<source>4.2 Stored credential protection</source>
					<target>4.2 Stored credential protection</target>
				</segment>
			</unit>
			<unit id="327" translate="yes">
				<segment state="initial">
					<source>Windows apps that access authenticated services often provide the users the option of storing their credentials on the local device.</source>
					<target>Windows apps that access authenticated services often provide the users the option of storing their credentials on the local device.</target>
				</segment>
			</unit>
			<unit id="328" translate="yes">
				<segment state="initial">
					<source>This is a convenience for the users; when they provide their username and password, the app automatically uses them in subsequent launches of the app.</source>
					<target>This is a convenience for the users; when they provide their username and password, the app automatically uses them in subsequent launches of the app.</target>
				</segment>
			</unit>
			<unit id="329" translate="yes">
				<segment state="initial">
					<source>Because this can be a security issue if an attacker gains access to this stored data, Windows 10 provides the ability for Windows apps to store user credentials in a secure credential locker.</source>
					<target>Because this can be a security issue if an attacker gains access to this stored data, Windows 10 provides the ability for Windows apps to store user credentials in a secure credential locker.</target>
				</segment>
			</unit>
			<unit id="330" translate="yes">
				<segment state="initial">
					<source>The app calls the Credential Locker API to store and retrieve the credentials from the locker instead of storing them in the app’s storage container.</source>
					<target>The app calls the Credential Locker API to store and retrieve the credentials from the locker instead of storing them in the app’s storage container.</target>
				</segment>
			</unit>
			<unit id="331" translate="yes">
				<segment state="initial">
					<source>The credential locker is managed by the operating system, but access is limited to the app that stores them, providing a securely managed solution for credential storage.</source>
					<target>The credential locker is managed by the operating system, but access is limited to the app that stores them, providing a securely managed solution for credential storage.</target>
				</segment>
			</unit>
			<unit id="332" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br227081)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/br227089)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>When a user supplies the credentials to be stored, the app gets a reference to the credential locker using the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">PasswordVault</pc></pc> object in the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Windows.Security.Credentials</pc></pc> namespace.</source>
					<target>When a user supplies the credentials to be stored, the app gets a reference to the credential locker using the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">PasswordVault</pc></pc> object in the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Windows.Security.Credentials</pc></pc> namespace.</target>
				</segment>
			</unit>
			<unit id="333" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br227061)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>It then creates a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">PasswordCredential</pc></pc> object containing an identifier for the Windows app and the username and password.</source>
					<target>It then creates a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">PasswordCredential</pc></pc> object containing an identifier for the Windows app and the username and password.</target>
				</segment>
			</unit>
			<unit id="334" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/hh701231)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>This is passed to the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">PasswordVault.Add</pc></pc> method to store the credentials in the locker.</source>
					<target>This is passed to the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">PasswordVault.Add</pc></pc> method to store the credentials in the locker.</target>
				</segment>
			</unit>
			<unit id="335" translate="yes">
				<segment state="initial">
					<source>The following C# code example shows how this is done.</source>
					<target>The following C# code example shows how this is done.</target>
				</segment>
			</unit>
			<unit id="336" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br227083)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/br227081)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>In the following C# code example, the app requests all of the credentials corresponding to the app by calling the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">FindAllByResource</pc></pc> method of the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">PasswordVault</pc></pc> object.</source>
					<target>In the following C# code example, the app requests all of the credentials corresponding to the app by calling the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">FindAllByResource</pc></pc> method of the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">PasswordVault</pc></pc> object.</target>
				</segment>
			</unit>
			<unit id="337" translate="yes">
				<segment state="initial">
					<source>If more than one is returned, it prompts the user to enter their username.</source>
					<target>If more than one is returned, it prompts the user to enter their username.</target>
				</segment>
			</unit>
			<unit id="338" translate="yes">
				<segment state="initial">
					<source>If the credentials are not in the locker, the app prompts the user for them.</source>
					<target>If the credentials are not in the locker, the app prompts the user for them.</target>
				</segment>
			</unit>
			<unit id="339" translate="yes">
				<segment state="initial">
					<source>The user is then logged into the server using the credentials.</source>
					<target>The user is then logged into the server using the credentials.</target>
				</segment>
			</unit>
			<unit id="340" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](credential-locker.md)</data>
				</originalData>
				<segment state="initial">
					<source>For more information, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Credential locker</pc>.</source>
					<target>For more information, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Credential locker</pc>.</target>
				</segment>
			</unit>
			<unit id="341" translate="yes">
				<segment state="initial">
					<source>4.3 Stored data protection</source>
					<target>4.3 Stored data protection</target>
				</segment>
			</unit>
			<unit id="342" translate="yes">
				<segment state="initial">
					<source>When you are dealing with stored data, commonly referred to as data-at-rest, encrypting it can prevent unauthorized users from accessing the stored data.</source>
					<target>When you are dealing with stored data, commonly referred to as data-at-rest, encrypting it can prevent unauthorized users from accessing the stored data.</target>
				</segment>
			</unit>
			<unit id="343" translate="yes">
				<segment state="initial">
					<source>The two common mechanisms to encrypt data are using either symmetric keys or using asymmetric keys.</source>
					<target>The two common mechanisms to encrypt data are using either symmetric keys or using asymmetric keys.</target>
				</segment>
			</unit>
			<unit id="344" translate="yes">
				<segment state="initial">
					<source>However, data encryption can’t ensure that the data is unaltered between the time it was sent and the time it was stored.</source>
					<target>However, data encryption can’t ensure that the data is unaltered between the time it was sent and the time it was stored.</target>
				</segment>
			</unit>
			<unit id="345" translate="yes">
				<segment state="initial">
					<source>In other words, the data integrity cannot be ensured.</source>
					<target>In other words, the data integrity cannot be ensured.</target>
				</segment>
			</unit>
			<unit id="346" translate="yes">
				<segment state="initial">
					<source>Using message authentication codes, hashes, and digital signing are common techniques to solve this problem.</source>
					<target>Using message authentication codes, hashes, and digital signing are common techniques to solve this problem.</target>
				</segment>
			</unit>
			<unit id="347" translate="yes">
				<segment state="initial">
					<source>4.3.1 Data encryption</source>
					<target>4.3.1 Data encryption</target>
				</segment>
			</unit>
			<unit id="348" translate="yes">
				<segment state="initial">
					<source>With symmetric encryption, both the sender and recipient have the same key and use it to both encrypt and decrypt the data.</source>
					<target>With symmetric encryption, both the sender and recipient have the same key and use it to both encrypt and decrypt the data.</target>
				</segment>
			</unit>
			<unit id="349" translate="yes">
				<segment state="initial">
					<source>The challenge with this approach is securely sharing the key so both parties are aware of it.</source>
					<target>The challenge with this approach is securely sharing the key so both parties are aware of it.</target>
				</segment>
			</unit>
			<unit id="350" translate="yes">
				<segment state="initial">
					<source>One answer to this is asymmetric encryption, in which a public/private key pair is used.</source>
					<target>One answer to this is asymmetric encryption, in which a public/private key pair is used.</target>
				</segment>
			</unit>
			<unit id="351" translate="yes">
				<segment state="initial">
					<source>The public key is shared freely with anyone who wants to encrypt a message.</source>
					<target>The public key is shared freely with anyone who wants to encrypt a message.</target>
				</segment>
			</unit>
			<unit id="352" translate="yes">
				<segment state="initial">
					<source>The private key is always kept secret so that only you can use it to decrypt the data.</source>
					<target>The private key is always kept secret so that only you can use it to decrypt the data.</target>
				</segment>
			</unit>
			<unit id="353" translate="yes">
				<segment state="initial">
					<source>A common technique to allow for discovery of the public key is by using digital certificates, also simply referred to as certificates.</source>
					<target>A common technique to allow for discovery of the public key is by using digital certificates, also simply referred to as certificates.</target>
				</segment>
			</unit>
			<unit id="354" translate="yes">
				<segment state="initial">
					<source>The certificate holds information about the public key, in addition to information about the user or server such as the name, issuer, email address and country.</source>
					<target>The certificate holds information about the public key, in addition to information about the user or server such as the name, issuer, email address and country.</target>
				</segment>
			</unit>
			<unit id="355" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br241537)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/br241478)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>Windows app developers can use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SymmetricKeyAlgorithmProvider</pc></pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">AsymmetricKeyAlgorithmProvider</pc></pc> classes to implement symmetric and asymmetric encryption in their UWP apps.</source>
					<target>Windows app developers can use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SymmetricKeyAlgorithmProvider</pc></pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">AsymmetricKeyAlgorithmProvider</pc></pc> classes to implement symmetric and asymmetric encryption in their UWP apps.</target>
				</segment>
			</unit>
			<unit id="356" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br241490)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Additionally, the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CryptographicEngine</pc></pc> class can be used to encrypt and decrypt data, sign content and verify digital signatures.</source>
					<target>Additionally, the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CryptographicEngine</pc></pc> class can be used to encrypt and decrypt data, sign content and verify digital signatures.</target>
				</segment>
			</unit>
			<unit id="357" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br241559)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/br241585)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>Apps can also use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">DataProtectionProvider</pc></pc> class in the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Windows.Security.Cryptography.DataProtection</pc></pc> namespace to encrypt and decrypt stored local data.</source>
					<target>Apps can also use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">DataProtectionProvider</pc></pc> class in the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Windows.Security.Cryptography.DataProtection</pc></pc> namespace to encrypt and decrypt stored local data.</target>
				</segment>
			</unit>
			<unit id="358" translate="yes">
				<segment state="initial">
					<source>4.3 Detecting message tampering (MACs, hashes, and signatures)</source>
					<target>4.3 Detecting message tampering (MACs, hashes, and signatures)</target>
				</segment>
			</unit>
			<unit id="359" translate="yes">
				<segment state="initial">
					<source>A MAC is a code (or tag) that results from using a symmetric key (called the secret key) or a message as input to a MAC encryption algorithm.</source>
					<target>A MAC is a code (or tag) that results from using a symmetric key (called the secret key) or a message as input to a MAC encryption algorithm.</target>
				</segment>
			</unit>
			<unit id="360" translate="yes">
				<segment state="initial">
					<source>The secret key and the algorithm are agreed upon by the sender and receiver before the message transfer.</source>
					<target>The secret key and the algorithm are agreed upon by the sender and receiver before the message transfer.</target>
				</segment>
			</unit>
			<unit id="361" translate="yes">
				<segment state="initial">
					<source>MACs verify messages like this.</source>
					<target>MACs verify messages like this.</target>
				</segment>
			</unit>
			<unit id="362" translate="yes">
				<segment state="initial">
					<source>The sender derives the MAC tag by using the secret key as input to the MAC algorithm.</source>
					<target>The sender derives the MAC tag by using the secret key as input to the MAC algorithm.</target>
				</segment>
			</unit>
			<unit id="363" translate="yes">
				<segment state="initial">
					<source>The sender sends the MAC tag and the message to the receiver.</source>
					<target>The sender sends the MAC tag and the message to the receiver.</target>
				</segment>
			</unit>
			<unit id="364" translate="yes">
				<segment state="initial">
					<source>The receiver derives the MAC tag by using the secret key and the message as inputs to the MAC algorithm.</source>
					<target>The receiver derives the MAC tag by using the secret key and the message as inputs to the MAC algorithm.</target>
				</segment>
			</unit>
			<unit id="365" translate="yes">
				<segment state="initial">
					<source>The receiver compares their MAC tag with the sender's MAC tag.</source>
					<target>The receiver compares their MAC tag with the sender's MAC tag.</target>
				</segment>
			</unit>
			<unit id="366" translate="yes">
				<segment state="initial">
					<source>If they are the same then we know that the message has not been tampered with.</source>
					<target>If they are the same then we know that the message has not been tampered with.</target>
				</segment>
			</unit>
			<unit id="367" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br241530)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/br241490)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>Windows apps can implement MAC message verification by calling the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">MacAlgorithmProvider</pc></pc> class to generate the key and <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">CryptographicEngine</pc></pc> class to perform the MAC encryption algorithm.</source>
					<target>Windows apps can implement MAC message verification by calling the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">MacAlgorithmProvider</pc></pc> class to generate the key and <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">CryptographicEngine</pc></pc> class to perform the MAC encryption algorithm.</target>
				</segment>
			</unit>
			<unit id="368" translate="yes">
				<segment state="initial">
					<source>4.3.1 Using hashes</source>
					<target>4.3.1 Using hashes</target>
				</segment>
			</unit>
			<unit id="369" translate="yes">
				<segment state="initial">
					<source>A hash function is a cryptographic algorithm that takes an arbitrarily long block of data and returns a fixed-size bit string called a hash value.</source>
					<target>A hash function is a cryptographic algorithm that takes an arbitrarily long block of data and returns a fixed-size bit string called a hash value.</target>
				</segment>
			</unit>
			<unit id="370" translate="yes">
				<segment state="initial">
					<source>There is an entire family of hash functions that can do this.</source>
					<target>There is an entire family of hash functions that can do this.</target>
				</segment>
			</unit>
			<unit id="371" translate="yes">
				<segment state="initial">
					<source>A hash value can be used in place of a MAC in the message-transfer scenario above.</source>
					<target>A hash value can be used in place of a MAC in the message-transfer scenario above.</target>
				</segment>
			</unit>
			<unit id="372" translate="yes">
				<segment state="initial">
					<source>The sender sends a hash value and a message, and the receiver derives their own hash value from the sender's hash value and message and compares the two hash values.</source>
					<target>The sender sends a hash value and a message, and the receiver derives their own hash value from the sender's hash value and message and compares the two hash values.</target>
				</segment>
			</unit>
			<unit id="373" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br241511)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Apps running on Windows 10 can call the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">HashAlgorithmProvider</pc></pc> class to enumerate the hash algorithms that are available and run one of them.</source>
					<target>Apps running on Windows 10 can call the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">HashAlgorithmProvider</pc></pc> class to enumerate the hash algorithms that are available and run one of them.</target>
				</segment>
			</unit>
			<unit id="374" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br241498)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CryptographicHash</pc></pc> class represents the hash value.</source>
					<target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CryptographicHash</pc></pc> class represents the hash value.</target>
				</segment>
			</unit>
			<unit id="375" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/hh701376)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CryptographicHash.GetValueAndReset</pc></pc> method can be used to repeatedly hash different data without having to re-create the object for each use.</source>
					<target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CryptographicHash.GetValueAndReset</pc></pc> method can be used to repeatedly hash different data without having to re-create the object for each use.</target>
				</segment>
			</unit>
			<unit id="376" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>The Append method of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">CryptographicHash</pc> class adds new data to a buffer to be hashed.</source>
					<target>The Append method of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">CryptographicHash</pc> class adds new data to a buffer to be hashed.</target>
				</segment>
			</unit>
			<unit id="377" translate="yes">
				<segment state="initial">
					<source>This entire process is shown in the following C# code example.</source>
					<target>This entire process is shown in the following C# code example.</target>
				</segment>
			</unit>
			<unit id="378" translate="yes">
				<segment state="initial">
					<source>4.3.2 Digital signatures</source>
					<target>4.3.2 Digital signatures</target>
				</segment>
			</unit>
			<unit id="379" translate="yes">
				<segment state="initial">
					<source>The data integrity of a digitally signed stored message is verified in a similar way to MAC authentication.</source>
					<target>The data integrity of a digitally signed stored message is verified in a similar way to MAC authentication.</target>
				</segment>
			</unit>
			<unit id="380" translate="yes">
				<segment state="initial">
					<source>Here is the way the digital signature workflow operates.</source>
					<target>Here is the way the digital signature workflow operates.</target>
				</segment>
			</unit>
			<unit id="381" translate="yes">
				<segment state="initial">
					<source>The sender derives a hash value (also known as a digest) by using the message as the input to a hash algorithm.</source>
					<target>The sender derives a hash value (also known as a digest) by using the message as the input to a hash algorithm.</target>
				</segment>
			</unit>
			<unit id="382" translate="yes">
				<segment state="initial">
					<source>The sender encrypts the digest using their private key.</source>
					<target>The sender encrypts the digest using their private key.</target>
				</segment>
			</unit>
			<unit id="383" translate="yes">
				<segment state="initial">
					<source>The sender sends the message, the encrypted digest, and the name of the hash algorithm that was used.</source>
					<target>The sender sends the message, the encrypted digest, and the name of the hash algorithm that was used.</target>
				</segment>
			</unit>
			<unit id="384" translate="yes">
				<segment state="initial">
					<source>The receiver uses the public key to decrypt the encrypted digest it received.</source>
					<target>The receiver uses the public key to decrypt the encrypted digest it received.</target>
				</segment>
			</unit>
			<unit id="385" translate="yes">
				<segment state="initial">
					<source>It then uses the hash algorithm to hash the message to create a digest of its own.</source>
					<target>It then uses the hash algorithm to hash the message to create a digest of its own.</target>
				</segment>
			</unit>
			<unit id="386" translate="yes">
				<segment state="initial">
					<source>And finally the receiver compares the two digests (the one it received and decrypted, and the one it made).</source>
					<target>And finally the receiver compares the two digests (the one it received and decrypted, and the one it made).</target>
				</segment>
			</unit>
			<unit id="387" translate="yes">
				<segment state="initial">
					<source>Only if the two match can the receiver be sure that the message was sent by the possessor of the private key, and therefore they are who they say they are, and that the message was not altered in transit.</source>
					<target>Only if the two match can the receiver be sure that the message was sent by the possessor of the private key, and therefore they are who they say they are, and that the message was not altered in transit.</target>
				</segment>
			</unit>
			<unit id="388" translate="yes">
				<segment state="initial">
					<source>digital signatures</source>
					<target>digital signatures</target>
				</segment>
			</unit>
			<unit id="389" translate="yes">
				<segment state="initial">
					<source>Hashing algorithms are very fast, so hash values can be derived quickly from even large messages.</source>
					<target>Hashing algorithms are very fast, so hash values can be derived quickly from even large messages.</target>
				</segment>
			</unit>
			<unit id="390" translate="yes">
				<segment state="initial">
					<source>The resulting hash value is an arbitrary length and can be shorter than the full message, so using public and private keys to encrypt and decrypt only the digest rather than the full message is an optimization.</source>
					<target>The resulting hash value is an arbitrary length and can be shorter than the full message, so using public and private keys to encrypt and decrypt only the digest rather than the full message is an optimization.</target>
				</segment>
			</unit>
			<unit id="391" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/desktop/aa381977)</data>
					<data id="id3">[</data>
					<data id="id4">](macs-hashes-and-signatures.md)</data>
					<data id="id5">[</data>
					<data id="id6">](cryptography.md)</data>
				</originalData>
				<segment state="initial">
					<source>For more information, take a look articles on <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Digital signatures</pc>, <pc dataRefEnd="id4" dataRefStart="id3" id="p2">MACs, hashes, and signatures</pc>, and <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Cryptography.</pc></source>
					<target>For more information, take a look articles on <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Digital signatures</pc>, <pc dataRefEnd="id4" dataRefStart="id3" id="p2">MACs, hashes, and signatures</pc>, and <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Cryptography.</pc></target>
				</segment>
			</unit>
			<unit id="392" translate="yes">
				<segment state="initial">
					<source>5 Summary</source>
					<target>5 Summary</target>
				</segment>
			</unit>
			<unit id="393" translate="yes">
				<segment state="initial">
					<source>The Universal Windows Platform in Windows 10 offers a number of ways to leverage operating system capabilities to create more secure apps.</source>
					<target>The Universal Windows Platform in Windows 10 offers a number of ways to leverage operating system capabilities to create more secure apps.</target>
				</segment>
			</unit>
			<unit id="394" translate="yes">
				<segment state="initial">
					<source>In different authentication scenarios, such as single-factor, multi-factor, or brokered authentication with an OAuth identity provider, APIs exist to mitigate the most common challenges with authentication.</source>
					<target>In different authentication scenarios, such as single-factor, multi-factor, or brokered authentication with an OAuth identity provider, APIs exist to mitigate the most common challenges with authentication.</target>
				</segment>
			</unit>
			<unit id="395" translate="yes">
				<segment state="initial">
					<source>Windows Hello provides a new biometric sign-in system that recognizes the user and actively defeats efforts to circumvent proper identification.</source>
					<target>Windows Hello provides a new biometric sign-in system that recognizes the user and actively defeats efforts to circumvent proper identification.</target>
				</segment>
			</unit>
			<unit id="396" translate="yes">
				<segment state="initial">
					<source>Microsoft Passport works with Windows Hello to deliver multiple layers of keys and certificates that can never be revealed or used outside the trusted platform module.</source>
					<target>Microsoft Passport works with Windows Hello to deliver multiple layers of keys and certificates that can never be revealed or used outside the trusted platform module.</target>
				</segment>
			</unit>
			<unit id="397" translate="yes">
				<segment state="initial">
					<source>Plus, a further layer of security is available through the optional use of attestation identity keys and certificates.</source>
					<target>Plus, a further layer of security is available through the optional use of attestation identity keys and certificates.</target>
				</segment>
			</unit>
			<unit id="398" translate="yes">
				<segment state="initial">
					<source>To secure data in flight, APIs exist to communicate with remote systems securely over SSL, while providing the possibility to validate the server’s authenticity with SSL pinning.</source>
					<target>To secure data in flight, APIs exist to communicate with remote systems securely over SSL, while providing the possibility to validate the server’s authenticity with SSL pinning.</target>
				</segment>
			</unit>
			<unit id="399" translate="yes">
				<segment state="initial">
					<source>Publishing APIs securely and in a controlled manner is something in which Azure API Management aids by providing powerful configuration options for exposing APIs across the web using a proxy that provides additional obfuscation of the API endpoint.</source>
					<target>Publishing APIs securely and in a controlled manner is something in which Azure API Management aids by providing powerful configuration options for exposing APIs across the web using a proxy that provides additional obfuscation of the API endpoint.</target>
				</segment>
			</unit>
			<unit id="400" translate="yes">
				<segment state="initial">
					<source>Access to these APIs is secured by using API keys and API calls can be throttled to control performance.</source>
					<target>Access to these APIs is secured by using API keys and API calls can be throttled to control performance.</target>
				</segment>
			</unit>
			<unit id="401" translate="yes">
				<segment state="initial">
					<source>When the data arrives on the device, the Windows app model provides more control over how the app is installed, updated and accesses it data, while keeping it from accessing data of other apps in an unauthorized manner.</source>
					<target>When the data arrives on the device, the Windows app model provides more control over how the app is installed, updated and accesses it data, while keeping it from accessing data of other apps in an unauthorized manner.</target>
				</segment>
			</unit>
			<unit id="402" translate="yes">
				<segment state="initial">
					<source>Credential locker can provide secure storage of user credentials that is managed by the operating system and other data can be protected on the device by using the encryption and hashing APIs offered by the Universal Windows Platform.</source>
					<target>Credential locker can provide secure storage of user credentials that is managed by the operating system and other data can be protected on the device by using the encryption and hashing APIs offered by the Universal Windows Platform.</target>
				</segment>
			</unit>
			<unit id="403" translate="yes">
				<segment state="initial">
					<source>6 Resources</source>
					<target>6 Resources</target>
				</segment>
			</unit>
			<unit id="404" translate="yes">
				<segment state="initial">
					<source>6.1 How-to articles</source>
					<target>6.1 How-to articles</target>
				</segment>
			</unit>
			<unit id="405" translate="yes">
				<segment state="initial">
					<source>Authentication and user identity</source>
					<target>Authentication and user identity</target>
				</segment>
			</unit>
			<unit id="406" translate="yes">
				<segment state="initial">
					<source>Microsoft Passport</source>
					<target>Microsoft Passport</target>
				</segment>
			</unit>
			<unit id="407" translate="yes">
				<segment state="initial">
					<source>Credential locker</source>
					<target>Credential locker</target>
				</segment>
			</unit>
			<unit id="408" translate="yes">
				<segment state="initial">
					<source>Web authentication broker</source>
					<target>Web authentication broker</target>
				</segment>
			</unit>
			<unit id="409" translate="yes">
				<segment state="initial">
					<source>Fingerprint biometrics</source>
					<target>Fingerprint biometrics</target>
				</segment>
			</unit>
			<unit id="410" translate="yes">
				<segment state="initial">
					<source>Smart cards</source>
					<target>Smart cards</target>
				</segment>
			</unit>
			<unit id="411" translate="yes">
				<segment state="initial">
					<source>Shared certificates</source>
					<target>Shared certificates</target>
				</segment>
			</unit>
			<unit id="412" translate="yes">
				<segment state="initial">
					<source>Cryptography</source>
					<target>Cryptography</target>
				</segment>
			</unit>
			<unit id="413" translate="yes">
				<segment state="initial">
					<source>Certificates</source>
					<target>Certificates</target>
				</segment>
			</unit>
			<unit id="414" translate="yes">
				<segment state="initial">
					<source>Cryptographic keys</source>
					<target>Cryptographic keys</target>
				</segment>
			</unit>
			<unit id="415" translate="yes">
				<segment state="initial">
					<source>Data protection</source>
					<target>Data protection</target>
				</segment>
			</unit>
			<unit id="416" translate="yes">
				<segment state="initial">
					<source>MACs, hashes, and signatures</source>
					<target>MACs, hashes, and signatures</target>
				</segment>
			</unit>
			<unit id="417" translate="yes">
				<segment state="initial">
					<source>Export restrictions on cryptography</source>
					<target>Export restrictions on cryptography</target>
				</segment>
			</unit>
			<unit id="418" translate="yes">
				<segment state="initial">
					<source>Common cryptography tasks</source>
					<target>Common cryptography tasks</target>
				</segment>
			</unit>
			<unit id="419" translate="yes">
				<segment state="initial">
					<source>6.2 Code samples</source>
					<target>6.2 Code samples</target>
				</segment>
			</unit>
			<unit id="420" translate="yes">
				<segment state="initial">
					<source>Credential locker</source>
					<target>Credential locker</target>
				</segment>
			</unit>
			<unit id="421" translate="yes">
				<segment state="initial">
					<source>Credential picker</source>
					<target>Credential picker</target>
				</segment>
			</unit>
			<unit id="422" translate="yes">
				<segment state="initial">
					<source>Device lockdown with Azure login</source>
					<target>Device lockdown with Azure login</target>
				</segment>
			</unit>
			<unit id="423" translate="yes">
				<segment state="initial">
					<source>Enterprise data protection</source>
					<target>Enterprise data protection</target>
				</segment>
			</unit>
			<unit id="424" translate="yes">
				<segment state="initial">
					<source>KeyCredentialManager</source>
					<target>KeyCredentialManager</target>
				</segment>
			</unit>
			<unit id="425" translate="yes">
				<segment state="initial">
					<source>Smart cards</source>
					<target>Smart cards</target>
				</segment>
			</unit>
			<unit id="426" translate="yes">
				<segment state="initial">
					<source>Web account management</source>
					<target>Web account management</target>
				</segment>
			</unit>
			<unit id="427" translate="yes">
				<segment state="initial">
					<source>WebAuthenticationBroker</source>
					<target>WebAuthenticationBroker</target>
				</segment>
			</unit>
			<unit id="428" translate="yes">
				<segment state="initial">
					<source>6.3 API reference</source>
					<target>6.3 API reference</target>
				</segment>
			</unit>
			<unit id="429" translate="yes">
				<segment state="initial">
					<source>Windows.Security.Authentication.OnlineId</source>
					<target>Windows.Security.Authentication.OnlineId</target>
				</segment>
			</unit>
			<unit id="430" translate="yes">
				<segment state="initial">
					<source>Windows.Security.Authentication.Web</source>
					<target>Windows.Security.Authentication.Web</target>
				</segment>
			</unit>
			<unit id="431" translate="yes">
				<segment state="initial">
					<source>Windows.Security.Authentication.Web.Core</source>
					<target>Windows.Security.Authentication.Web.Core</target>
				</segment>
			</unit>
			<unit id="432" translate="yes">
				<segment state="initial">
					<source>Windows.Security.Authentication.Web.Provider</source>
					<target>Windows.Security.Authentication.Web.Provider</target>
				</segment>
			</unit>
			<unit id="433" translate="yes">
				<segment state="initial">
					<source>Windows.Security.Credentials</source>
					<target>Windows.Security.Credentials</target>
				</segment>
			</unit>
			<unit id="434" translate="yes">
				<segment state="initial">
					<source>Windows.Security.Credentials</source>
					<target>Windows.Security.Credentials</target>
				</segment>
			</unit>
			<unit id="435" translate="yes">
				<segment state="initial">
					<source>Windows.Security.Credentials.UI</source>
					<target>Windows.Security.Credentials.UI</target>
				</segment>
			</unit>
			<unit id="436" translate="yes">
				<segment state="initial">
					<source>Windows.Security.Cryptography</source>
					<target>Windows.Security.Cryptography</target>
				</segment>
			</unit>
			<unit id="437" translate="yes">
				<segment state="initial">
					<source>Windows.Security.Cryptography.Certificates</source>
					<target>Windows.Security.Cryptography.Certificates</target>
				</segment>
			</unit>
			<unit id="438" translate="yes">
				<segment state="initial">
					<source>Windows.Security.Cryptography.Core</source>
					<target>Windows.Security.Cryptography.Core</target>
				</segment>
			</unit>
			<unit id="439" translate="yes">
				<segment state="initial">
					<source>Windows.Security.Cryptography.DataProtection</source>
					<target>Windows.Security.Cryptography.DataProtection</target>
				</segment>
			</unit>
			<unit id="440" translate="yes">
				<segment state="initial">
					<source>Windows.Security.ExchangeActiveSyncProvisioning</source>
					<target>Windows.Security.ExchangeActiveSyncProvisioning</target>
				</segment>
			</unit>
			<unit id="441" translate="yes">
				<segment state="initial">
					<source>Windows.Security.EnterpriseData</source>
					<target>Windows.Security.EnterpriseData</target>
				</segment>
			</unit>
		</group>
	</file>
</xliff>