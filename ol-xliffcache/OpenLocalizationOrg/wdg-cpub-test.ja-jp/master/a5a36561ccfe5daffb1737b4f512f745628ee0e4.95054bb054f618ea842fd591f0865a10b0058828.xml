{"nodes":[{"pos":[17,175],"content":"Consider how often we read text in our daily lives - in email, a book, a road sign, the prices on a menu, tire pressure markings, or posters on a street pole.","needQuote":true,"needEscape":true,"nodes":[{"content":"Consider how often we read text in our daily lives - in email, a book, a road sign, the prices on a menu, tire pressure markings, or posters on a street pole.","pos":[0,158]}]},{"pos":[183,196],"content":"Text controls","needQuote":true,"needEscape":true,"nodes":[{"content":"Text controls","pos":[0,13]}]},{"content":"Text controls","pos":[294,307]},{"content":"Text controls consist of text input boxes, password boxes, auto-suggest boxes, and text blocks.","pos":[308,403]},{"content":"The XAML framework provides several controls for rendering, entering, and editing text, and a set of properties for formatting the text.","pos":[404,540]},{"pos":[544,658],"content":"The controls for displaying read-only text are <bpt id=\"p1\">[</bpt>TextBlock<ept id=\"p1\">](text-block.md)</ept> and <bpt id=\"p2\">[</bpt>RichTextBlock<ept id=\"p2\">](rich-text-block.md)</ept>.","source":"The controls for displaying read-only text are [TextBlock](text-block.md) and [RichTextBlock](rich-text-block.md)."},{"pos":[661,839],"content":"The controls for text entry and editing are: <bpt id=\"p1\">[</bpt>TextBox<ept id=\"p1\">](text-block.md)</ept>, <bpt id=\"p2\">[</bpt>AutoSuggestBox<ept id=\"p2\">](auto-suggest-box.md)</ept>, <bpt id=\"p3\">[</bpt>PasswordBox<ept id=\"p3\">](password-box.md)</ept>, and <bpt id=\"p4\">[</bpt>RichEditBox<ept id=\"p4\">](rich-edit-box.md)</ept>.","source":"The controls for text entry and editing are: [TextBox](text-block.md), [AutoSuggestBox](auto-suggest-box.md), [PasswordBox](password-box.md), and [RichEditBox](rich-edit-box.md)."},{"pos":[900,914],"content":"Important APIs"},{"content":"AutoSuggestBox class","pos":[930,950]},{"content":"PasswordBox class","pos":[1060,1077]},{"content":"RichEditBox class","pos":[1184,1201]},{"content":"RichTextBlock class","pos":[1308,1327]},{"content":"TextBlock class","pos":[1436,1451]},{"content":"TextBox class","pos":[1556,1569]},{"content":"Is this the right control?","pos":[1669,1695]},{"content":"The text control you use depends on your scenario.","pos":[1697,1747]},{"content":"Use this info to pick the right text control to use in your app.","pos":[1748,1812]},{"content":"Render read-only text","pos":[1818,1839]},{"content":"Use a <bpt id=\"p1\">**</bpt>TextBlock<ept id=\"p1\">**</ept> to display most read-only text in your app.","pos":[1841,1904],"source":"Use a **TextBlock** to display most read-only text in your app."},{"content":"You can use it to display single-line or multi-line text, inline hyperlinks, and text with formatting like bold, italic, or underlined.","pos":[1905,2040]},{"content":"TextBlock is typically easier to use and provides better text rendering performance than RichTextBlock, so it's preferred for most app UI text.","pos":[2042,2185]},{"content":"You can easily access and use text from a TextBlock in your app by getting the value of the <bpt id=\"p1\">[</bpt>Text<ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.textblock.text.aspx)</ept> property.","pos":[2186,2393],"source":" You can easily access and use text from a TextBlock in your app by getting the value of the [Text](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.textblock.text.aspx) property."},{"content":"It also provides many of the same formatting options for customizing how your text is rendered.","pos":[2396,2491]},{"content":"Although you can put line breaks in the text, TextBlock is designed to display a single paragraph and doesnâ€™t support text indentation.","pos":[2492,2627]},{"content":"Use a <bpt id=\"p1\">**</bpt>RichTextBlock<ept id=\"p1\">**</ept> when you need support for multiple paragraphs, multi-column text or other complex text layouts, or inline UI elements like images.","pos":[2629,2783],"source":"Use a **RichTextBlock** when you need support for multiple paragraphs, multi-column text or other complex text layouts, or inline UI elements like images."},{"content":"RichTextBlock provides several features for advanced text layout.","pos":[2784,2849]},{"content":"The content property of RichTextBlock is the <bpt id=\"p1\">[</bpt>Blocks<ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.richtextblock.blocks.aspx)</ept> property, which supports paragraph based text via the <bpt id=\"p2\">[</bpt>Paragraph<ept id=\"p2\">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.documents.paragraph.aspx)</ept> element.","pos":[2851,3179],"source":"The content property of RichTextBlock is the [Blocks](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.richtextblock.blocks.aspx) property, which supports paragraph based text via the [Paragraph](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.documents.paragraph.aspx) element."},{"content":"It doesn't have a <bpt id=\"p1\">**</bpt>Text<ept id=\"p1\">**</ept> property that you can use to easily access the control's text content in your app.","pos":[3180,3289],"source":" It doesn't have a **Text** property that you can use to easily access the control's text content in your app."},{"content":"Text input","pos":[3297,3307]},{"content":"Use a <bpt id=\"p1\">**</bpt>TextBox<ept id=\"p1\">**</ept> control to let a user enter and edit unformatted text, such as in a form.","pos":[3309,3400],"source":"Use a **TextBox** control to let a user enter and edit unformatted text, such as in a form."},{"content":"You can use the <bpt id=\"p1\">[</bpt>Text<ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.textbox.text.aspx)</ept> property to get and set the text in a TextBox.","pos":[3401,3567],"source":" You can use the [Text](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.textbox.text.aspx) property to get and set the text in a TextBox."},{"content":"You can make a TextBox read-only, but this should be a temporary, conditional state.","pos":[3569,3653]},{"content":"If the text is never editable, consider using a TextBlock instead.","pos":[3654,3720]},{"content":"Use a <bpt id=\"p1\">**</bpt>PasswordBox<ept id=\"p1\">**</ept> control to collect a password or other private data, such as a Social Security number.","pos":[3722,3830],"source":"Use a **PasswordBox** control to collect a password or other private data, such as a Social Security number."},{"content":"A password box is a text input box that conceals the characters typed in it for the sake of privacy.","pos":[3831,3931]},{"content":"A password box looks like a text input box, except that it renders bullets in place of the text that has been entered.","pos":[3932,4050]},{"content":"The bullet character can be customized.","pos":[4051,4090]},{"content":"Use an <bpt id=\"p1\">**</bpt>AutoSuggestBox<ept id=\"p1\">**</ept> control to show the user a list of suggestions to choose from as they type.","pos":[4092,4193],"source":"Use an **AutoSuggestBox** control to show the user a list of suggestions to choose from as they type."},{"content":"An auto-suggest box is a text entry box that triggers a list of basic search suggestions.","pos":[4194,4283]},{"content":"Suggested terms can draw from a combination of popular search terms and historical user-entered terms.","pos":[4284,4386]},{"content":"You should also use an AutoSuggestBox control to implement a search box.","pos":[4388,4460]},{"content":"Use a <bpt id=\"p1\">**</bpt>RichEditBox<ept id=\"p1\">**</ept> to display and edit text files.","pos":[4462,4515],"source":"Use a **RichEditBox** to display and edit text files."},{"content":"You don't use a RichEditBox to get user input into you app the way you use other standard text input boxes.","pos":[4516,4623]},{"content":"Rather, you use it to work with text files that are separate from your app.","pos":[4624,4699]},{"content":"You typically save text entered into a RichEditBox to a .rtf file.","pos":[4700,4766]},{"content":"Is text input the best option?","pos":[4770,4800]},{"content":"There are many ways you can get user input in your app.","pos":[4804,4859]},{"content":"These questions will help answer whether one of the standard text input boxes or another control is the best fit for getting user input.","pos":[4860,4996]},{"content":"Is it practical to efficiently enumerate all valid values?","pos":[5004,5062]},{"content":"If so, consider using one of the selection controls, such as a <bpt id=\"p1\">[</bpt>check box<ept id=\"p1\">](checkbox.md)</ept>, <bpt id=\"p2\">[</bpt>drop-down list<ept id=\"p2\">](lists.md)</ept>, list box, <bpt id=\"p3\">[</bpt>radio button<ept id=\"p3\">](radio-button.md)</ept>, <bpt id=\"p4\">[</bpt>slider<ept id=\"p4\">](slider.md)</ept>, <bpt id=\"p5\">[</bpt>toggle switch<ept id=\"p5\">](toggles.md)</ept>, <bpt id=\"p6\">[</bpt>date picker<ept id=\"p6\">](date-and-time.md)</ept>, or time picker.","pos":[5065,5323],"source":" If so, consider using one of the selection controls, such as a [check box](checkbox.md), [drop-down list](lists.md), list box, [radio button](radio-button.md), [slider](slider.md), [toggle switch](toggles.md), [date picker](date-and-time.md), or time picker."},{"content":"Is there a fairly small set of valid values?","pos":[5330,5374]},{"content":"If so, consider a <bpt id=\"p1\">[</bpt>drop-down list<ept id=\"p1\">](lists.md)</ept> or a list box, especially if the values are more than a few characters long.","pos":[5377,5498],"source":" If so, consider a [drop-down list](lists.md) or a list box, especially if the values are more than a few characters long."},{"content":"Is the valid data completely unconstrained?","pos":[5505,5548]},{"content":"Or is the valid data only constrained by format (constrained length or character types)?","pos":[5549,5637]},{"content":"If so, use a text input control.","pos":[5640,5672]},{"content":"You can limit the number of characters that can be entered, and you can validate the format in your app code.","pos":[5673,5782]},{"content":"Does the value represent a data type that has a specialized common control?","pos":[5789,5864]},{"content":"If so, use the appropriate control instead of a text input control.","pos":[5867,5934]},{"content":"For example, use a <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>DatePicker<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br211681)</ept> instead of a text input control to accept a date entry.","pos":[5935,6084],"source":" For example, use a [**DatePicker**](https://msdn.microsoft.com/library/windows/apps/br211681) instead of a text input control to accept a date entry."},{"content":"If the data is strictly numeric:","pos":[6089,6121]},{"content":"Is the value being entered approximate and/or relative to another quantity on the same page?","pos":[6132,6224]},{"content":"If so, use a <bpt id=\"p1\">[</bpt>slider<ept id=\"p1\">](slider.md)</ept>.","pos":[6227,6260],"source":" If so, use a [slider](slider.md)."},{"content":"Would the user benefit from instant feedback on the effect of setting changes?","pos":[6271,6349]},{"content":"If so, use a <bpt id=\"p1\">[</bpt>slider<ept id=\"p1\">](slider.md)</ept>, possibly with an accompanying control.","pos":[6352,6424],"source":" If so, use a [slider](slider.md), possibly with an accompanying control."},{"content":"Is the value entered likely to be adjusted after the result is observed, such as with volume or screen brightness?","pos":[6435,6549]},{"content":"If so, use a <bpt id=\"p1\">[</bpt>slider<ept id=\"p1\">](slider.md)</ept>.","pos":[6552,6585],"source":" If so, use a [slider](slider.md)."},{"content":"Examples","pos":[6594,6602]},{"content":"Text box","pos":[6604,6612]},{"content":"A text box","pos":[6616,6626]},{"content":"Auto suggest box","pos":[6650,6666]},{"content":"Example of the expanded auto-suggest control","pos":[6670,6714]},{"content":"Password box","pos":[6761,6773]},{"content":"Password box focus state typing text","pos":[6777,6813]},{"content":"Create a text control","pos":[6856,6877]},{"content":"See these articles for info and examples specific to each text control.","pos":[6879,6950]},{"content":"AutoSuggestBox","pos":[6959,6973]},{"content":"PasswordBox","pos":[7005,7016]},{"content":"RichEditBox","pos":[7044,7055]},{"content":"RichTextBlock","pos":[7084,7097]},{"content":"TextBlock","pos":[7128,7137]},{"content":"TextBox","pos":[7163,7170]},{"content":"Font and style guidelines","pos":[7191,7216]},{"content":"See these articles for font guidelines:","pos":[7217,7256]},{"content":"Font guidelines","pos":[7263,7278]},{"content":"Segoe MDL2 icon list and guidelines","pos":[7297,7332]},{"content":"Choose the right keyboard for your text control","pos":[7366,7413]},{"pos":[7415,7463],"content":"<bpt id=\"p1\">**</bpt>Applies to:<ept id=\"p1\">**</ept> TextBox, PasswordBox RichEditBox","source":"**Applies to:** TextBox, PasswordBox RichEditBox"},{"content":"To help users to enter data using the touch keyboard, or Soft Input Panel (SIP), you can set the input scope of the text control to match the kind of data the user is expected to enter.","pos":[7465,7650]},{"pos":[7653,7808],"content":"Tip \nThis info applies only to the SIP. It does not apply to hardware keyboards or the On-Screen Keyboard available in the Windows Ease of Access options.","leadings":["",">"],"nodes":[{"content":"Tip This info applies only to the SIP.","pos":[0,39],"source":"Tip \nThis info applies only to the SIP."},{"content":"It does not apply to hardware keyboards or the On-Screen Keyboard available in the Windows Ease of Access options.","pos":[40,154]}]},{"content":"The touch keyboard can be used for text entry when your app runs on a device with a touch screen.","pos":[7810,7907]},{"content":"The touch keyboard is invoked when the user taps on an editable input field, such as a TextBox or RichEditBox.","pos":[7908,8018]},{"content":"You can make it much faster and easier for users to enter data in your app by setting the input scope of the text control to match the kind of data you expect the user to enter.","pos":[8019,8196]},{"content":"The input scope provides a hint to the system about the type of text input expected by the control so the system can provide a specialized touch keyboard layout for the input type.","pos":[8197,8377]},{"content":"For example, if a text box is used only to enter a 4-digit PIN, set the <bpt id=\"p1\">[</bpt>InputScope<ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.textbox.inputscope.aspx)</ept> property to <bpt id=\"p2\">**</bpt>Number<ept id=\"p2\">**</ept>.","pos":[8379,8590],"source":"For example, if a text box is used only to enter a 4-digit PIN, set the [InputScope](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.textbox.inputscope.aspx) property to **Number**."},{"content":"This tells the system to show the number keypad layout, which makes it easier for the user to enter the PIN.","pos":[8591,8699]},{"pos":[8702,8964],"content":"Important  \nThe input scope does not cause any input validation to be performed, and does not prevent the user from providing any input through a hardware keyboard or other input device. You are still responsible for validating the input in your code as needed.","leadings":["",">"],"nodes":[{"content":"Important","pos":[0,9]},{"content":"The input scope does not cause any input validation to be performed, and does not prevent the user from providing any input through a hardware keyboard or other input device. You are still responsible for validating the input in your code as needed.","pos":[12,261],"nodes":[{"content":"The input scope does not cause any input validation to be performed, and does not prevent the user from providing any input through a hardware keyboard or other input device.","pos":[0,174]},{"content":"You are still responsible for validating the input in your code as needed.","pos":[175,249]}]}]},{"pos":[8966,9034],"content":"For more info, see <bpt id=\"p1\">[</bpt>Use input scope to change the touch keyboard<ept id=\"p1\">]()</ept>.","source":"For more info, see [Use input scope to change the touch keyboard]()."},{"content":"Color fonts","pos":[9039,9050]},{"pos":[9052,9114],"content":"<bpt id=\"p1\">**</bpt>Applies to:<ept id=\"p1\">**</ept> TextBlock, RichTextBlock, TextBox, RichEditBox","source":"**Applies to:** TextBlock, RichTextBlock, TextBox, RichEditBox"},{"content":"Windows has the ability for fonts to include multiple colored layers for each glyph.","pos":[9116,9200]},{"content":"For example, the Segoe UI Emoji font defines color versions of the Emoticon and other Emoji characters.","pos":[9201,9304]},{"content":"The standard and rich text controls support display color fonts.","pos":[9307,9371]},{"content":"By default, the <bpt id=\"p1\">**</bpt>IsColorFontEnabled<ept id=\"p1\">**</ept> property is <bpt id=\"p2\">**</bpt>true<ept id=\"p2\">**</ept> and fonts with these additional layers are rendered in color.","pos":[9372,9493],"source":" By default, the **IsColorFontEnabled** property is **true** and fonts with these additional layers are rendered in color."},{"content":"The default color font on the system is Segoe UI Emoji and the controls will fall back to this font to display the glyphs in color.","pos":[9494,9625]},{"content":"The rendered text looks like this:","pos":[9690,9724]},{"content":"Text block with color font","pos":[9728,9754]},{"pos":[9792,9962],"content":"For more info, see the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>IsColorFontEnabled<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.textblock.iscolorfontenabled.aspx)</ept> property.","source":"For more info, see the [**IsColorFontEnabled**](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.textblock.iscolorfontenabled.aspx) property."},{"content":"Guidelines for line and paragraph separators","pos":[9967,10011]},{"pos":[10013,10086],"content":"<bpt id=\"p1\">**</bpt>Applies to:<ept id=\"p1\">**</ept> TextBlock, RichTextBlock, multi-line TextBox, RichEditBox","source":"**Applies to:** TextBlock, RichTextBlock, multi-line TextBox, RichEditBox"},{"content":"Use the line separator character (0x2028) and the paragraph separator character (0x2029) to divide plain text.","pos":[10088,10198]},{"content":"A new line is begun after each line separator.","pos":[10199,10245]},{"content":"A new paragraph is begun after each paragraph separator.","pos":[10246,10302]},{"content":"It isn't necessary to start the first line or paragraph in a file with these characters or to end the last line or paragraph with them; doing so indicates that there is an empty line or paragraph in that location.","pos":[10304,10517]},{"content":"Your app can use the line separator to indicate an unconditional end of line.","pos":[10519,10596]},{"content":"However, line separators do not correspond to the separate carriage return and linefeed characters, or to a combination of these characters.","pos":[10597,10737]},{"content":"Line separators must be processed separately from carriage return and linefeed characters.","pos":[10738,10828]},{"content":"Your app can insert a paragraph separator between paragraphs of text.","pos":[10830,10899]},{"content":"Use of this separator allows creation of plain text files that can be formatted with different line widths on different operating systems.","pos":[10900,11038]},{"content":"The target system can ignore any line separators and break paragraphs only at the paragraph separators.","pos":[11039,11142]},{"content":"\\[This article contains information that is specific to Universal Windows Platform (UWP) apps and Windows 10.","pos":[11144,11253]},{"content":"For Windows 8.1 guidance, please download the <bpt id=\"p1\">[</bpt>Windows 8.1 guidelines PDF<ept id=\"p1\">](https://go.microsoft.com/fwlink/p/?linkid=258743)</ept>.\\]","pos":[11254,11381],"source":" For Windows 8.1 guidance, please download the [Windows 8.1 guidelines PDF](https://go.microsoft.com/fwlink/p/?linkid=258743).\\]"},{"content":"Related articles","pos":[11386,11402]},{"content":"For designers","pos":[11406,11419]},{"content":"Font guidelines","pos":[11427,11442]},{"content":"Segoe MDL2 icon list and guidelines","pos":[11461,11496]},{"content":"Guidelines for spell checking","pos":[11528,11557]},{"content":"Adding search","pos":[11596,11609]},{"content":"For developers (XAML)","pos":[11672,11693]},{"content":"TextBox class","pos":[11701,11714]},{"content":"Windows.UI.Xaml.Controls PasswordBox class","pos":[11781,11823]},{"content":"String.Length property","pos":[11888,11910]}],"content":"---\nDescription: Consider how often we read text in our daily lives - in email, a book, a road sign, the prices on a menu, tire pressure markings, or posters on a street pole.\ntitle: Text controls\nms.assetid: 43DC68BF-FA86-43D2-8807-70A359453048\nlabel: Text controls\ntemplate: detail.hbs\n---\n# Text controls\nText controls consist of text input boxes, password boxes, auto-suggest boxes, and text blocks. The XAML framework provides several controls for rendering, entering, and editing text, and a set of properties for formatting the text.\n\n- The controls for displaying read-only text are [TextBlock](text-block.md) and [RichTextBlock](rich-text-block.md).\n- The controls for text entry and editing are: [TextBox](text-block.md), [AutoSuggestBox](auto-suggest-box.md), [PasswordBox](password-box.md), and [RichEditBox](rich-edit-box.md). \n\n\n<span class=\"sidebar_heading\" style=\"font-weight: bold;\">Important APIs</span>\n\n-   [**AutoSuggestBox class**](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.autosuggestbox.aspx)\n-   [**PasswordBox class**](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.passwordbox.aspx)\n-   [**RichEditBox class**](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.richeditbox.aspx)\n-   [**RichTextBlock class**](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.richtextblock.aspx)\n-   [**TextBlock class**](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.textblock.aspx)\n-   [**TextBox class**](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.textbox.aspx)\n\n## Is this the right control?\n\nThe text control you use depends on your scenario. Use this info to pick the right text control to use in your app.\n\n### Render read-only text\n\nUse a **TextBlock** to display most read-only text in your app. You can use it to display single-line or multi-line text, inline hyperlinks, and text with formatting like bold, italic, or underlined.\n\nTextBlock is typically easier to use and provides better text rendering performance than RichTextBlock, so it's preferred for most app UI text. You can easily access and use text from a TextBlock in your app by getting the value of the [Text](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.textblock.text.aspx) property. \n\nIt also provides many of the same formatting options for customizing how your text is rendered. Although you can put line breaks in the text, TextBlock is designed to display a single paragraph and doesnâ€™t support text indentation.\n\nUse a **RichTextBlock** when you need support for multiple paragraphs, multi-column text or other complex text layouts, or inline UI elements like images. RichTextBlock provides several features for advanced text layout.\n\nThe content property of RichTextBlock is the [Blocks](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.richtextblock.blocks.aspx) property, which supports paragraph based text via the [Paragraph](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.documents.paragraph.aspx) element. It doesn't have a **Text** property that you can use to easily access the control's text content in your app.  \n\n### Text input\n\nUse a **TextBox** control to let a user enter and edit unformatted text, such as in a form. You can use the [Text](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.textbox.text.aspx) property to get and set the text in a TextBox.\n\nYou can make a TextBox read-only, but this should be a temporary, conditional state. If the text is never editable, consider using a TextBlock instead.\n\nUse a **PasswordBox** control to collect a password or other private data, such as a Social Security number. A password box is a text input box that conceals the characters typed in it for the sake of privacy. A password box looks like a text input box, except that it renders bullets in place of the text that has been entered. The bullet character can be customized.\n\nUse an **AutoSuggestBox** control to show the user a list of suggestions to choose from as they type. An auto-suggest box is a text entry box that triggers a list of basic search suggestions. Suggested terms can draw from a combination of popular search terms and historical user-entered terms.\n\nYou should also use an AutoSuggestBox control to implement a search box.\n\nUse a **RichEditBox** to display and edit text files. You don't use a RichEditBox to get user input into you app the way you use other standard text input boxes. Rather, you use it to work with text files that are separate from your app. You typically save text entered into a RichEditBox to a .rtf file.\n\n**Is text input the best option?**\n\nThere are many ways you can get user input in your app. These questions will help answer whether one of the standard text input boxes or another control is the best fit for getting user input.\n\n-   **Is it practical to efficiently enumerate all valid values?** If so, consider using one of the selection controls, such as a [check box](checkbox.md), [drop-down list](lists.md), list box, [radio button](radio-button.md), [slider](slider.md), [toggle switch](toggles.md), [date picker](date-and-time.md), or time picker.\n-   **Is there a fairly small set of valid values?** If so, consider a [drop-down list](lists.md) or a list box, especially if the values are more than a few characters long.\n-   **Is the valid data completely unconstrained? Or is the valid data only constrained by format (constrained length or character types)?** If so, use a text input control. You can limit the number of characters that can be entered, and you can validate the format in your app code.\n-   **Does the value represent a data type that has a specialized common control?** If so, use the appropriate control instead of a text input control. For example, use a [**DatePicker**](https://msdn.microsoft.com/library/windows/apps/br211681) instead of a text input control to accept a date entry.\n-   If the data is strictly numeric:\n    -   **Is the value being entered approximate and/or relative to another quantity on the same page?** If so, use a [slider](slider.md).\n    -   **Would the user benefit from instant feedback on the effect of setting changes?** If so, use a [slider](slider.md), possibly with an accompanying control.\n    -   **Is the value entered likely to be adjusted after the result is observed, such as with volume or screen brightness?** If so, use a [slider](slider.md).\n    \n## Examples\n\nText box\n\n![A text box](images/text-box.png)\n\nAuto suggest box\n\n![Example of the expanded auto-suggest control](images/controls_autosuggest_expanded01.png)\n\nPassword box\n\n![Password box focus state typing text](images/passwordbox-focus-typing.png)\n\n## Create a text control\n\nSee these articles for info and examples specific to each text control.\n\n-   [**AutoSuggestBox**](auto-suggest-box.md)\n-   [**PasswordBox**](password-box.md)\n-   [**RichEditBox**](rich-edit-box.md)\n-   [**RichTextBlock**](rich-text-block.md)\n-   [**TextBlock**](text-block.md)\n-   [**TextBox**](text-box.md)\n\n## Font and style guidelines\nSee these articles for font guidelines:\n\n- [**Font guidelines**](fonts.md)\n- [**Segoe MDL2 icon list and guidelines**](segoe-ui-symbol-font.md)\n\n\n## Choose the right keyboard for your text control\n\n**Applies to:** TextBox, PasswordBox RichEditBox\n\nTo help users to enter data using the touch keyboard, or Soft Input Panel (SIP), you can set the input scope of the text control to match the kind of data the user is expected to enter.\n\n>Tip \n>This info applies only to the SIP. It does not apply to hardware keyboards or the On-Screen Keyboard available in the Windows Ease of Access options.\n\nThe touch keyboard can be used for text entry when your app runs on a device with a touch screen. The touch keyboard is invoked when the user taps on an editable input field, such as a TextBox or RichEditBox. You can make it much faster and easier for users to enter data in your app by setting the input scope of the text control to match the kind of data you expect the user to enter. The input scope provides a hint to the system about the type of text input expected by the control so the system can provide a specialized touch keyboard layout for the input type.\n\nFor example, if a text box is used only to enter a 4-digit PIN, set the [InputScope](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.textbox.inputscope.aspx) property to **Number**. This tells the system to show the number keypad layout, which makes it easier for the user to enter the PIN.\n\n>Important  \n>The input scope does not cause any input validation to be performed, and does not prevent the user from providing any input through a hardware keyboard or other input device. You are still responsible for validating the input in your code as needed.\n\nFor more info, see [Use input scope to change the touch keyboard]().\n\n## Color fonts\n\n**Applies to:** TextBlock, RichTextBlock, TextBox, RichEditBox\n\nWindows has the ability for fonts to include multiple colored layers for each glyph. For example, the Segoe UI Emoji font defines color versions of the Emoticon and other Emoji characters. \n\nThe standard and rich text controls support display color fonts. By default, the **IsColorFontEnabled** property is **true** and fonts with these additional layers are rendered in color. The default color font on the system is Segoe UI Emoji and the controls will fall back to this font to display the glyphs in color. \n\n```xaml\n<TextBlock FontSize=\"30\">Hello â˜ºâ›„â˜‚â™¨â›…</TextBlock>\n```\n\nThe rendered text looks like this:\n\n![Text block with color font](images/text-block-color-fonts.png)\n\nFor more info, see the [**IsColorFontEnabled**](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.textblock.iscolorfontenabled.aspx) property.\n\n## Guidelines for line and paragraph separators\n\n**Applies to:** TextBlock, RichTextBlock, multi-line TextBox, RichEditBox\n\nUse the line separator character (0x2028) and the paragraph separator character (0x2029) to divide plain text. A new line is begun after each line separator. A new paragraph is begun after each paragraph separator.\n\nIt isn't necessary to start the first line or paragraph in a file with these characters or to end the last line or paragraph with them; doing so indicates that there is an empty line or paragraph in that location.\n\nYour app can use the line separator to indicate an unconditional end of line. However, line separators do not correspond to the separate carriage return and linefeed characters, or to a combination of these characters. Line separators must be processed separately from carriage return and linefeed characters.\n\nYour app can insert a paragraph separator between paragraphs of text. Use of this separator allows creation of plain text files that can be formatted with different line widths on different operating systems. The target system can ignore any line separators and break paragraphs only at the paragraph separators.\n\n\\[This article contains information that is specific to Universal Windows Platform (UWP) apps and Windows 10. For Windows 8.1 guidance, please download the [Windows 8.1 guidelines PDF](https://go.microsoft.com/fwlink/p/?linkid=258743).\\]\n\n## Related articles\n\n**For designers**\n- [**Font guidelines**](fonts.md)\n- [**Segoe MDL2 icon list and guidelines**](segoe-ui-symbol-font.md)\n- [Guidelines for spell checking](spell-checking-and-prediction.md)\n- [Adding search](https://msdn.microsoft.com/library/windows/apps/hh465231)\n\n**For developers (XAML)**\n- [**TextBox class**](https://msdn.microsoft.com/library/windows/apps/br209683)\n- [**Windows.UI.Xaml.Controls PasswordBox class**](https://msdn.microsoft.com/library/windows/apps/br227519)\n- [String.Length property](https://msdn.microsoft.com/library/system.string.length.aspx)\n"}