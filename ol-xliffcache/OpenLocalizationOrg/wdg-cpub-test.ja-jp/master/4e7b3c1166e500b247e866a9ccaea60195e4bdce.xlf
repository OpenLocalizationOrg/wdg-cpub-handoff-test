<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="ja-jp" version="2.0" xml:space="preserve" xmlns="urn:oasis:names:tc:xliff:document:2.0">
	<file id="1">
		<mda:metadata>
			<mda:metaGroup>
				<mda:meta type="tool-id">mdxliff</mda:meta>
				<mda:meta type="tool-name">mdxliff</mda:meta>
				<mda:meta type="tool-version">1.0-00ddeee</mda:meta>
				<mda:meta type="tool-company">Microsoft</mda:meta>
			</mda:metaGroup>
		<mda:metaGroup><mda:meta type="olfilehash">4e7b3c1166e500b247e866a9ccaea60195e4bdce</mda:meta><mda:meta type="olfilepath">wdg-cpub-test\ndolci2\controls-and-patterns\split-view.md</mda:meta><mda:meta type="oltranslationpriority"></mda:meta><mda:meta type="oltranslationtype">Human Translation</mda:meta><mda:meta type="olskeletonhash">838771e6e2c6ced160001b08ae8bf5d3b5e9e624</mda:meta><mda:meta type="olxliffhash">f5b4708f70646fdf822132665e614dd6c6886322</mda:meta></mda:metaGroup></mda:metadata>
		<group id="content">
			<unit id="101" translate="yes">
				<segment state="initial">
					<source>Split view</source>
					<target>Split view</target>
				</segment>
			</unit>
			<unit id="102" translate="yes">
				<segment state="initial">
					<source>A split view control has an expandable/collapsible pane and a content area.</source>
					<target>A split view control has an expandable/collapsible pane and a content area.</target>
				</segment>
			</unit>
			<unit id="103" translate="yes">
				<segment state="initial">
					<source>Guidelines for the split view control</source>
					<target>Guidelines for the split view control</target>
				</segment>
			</unit>
			<unit id="104" translate="yes">
				<segment state="initial">
					<source>\[ Updated for UWP apps on Windows 10.</source>
					<target>\[ Updated for UWP apps on Windows 10.</target>
				</segment>
			</unit>
			<unit id="105" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](http://go.microsoft.com/fwlink/p/?linkid=619132)</data>
				</originalData>
				<segment state="initial">
					<source>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</source>
					<target>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</target>
				</segment>
			</unit>
			<unit id="106" translate="yes">
				<segment state="initial">
					<source>Important APIs</source>
					<target>Important APIs</target>
				</segment>
			</unit>
			<unit id="107" translate="yes">
				<segment state="initial">
					<source>SplitView class (XAML)</source>
					<target>SplitView class (XAML)</target>
				</segment>
			</unit>
			<unit id="108" translate="yes">
				<segment state="initial">
					<source>SplitView object (HTML)</source>
					<target>SplitView object (HTML)</target>
				</segment>
			</unit>
			<unit id="109" translate="yes">
				<segment state="initial">
					<source>A split view control has an expandable/collapsible pane and a content area.</source>
					<target>A split view control has an expandable/collapsible pane and a content area.</target>
				</segment>
			</unit>
			<unit id="110" translate="yes">
				<segment state="initial">
					<source>The content area is always visible.</source>
					<target>The content area is always visible.</target>
				</segment>
			</unit>
			<unit id="111" translate="yes">
				<segment state="initial">
					<source>The pane can expand and collapse or remain in an open state, and can present itself from either the left side or right side of an app window.</source>
					<target>The pane can expand and collapse or remain in an open state, and can present itself from either the left side or right side of an app window.</target>
				</segment>
			</unit>
			<unit id="112" translate="yes">
				<segment state="initial">
					<source>The pane has three modes:</source>
					<target>The pane has three modes:</target>
				</segment>
			</unit>
			<unit id="113" translate="yes">
				<segment state="initial">
					<source>Overlay</source>
					<target>Overlay</target>
				</segment>
			</unit>
			<unit id="114" translate="yes">
				<segment state="initial">
					<source>The pane is hidden until opened.</source>
					<target>The pane is hidden until opened.</target>
				</segment>
			</unit>
			<unit id="115" translate="yes">
				<segment state="initial">
					<source>When open, the pane overlays the content area.</source>
					<target>When open, the pane overlays the content area.</target>
				</segment>
			</unit>
			<unit id="116" translate="yes">
				<segment state="initial">
					<source>Inline</source>
					<target>Inline</target>
				</segment>
			</unit>
			<unit id="117" translate="yes">
				<segment state="initial">
					<source>The pane is always visible and doesn't overlay the content area.</source>
					<target>The pane is always visible and doesn't overlay the content area.</target>
				</segment>
			</unit>
			<unit id="118" translate="yes">
				<segment state="initial">
					<source>The pane and content areas divide the available screen real estate.</source>
					<target>The pane and content areas divide the available screen real estate.</target>
				</segment>
			</unit>
			<unit id="119" translate="yes">
				<segment state="initial">
					<source>Compact</source>
					<target>Compact</target>
				</segment>
			</unit>
			<unit id="120" translate="yes">
				<segment state="initial">
					<source>The pane is always visible in this mode, which is just wide enough to show icons (usually 48 epx wide).</source>
					<target>The pane is always visible in this mode, which is just wide enough to show icons (usually 48 epx wide).</target>
				</segment>
			</unit>
			<unit id="121" translate="yes">
				<segment state="initial">
					<source>The pane and the content area divide the available screen real estate.</source>
					<target>The pane and the content area divide the available screen real estate.</target>
				</segment>
			</unit>
			<unit id="122" translate="yes">
				<segment state="initial">
					<source>Although the standard compact mode doesn't overlay the content area, it can transform to a wider pane to show more content which will overlay the content area.</source>
					<target>Although the standard compact mode doesn't overlay the content area, it can transform to a wider pane to show more content which will overlay the content area.</target>
				</segment>
			</unit>
			<unit id="123" translate="yes">
				<segment state="initial">
					<source>Is this the right control?</source>
					<target>Is this the right control?</target>
				</segment>
			</unit>
			<unit id="124" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](nav-pane.md)</data>
				</originalData>
				<segment state="initial">
					<source>The split view control can be used to make a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">nav pane pattern</pc>.</source>
					<target>The split view control can be used to make a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">nav pane pattern</pc>.</target>
				</segment>
			</unit>
			<unit id="125" translate="yes">
				<segment state="initial">
					<source>To build this pattern, add an expand/collapse button (the "hamburger" button) and a list view need to the split view control.</source>
					<target>To build this pattern, add an expand/collapse button (the "hamburger" button) and a list view need to the split view control.</target>
				</segment>
			</unit>
			<unit id="126" translate="yes">
				<segment state="initial">
					<source>Examples</source>
					<target>Examples</target>
				</segment>
			</unit>
			<unit id="127" translate="yes">
				<segment state="initial">
					<source>The split view control in its default form is a basic container.</source>
					<target>The split view control in its default form is a basic container.</target>
				</segment>
			</unit>
			<unit id="128" translate="yes">
				<segment state="initial">
					<source>With a button and a list view added, the split view control is ready as a navigation menu.</source>
					<target>With a button and a list view added, the split view control is ready as a navigation menu.</target>
				</segment>
			</unit>
			<unit id="129" translate="yes">
				<segment state="initial">
					<source>Here are examples of the split view as a navigation menu, in expanded and compact modes.</source>
					<target>Here are examples of the split view as a navigation menu, in expanded and compact modes.</target>
				</segment>
			</unit>
			<unit id="130" translate="yes">
				<segment state="initial">
					<source>an example of a split view menu in overlay mode and compact mode</source>
					<target>an example of a split view menu in overlay mode and compact mode</target>
				</segment>
			</unit>
			<unit id="131" translate="yes">
				<segment state="initial">
					<source>Recommendations</source>
					<target>Recommendations</target>
				</segment>
			</unit>
			<unit id="132" translate="yes">
				<segment state="initial">
					<source>When using split view for a navigation menu, we recommend placing in the pane navigation controls that allow access to other areas of the app.</source>
					<target>When using split view for a navigation menu, we recommend placing in the pane navigation controls that allow access to other areas of the app.</target>
				</segment>
			</unit>
			<unit id="133" translate="yes">
				<segment state="initial">
					<source>Using the pane for navigation provides a consistent user experience.</source>
					<target>Using the pane for navigation provides a consistent user experience.</target>
				</segment>
			</unit>
			<unit id="134" translate="yes">
				<segment state="initial">
					<source>In addition, this menu implementation can help familiarize users to all parts of an app, provide quick access to the app's home page, and can encourage users to explore more areas of the app.</source>
					<target>In addition, this menu implementation can help familiarize users to all parts of an app, provide quick access to the app's home page, and can encourage users to explore more areas of the app.</target>
				</segment>
			</unit>
			<unit id="135" translate="yes">
				<segment state="initial">
					<source>\[This article contains information that is specific to Universal Windows Platform (UWP) apps and Windows 10.</source>
					<target>\[This article contains information that is specific to Universal Windows Platform (UWP) apps and Windows 10.</target>
				</segment>
			</unit>
			<unit id="136" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://go.microsoft.com/fwlink/p/?linkid=258743)</data>
				</originalData>
				<segment state="initial">
					<source>For Windows 8.1 guidance, please download the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Windows 8.1 guidelines PDF</pc>.\]</source>
					<target>For Windows 8.1 guidance, please download the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Windows 8.1 guidelines PDF</pc>.\]</target>
				</segment>
			</unit>
			<unit id="137" translate="yes">
				<segment state="initial">
					<source>Related topics</source>
					<target>Related topics</target>
				</segment>
			</unit>
			<unit id="138" translate="yes">
				<segment state="initial">
					<source>Nav pane pattern</source>
					<target>Nav pane pattern</target>
				</segment>
			</unit>
			<unit id="139" translate="yes">
				<segment state="initial">
					<source>List view</source>
					<target>List view</target>
				</segment>
			</unit>
		</group>
	</file>
</xliff>