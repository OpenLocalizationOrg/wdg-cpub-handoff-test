{"nodes":[{"content":"Determining availability of Microsoft OneDrive files","pos":[2,54]},{"content":"\\[ Updated for UWP apps on Windows 10.","pos":[56,94]},{"content":"For Windows 8.x articles, see the <bpt id=\"p1\">[</bpt>archive<ept id=\"p1\">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept> \\]","pos":[95,190],"source":" For Windows 8.x articles, see the [archive](http://go.microsoft.com/fwlink/p/?linkid=619132) \\]"},{"content":"Important APIs","pos":[196,210]},{"content":"FileIO class","pos":[222,234]},{"content":"StorageFile class","pos":[303,320]},{"content":"StorageFile.IsAvailable property","pos":[389,421]},{"pos":[526,727],"content":"Determine if a Microsoft OneDrive file is available using the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>StorageFile.IsAvailable<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/en-us/library/windows/apps/windows.storage.storagefile.isavailable.aspx)</ept> property.","source":"Determine if a Microsoft OneDrive file is available using the [**StorageFile.IsAvailable**](https://msdn.microsoft.com/en-us/library/windows/apps/windows.storage.storagefile.isavailable.aspx) property."},{"content":"Prerequisites","pos":[732,745]},{"content":"Understand async programming for Universal Windows Platform (UWP) apps","pos":[753,823]},{"content":"You can learn how to write asynchronous apps in C\\# or Visual Basic, see <bpt id=\"p1\">[</bpt>Call asynchronous APIs in C\\# or Visual Basic<ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/Mt187337)</ept>.","pos":[831,1010],"source":"You can learn how to write asynchronous apps in C\\# or Visual Basic, see [Call asynchronous APIs in C\\# or Visual Basic](https://msdn.microsoft.com/library/windows/apps/Mt187337)."},{"content":"To learn how to write asynchronous apps in C++, see <bpt id=\"p1\">[</bpt>Asynchronous programming in C++<ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/Mt187334)</ept>.","pos":[1011,1155],"source":" To learn how to write asynchronous apps in C++, see [Asynchronous programming in C++](https://msdn.microsoft.com/library/windows/apps/Mt187334)."},{"content":"App capabilty declarations","pos":[1163,1189]},{"pos":[1197,1255],"content":"See <bpt id=\"p1\">[</bpt>File access permissions<ept id=\"p1\">](file-access-permissions.md)</ept>.","source":"See [File access permissions](file-access-permissions.md)."},{"content":"Using the StorageFile.IsAvailable property","pos":[1260,1302]},{"content":"Users are able to mark OneDrive files as either available-offline (default) or online-only.","pos":[1304,1395]},{"content":"This capability enables users to move large files (such as pictures and videos) to their OneDrive, mark them as online-only, and save disk space (the only thing kept locally is a metadata file).","pos":[1396,1590]},{"content":"<bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>StorageFile.IsAvailable<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/en-us/library/windows/apps/windows.storage.storagefile.isavailable.aspx)</ept>, is used to determine if a file is currently available.","pos":[1592,1777],"source":"[**StorageFile.IsAvailable**](https://msdn.microsoft.com/en-us/library/windows/apps/windows.storage.storagefile.isavailable.aspx), is used to determine if a file is currently available."},{"content":"The following table shows the value of the <bpt id=\"p1\">**</bpt>StorageFile.IsAvailable<ept id=\"p1\">**</ept> property in various scenarios.","pos":[1778,1879],"source":" The following table shows the value of the **StorageFile.IsAvailable** property in various scenarios."},{"content":"Type of file","pos":[1883,1895]},{"content":"Online","pos":[1927,1933]},{"content":"Metered network","pos":[1936,1951]},{"content":"Offline","pos":[1961,1968]},{"content":"Local file","pos":[2063,2073]},{"content":"True","pos":[2107,2111]},{"content":"True","pos":[2116,2120]},{"content":"True","pos":[2141,2145]},{"content":"OneDrive file marked as available-offline","pos":[2153,2194]},{"content":"True","pos":[2197,2201]},{"content":"True","pos":[2206,2210]},{"content":"True","pos":[2231,2235]},{"content":"OneDrive file marked as online-only","pos":[2243,2278]},{"content":"True","pos":[2287,2291]},{"content":"Based on user settings","pos":[2296,2318]},{"content":"False","pos":[2321,2326]},{"content":"Network file","pos":[2333,2345]},{"content":"True","pos":[2377,2381]},{"content":"Based on user settings","pos":[2386,2408]},{"content":"False","pos":[2411,2416]},{"content":"The following steps illustrate how to determine if a file is currently available.","pos":[2425,2506]},{"content":"Declare a capability appropriate for the library you want to access.","pos":[2512,2580]},{"content":"Include the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>Windows.Storage<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/BR227346)</ept> namespace.","pos":[2585,2687],"source":"Include the [**Windows.Storage**](https://msdn.microsoft.com/library/windows/apps/BR227346) namespace."},{"content":"This namespace includes the types for managing files, folders, and application settings.","pos":[2688,2776]},{"content":"It also includes the needed <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>StorageFile<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/BR227171)</ept> type.","pos":[2777,2886],"source":" It also includes the needed [**StorageFile**](https://msdn.microsoft.com/library/windows/apps/BR227171) type."},{"content":"Acquire a <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>StorageFile<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/BR227171)</ept> object for the desired file(s).","pos":[2891,3008],"source":"Acquire a [**StorageFile**](https://msdn.microsoft.com/library/windows/apps/BR227171) object for the desired file(s)."},{"content":"If you are enumerating a library, this step is usually accomplished by calling the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>StorageFolder.CreateFileQuery<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/BR227252)</ept> method and then calling the resulting <bpt id=\"p3\">[</bpt><bpt id=\"p4\">**</bpt>StorageFileQueryResult<ept id=\"p4\">**</ept><ept id=\"p3\">](https://msdn.microsoft.com/library/windows/apps/BR208046)</ept> object's <bpt id=\"p5\">[</bpt><bpt id=\"p6\">**</bpt>GetFilesAsync<ept id=\"p6\">**</ept><ept id=\"p5\">](https://msdn.microsoft.com/en-us/library/windows/apps/br227276.aspx)</ept> method.","pos":[3009,3416],"source":" If you are enumerating a library, this step is usually accomplished by calling the [**StorageFolder.CreateFileQuery**](https://msdn.microsoft.com/library/windows/apps/BR227252) method and then calling the resulting [**StorageFileQueryResult**](https://msdn.microsoft.com/library/windows/apps/BR208046) object's [**GetFilesAsync**](https://msdn.microsoft.com/en-us/library/windows/apps/br227276.aspx) method."},{"content":"The <bpt id=\"p1\">**</bpt>GetFilesAsync<ept id=\"p1\">**</ept> method returns an <bpt id=\"p2\">[</bpt>IReadOnlyList<ept id=\"p2\">](http://go.microsoft.com/fwlink/p/?LinkId=324970)</ept> collection of <bpt id=\"p3\">**</bpt>StorageFile<ept id=\"p3\">**</ept> objects.","pos":[3417,3560],"source":" The **GetFilesAsync** method returns an [IReadOnlyList](http://go.microsoft.com/fwlink/p/?LinkId=324970) collection of **StorageFile** objects."},{"pos":[3565,3914],"content":"Once you have the access to a <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>StorageFile<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/BR227171)</ept> object representing the desired file(s), the value of the <bpt id=\"p3\">[</bpt><bpt id=\"p4\">**</bpt>StorageFile.IsAvailable<ept id=\"p4\">**</ept><ept id=\"p3\">](https://msdn.microsoft.com/en-us/library/windows/apps/windows.storage.storagefile.isavailable.aspx)</ept> property reflects whether or not the file is available.","source":"Once you have the access to a [**StorageFile**](https://msdn.microsoft.com/library/windows/apps/BR227171) object representing the desired file(s), the value of the [**StorageFile.IsAvailable**](https://msdn.microsoft.com/en-us/library/windows/apps/windows.storage.storagefile.isavailable.aspx) property reflects whether or not the file is available."},{"content":"The following generic method illustrates how to enumerate any folder and return the collection of <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>StorageFile<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/BR227171)</ept> objects for that folder.","pos":[3916,4114],"source":"The following generic method illustrates how to enumerate any folder and return the collection of [**StorageFile**](https://msdn.microsoft.com/library/windows/apps/BR227171) objects for that folder."},{"content":"The calling method then iterates over the returned collection referencing the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>StorageFile.IsAvailable<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/en-us/library/windows/apps/windows.storage.storagefile.isavailable.aspx)</ept> property for each file.","pos":[4115,4346],"source":" The calling method then iterates over the returned collection referencing the [**StorageFile.IsAvailable**](https://msdn.microsoft.com/en-us/library/windows/apps/windows.storage.storagefile.isavailable.aspx) property for each file."}],"content":"# Determining availability of Microsoft OneDrive files\n\n\\[ Updated for UWP apps on Windows 10. For Windows 8.x articles, see the [archive](http://go.microsoft.com/fwlink/p/?linkid=619132) \\]\n\n\n** Important APIs **\n\n-   [**FileIO class**](https://msdn.microsoft.com/library/windows/apps/Hh701440)\n-   [**StorageFile class**](https://msdn.microsoft.com/library/windows/apps/BR227171)\n-   [**StorageFile.IsAvailable property**](https://msdn.microsoft.com/en-us/library/windows/apps/windows.storage.storagefile.isavailable.aspx)\n\nDetermine if a Microsoft OneDrive file is available using the [**StorageFile.IsAvailable**](https://msdn.microsoft.com/en-us/library/windows/apps/windows.storage.storagefile.isavailable.aspx) property.\n\n## Prerequisites\n\n-   **Understand async programming for Universal Windows Platform (UWP) apps**\n\n    You can learn how to write asynchronous apps in C\\# or Visual Basic, see [Call asynchronous APIs in C\\# or Visual Basic](https://msdn.microsoft.com/library/windows/apps/Mt187337). To learn how to write asynchronous apps in C++, see [Asynchronous programming in C++](https://msdn.microsoft.com/library/windows/apps/Mt187334).\n\n-   **App capabilty declarations**\n\n    See [File access permissions](file-access-permissions.md).\n\n## Using the StorageFile.IsAvailable property\n\nUsers are able to mark OneDrive files as either available-offline (default) or online-only. This capability enables users to move large files (such as pictures and videos) to their OneDrive, mark them as online-only, and save disk space (the only thing kept locally is a metadata file).\n\n[**StorageFile.IsAvailable**](https://msdn.microsoft.com/en-us/library/windows/apps/windows.storage.storagefile.isavailable.aspx), is used to determine if a file is currently available. The following table shows the value of the **StorageFile.IsAvailable** property in various scenarios.\n\n| Type of file                              | Online | Metered network        | Offline |\n|-------------------------------------------|--------|------------------------|---------|\n| Local file                                | True   | True                   | True    |\n| OneDrive file marked as available-offline | True   | True                   | True    |\n| OneDrive file marked as online-only       | True   | Based on user settings | False   |\n| Network file                              | True   | Based on user settings | False   |\n\n \n\nThe following steps illustrate how to determine if a file is currently available.\n\n1.  Declare a capability appropriate for the library you want to access.\n2.  Include the [**Windows.Storage**](https://msdn.microsoft.com/library/windows/apps/BR227346) namespace. This namespace includes the types for managing files, folders, and application settings. It also includes the needed [**StorageFile**](https://msdn.microsoft.com/library/windows/apps/BR227171) type.\n3.  Acquire a [**StorageFile**](https://msdn.microsoft.com/library/windows/apps/BR227171) object for the desired file(s). If you are enumerating a library, this step is usually accomplished by calling the [**StorageFolder.CreateFileQuery**](https://msdn.microsoft.com/library/windows/apps/BR227252) method and then calling the resulting [**StorageFileQueryResult**](https://msdn.microsoft.com/library/windows/apps/BR208046) object's [**GetFilesAsync**](https://msdn.microsoft.com/en-us/library/windows/apps/br227276.aspx) method. The **GetFilesAsync** method returns an [IReadOnlyList](http://go.microsoft.com/fwlink/p/?LinkId=324970) collection of **StorageFile** objects.\n4.  Once you have the access to a [**StorageFile**](https://msdn.microsoft.com/library/windows/apps/BR227171) object representing the desired file(s), the value of the [**StorageFile.IsAvailable**](https://msdn.microsoft.com/en-us/library/windows/apps/windows.storage.storagefile.isavailable.aspx) property reflects whether or not the file is available.\n\nThe following generic method illustrates how to enumerate any folder and return the collection of [**StorageFile**](https://msdn.microsoft.com/library/windows/apps/BR227171) objects for that folder. The calling method then iterates over the returned collection referencing the [**StorageFile.IsAvailable**](https://msdn.microsoft.com/en-us/library/windows/apps/windows.storage.storagefile.isavailable.aspx) property for each file.\n\n```CSharp\n/// <summary>\n/// Generic function that retrieves all files from the specified folder.\n/// </summary>\n/// <param name=\"folder\">The folder to be searched.</param>\n/// <returns>An IReadOnlyList collection containing the file objects.</returns>\nasync Task<System.Collections.Generic.IReadOnlyList<StorageFile>> GetLibraryFilesAsync(StorageFolder folder)\n{\n    var query = folder.CreateFileQuery();\n    return await query.GetFilesAsync();\n}\n\n...\n\nprivate async void CheckAvailabilityOfFilesInPicturesLibrary()\n{\n    // Determine availability of all files within Pictures library.\n    var files = await GetLibraryFilesAsync(KnownFolders.PicturesLibrary);\n    for (int i = 0; i < files.Count; i++)\n    {\n        StorageFile file = files[i];\n\n        StringBuilder fileInfo = new StringBuilder();\n        fileInfo.AppendFormat(\"{0} (on {1}) is {2}\", \n                    file.Name, \n                    file.Provider.DisplayName, \n                    file.IsAvailable ? \"available\" : \"not available\");\n    }\n}\n```\n\n \n\n \n\n\n\n"}