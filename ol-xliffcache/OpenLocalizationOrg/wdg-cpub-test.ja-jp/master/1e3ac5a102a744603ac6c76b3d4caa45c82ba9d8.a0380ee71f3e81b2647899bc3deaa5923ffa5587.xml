{"nodes":[{"pos":[17,120],"content":"Used to select or deselect action items. Can be used for a single list item or for multiple list items.","needQuote":true,"needEscape":true,"nodes":[{"content":"Used to select or deselect action items. Can be used for a single list item or for multiple list items.","pos":[0,103],"nodes":[{"content":"Used to select or deselect action items.","pos":[0,40]},{"content":"Can be used for a single list item or for multiple list items.","pos":[41,103]}]}]},{"pos":[128,139],"content":"Check boxes","needQuote":true,"needEscape":true,"nodes":[{"content":"Check boxes","pos":[0,11]}]},{"content":"Check boxes","pos":[235,246]},{"content":"A check box is used to select or deselect action items.","pos":[248,303]},{"content":"It can be used for a single item or for a list of multiple items that a user can choose from.","pos":[304,397]},{"content":"The control has three selection states: unselected, selected, and indeterminate.","pos":[398,478]},{"content":"Use the indeterminate state when a collection of sub-choices have both unselected and selected states.","pos":[479,581]},{"content":"Example of check box states","pos":[585,612]},{"pos":[718,732],"content":"Important APIs"},{"content":"CheckBox class","pos":[747,761]},{"content":"Checked event","pos":[830,843]},{"content":"IsChecked property","pos":[965,983]},{"content":"Is this the right control?","pos":[1105,1131]},{"content":"Use a <bpt id=\"p1\">**</bpt>single check box<ept id=\"p1\">**</ept> for a binary yes/no choice, such as with a \"Remember me?\"","pos":[1133,1217],"source":"Use a **single check box** for a binary yes/no choice, such as with a \"Remember me?\""},{"content":"login scenario or with a terms of service agreement.","pos":[1218,1270]},{"content":"A single check box used for an individual choice","pos":[1274,1322]},{"content":"For a binary choice, the main difference between a <bpt id=\"p1\">**</bpt>check box<ept id=\"p1\">**</ept> and a <bpt id=\"p2\">**</bpt>toggle switch<ept id=\"p2\">**</ept> is that the check box is for status and the toggle switch is for action.","pos":[1347,1508],"source":"For a binary choice, the main difference between a **check box** and a **toggle switch** is that the check box is for status and the toggle switch is for action."},{"content":"You can delay committing a check box interaction (as part of a form submit, for example), while you should immediately commit a toggle switch interaction.","pos":[1509,1663]},{"content":"Also, only check boxes allow for multi-selection.","pos":[1664,1713]},{"pos":[1715,1869],"content":"Use <bpt id=\"p1\">**</bpt>multiple check boxes<ept id=\"p1\">**</ept> for multi-select scenarios in which a user chooses one or more items from a group of choices that are not mutually exclusive.","source":"Use **multiple check boxes** for multi-select scenarios in which a user chooses one or more items from a group of choices that are not mutually exclusive."},{"content":"Create a group of check boxes when users can select any combination of options.","pos":[1871,1950]},{"content":"Selecting multiple options with check boxes","pos":[1954,1997]},{"content":"When options can be grouped, you can use an indeterminate check box to represent the whole group.","pos":[2022,2119]},{"content":"Use the check box's indeterminate state when a user selects some, but not all, sub-items in the group.","pos":[2120,2222]},{"content":"Check boxes used to show a mixed choice","pos":[2226,2265]},{"content":"Both <bpt id=\"p1\">**</bpt>check box<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>radio button<ept id=\"p2\">**</ept> controls let the user select from a list of options.","pos":[2290,2382],"source":"Both **check box** and **radio button** controls let the user select from a list of options."},{"content":"Check boxes let the user select a combination of options.","pos":[2383,2440]},{"content":"In contrast, radio buttons let the user make a single choice from mutually exclusive options.","pos":[2441,2534]},{"content":"When there is more than one option but only one can be selected, use a radio button instead.","pos":[2535,2627]},{"content":"Examples","pos":[2632,2640]},{"content":"A check box in a dialog in the Microsoft Edge browser.","pos":[2642,2696]},{"content":"A check box in a dialog in the Microsoft Edge browser","pos":[2700,2753]},{"content":"Check boxes in the Alarms &amp; Clock app in Windows.","pos":[2800,2849],"source":"Check boxes in the Alarms & Clock app in Windows."},{"content":"Check boxes in the Alarms &amp; Clock app in Windows","pos":[2853,2901],"source":"Check boxes in the Alarms & Clock app in Windows"},{"content":"Create a checkbox","pos":[2952,2969]},{"content":"To assign a label to the checkbox, set the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>Content<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.contentcontrol.content.aspx)</ept> property.","pos":[2971,3139],"source":"To assign a label to the checkbox, set the [**Content**](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.contentcontrol.content.aspx) property."},{"content":"The label displays next to the checkbox.","pos":[3140,3180]},{"content":"This XAML creates a single check box that is used to agree to terms of service before a form can be submitted.","pos":[3182,3292]},{"content":"Here's the same check box created in code.","pos":[3406,3448]},{"content":"Bind to IsChecked","pos":[3562,3579]},{"content":"Use the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>IsChecked<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.primitives.togglebutton.ischecked.aspx)</ept> property to determine whether the check box is checked or cleared.","pos":[3581,3784],"source":"Use the [**IsChecked**](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.primitives.togglebutton.ischecked.aspx) property to determine whether the check box is checked or cleared."},{"content":"You can bind the value of the IsChecked property to another binary value.","pos":[3785,3858]},{"content":"However, because IsChecked is a <bpt id=\"p1\">[</bpt>nullable<ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/b3h38hb0.aspx)</ept> boolean value, you must use a value converter to bind it to a boolean value.","pos":[3859,4041],"source":" However, because IsChecked is a [nullable](https://msdn.microsoft.com/library/windows/apps/b3h38hb0.aspx) boolean value, you must use a value converter to bind it to a boolean value."},{"content":"In this example, the <bpt id=\"p1\">**</bpt>IsChecked<ept id=\"p1\">**</ept> property of the check box to agree to terms of service is bound to the <bpt id=\"p2\">[</bpt><bpt id=\"p3\">**</bpt>IsEnabled<ept id=\"p3\">**</ept><ept id=\"p2\">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.control.isenabled.aspx)</ept> property of a Submit button.","pos":[4043,4290],"source":"In this example, the **IsChecked** property of the check box to agree to terms of service is bound to the [**IsEnabled**](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.control.isenabled.aspx) property of a Submit button."},{"content":"The Submit button is enabled only if the terms of service are agreed to.","pos":[4291,4363]},{"content":"Note<ph id=\"ph1\">&amp;nbsp;&amp;nbsp;</ph>We only show the relevant code here.","pos":[4367,4419],"source":"Note&nbsp;&nbsp;We only show the relevant code here."},{"content":"For more info about data binding and value converters, see <bpt id=\"p1\">[</bpt>Data binding overview<ept id=\"p1\">](../data-binding/data-binding-quickstart.md)</ept>.","pos":[4420,4547],"source":" For more info about data binding and value converters, see [Data binding overview](../data-binding/data-binding-quickstart.md)."},{"content":"Handle Click and Checked events","pos":[5524,5555]},{"pos":[5557,6036],"content":"To perform an action when the check box state changes, you can handle either the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>Click<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.primitives.buttonbase.click.aspx)</ept> event, or the <bpt id=\"p3\">[</bpt><bpt id=\"p4\">**</bpt>Checked<ept id=\"p4\">**</ept><ept id=\"p3\">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.primitives.togglebutton.checked.aspx)</ept> and <bpt id=\"p5\">[</bpt><bpt id=\"p6\">**</bpt>Unchecked<ept id=\"p6\">**</ept><ept id=\"p5\">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.primitives.togglebutton.unchecked.aspx)</ept> events.","source":"To perform an action when the check box state changes, you can handle either the [**Click**](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.primitives.buttonbase.click.aspx) event, or the [**Checked**](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.primitives.togglebutton.checked.aspx) and [**Unchecked**](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.primitives.togglebutton.unchecked.aspx) events."},{"content":"The <bpt id=\"p1\">**</bpt>Click<ept id=\"p1\">**</ept> event occurs whenever the checked state changes.","pos":[6039,6101],"source":"The **Click** event occurs whenever the checked state changes."},{"content":"If you handle the Click event, use the <bpt id=\"p1\">**</bpt>IsChecked<ept id=\"p1\">**</ept> property to determine the state of the check box.","pos":[6102,6204],"source":" If you handle the Click event, use the **IsChecked** property to determine the state of the check box."},{"content":"The <bpt id=\"p1\">**</bpt>Checked<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>Unchecked<ept id=\"p2\">**</ept> events occur independently.","pos":[6206,6267],"source":"The **Checked** and **Unchecked** events occur independently."},{"content":"If you handle these events, you should handle both of them to repsond to state changes in the check box.","pos":[6268,6372]},{"content":"In the following examples, we show handling the Click event, and the Checked and Unchecked events.","pos":[6374,6472]},{"content":"Multiple checkboxes can share the same event handler.","pos":[6475,6528]},{"content":"This example creates four checkboxes for selecting pizza toppings.","pos":[6529,6595]},{"content":"The four checkboxes share the same <bpt id=\"p1\">**</bpt>Click<ept id=\"p1\">**</ept> event handler to update the list of selected toppings.","pos":[6596,6695],"source":" The four checkboxes share the same **Click** event handler to update the list of selected toppings."},{"content":"Here's the event handler for the Click event.","pos":[7332,7377]},{"content":"Every time a checkbox is clicked, it examines the checkboxes to see which ones are checked and update list of selected toppings.","pos":[7378,7506]},{"content":"Use the indeterminate state","pos":[8129,8156]},{"pos":[8158,8337],"content":"The CheckBox control inherits from <bpt id=\"p1\">[</bpt>ToggleButton<ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.primitives.togglebutton.aspx)</ept> and can have three states:","source":"The CheckBox control inherits from [ToggleButton](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.primitives.togglebutton.aspx) and can have three states:"},{"content":"State","pos":[8340,8345]},{"content":"Property","pos":[8348,8356]},{"content":"Value","pos":[8359,8364]},{"content":"checked","pos":[8390,8397]},{"content":"IsChecked","pos":[8400,8409]},{"content":"true","pos":[8414,8418]},{"content":"unchecked","pos":[8422,8431]},{"content":"IsChecked","pos":[8434,8443]},{"content":"false","pos":[8448,8453]},{"content":"indeterminate","pos":[8457,8470]},{"content":"IsChecked","pos":[8473,8482]},{"content":"null","pos":[8487,8491]},{"pos":[8496,8722],"content":"For the check box to report the indeterminate state, you must set the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>IsThreeState<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.primitives.togglebutton.isthreestate.aspx)</ept> property to <bpt id=\"p3\">**</bpt>true<ept id=\"p3\">**</ept>.","source":"For the check box to report the indeterminate state, you must set the [**IsThreeState**](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.primitives.togglebutton.isthreestate.aspx) property to **true**."},{"content":"When options can be grouped, you can use an indeterminate check box to represent the whole group.","pos":[8725,8822]},{"content":"Use the check box's indeterminate state when a user selects some, but not all, sub-items in the group.","pos":[8823,8925]},{"content":"In the following example, the \"Select all\" checkbox has its IsThreeState property set to <bpt id=\"p1\">**</bpt>true<ept id=\"p1\">**</ept>.","pos":[8927,9025],"source":"In the following example, the \"Select all\" checkbox has its IsThreeState property set to **true**."},{"content":"The \"Select all\" checkbox is checked if all child elements are checked, unchecked if all child elements are unchecked, and indeterminate otherwise.","pos":[9026,9173]},{"content":"Recommendations","pos":[11927,11942]},{"content":"Verify that the purpose and current state of the check box is clear.","pos":[11949,12017]},{"content":"Limit check box text content to no more than two lines.","pos":[12022,12077]},{"content":"Word the checkbox label as a statement that the check mark makes true and the absence of a check mark makes false.","pos":[12082,12196]},{"content":"Use the default font unless your brand guidelines tell you to use another.","pos":[12201,12275]},{"content":"If the text content is dynamic, consider how the control will resize and what will happen to visuals around it.","pos":[12280,12391]},{"pos":[12396,12518],"content":"If there are two or more mutually exclusive options from which to choose, consider using <bpt id=\"p1\">[</bpt>radio buttons<ept id=\"p1\">](radio-button.md)</ept>.","source":"If there are two or more mutually exclusive options from which to choose, consider using [radio buttons](radio-button.md)."},{"content":"Don't put two check box groups next to each other.","pos":[12523,12573]},{"content":"Use group labels to separate the groups.","pos":[12574,12614]},{"content":"Don't use a check box as an on/off control or to perform a command; instead, use a toggle switch.","pos":[12619,12716]},{"content":"Don't use a check box to display other controls, such as a dialog box.","pos":[12721,12791]},{"content":"Use the indeterminate state to indicate that an option is set for some, but not all, sub-choices.","pos":[12796,12893]},{"content":"When using indeterminate state, use subordinate check boxes to show which options are selected and which are not.","pos":[12898,13011]},{"content":"Design the UI so that the user can get see the sub-choices.","pos":[13012,13071]},{"content":"Don't use the indeterminate state to represent a third state.","pos":[13076,13137]},{"content":"The indeterminate state is used to indicate that an option is set for some, but not all, sub-choices.","pos":[13138,13239]},{"content":"So, don't allow users to set an indeterminate state directly.","pos":[13240,13301]},{"content":"For an example of what not to do, this check box uses the indeterminate state to indicate medium spiciness:","pos":[13302,13409]},{"content":"An indeterminate check box","pos":[13417,13443]},{"content":"Instead, use a radio button group that has three options: Not spicy, Spicy, and Extra spicy.","pos":[13478,13570]},{"content":"Radio button group with three options: Not spicy, Spicy, and Extra spicy","pos":[13578,13650]},{"content":"Related articles","pos":[13682,13698]},{"content":"CheckBox class","pos":[13707,13721]}],"content":"---\nDescription: Used to select or deselect action items. Can be used for a single list item or for multiple list items.\ntitle: Check boxes\nms.assetid: 6231A806-287D-43EE-BD8D-39D2FF761914\nlabel: Check boxes\ntemplate: detail.hbs\n---\n# Check boxes\n\nA check box is used to select or deselect action items. It can be used for a single item or for a list of multiple items that a user can choose from. The control has three selection states: unselected, selected, and indeterminate. Use the indeterminate state when a collection of sub-choices have both unselected and selected states.\n\n![Example of check box states](images/templates-checkbox-states-default.png)\n\n<span class=\"sidebar_heading\" style=\"font-weight: bold;\">Important APIs</span>\n-   [**CheckBox class**](https://msdn.microsoft.com/library/windows/apps/br209316)\n-   [**Checked event**](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.primitives.togglebutton.checked.aspx)\n-   [**IsChecked property**](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.primitives.togglebutton.ischecked.aspx) \n\n## Is this the right control?\n\nUse a **single check box** for a binary yes/no choice, such as with a \"Remember me?\" login scenario or with a terms of service agreement.\n\n![A single check box used for an individual choice](images/checkbox1.png)\n\nFor a binary choice, the main difference between a **check box** and a **toggle switch** is that the check box is for status and the toggle switch is for action. You can delay committing a check box interaction (as part of a form submit, for example), while you should immediately commit a toggle switch interaction. Also, only check boxes allow for multi-selection.\n\nUse **multiple check boxes** for multi-select scenarios in which a user chooses one or more items from a group of choices that are not mutually exclusive.\n\nCreate a group of check boxes when users can select any combination of options.\n\n![Selecting multiple options with check boxes](images/checkbox2.png)\n\nWhen options can be grouped, you can use an indeterminate check box to represent the whole group. Use the check box's indeterminate state when a user selects some, but not all, sub-items in the group.\n\n![Check boxes used to show a mixed choice](images/checkbox3.png)\n\nBoth **check box** and **radio button** controls let the user select from a list of options. Check boxes let the user select a combination of options. In contrast, radio buttons let the user make a single choice from mutually exclusive options. When there is more than one option but only one can be selected, use a radio button instead.\n\n## Examples\n\nA check box in a dialog in the Microsoft Edge browser.\n\n![A check box in a dialog in the Microsoft Edge browser](images/control-examples/check-box-edge.png)\n\nCheck boxes in the Alarms & Clock app in Windows.\n\n![Check boxes in the Alarms & Clock app in Windows](images/control-examples/check-box-alarm.png)\n\n## Create a checkbox\n\nTo assign a label to the checkbox, set the [**Content**](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.contentcontrol.content.aspx) property. The label displays next to the checkbox.\n\nThis XAML creates a single check box that is used to agree to terms of service before a form can be submitted. \n\n```xaml\n<CheckBox x:Name=\"termsOfServiceCheckBox\" \n          Content=\"I agree to the terms of service.\"/>\n```\n\nHere's the same check box created in code.\n\n```csharp\nCheckBox checkBox1 = new CheckBox();\ncheckBox1.Content = \"I agree to the terms of service.\";\n```\n\n### Bind to IsChecked\n\nUse the [**IsChecked**](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.primitives.togglebutton.ischecked.aspx) property to determine whether the check box is checked or cleared. You can bind the value of the IsChecked property to another binary value. However, because IsChecked is a [nullable](https://msdn.microsoft.com/library/windows/apps/b3h38hb0.aspx) boolean value, you must use a value converter to bind it to a boolean value.\n\nIn this example, the **IsChecked** property of the check box to agree to terms of service is bound to the [**IsEnabled**](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.control.isenabled.aspx) property of a Submit button. The Submit button is enabled only if the terms of service are agreed to.\n\n> Note&nbsp;&nbsp;We only show the relevant code here. For more info about data binding and value converters, see [Data binding overview](../data-binding/data-binding-quickstart.md).\n\n```xaml\n...\n<Page.Resources>\n    <local:NullableBooleanToBooleanConverter x:Key=\"NullableBooleanToBooleanConverter\"/>\n</Page.Resources>\n\n...\n\n<StackPanel Grid.Column=\"2\" Margin=\"40\">\n    <CheckBox x:Name=\"termsOfServiceCheckBox\" Content=\"I agree to the terms of service.\"/>\n    <Button Content=\"Submit\" \n            IsEnabled=\"{x:Bind termsOfServiceCheckBox.IsChecked, \n                        Converter={StaticResource NullableBooleanToBooleanConverter}, Mode=OneWay}\"/>\n</StackPanel>\n```\n\n```csharp\npublic class NullableBooleanToBooleanConverter : IValueConverter\n{\n    public object Convert(object value, Type targetType, object parameter, string language)\n    {\n        if (value is bool?)\n        {\n            return (bool)value;\n        }\n        return false;\n    }\n\n    public object ConvertBack(object value, Type targetType, object parameter, string language)\n    {\n        if (value is bool)\n            return (bool)value;\n        return false;\n    }\n}\n```\n\n### Handle Click and Checked events\n\nTo perform an action when the check box state changes, you can handle either the [**Click**](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.primitives.buttonbase.click.aspx) event, or the [**Checked**](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.primitives.togglebutton.checked.aspx) and [**Unchecked**](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.primitives.togglebutton.unchecked.aspx) events. \n\nThe **Click** event occurs whenever the checked state changes. If you handle the Click event, use the **IsChecked** property to determine the state of the check box.\n\nThe **Checked** and **Unchecked** events occur independently. If you handle these events, you should handle both of them to repsond to state changes in the check box.\n\nIn the following examples, we show handling the Click event, and the Checked and Unchecked events. \n\nMultiple checkboxes can share the same event handler. This example creates four checkboxes for selecting pizza toppings. The four checkboxes share the same **Click** event handler to update the list of selected toppings.\n\n```XAML\n<StackPanel Margin=\"40\">\n    <TextBlock Text=\"Pizza Toppings\"/>\n    <CheckBox Content=\"Pepperoni\" x:Name=\"pepperoniCheckbox\"\n              Click=\"toppingsCheckbox_Click\"/>\n    <CheckBox Content=\"Beef\" x:Name=\"beefCheckbox\" \n              Click=\"toppingsCheckbox_Click\"/>\n    <CheckBox Content=\"Mushrooms\" x:Name=\"mushroomsCheckbox\"\n              Click=\"toppingsCheckbox_Click\"/>\n    <CheckBox Content=\"Onions\" x:Name=\"onionsCheckbox\"\n              Click=\"toppingsCheckbox_Click\"/>\n\n    <!-- Display the selected toppings. -->\n    <TextBlock Text=\"Toppings selected:\"/>\n    <TextBlock x:Name=\"toppingsList\"/>\n</StackPanel>\n```\n\nHere's the event handler for the Click event. Every time a checkbox is clicked, it examines the checkboxes to see which ones are checked and update list of selected toppings.\n\n```csharp\nprivate void toppingsCheckbox_Click(object sender, RoutedEventArgs e)\n{\n    string selectedToppingsText = string.Empty;\n    CheckBox[] checkboxes = new CheckBox[] { pepperoniCheckbox, beefCheckbox,\n                                             mushroomsCheckbox, onionsCheckbox };\n    foreach (CheckBox c in checkboxes)\n    {\n        if (c.IsChecked == true)\n        {\n            if (selectedToppingsText.Length > 1)\n            {\n                selectedToppingsText += \", \";\n            }\n            selectedToppingsText += c.Content;\n        }\n    }\n    toppingsList.Text = selectedToppingsText;\n}\n```\n\n### Use the indeterminate state\n\nThe CheckBox control inherits from [ToggleButton](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.primitives.togglebutton.aspx) and can have three states: \n\nState | Property | Value\n------|----------|------\nchecked | IsChecked | **true** \nunchecked | IsChecked | **false** \nindeterminate | IsChecked | **null** \n\nFor the check box to report the indeterminate state, you must set the [**IsThreeState**](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.primitives.togglebutton.isthreestate.aspx) property to **true**. \n\nWhen options can be grouped, you can use an indeterminate check box to represent the whole group. Use the check box's indeterminate state when a user selects some, but not all, sub-items in the group.\n\nIn the following example, the \"Select all\" checkbox has its IsThreeState property set to **true**. The \"Select all\" checkbox is checked if all child elements are checked, unchecked if all child elements are unchecked, and indeterminate otherwise.\n\n```xaml\n<StackPanel>\n    <CheckBox x:Name=\"OptionsAllCheckBox\" Content=\"Select all\" IsThreeState=\"True\" \n              Checked=\"SelectAll_Checked\" Unchecked=\"SelectAll_Unchecked\" \n              Indeterminate=\"SelectAll_Indeterminate\"/>\n    <CheckBox x:Name=\"Option1CheckBox\" Content=\"Option 1\" Margin=\"24,0,0,0\" \n              Checked=\"Option_Checked\" Unchecked=\"Option_Unchecked\" />\n    <CheckBox x:Name=\"Option2CheckBox\" Content=\"Option 2\" Margin=\"24,0,0,0\" \n              Checked=\"Option_Checked\" Unchecked=\"Option_Unchecked\" IsChecked=\"True\"/>\n    <CheckBox x:Name=\"Option3CheckBox\" Content=\"Option 3\" Margin=\"24,0,0,0\"\n              Checked=\"Option_Checked\" Unchecked=\"Option_Unchecked\" />\n</StackPanel>\n```\n\n```csharp\nprivate void Option_Checked(object sender, RoutedEventArgs e)\n{\n    SetCheckedState();\n}\n\nprivate void Option_Unchecked(object sender, RoutedEventArgs e)\n{\n    SetCheckedState();\n}\n\nprivate void SelectAll_Checked(object sender, RoutedEventArgs e)\n{\n    Option1CheckBox.IsChecked = Option2CheckBox.IsChecked = Option3CheckBox.IsChecked = true;\n}\n\nprivate void SelectAll_Unchecked(object sender, RoutedEventArgs e)\n{\n    Option1CheckBox.IsChecked = Option2CheckBox.IsChecked = Option3CheckBox.IsChecked = false;\n}\n\nprivate void SelectAll_Indeterminate(object sender, RoutedEventArgs e)\n{\n    // If the SelectAll box is checked (all options are selected), \n    // clicking the box will change it to its indeterminate state.\n    // Instead, we want to uncheck all the boxes,\n    // so we do this programatically. The indeterminate state should\n    // only be set programatically, not by the user.\n\n    if (Option1CheckBox.IsChecked == true &&\n        Option2CheckBox.IsChecked == true &&\n        Option3CheckBox.IsChecked == true)\n    {\n        // This will cause SelectAll_Unchecked to be executed, so\n        // we don't need to uncheck the other boxes here.\n        OptionsAllCheckBox.IsChecked = false;\n    }\n}\n\nprivate void SetCheckedState()\n{\n    // Controls are null the first time this is called, so we just \n    // need to perform a null check on any one of the controls.\n    if (Option1CheckBox != null)\n    {\n        if (Option1CheckBox.IsChecked == true &&\n            Option2CheckBox.IsChecked == true &&\n            Option3CheckBox.IsChecked == true)\n        {\n            OptionsAllCheckBox.IsChecked = true;\n        }\n        else if (Option1CheckBox.IsChecked == false &&\n            Option2CheckBox.IsChecked == false &&\n            Option3CheckBox.IsChecked == false)\n        {\n            OptionsAllCheckBox.IsChecked = false;\n        }\n        else\n        {\n            // Set third state (indeterminate) by setting IsChecked to null.\n            OptionsAllCheckBox.IsChecked = null;\n        }\n    }\n}\n```\n\n## Recommendations \n\n-   Verify that the purpose and current state of the check box is clear.\n-   Limit check box text content to no more than two lines.\n-   Word the checkbox label as a statement that the check mark makes true and the absence of a check mark makes false.\n-   Use the default font unless your brand guidelines tell you to use another.\n-   If the text content is dynamic, consider how the control will resize and what will happen to visuals around it.\n-   If there are two or more mutually exclusive options from which to choose, consider using [radio buttons](radio-button.md).\n-   Don't put two check box groups next to each other. Use group labels to separate the groups.\n-   Don't use a check box as an on/off control or to perform a command; instead, use a toggle switch.\n-   Don't use a check box to display other controls, such as a dialog box.\n-   Use the indeterminate state to indicate that an option is set for some, but not all, sub-choices.\n-   When using indeterminate state, use subordinate check boxes to show which options are selected and which are not. Design the UI so that the user can get see the sub-choices.\n-   Don't use the indeterminate state to represent a third state. The indeterminate state is used to indicate that an option is set for some, but not all, sub-choices. So, don't allow users to set an indeterminate state directly. For an example of what not to do, this check box uses the indeterminate state to indicate medium spiciness:\n\n    ![An indeterminate check box](images/checkbox4_spicy.png)\n\n    Instead, use a radio button group that has three options: Not spicy, Spicy, and Extra spicy.\n\n    ![Radio button group with three options: Not spicy, Spicy, and Extra spicy](images/spicyoptions.png)\n\n\n## Related articles\n\n-   [**CheckBox class**](https://msdn.microsoft.com/library/windows/apps/br209316) \n\n\n"}