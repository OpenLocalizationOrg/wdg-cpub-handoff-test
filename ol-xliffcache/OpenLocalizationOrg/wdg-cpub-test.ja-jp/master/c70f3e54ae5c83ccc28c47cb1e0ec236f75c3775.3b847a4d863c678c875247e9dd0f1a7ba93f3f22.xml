{"nodes":[{"pos":[85,241],"content":"This article shows you how video device controls to enable enhanced photo and video capture scenarios including optical image stabilization and smooth zoom.","needQuote":true,"needEscape":true,"nodes":[{"content":"This article shows you how video device controls to enable enhanced photo and video capture scenarios including optical image stabilization and smooth zoom.","pos":[0,156]}]},{"pos":[249,300],"content":"Capture device controls for photo and video capture","needQuote":true,"needEscape":true,"nodes":[{"content":"Capture device controls for photo and video capture","pos":[0,51]}]},{"content":"Capture device controls for photo and video capture","pos":[308,359]},{"content":"\\[ Updated for UWP apps on Windows 10.","pos":[361,399]},{"content":"For Windows 8.x articles, see the <bpt id=\"p1\">[</bpt>archive<ept id=\"p1\">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept> \\]","pos":[400,495],"source":" For Windows 8.x articles, see the [archive](http://go.microsoft.com/fwlink/p/?linkid=619132) \\]"},{"content":"This article shows you how video device controls to enable enhanced photo and video capture scenarios including optical image stabilization and smooth zoom.","pos":[498,654]},{"content":"The controls discussed in this article are all added to your app using the same pattern.","pos":[656,744]},{"content":"First, you check to see if the control is supported on the current device on which your app is running.","pos":[745,848]},{"content":"If the control is supported, then you set the desired mode for the control.","pos":[849,924]},{"content":"Typically, if a particular control is unsupported on the current device, you should disable or hide the UI element that allows the user to enable the feature.","pos":[925,1083]},{"content":"The code in this article was adapted from the <bpt id=\"p1\">[</bpt>Camera Manual Controls SDK sample<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=619479)</ept>.","pos":[1085,1214],"source":"The code in this article was adapted from the [Camera Manual Controls SDK sample](http://go.microsoft.com/fwlink/?LinkId=619479)."},{"content":"You can download the sample to see the code used in context or to use the sample as a starting point for your own app.","pos":[1215,1333]},{"content":"<bpt id=\"p1\">**</bpt>Note<ept id=\"p1\">**</ept> This article builds on concepts and code discussed in <bpt id=\"p2\">[</bpt>Capture Photos and Video with MediaCapture<ept id=\"p2\">](capture-photos-and-video-with-mediacapture.md)</ept>, which describes the steps for implementing basic photo and video capture.","pos":[1335,1564],"source":"**Note** This article builds on concepts and code discussed in [Capture Photos and Video with MediaCapture](capture-photos-and-video-with-mediacapture.md), which describes the steps for implementing basic photo and video capture."},{"content":"It is recommended that you familiarize yourself with the basic media capture pattern in that article before moving on to more advanced capture scenarios.","pos":[1565,1718]},{"content":"The code in this article assumes that your app already has an instance of MediaCapture that has been properly initialized.","pos":[1719,1841]},{"pos":[1843,2015],"content":"All of the device control APIs discussed in this article are members of the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>Windows.Media.Devices<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br206902)</ept> namespace.","source":"All of the device control APIs discussed in this article are members of the [**Windows.Media.Devices**](https://msdn.microsoft.com/library/windows/apps/br206902) namespace."},{"pos":[2027,2048],"content":"VideoControllersUsing"},{"content":"Exposure","pos":[2135,2143]},{"pos":[2145,2300],"content":"The <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>ExposureControl<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/dn278910)</ept> allows you to set the shutter speed used during photo or video capture.","source":"The [**ExposureControl**](https://msdn.microsoft.com/library/windows/apps/dn278910) allows you to set the shutter speed used during photo or video capture."},{"pos":[2302,2493],"content":"This example uses a <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>Slider<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br209614)</ept> control to adjust the current exposure value and a checkbox to toggle automatic exposure adjustment.","source":"This example uses a [**Slider**](https://msdn.microsoft.com/library/windows/apps/br209614) control to adjust the current exposure value and a checkbox to toggle automatic exposure adjustment."},{"pos":[2506,2518],"content":"ExposureXAML"},{"content":"Check to see if the current capture device supports the <bpt id=\"p1\">**</bpt>ExposureControl<ept id=\"p1\">**</ept> by checking the <bpt id=\"p2\">[</bpt><bpt id=\"p3\">**</bpt>Supported<ept id=\"p3\">**</ept><ept id=\"p2\">](https://msdn.microsoft.com/library/windows/apps/dn297710)</ept> property.","pos":[2590,2765],"source":"Check to see if the current capture device supports the **ExposureControl** by checking the [**Supported**](https://msdn.microsoft.com/library/windows/apps/dn297710) property."},{"content":"If the control is supported, then you can show and enable the UI for this feature.","pos":[2766,2848]},{"content":"Set the checked state of the checkbox to indicate if automatic exposure adjustment is currently active to the value of the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>Auto<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/dn278911)</ept> property.","pos":[2849,3050],"source":" Set the checked state of the checkbox to indicate if automatic exposure adjustment is currently active to the value of the [**Auto**](https://msdn.microsoft.com/library/windows/apps/dn278911) property."},{"content":"The exposure value must be within the range supported by the device and must be an increment of the supported step size.","pos":[3052,3172]},{"content":"Get the supported values for the current device by checking the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>Min<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/dn278919)</ept>, <bpt id=\"p3\">[</bpt><bpt id=\"p4\">**</bpt>Max<ept id=\"p4\">**</ept><ept id=\"p3\">](https://msdn.microsoft.com/library/windows/apps/dn278914)</ept>, and <bpt id=\"p5\">[</bpt><bpt id=\"p6\">**</bpt>Step<ept id=\"p6\">**</ept><ept id=\"p5\">](https://msdn.microsoft.com/library/windows/apps/dn278930)</ept> properties, which are used to set the corresponding properties of the slider control.","pos":[3173,3533],"source":" Get the supported values for the current device by checking the [**Min**](https://msdn.microsoft.com/library/windows/apps/dn278919), [**Max**](https://msdn.microsoft.com/library/windows/apps/dn278914), and [**Step**](https://msdn.microsoft.com/library/windows/apps/dn278930) properties, which are used to set the corresponding properties of the slider control."},{"pos":[3535,3786],"content":"Set the slider control's value to the current value of the <bpt id=\"p1\">**</bpt>ExposureControl<ept id=\"p1\">**</ept> after unregistering the <bpt id=\"p2\">[</bpt><bpt id=\"p3\">**</bpt>ValueChanged<ept id=\"p3\">**</ept><ept id=\"p2\">](https://msdn.microsoft.com/library/windows/apps/br209737)</ept> event handler so that the event is not triggered when the value is set.","source":"Set the slider control's value to the current value of the **ExposureControl** after unregistering the [**ValueChanged**](https://msdn.microsoft.com/library/windows/apps/br209737) event handler so that the event is not triggered when the value is set."},{"pos":[3798,3813],"content":"ExposureControl"},{"pos":[3906,4102],"content":"In the <bpt id=\"p1\">**</bpt>ValueChanged<ept id=\"p1\">**</ept> event handler, get the current value of the control and the set the exposure value by calling <bpt id=\"p2\">[</bpt><bpt id=\"p3\">**</bpt>SetValueAsync<ept id=\"p3\">**</ept><ept id=\"p2\">](https://msdn.microsoft.com/library/windows/apps/dn278927)</ept>.","source":"In the **ValueChanged** event handler, get the current value of the control and the set the exposure value by calling [**SetValueAsync**](https://msdn.microsoft.com/library/windows/apps/dn278927)."},{"pos":[4114,4128],"content":"ExposureSlider"},{"pos":[4220,4455],"content":"In the <bpt id=\"p1\">**</bpt>CheckedChanged<ept id=\"p1\">**</ept> event handler of the auto exposure checkbox, turn automatic exposure adjustment on or off by calling <bpt id=\"p2\">[</bpt><bpt id=\"p3\">**</bpt>SetAutoAsync<ept id=\"p3\">**</ept><ept id=\"p2\">](https://msdn.microsoft.com/library/windows/apps/dn278920)</ept> and passing in a boolean value.","source":"In the **CheckedChanged** event handler of the auto exposure checkbox, turn automatic exposure adjustment on or off by calling [**SetAutoAsync**](https://msdn.microsoft.com/library/windows/apps/dn278920) and passing in a boolean value."},{"pos":[4467,4483],"content":"ExposureCheckBox"},{"content":"<bpt id=\"p1\">**</bpt>Important<ept id=\"p1\">**</ept> Automatic exposure mode is only supported while the preview stream is running.","pos":[4577,4669],"source":"**Important** Automatic exposure mode is only supported while the preview stream is running."},{"content":"Check to make sure that the preview stream is running before turning on automatic exposure.","pos":[4670,4761]},{"content":"Exposure compensation","pos":[4766,4787]},{"pos":[4789,4964],"content":"The <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>ExposureCompensationControl<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/dn278897)</ept> allows you to set the exposure compensation used during photo or video capture.","source":"The [**ExposureCompensationControl**](https://msdn.microsoft.com/library/windows/apps/dn278897) allows you to set the exposure compensation used during photo or video capture."},{"pos":[4966,5115],"content":"This example uses a <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>Slider<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br209614)</ept> control to adjust the current exposure compensation value.","source":"This example uses a [**Slider**](https://msdn.microsoft.com/library/windows/apps/br209614) control to adjust the current exposure compensation value."},{"pos":[5128,5134],"content":"EvXAML"},{"content":"Check to see if the current capture device supports the <bpt id=\"p1\">**</bpt>ExposureCompensationControl<ept id=\"p1\">**</ept> by checking the <bpt id=\"p2\">[</bpt>Supported<ept id=\"p2\">](supported-codecs.md)</ept> property.","pos":[5200,5346],"source":"Check to see if the current capture device supports the **ExposureCompensationControl** by checking the [Supported](supported-codecs.md) property."},{"content":"If the control is supported, then you can show and enable the UI for this feature.","pos":[5347,5429]},{"content":"The exposure compensation value must be within the range supported by the device and must be an increment of the supported step size.","pos":[5431,5564]},{"content":"Get the supported values for the current device by checking the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>Min<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/dn278901)</ept>, <bpt id=\"p3\">[</bpt><bpt id=\"p4\">**</bpt>Max<ept id=\"p4\">**</ept><ept id=\"p3\">](https://msdn.microsoft.com/library/windows/apps/dn278899)</ept>, and <bpt id=\"p5\">[</bpt><bpt id=\"p6\">**</bpt>Step<ept id=\"p6\">**</ept><ept id=\"p5\">](https://msdn.microsoft.com/library/windows/apps/dn278904)</ept> properties, which are used to set the corresponding properties of the slider control.","pos":[5565,5925],"source":" Get the supported values for the current device by checking the [**Min**](https://msdn.microsoft.com/library/windows/apps/dn278901), [**Max**](https://msdn.microsoft.com/library/windows/apps/dn278899), and [**Step**](https://msdn.microsoft.com/library/windows/apps/dn278904) properties, which are used to set the corresponding properties of the slider control."},{"pos":[5927,6186],"content":"Set slider control's value to the current value of the <bpt id=\"p1\">**</bpt>ExposureCompensationControl<ept id=\"p1\">**</ept> after unregistering the <bpt id=\"p2\">[</bpt><bpt id=\"p3\">**</bpt>ValueChanged<ept id=\"p3\">**</ept><ept id=\"p2\">](https://msdn.microsoft.com/library/windows/apps/br209737)</ept> event handler so that the event is not triggered when the value is set.","source":"Set slider control's value to the current value of the **ExposureCompensationControl** after unregistering the [**ValueChanged**](https://msdn.microsoft.com/library/windows/apps/br209737) event handler so that the event is not triggered when the value is set."},{"pos":[6198,6207],"content":"EvControl"},{"pos":[6294,6490],"content":"In the <bpt id=\"p1\">**</bpt>ValueChanged<ept id=\"p1\">**</ept> event handler, get the current value of the control and the set the exposure value by calling <bpt id=\"p2\">[</bpt><bpt id=\"p3\">**</bpt>SetValueAsync<ept id=\"p3\">**</ept><ept id=\"p2\">](https://msdn.microsoft.com/library/windows/apps/dn278903)</ept>.","source":"In the **ValueChanged** event handler, get the current value of the control and the set the exposure value by calling [**SetValueAsync**](https://msdn.microsoft.com/library/windows/apps/dn278903)."},{"pos":[6502,6516],"content":"EvValueChanged"},{"content":"Flash","pos":[6611,6616]},{"content":"The <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>FlashControl<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/dn297725)</ept> allows you to enable or disable the flash or to enable automatic flash, where the system dynamically determines whether to use the flash.","pos":[6618,6836],"source":"The [**FlashControl**](https://msdn.microsoft.com/library/windows/apps/dn297725) allows you to enable or disable the flash or to enable automatic flash, where the system dynamically determines whether to use the flash."},{"content":"This control also allows you to enable automatic red eye reduction on devices that support it.","pos":[6837,6931]},{"content":"These settings all apply to capturing photos.","pos":[6932,6977]},{"content":"The <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>TorchControl<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/dn279077)</ept> is a separate control for turning the torch on or off for video capture.","pos":[6978,7131],"source":" The [**TorchControl**](https://msdn.microsoft.com/library/windows/apps/dn279077) is a separate control for turning the torch on or off for video capture."},{"content":"This example uses a set of radio buttons to allow the user to switch between on, off, and auto flash settings.","pos":[7133,7243]},{"content":"A checkbox is also provided to allow toggling of red eye reduction and the video torch.","pos":[7244,7331]},{"pos":[7344,7353],"content":"FlashXAML"},{"content":"Check to see if the current capture device supports the <bpt id=\"p1\">**</bpt>FlashControl<ept id=\"p1\">**</ept> by checking the <bpt id=\"p2\">[</bpt><bpt id=\"p3\">**</bpt>Supported<ept id=\"p3\">**</ept><ept id=\"p2\">](https://msdn.microsoft.com/library/windows/apps/dn297837)</ept> property.","pos":[7422,7594],"source":"Check to see if the current capture device supports the **FlashControl** by checking the [**Supported**](https://msdn.microsoft.com/library/windows/apps/dn297837) property."},{"content":"If the control is supported, then you can show and enable the UI for this feature.","pos":[7595,7677]},{"content":"If the <bpt id=\"p1\">**</bpt>FlashControl<ept id=\"p1\">**</ept> is supported, automatic red eye reduction may or may not be supported, so check the <bpt id=\"p2\">[</bpt><bpt id=\"p3\">**</bpt>RedEyeReductionSupported<ept id=\"p3\">**</ept><ept id=\"p2\">](https://msdn.microsoft.com/library/windows/apps/dn297766)</ept> property before enabling the UI.","pos":[7678,7907],"source":" If the **FlashControl** is supported, automatic red eye reduction may or may not be supported, so check the [**RedEyeReductionSupported**](https://msdn.microsoft.com/library/windows/apps/dn297766) property before enabling the UI."},{"content":"Since the <bpt id=\"p1\">**</bpt>TorchControl<ept id=\"p1\">**</ept> is separate from the flash control, you must also check its <bpt id=\"p2\">[</bpt><bpt id=\"p3\">**</bpt>Supported<ept id=\"p3\">**</ept><ept id=\"p2\">](https://msdn.microsoft.com/library/windows/apps/dn279081)</ept> property before using it.","pos":[7908,8094],"source":" Since the **TorchControl** is separate from the flash control, you must also check its [**Supported**](https://msdn.microsoft.com/library/windows/apps/dn279081) property before using it."},{"content":"In the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>Checked<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br209796)</ept> event handler for each of the flash radio buttons, enable or disable the appropriate corresponding flash setting.","pos":[8096,8288],"source":"In the [**Checked**](https://msdn.microsoft.com/library/windows/apps/br209796) event handler for each of the flash radio buttons, enable or disable the appropriate corresponding flash setting."},{"content":"Note that to set the flash to always be used, you must set the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>Enabled<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/dn297733)</ept> property to true and the <bpt id=\"p3\">[</bpt><bpt id=\"p4\">**</bpt>Auto<ept id=\"p4\">**</ept><ept id=\"p3\">](https://msdn.microsoft.com/library/windows/apps/dn297728)</ept> property to false.","pos":[8289,8536],"source":" Note that to set the flash to always be used, you must set the [**Enabled**](https://msdn.microsoft.com/library/windows/apps/dn297733) property to true and the [**Auto**](https://msdn.microsoft.com/library/windows/apps/dn297728) property to false."},{"pos":[8548,8560],"content":"FlashControl"},{"pos":[8660,8677],"content":"FlashRadioButtons"},{"pos":[8772,8945],"content":"In the handler for the red eye reduction checkbox, set the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>RedEyeReduction<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/dn297758)</ept> property to the appropriate value.","source":"In the handler for the red eye reduction checkbox, set the [**RedEyeReduction**](https://msdn.microsoft.com/library/windows/apps/dn297758) property to the appropriate value."},{"pos":[8957,8963],"content":"RedEye"},{"pos":[9047,9215],"content":"Finally, in the handler for the video torch checkbox, set the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>Enabled<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/dn279078)</ept> property to the appropriate value.","source":"Finally, in the handler for the video torch checkbox, set the [**Enabled**](https://msdn.microsoft.com/library/windows/apps/dn279078) property to the appropriate value."},{"pos":[9227,9232],"content":"Torch"},{"content":"<bpt id=\"p1\">**</bpt>Note<ept id=\"p1\">**</ept> On some devices the torch will not emit light, even if <bpt id=\"p2\">[</bpt><bpt id=\"p3\">**</bpt>TorchControl.Enabled<ept id=\"p3\">**</ept><ept id=\"p2\">](https://msdn.microsoft.com/library/windows/apps/dn279078)</ept> is set to true, unless the device has a preview stream running and is actively capturing video.","pos":[9315,9559],"source":"**Note** On some devices the torch will not emit light, even if [**TorchControl.Enabled**](https://msdn.microsoft.com/library/windows/apps/dn279078) is set to true, unless the device has a preview stream running and is actively capturing video."},{"content":"The recommended order of operations is to turn on the video preview, then turn on the torch by setting <bpt id=\"p1\">**</bpt>Enabled<ept id=\"p1\">**</ept> to true, and then initiate video capture.","pos":[9560,9716],"source":" The recommended order of operations is to turn on the video preview, then turn on the torch by setting **Enabled** to true, and then initiate video capture."},{"content":"On some devices the torch will light up after the preview is started.","pos":[9717,9786]},{"content":"On other devices, the torch may not light up until video capture is started.","pos":[9787,9863]},{"content":"Focus","pos":[9868,9873]},{"content":"Three different commonly used methods for adjusting the focus of the camera are supported by the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>FocusControl<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/dn297788)</ept> object, continuous autofocus, tap to focus, and manual focus.","pos":[9875,10110],"source":"Three different commonly used methods for adjusting the focus of the camera are supported by the [**FocusControl**](https://msdn.microsoft.com/library/windows/apps/dn297788) object, continuous autofocus, tap to focus, and manual focus."},{"content":"A camera app may support all three of these methods, but for readability, this article discusses each technique separately.","pos":[10111,10234]},{"content":"This section also discusses how to enable the focus assist light.","pos":[10235,10300]},{"content":"Continuous autofocus","pos":[10306,10326]},{"content":"Enabling continuous autofocus instructs the camera to adjust the focus dynamically to try to keep the subject of the photo or video in focus.","pos":[10328,10469]},{"content":"This example uses a radio button to toggle continuous autofocus on and off.","pos":[10470,10545]},{"pos":[10558,10565],"content":"CAFXAML"},{"content":"Check to see if the current capture device supports the <bpt id=\"p1\">**</bpt>FocusControl<ept id=\"p1\">**</ept> by checking the <bpt id=\"p2\">[</bpt><bpt id=\"p3\">**</bpt>Supported<ept id=\"p3\">**</ept><ept id=\"p2\">](https://msdn.microsoft.com/library/windows/apps/dn297785)</ept> property.","pos":[10632,10804],"source":"Check to see if the current capture device supports the **FocusControl** by checking the [**Supported**](https://msdn.microsoft.com/library/windows/apps/dn297785) property."},{"content":"Then, see if continuous autofocus is supported by checking the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>SupportedFocusModes<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/dn608079)</ept> list to see if it contains the value <bpt id=\"p3\">[</bpt><bpt id=\"p4\">**</bpt>FocusMode.Continuous<ept id=\"p4\">**</ept><ept id=\"p3\">](https://msdn.microsoft.com/library/windows/apps/dn608084)</ept>, and if so, show the continuous autofocus radio button.","pos":[10805,11129],"source":" Then, see if continuous autofocus is supported by checking the [**SupportedFocusModes**](https://msdn.microsoft.com/library/windows/apps/dn608079) list to see if it contains the value [**FocusMode.Continuous**](https://msdn.microsoft.com/library/windows/apps/dn608084), and if so, show the continuous autofocus radio button."},{"pos":[11141,11144],"content":"CAF"},{"content":"In the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>Checked<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br209796)</ept> event handler for the continuous autofocus radio button, use the <bpt id=\"p3\">[</bpt><bpt id=\"p4\">**</bpt>VideoDeviceController.FocusControl<ept id=\"p4\">**</ept><ept id=\"p3\">](https://msdn.microsoft.com/library/windows/apps/dn279091)</ept> property to get an instance of the control.","pos":[11225,11511],"source":"In the [**Checked**](https://msdn.microsoft.com/library/windows/apps/br209796) event handler for the continuous autofocus radio button, use the [**VideoDeviceController.FocusControl**](https://msdn.microsoft.com/library/windows/apps/dn279091) property to get an instance of the control."},{"content":"Call <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>UnlockAsync<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/dn608081)</ept> to unlock the control in case your app has previously called <bpt id=\"p3\">[</bpt><bpt id=\"p4\">**</bpt>LockAsync<ept id=\"p4\">**</ept><ept id=\"p3\">](https://msdn.microsoft.com/library/windows/apps/dn608075)</ept> to enable one of the other focus modes.","pos":[11512,11767],"source":" Call [**UnlockAsync**](https://msdn.microsoft.com/library/windows/apps/dn608081) to unlock the control in case your app has previously called [**LockAsync**](https://msdn.microsoft.com/library/windows/apps/dn608075) to enable one of the other focus modes."},{"content":"Create a new <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>FocusSettings<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/dn608085)</ept> object and set the <bpt id=\"p3\">[</bpt><bpt id=\"p4\">**</bpt>Mode<ept id=\"p4\">**</ept><ept id=\"p3\">](https://msdn.microsoft.com/library/windows/apps/dn608090)</ept> property to <bpt id=\"p5\">**</bpt>Continuous<ept id=\"p5\">**</ept>.","pos":[11769,11975],"source":"Create a new [**FocusSettings**](https://msdn.microsoft.com/library/windows/apps/dn608085) object and set the [**Mode**](https://msdn.microsoft.com/library/windows/apps/dn608090) property to **Continuous**."},{"content":"Set the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>AutoFocusRange<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/dn608086)</ept> property to a value appropriate for your app scenario or selected by the user from your UI.","pos":[11976,12154],"source":" Set the [**AutoFocusRange**](https://msdn.microsoft.com/library/windows/apps/dn608086) property to a value appropriate for your app scenario or selected by the user from your UI."},{"content":"Pass your <bpt id=\"p1\">**</bpt>FocusSettings<ept id=\"p1\">**</ept> object into the <bpt id=\"p2\">[</bpt><bpt id=\"p3\">**</bpt>Configure<ept id=\"p3\">**</ept><ept id=\"p2\">](https://msdn.microsoft.com/library/windows/apps/dn608067)</ept> method and then call <bpt id=\"p4\">[</bpt><bpt id=\"p5\">**</bpt>FocusAsync<ept id=\"p5\">**</ept><ept id=\"p4\">](https://msdn.microsoft.com/library/windows/apps/dn297794)</ept> to initiate continuous autofocus.","pos":[12155,12402],"source":" Pass your **FocusSettings** object into the [**Configure**](https://msdn.microsoft.com/library/windows/apps/dn608067) method and then call [**FocusAsync**](https://msdn.microsoft.com/library/windows/apps/dn297794) to initiate continuous autofocus."},{"pos":[12414,12433],"content":"CafFocusRadioButton"},{"content":"<bpt id=\"p1\">**</bpt>Important<ept id=\"p1\">**</ept> Autofocus mode is only supported while the preview stream is running.","pos":[12530,12613],"source":"**Important** Autofocus mode is only supported while the preview stream is running."},{"content":"Check to make sure that the preview stream is running before turning on continuous autofocus.","pos":[12614,12707]},{"content":"Tap to focus","pos":[12713,12725]},{"content":"The tap-to-focus technique uses the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>FocusControl<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/dn297788)</ept> and the <bpt id=\"p3\">[</bpt><bpt id=\"p4\">**</bpt>RegionsOfInterestControl<ept id=\"p4\">**</ept><ept id=\"p3\">](https://msdn.microsoft.com/library/windows/apps/dn279064)</ept> to specify a subregion of the capture frame where the capture device should focus.","pos":[12727,13019],"source":"The tap-to-focus technique uses the [**FocusControl**](https://msdn.microsoft.com/library/windows/apps/dn297788) and the [**RegionsOfInterestControl**](https://msdn.microsoft.com/library/windows/apps/dn279064) to specify a subregion of the capture frame where the capture device should focus."},{"content":"The region of focus is determined by the user tapping on the screen displaying the preview stream.","pos":[13020,13118]},{"content":"This example uses a radio button to enable and disable tap-to-focus mode.","pos":[13120,13193]},{"pos":[13206,13218],"content":"TapFocusXAML"},{"content":"Check to see if the current capture device supports the <bpt id=\"p1\">**</bpt>FocusControl<ept id=\"p1\">**</ept> by checking the <bpt id=\"p2\">[</bpt><bpt id=\"p3\">**</bpt>Supported<ept id=\"p3\">**</ept><ept id=\"p2\">](https://msdn.microsoft.com/library/windows/apps/dn297785)</ept> property.","pos":[13290,13462],"source":"Check to see if the current capture device supports the **FocusControl** by checking the [**Supported**](https://msdn.microsoft.com/library/windows/apps/dn297785) property."},{"content":"The <bpt id=\"p1\">**</bpt>RegionsOfInterestControl<ept id=\"p1\">**</ept> must be supported, and must support at least one region, in order to use this technique.","pos":[13463,13584],"source":" The **RegionsOfInterestControl** must be supported, and must support at least one region, in order to use this technique."},{"content":"Check the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>AutoFocusSupported<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/dn279066)</ept> and <bpt id=\"p3\">[</bpt><bpt id=\"p4\">**</bpt>MaxRegions<ept id=\"p4\">**</ept><ept id=\"p3\">](https://msdn.microsoft.com/library/windows/apps/dn279069)</ept> properties to determine whether to show or hide the radio button for tap-to-focus.","pos":[13585,13839],"source":" Check the [**AutoFocusSupported**](https://msdn.microsoft.com/library/windows/apps/dn279066) and [**MaxRegions**](https://msdn.microsoft.com/library/windows/apps/dn279069) properties to determine whether to show or hide the radio button for tap-to-focus."},{"pos":[13851,13859],"content":"TapFocus"},{"content":"In the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>Checked<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br209796)</ept> event handler for the tap-to-focus radio button, use the <bpt id=\"p3\">[</bpt><bpt id=\"p4\">**</bpt>VideoDeviceController.FocusControl<ept id=\"p4\">**</ept><ept id=\"p3\">](https://msdn.microsoft.com/library/windows/apps/dn279091)</ept> property to get an instance of the control.","pos":[13945,14223],"source":"In the [**Checked**](https://msdn.microsoft.com/library/windows/apps/br209796) event handler for the tap-to-focus radio button, use the [**VideoDeviceController.FocusControl**](https://msdn.microsoft.com/library/windows/apps/dn279091) property to get an instance of the control."},{"content":"Call <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>LockAsync<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/dn608075)</ept> to lock the control in case your app has previously called <bpt id=\"p3\">[</bpt><bpt id=\"p4\">**</bpt>UnlockAsync<ept id=\"p4\">**</ept><ept id=\"p3\">](https://msdn.microsoft.com/library/windows/apps/dn608081)</ept> to enable continuous autofocus.","pos":[14224,14469],"source":" Call [**LockAsync**](https://msdn.microsoft.com/library/windows/apps/dn608075) to lock the control in case your app has previously called [**UnlockAsync**](https://msdn.microsoft.com/library/windows/apps/dn608081) to enable continuous autofocus."},{"content":"Then you wait for the user to tap the screen to change the focus.","pos":[14470,14535]},{"pos":[14547,14566],"content":"TapFocusRadioButton"},{"content":"This example focuses on a region when the user taps the screen, and then removes the focus from that region when the user taps again, like a toggle.","pos":[14663,14811]},{"content":"Use a boolean variable to track the current toggled state.","pos":[14812,14870]},{"pos":[14882,14891],"content":"IsFocused"},{"content":"The next step is to listen for the event when the user taps the screen by handling the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>Tapped<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br208985)</ept> event of the <bpt id=\"p3\">[</bpt><bpt id=\"p4\">**</bpt>CaptureElement<ept id=\"p4\">**</ept><ept id=\"p3\">](https://msdn.microsoft.com/library/windows/apps/br209278)</ept> that is currently displaying the capture preview stream.","pos":[14978,15284],"source":"The next step is to listen for the event when the user taps the screen by handling the [**Tapped**](https://msdn.microsoft.com/library/windows/apps/br208985) event of the [**CaptureElement**](https://msdn.microsoft.com/library/windows/apps/br209278) that is currently displaying the capture preview stream."},{"content":"If the camera isn't currently previewing, or if tap-to-focus mode is disabled, then return from the handler without doing anything.","pos":[15285,15416]},{"content":"If the tracking variable <bpt id=\"p1\">*</bpt>\\_isFocused<ept id=\"p1\">*</ept> is toggled to false and if the camera isn't currently in the process of focus - determined by the <bpt id=\"p2\">[</bpt><bpt id=\"p3\">**</bpt>FocusState<ept id=\"p3\">**</ept><ept id=\"p2\">](https://msdn.microsoft.com/library/windows/apps/dn608074)</ept> property of the <bpt id=\"p4\">**</bpt>FocusControl<ept id=\"p4\">**</ept> - then begin the tap-to-focus process.","pos":[15418,15701],"source":"If the tracking variable *\\_isFocused* is toggled to false and if the camera isn't currently in the process of focus - determined by the [**FocusState**](https://msdn.microsoft.com/library/windows/apps/dn608074) property of the **FocusControl** - then begin the tap-to-focus process."},{"content":"Get the position of the user's tap from the event args passed into the handler.","pos":[15702,15781]},{"content":"This example also uses this opportunity to pick the size of the region that will be focused upon.","pos":[15782,15879]},{"content":"In this case, the size is 1/4 of the smallest dimension of the capture element.","pos":[15880,15959]},{"content":"Pass the tap position and the region size into the <bpt id=\"p1\">**</bpt>TapToFocus<ept id=\"p1\">**</ept> helper method that is defined in the next section.","pos":[15960,16076],"source":" Pass the tap position and the region size into the **TapToFocus** helper method that is defined in the next section."},{"content":"If the <bpt id=\"p1\">*</bpt>\\_isFocused<ept id=\"p1\">*</ept> toggle is set to true, then the user tap should clear the focus from the previous region.","pos":[16078,16188],"source":"If the *\\_isFocused* toggle is set to true, then the user tap should clear the focus from the previous region."},{"content":"This is done in the <bpt id=\"p1\">**</bpt>TapUnfocus<ept id=\"p1\">**</ept> helper method shown below.","pos":[16189,16250],"source":" This is done in the **TapUnfocus** helper method shown below."},{"pos":[16262,16284],"content":"TapFocusPreviewControl"},{"pos":[16384,16538],"content":"In the <bpt id=\"p1\">**</bpt>TapToFocus<ept id=\"p1\">**</ept> helper method, first set the <bpt id=\"p2\">*</bpt>\\_isFocused<ept id=\"p2\">*</ept> toggle to true so that the next screen tap will release the focus from the tapped region.","source":"In the **TapToFocus** helper method, first set the *\\_isFocused* toggle to true so that the next screen tap will release the focus from the tapped region."},{"content":"The next task in this helper method is to determine the rectangle within the preview stream that will be assigned to the focus control.","pos":[16540,16675]},{"content":"This requires two steps.","pos":[16676,16700]},{"content":"The first step is to determine the rectangle that the preview stream takes up within the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>CaptureElement<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br209278)</ept> control.","pos":[16701,16877],"source":" The first step is to determine the rectangle that the preview stream takes up within the [**CaptureElement**](https://msdn.microsoft.com/library/windows/apps/br209278) control."},{"content":"This depends on the dimensions of the preview stream and the orientation of the device.","pos":[16878,16965]},{"content":"The helper method <bpt id=\"p1\">**</bpt>GetPreviewStreamRectInControl<ept id=\"p1\">**</ept>, shown at the end of this section, performs this task and returns the rectangle containing the preview stream.","pos":[16966,17128],"source":" The helper method **GetPreviewStreamRectInControl**, shown at the end of this section, performs this task and returns the rectangle containing the preview stream."},{"content":"The next task in <bpt id=\"p1\">**</bpt>TapToFocus<ept id=\"p1\">**</ept> is to convert the tap location and desired focus rectangle size, which were determined within the <bpt id=\"p2\">**</bpt>CaptureElement.Tapped<ept id=\"p2\">**</ept> event handler, into coordinates within capture stream.","pos":[17130,17340],"source":"The next task in **TapToFocus** is to convert the tap location and desired focus rectangle size, which were determined within the **CaptureElement.Tapped** event handler, into coordinates within capture stream."},{"content":"The <bpt id=\"p1\">**</bpt>ConvertUiTapToPreviewRect<ept id=\"p1\">**</ept> helper method, shown later in this section, performs this conversion and returns the rectangle, in capture stream coordinates, where the focus will be requested.","pos":[17341,17536],"source":" The **ConvertUiTapToPreviewRect** helper method, shown later in this section, performs this conversion and returns the rectangle, in capture stream coordinates, where the focus will be requested."},{"pos":[17538,17836],"content":"Now that the target rectangle has been obtained, create a new <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>RegionOfInterest<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/dn279058)</ept> object, setting the <bpt id=\"p3\">[</bpt><bpt id=\"p4\">**</bpt>Bounds<ept id=\"p4\">**</ept><ept id=\"p3\">](https://msdn.microsoft.com/library/windows/apps/dn279062)</ept> property to the target rectangle obtained in the previous steps.","source":"Now that the target rectangle has been obtained, create a new [**RegionOfInterest**](https://msdn.microsoft.com/library/windows/apps/dn279058) object, setting the [**Bounds**](https://msdn.microsoft.com/library/windows/apps/dn279062) property to the target rectangle obtained in the previous steps."},{"content":"Get the capture device's <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>FocusControl<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/dn297788)</ept>.","pos":[17838,17940],"source":"Get the capture device's [**FocusControl**](https://msdn.microsoft.com/library/windows/apps/dn297788)."},{"content":"Create a new <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>FocusSettings<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/dn608085)</ept> object and set the <bpt id=\"p3\">[</bpt><bpt id=\"p4\">**</bpt>Mode<ept id=\"p4\">**</ept><ept id=\"p3\">](https://msdn.microsoft.com/library/windows/apps/dn608076)</ept> and <bpt id=\"p5\">[</bpt><bpt id=\"p6\">**</bpt>AutoFocusRange<ept id=\"p6\">**</ept><ept id=\"p5\">](https://msdn.microsoft.com/library/windows/apps/dn608086)</ept> to your desired values, after checking to make sure that they are supported by the <bpt id=\"p7\">**</bpt>FocusControl<ept id=\"p7\">**</ept>.","pos":[17941,18303],"source":" Create a new [**FocusSettings**](https://msdn.microsoft.com/library/windows/apps/dn608085) object and set the [**Mode**](https://msdn.microsoft.com/library/windows/apps/dn608076) and [**AutoFocusRange**](https://msdn.microsoft.com/library/windows/apps/dn608086) to your desired values, after checking to make sure that they are supported by the **FocusControl**."},{"content":"Call <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>Configure<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/dn608067)</ept> on the <bpt id=\"p3\">**</bpt>FocusControl<ept id=\"p3\">**</ept> to make your settings active and signal the device to begin focusing on the specified region.","pos":[18304,18500],"source":" Call [**Configure**](https://msdn.microsoft.com/library/windows/apps/dn608067) on the **FocusControl** to make your settings active and signal the device to begin focusing on the specified region."},{"content":"Next, get the capture device's <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>RegionsOfInterestControl<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/dn279064)</ept> and call <bpt id=\"p3\">[</bpt><bpt id=\"p4\">**</bpt>SetRegionsAsync<ept id=\"p4\">**</ept><ept id=\"p3\">](https://msdn.microsoft.com/library/windows/apps/dn279070)</ept> to set the active region.","pos":[18502,18736],"source":"Next, get the capture device's [**RegionsOfInterestControl**](https://msdn.microsoft.com/library/windows/apps/dn279064) and call [**SetRegionsAsync**](https://msdn.microsoft.com/library/windows/apps/dn279070) to set the active region."},{"content":"Multiple regions of interest can be set on devices that support it, but this example only sets a single region.","pos":[18737,18848]},{"pos":[18850,18984],"content":"Finally, call <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>FocusAsync<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/dn297794)</ept> on the <bpt id=\"p3\">**</bpt>FocusControl<ept id=\"p3\">**</ept> to initiate focusing.","source":"Finally, call [**FocusAsync**](https://msdn.microsoft.com/library/windows/apps/dn297794) on the **FocusControl** to initiate focusing."},{"content":"<bpt id=\"p1\">**</bpt>Important<ept id=\"p1\">**</ept> When implementing tap to focus, the order of operations is important.","pos":[18986,19069],"source":"**Important** When implementing tap to focus, the order of operations is important."},{"content":"You should call these APIs in the following order:","pos":[19070,19120]},{"pos":[19122,19419],"content":"<bpt id=\"p1\">**</bpt>1.<ept id=\"p1\">**</ept><bpt id=\"p2\">[</bpt><bpt id=\"p3\">**</bpt>FocusControl.Configure<ept id=\"p3\">**</ept><ept id=\"p2\">](https://msdn.microsoft.com/library/windows/apps/dn608067)</ept><ph id=\"ph1\">\n</ph><bpt id=\"p4\">**</bpt>2.<ept id=\"p4\">**</ept><bpt id=\"p5\">[</bpt><bpt id=\"p6\">**</bpt>RegionsOfInterestControl.SetRegionsAsync<ept id=\"p6\">**</ept><ept id=\"p5\">](https://msdn.microsoft.com/library/windows/apps/dn279070)</ept><ph id=\"ph2\">\n</ph><bpt id=\"p7\">**</bpt>3.<ept id=\"p7\">**</ept><bpt id=\"p8\">[</bpt><bpt id=\"p9\">**</bpt>FocusControl.FocusAsync<ept id=\"p9\">**</ept><ept id=\"p8\">](https://msdn.microsoft.com/library/windows/apps/dn297794)</ept>","source":"**1.**[**FocusControl.Configure**](https://msdn.microsoft.com/library/windows/apps/dn608067)\n**2.**[**RegionsOfInterestControl.SetRegionsAsync**](https://msdn.microsoft.com/library/windows/apps/dn279070)\n**3.**[**FocusControl.FocusAsync**](https://msdn.microsoft.com/library/windows/apps/dn297794)"},{"pos":[19431,19441],"content":"TapToFocus"},{"content":"In the <bpt id=\"p1\">**</bpt>TapUnfocus<ept id=\"p1\">**</ept> helper method, obtain the <bpt id=\"p2\">**</bpt>RegionsOfInterestControl<ept id=\"p2\">**</ept> and call <bpt id=\"p3\">[</bpt><bpt id=\"p4\">**</bpt>ClearRegionsAsync<ept id=\"p4\">**</ept><ept id=\"p3\">](https://msdn.microsoft.com/library/windows/apps/dn279068)</ept> to clear the region that was registered with the control within the <bpt id=\"p5\">**</bpt>TapToFocus<ept id=\"p5\">**</ept> helper method.","pos":[19529,19794],"source":"In the **TapUnfocus** helper method, obtain the **RegionsOfInterestControl** and call [**ClearRegionsAsync**](https://msdn.microsoft.com/library/windows/apps/dn279068) to clear the region that was registered with the control within the **TapToFocus** helper method."},{"content":"Then, get the <bpt id=\"p1\">**</bpt>FocusControl<ept id=\"p1\">**</ept> and call <bpt id=\"p2\">[</bpt><bpt id=\"p3\">**</bpt>FocusAsync<ept id=\"p3\">**</ept><ept id=\"p2\">](https://msdn.microsoft.com/library/windows/apps/dn297794)</ept> to cause the device to refocus without a region of interest.","pos":[19795,19970],"source":" Then, get the **FocusControl** and call [**FocusAsync**](https://msdn.microsoft.com/library/windows/apps/dn297794) to cause the device to refocus without a region of interest."},{"pos":[19982,19992],"content":"TapUnfocus"},{"content":"The <bpt id=\"p1\">**</bpt>GetPreviewStreamRectInControl<ept id=\"p1\">**</ept> helper method uses the resolution of the preview stream and the orientation of the device to determine the rectangle within the preview element that contains the preview stream, trimming off any letterboxed padding that the control may provide to maintain the stream's aspect ratio.","pos":[20080,20400],"source":"The **GetPreviewStreamRectInControl** helper method uses the resolution of the preview stream and the orientation of the device to determine the rectangle within the preview element that contains the preview stream, trimming off any letterboxed padding that the control may provide to maintain the stream's aspect ratio."},{"content":"This method uses class member variables defined in the basic media capture example code found in <bpt id=\"p1\">[</bpt>Capture Photos and Video with MediaCapture<ept id=\"p1\">](capture-photos-and-video-with-mediacapture.md)</ept>.","pos":[20401,20590],"source":" This method uses class member variables defined in the basic media capture example code found in [Capture Photos and Video with MediaCapture](capture-photos-and-video-with-mediacapture.md)."},{"pos":[20602,20631],"content":"GetPreviewStreamRectInControl"},{"content":"The <bpt id=\"p1\">**</bpt>ConvertUiTapToPreviewRect<ept id=\"p1\">**</ept> helper method takes as arguments the location of the tap event, the desired size of the focus region, and the rectangle containing the preview stream obtained from the <bpt id=\"p2\">**</bpt>GetPreviewStreamRectInControl<ept id=\"p2\">**</ept> helper method.","pos":[20738,20988],"source":"The **ConvertUiTapToPreviewRect** helper method takes as arguments the location of the tap event, the desired size of the focus region, and the rectangle containing the preview stream obtained from the **GetPreviewStreamRectInControl** helper method."},{"content":"This method uses these values and the device's current orientation to calculate the rectangle within the preview stream that contains the desired region.","pos":[20989,21142]},{"content":"Once again, this method uses class member variables defined in the basic media capture example code found in <bpt id=\"p1\">[</bpt>Capture Photos and Video with MediaCapture<ept id=\"p1\">](capture-photos-and-video-with-mediacapture.md)</ept>.","pos":[21143,21344],"source":" Once again, this method uses class member variables defined in the basic media capture example code found in [Capture Photos and Video with MediaCapture](capture-photos-and-video-with-mediacapture.md)."},{"pos":[21356,21381],"content":"ConvertUiTapToPreviewRect"},{"content":"Manual focus","pos":[21488,21500]},{"content":"The manual focus technique uses a <bpt id=\"p1\">**</bpt>Slider<ept id=\"p1\">**</ept> control to set the current focus depth of the capture device.","pos":[21502,21608],"source":"The manual focus technique uses a **Slider** control to set the current focus depth of the capture device."},{"content":"A radio button is used to toggle manual focus on and off.","pos":[21609,21666]},{"pos":[21679,21694],"content":"ManualFocusXAML"},{"content":"Check to see if the current capture device supports the <bpt id=\"p1\">**</bpt>FocusControl<ept id=\"p1\">**</ept> by checking the <bpt id=\"p2\">[</bpt><bpt id=\"p3\">**</bpt>Supported<ept id=\"p3\">**</ept><ept id=\"p2\">](https://msdn.microsoft.com/library/windows/apps/dn297837)</ept> property.","pos":[21769,21941],"source":"Check to see if the current capture device supports the **FocusControl** by checking the [**Supported**](https://msdn.microsoft.com/library/windows/apps/dn297837) property."},{"content":"If the control is supported, then you can show and enable the UI for this feature.","pos":[21942,22024]},{"content":"The focus value must be within the range supported by the device and must be an increment of the supported step size.","pos":[22026,22143]},{"content":"Get the supported values for the current device by checking the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>Min<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/dn297808)</ept>, <bpt id=\"p3\">[</bpt><bpt id=\"p4\">**</bpt>Max<ept id=\"p4\">**</ept><ept id=\"p3\">](https://msdn.microsoft.com/library/windows/apps/dn297802)</ept>, and <bpt id=\"p5\">[</bpt><bpt id=\"p6\">**</bpt>Step<ept id=\"p6\">**</ept><ept id=\"p5\">](https://msdn.microsoft.com/library/windows/apps/dn297833)</ept> properties, which are used to set the corresponding properties of the slider control.","pos":[22144,22504],"source":" Get the supported values for the current device by checking the [**Min**](https://msdn.microsoft.com/library/windows/apps/dn297808), [**Max**](https://msdn.microsoft.com/library/windows/apps/dn297802), and [**Step**](https://msdn.microsoft.com/library/windows/apps/dn297833) properties, which are used to set the corresponding properties of the slider control."},{"pos":[22506,22754],"content":"Set the slider control's value to the current value of the <bpt id=\"p1\">**</bpt>FocusControl<ept id=\"p1\">**</ept> after unregistering the <bpt id=\"p2\">[</bpt><bpt id=\"p3\">**</bpt>ValueChanged<ept id=\"p3\">**</ept><ept id=\"p2\">](https://msdn.microsoft.com/library/windows/apps/br209737)</ept> event handler so that the event is not triggered when the value is set.","source":"Set the slider control's value to the current value of the **FocusControl** after unregistering the [**ValueChanged**](https://msdn.microsoft.com/library/windows/apps/br209737) event handler so that the event is not triggered when the value is set."},{"pos":[22766,22771],"content":"Focus"},{"pos":[22854,23179],"content":"In the <bpt id=\"p1\">**</bpt>Checked<ept id=\"p1\">**</ept> event handler for the manual focus radio button, get the <bpt id=\"p2\">**</bpt>FocusControl<ept id=\"p2\">**</ept> object and call <bpt id=\"p3\">[</bpt><bpt id=\"p4\">**</bpt>LockAsync<ept id=\"p4\">**</ept><ept id=\"p3\">](https://msdn.microsoft.com/library/windows/apps/dn608075)</ept> in case your app had previously unlocked the focus with a call to <bpt id=\"p5\">[</bpt><bpt id=\"p6\">**</bpt>UnlockAsync<ept id=\"p6\">**</ept><ept id=\"p5\">](https://msdn.microsoft.com/library/windows/apps/dn608081)</ept>.","source":"In the **Checked** event handler for the manual focus radio button, get the **FocusControl** object and call [**LockAsync**](https://msdn.microsoft.com/library/windows/apps/dn608075) in case your app had previously unlocked the focus with a call to [**UnlockAsync**](https://msdn.microsoft.com/library/windows/apps/dn608081)."},{"pos":[23191,23209],"content":"ManualFocusChecked"},{"pos":[23305,23525],"content":"In the <bpt id=\"p1\">**</bpt>ValueChanged<ept id=\"p1\">**</ept> event handler of the manual focus slider, get the current value of the control and the set the focus value by calling <bpt id=\"p2\">[</bpt><bpt id=\"p3\">**</bpt>SetValueAsync<ept id=\"p3\">**</ept><ept id=\"p2\">](https://msdn.microsoft.com/library/windows/apps/dn297828)</ept>.","source":"In the **ValueChanged** event handler of the manual focus slider, get the current value of the control and the set the focus value by calling [**SetValueAsync**](https://msdn.microsoft.com/library/windows/apps/dn297828)."},{"pos":[23537,23548],"content":"FocusSlider"},{"content":"Enable the focus light","pos":[23641,23663]},{"content":"On devices that support it, you can enable a focus assist light to help the device focus.","pos":[23665,23754]},{"content":"This example uses a checkbox to enable or disable the focus assist light.","pos":[23755,23828]},{"pos":[23841,23855],"content":"FocusLightXAML"},{"content":"Check to see if the current capture device supports the <bpt id=\"p1\">**</bpt>FlashControl<ept id=\"p1\">**</ept> by checking the <bpt id=\"p2\">[</bpt><bpt id=\"p3\">**</bpt>Supported<ept id=\"p3\">**</ept><ept id=\"p2\">](https://msdn.microsoft.com/library/windows/apps/dn297785)</ept> property.","pos":[23929,24101],"source":"Check to see if the current capture device supports the **FlashControl** by checking the [**Supported**](https://msdn.microsoft.com/library/windows/apps/dn297785) property."},{"content":"Also check the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>AssistantLightSupported<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/dn608066)</ept> to make sure the assist light is also supported.","pos":[24102,24253],"source":" Also check the [**AssistantLightSupported**](https://msdn.microsoft.com/library/windows/apps/dn608066) to make sure the assist light is also supported."},{"content":"If these are both supported, then you can show and enable the UI for this feature.","pos":[24254,24336]},{"pos":[24348,24358],"content":"FocusLight"},{"content":"In the <bpt id=\"p1\">**</bpt>CheckedChanged<ept id=\"p1\">**</ept> event handler, get the capture devices <bpt id=\"p2\">[</bpt><bpt id=\"p3\">**</bpt>FlashControl<ept id=\"p3\">**</ept><ept id=\"p2\">](https://msdn.microsoft.com/library/windows/apps/dn297725)</ept> object.","pos":[24446,24595],"source":"In the **CheckedChanged** event handler, get the capture devices [**FlashControl**](https://msdn.microsoft.com/library/windows/apps/dn297725) object."},{"content":"Set the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>AssistantLightEnabled<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/dn608065)</ept> property to enable or disable the focus light.","pos":[24596,24736],"source":" Set the [**AssistantLightEnabled**](https://msdn.microsoft.com/library/windows/apps/dn608065) property to enable or disable the focus light."},{"pos":[24748,24766],"content":"FocusLightCheckBox"},{"content":"ISO speed","pos":[24865,24874]},{"pos":[24876,25027],"content":"The <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>IsoSpeedControl<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/dn297850)</ept> allows you to set the ISO speed used during photo or video capture.","source":"The [**IsoSpeedControl**](https://msdn.microsoft.com/library/windows/apps/dn297850) allows you to set the ISO speed used during photo or video capture."},{"pos":[25029,25234],"content":"This example uses a <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>Slider<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br209614)</ept> control to adjust the current exposure compensation value and a checkbox to toggle automatic ISO speed adjustment.","source":"This example uses a [**Slider**](https://msdn.microsoft.com/library/windows/apps/br209614) control to adjust the current exposure compensation value and a checkbox to toggle automatic ISO speed adjustment."},{"pos":[25247,25254],"content":"IsoXAML"},{"content":"Check to see if the current capture device supports the <bpt id=\"p1\">**</bpt>IsoSpeedControl<ept id=\"p1\">**</ept> by checking the <bpt id=\"p2\">[</bpt><bpt id=\"p3\">**</bpt>Supported<ept id=\"p3\">**</ept><ept id=\"p2\">](https://msdn.microsoft.com/library/windows/apps/dn297869)</ept> property.","pos":[25321,25496],"source":"Check to see if the current capture device supports the **IsoSpeedControl** by checking the [**Supported**](https://msdn.microsoft.com/library/windows/apps/dn297869) property."},{"content":"If the control is supported, then you can show and enable the UI for this feature.","pos":[25497,25579]},{"content":"Set the checked state of the checkbox to indicate if automatic ISO speed adjustment is currently active to the value of the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>Auto<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/dn608093)</ept> property.","pos":[25580,25782],"source":" Set the checked state of the checkbox to indicate if automatic ISO speed adjustment is currently active to the value of the [**Auto**](https://msdn.microsoft.com/library/windows/apps/dn608093) property."},{"content":"The ISO speed value must be within the range supported by the device and must be an increment of the supported step size.","pos":[25784,25905]},{"content":"Get the supported values for the current device by checking the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>Min<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/dn608095)</ept>, <bpt id=\"p3\">[</bpt><bpt id=\"p4\">**</bpt>Max<ept id=\"p4\">**</ept><ept id=\"p3\">](https://msdn.microsoft.com/library/windows/apps/dn608094)</ept>, and <bpt id=\"p5\">[</bpt><bpt id=\"p6\">**</bpt>Step<ept id=\"p6\">**</ept><ept id=\"p5\">](https://msdn.microsoft.com/library/windows/apps/dn608129)</ept> properties, which are used to set the corresponding properties of the slider control.","pos":[25906,26266],"source":" Get the supported values for the current device by checking the [**Min**](https://msdn.microsoft.com/library/windows/apps/dn608095), [**Max**](https://msdn.microsoft.com/library/windows/apps/dn608094), and [**Step**](https://msdn.microsoft.com/library/windows/apps/dn608129) properties, which are used to set the corresponding properties of the slider control."},{"pos":[26268,26519],"content":"Set the slider control's value to the current value of the <bpt id=\"p1\">**</bpt>IsoSpeedControl<ept id=\"p1\">**</ept> after unregistering the <bpt id=\"p2\">[</bpt><bpt id=\"p3\">**</bpt>ValueChanged<ept id=\"p3\">**</ept><ept id=\"p2\">](https://msdn.microsoft.com/library/windows/apps/br209737)</ept> event handler so that the event is not triggered when the value is set.","source":"Set the slider control's value to the current value of the **IsoSpeedControl** after unregistering the [**ValueChanged**](https://msdn.microsoft.com/library/windows/apps/br209737) event handler so that the event is not triggered when the value is set."},{"pos":[26531,26541],"content":"IsoControl"},{"pos":[26629,26826],"content":"In the <bpt id=\"p1\">**</bpt>ValueChanged<ept id=\"p1\">**</ept> event handler, get the current value of the control and the set the ISO speed value by calling <bpt id=\"p2\">[</bpt><bpt id=\"p3\">**</bpt>SetValueAsync<ept id=\"p3\">**</ept><ept id=\"p2\">](https://msdn.microsoft.com/library/windows/apps/dn608128)</ept>.","source":"In the **ValueChanged** event handler, get the current value of the control and the set the ISO speed value by calling [**SetValueAsync**](https://msdn.microsoft.com/library/windows/apps/dn608128)."},{"pos":[26838,26847],"content":"IsoSlider"},{"content":"In the <bpt id=\"p1\">**</bpt>CheckedChanged<ept id=\"p1\">**</ept> event handler of the auto ISO speed checkbox, turn on automatic ISO speed adjustment by calling <bpt id=\"p2\">[</bpt><bpt id=\"p3\">**</bpt>SetAutoAsync<ept id=\"p3\">**</ept><ept id=\"p2\">](https://msdn.microsoft.com/library/windows/apps/dn608127)</ept>.","pos":[26934,27133],"source":"In the **CheckedChanged** event handler of the auto ISO speed checkbox, turn on automatic ISO speed adjustment by calling [**SetAutoAsync**](https://msdn.microsoft.com/library/windows/apps/dn608127)."},{"content":"Turn automatic ISO speed adjustment off by calling <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>SetValueAsync<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/dn608128)</ept> and passing in the current value of the slider control.","pos":[27134,27318],"source":" Turn automatic ISO speed adjustment off by calling [**SetValueAsync**](https://msdn.microsoft.com/library/windows/apps/dn608128) and passing in the current value of the slider control."},{"pos":[27330,27341],"content":"IsoCheckBox"},{"content":"Optical image stabilization","pos":[27433,27460]},{"content":"Optical image stabilization (OIS) stabilizes a the captured video stream by mechanically manipulating the hardware capture device, which can provide a superior result than digital stabilization.","pos":[27462,27656]},{"content":"On devices that don't support OIS, you can use the VideoStabilizationEffect to perform digital stabilization on your captured vide.","pos":[27657,27788]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Effects for video capture<ept id=\"p1\">](effects-for-video-capture.md)</ept>.","pos":[27789,27873],"source":" For more information, see [Effects for video capture](effects-for-video-capture.md)."},{"pos":[27875,28059],"content":"Determine if OIS is supported on the current device by checking the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>OpticalImageStabilizationControl.Supported<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/dn926689)</ept> property.","source":"Determine if OIS is supported on the current device by checking the [**OpticalImageStabilizationControl.Supported**](https://msdn.microsoft.com/library/windows/apps/dn926689) property."},{"content":"The OIS control supports three modes: on, off, and automatic, which means that the device dynamically determines if OIS would improve the media capture and, if so, enables OIS.","pos":[28061,28237]},{"content":"To determine if a particular mode is supported on a device, check to see if the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>OpticalImageStabilizationControl.SupportedModes<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/dn926690)</ept> collection contains the desired mode.","pos":[28238,28467],"source":" To determine if a particular mode is supported on a device, check to see if the [**OpticalImageStabilizationControl.SupportedModes**](https://msdn.microsoft.com/library/windows/apps/dn926690) collection contains the desired mode."},{"pos":[28469,28628],"content":"Enable or disable OIS by setting the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>OpticalImageStabilizationControl.Mode<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/dn926691)</ept> to the desired mode.","source":"Enable or disable OIS by setting the [**OpticalImageStabilizationControl.Mode**](https://msdn.microsoft.com/library/windows/apps/dn926691) to the desired mode."},{"pos":[28640,28672],"content":"SetOpticalImageStabilizationMode"},{"content":"White balance","pos":[28770,28783]},{"pos":[28785,28944],"content":"The <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>WhiteBalanceControl<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/dn279104)</ept> allows you to set the white balance used during photo or video capture.","source":"The [**WhiteBalanceControl**](https://msdn.microsoft.com/library/windows/apps/dn279104) allows you to set the white balance used during photo or video capture."},{"pos":[28946,29218],"content":"This example uses a <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>ComboBox<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br209348)</ept> control to select from built-in color temperature presets and a <bpt id=\"p3\">[</bpt><bpt id=\"p4\">**</bpt>Slider<ept id=\"p4\">**</ept><ept id=\"p3\">](https://msdn.microsoft.com/library/windows/apps/br209614)</ept> control for manual white balance adjustment.","source":"This example uses a [**ComboBox**](https://msdn.microsoft.com/library/windows/apps/br209348) control to select from built-in color temperature presets and a [**Slider**](https://msdn.microsoft.com/library/windows/apps/br209614) control for manual white balance adjustment."},{"pos":[29231,29247],"content":"WhiteBalanceXAML"},{"content":"Check to see if the current capture device supports the <bpt id=\"p1\">**</bpt>WhiteBalanceControl<ept id=\"p1\">**</ept> by checking the <bpt id=\"p2\">[</bpt><bpt id=\"p3\">**</bpt>Supported<ept id=\"p3\">**</ept><ept id=\"p2\">](https://msdn.microsoft.com/library/windows/apps/dn279120)</ept> property.","pos":[29323,29502],"source":"Check to see if the current capture device supports the **WhiteBalanceControl** by checking the [**Supported**](https://msdn.microsoft.com/library/windows/apps/dn279120) property."},{"content":"If the control is supported, then you can show and enable the UI for this feature.","pos":[29503,29585]},{"content":"Set the items of the combo box to the values of the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>ColorTemperaturePreset<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/dn278894)</ept> enumeration.","pos":[29586,29737],"source":" Set the items of the combo box to the values of the [**ColorTemperaturePreset**](https://msdn.microsoft.com/library/windows/apps/dn278894) enumeration."},{"content":"And set the selected item to the current value of the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>Preset<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/dn279110)</ept> property.","pos":[29738,29872],"source":" And set the selected item to the current value of the [**Preset**](https://msdn.microsoft.com/library/windows/apps/dn279110) property."},{"content":"For manual control, the white balance value must be within the range supported by the device and must be an increment of the supported step size.","pos":[29874,30019]},{"content":"Get the supported values for the current device by checking the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>Min<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/dn279109)</ept>, <bpt id=\"p3\">[</bpt><bpt id=\"p4\">**</bpt>Max<ept id=\"p4\">**</ept><ept id=\"p3\">](https://msdn.microsoft.com/library/windows/apps/dn279107)</ept>, and <bpt id=\"p5\">[</bpt><bpt id=\"p6\">**</bpt>Step<ept id=\"p6\">**</ept><ept id=\"p5\">](https://msdn.microsoft.com/library/windows/apps/dn279119)</ept> properties, which are used to set the corresponding properties of the slider control.","pos":[30020,30380],"source":" Get the supported values for the current device by checking the [**Min**](https://msdn.microsoft.com/library/windows/apps/dn279109), [**Max**](https://msdn.microsoft.com/library/windows/apps/dn279107), and [**Step**](https://msdn.microsoft.com/library/windows/apps/dn279119) properties, which are used to set the corresponding properties of the slider control."},{"content":"Before enabling manual control, check to make sure that the range between the minimum and maximum supported values is greater than the step size.","pos":[30381,30526]},{"content":"If it is not, manual control is not supported on the current device.","pos":[30527,30595]},{"pos":[30597,30852],"content":"Set the slider control's value to the current value of the <bpt id=\"p1\">**</bpt>WhiteBalanceControl<ept id=\"p1\">**</ept> after unregistering the <bpt id=\"p2\">[</bpt><bpt id=\"p3\">**</bpt>ValueChanged<ept id=\"p3\">**</ept><ept id=\"p2\">](https://msdn.microsoft.com/library/windows/apps/br209737)</ept> event handler so that the event is not triggered when the value is set.","source":"Set the slider control's value to the current value of the **WhiteBalanceControl** after unregistering the [**ValueChanged**](https://msdn.microsoft.com/library/windows/apps/br209737) event handler so that the event is not triggered when the value is set."},{"pos":[30864,30876],"content":"WhiteBalance"},{"content":"In the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>SelectionChanged<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br209776)</ept> event handler of the color temperature preset combo box, get the currently selected preset and set the value of the control by calling <bpt id=\"p3\">[</bpt><bpt id=\"p4\">**</bpt>SetPresetAsync<ept id=\"p4\">**</ept><ept id=\"p3\">](https://msdn.microsoft.com/library/windows/apps/dn279113)</ept>.","pos":[30966,31268],"source":"In the [**SelectionChanged**](https://msdn.microsoft.com/library/windows/apps/br209776) event handler of the color temperature preset combo box, get the currently selected preset and set the value of the control by calling [**SetPresetAsync**](https://msdn.microsoft.com/library/windows/apps/dn279113)."},{"content":"If the selected preset value is not <bpt id=\"p1\">**</bpt>Manual<ept id=\"p1\">**</ept>, then disable the manual white balance slider.","pos":[31269,31362],"source":" If the selected preset value is not **Manual**, then disable the manual white balance slider."},{"pos":[31374,31394],"content":"WhiteBalanceComboBox"},{"pos":[31492,31693],"content":"In the <bpt id=\"p1\">**</bpt>ValueChanged<ept id=\"p1\">**</ept> event handler, get the current value of the control and the set the white balance value by calling <bpt id=\"p2\">[</bpt><bpt id=\"p3\">**</bpt>SetValueAsync<ept id=\"p3\">**</ept><ept id=\"p2\">](https://msdn.microsoft.com/library/windows/apps/dn278927)</ept>.","source":"In the **ValueChanged** event handler, get the current value of the control and the set the white balance value by calling [**SetValueAsync**](https://msdn.microsoft.com/library/windows/apps/dn278927)."},{"pos":[31705,31723],"content":"WhiteBalanceSlider"},{"content":"<bpt id=\"p1\">**</bpt>Important<ept id=\"p1\">**</ept> Adjusting the white balance is only supported while the preview stream is running.","pos":[31819,31915],"source":"**Important** Adjusting the white balance is only supported while the preview stream is running."},{"content":"Check to make sure that the preview stream is running before setting the white balance value or preset.","pos":[31916,32019]},{"content":"<bpt id=\"p1\">**</bpt>Important<ept id=\"p1\">**</ept> The <bpt id=\"p2\">**</bpt>ColorTemperaturePreset.Auto<ept id=\"p2\">**</ept> preset value instructs the system to automatically adjust the white balance level.","pos":[32021,32153],"source":"**Important** The **ColorTemperaturePreset.Auto** preset value instructs the system to automatically adjust the white balance level."},{"content":"For some scenarios, such as capturing a photo sequence where the white balance levels should be the same for each frame, you may want to lock the control to the current automatic value.","pos":[32154,32339]},{"content":"To do this, call <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>SetPresetAsync<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/dn279113)</ept> and specify the <bpt id=\"p3\">**</bpt>Manual<ept id=\"p3\">**</ept> preset and do not set a value on the control using <bpt id=\"p4\">[</bpt><bpt id=\"p5\">**</bpt>SetValueAsync<ept id=\"p5\">**</ept><ept id=\"p4\">](https://msdn.microsoft.com/library/windows/apps/dn279114)</ept>.","pos":[32340,32592],"source":" To do this, call [**SetPresetAsync**](https://msdn.microsoft.com/library/windows/apps/dn279113) and specify the **Manual** preset and do not set a value on the control using [**SetValueAsync**](https://msdn.microsoft.com/library/windows/apps/dn279114)."},{"content":"This will cause the device to lock the current value.","pos":[32593,32646]},{"content":"Do not attempt to read the current control value and then pass the returned value into <bpt id=\"p1\">**</bpt>SetValueAsync<ept id=\"p1\">**</ept> because this value is not guaranteed to be correct.","pos":[32647,32803],"source":" Do not attempt to read the current control value and then pass the returned value into **SetValueAsync** because this value is not guaranteed to be correct."},{"content":"Zoom","pos":[32808,32812]},{"pos":[32814,32962],"content":"The <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>ZoomControl<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/dn608149)</ept> allows you to set the zoom level used during photo or video capture.","source":"The [**ZoomControl**](https://msdn.microsoft.com/library/windows/apps/dn608149) allows you to set the zoom level used during photo or video capture."},{"content":"This example uses a <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>Slider<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br209614)</ept> control to adjust the current zoom level.","pos":[32964,33096],"source":"This example uses a [**Slider**](https://msdn.microsoft.com/library/windows/apps/br209614) control to adjust the current zoom level."},{"content":"The following section shows how to adjust zoom based on a pinch gesture on the screen.","pos":[33097,33183]},{"pos":[33196,33204],"content":"ZoomXAML"},{"content":"Check to see if the current capture device supports the <bpt id=\"p1\">**</bpt>ZoomControl<ept id=\"p1\">**</ept> by checking the <bpt id=\"p2\">[</bpt><bpt id=\"p3\">**</bpt>Supported<ept id=\"p3\">**</ept><ept id=\"p2\">](https://msdn.microsoft.com/library/windows/apps/dn633819)</ept> property.","pos":[33272,33443],"source":"Check to see if the current capture device supports the **ZoomControl** by checking the [**Supported**](https://msdn.microsoft.com/library/windows/apps/dn633819) property."},{"content":"If the control is supported, then you can show and enable the UI for this feature.","pos":[33444,33526]},{"content":"The zoom level value must be within the range supported by the device and must be an increment of the supported step size.","pos":[33528,33650]},{"content":"Get the supported values for the current device by checking the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>Min<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/dn633817)</ept>, <bpt id=\"p3\">[</bpt><bpt id=\"p4\">**</bpt>Max<ept id=\"p4\">**</ept><ept id=\"p3\">](https://msdn.microsoft.com/library/windows/apps/dn608150)</ept>, and <bpt id=\"p5\">[</bpt><bpt id=\"p6\">**</bpt>Step<ept id=\"p6\">**</ept><ept id=\"p5\">](https://msdn.microsoft.com/library/windows/apps/dn633818)</ept> properties, which are used to set the corresponding properties of the slider control.","pos":[33651,34011],"source":" Get the supported values for the current device by checking the [**Min**](https://msdn.microsoft.com/library/windows/apps/dn633817), [**Max**](https://msdn.microsoft.com/library/windows/apps/dn608150), and [**Step**](https://msdn.microsoft.com/library/windows/apps/dn633818) properties, which are used to set the corresponding properties of the slider control."},{"pos":[34013,34260],"content":"Set the slider control's value to the current value of the <bpt id=\"p1\">**</bpt>ZoomControl<ept id=\"p1\">**</ept> after unregistering the <bpt id=\"p2\">[</bpt><bpt id=\"p3\">**</bpt>ValueChanged<ept id=\"p3\">**</ept><ept id=\"p2\">](https://msdn.microsoft.com/library/windows/apps/br209737)</ept> event handler so that the event is not triggered when the value is set.","source":"Set the slider control's value to the current value of the **ZoomControl** after unregistering the [**ValueChanged**](https://msdn.microsoft.com/library/windows/apps/br209737) event handler so that the event is not triggered when the value is set."},{"pos":[34272,34283],"content":"ZoomControl"},{"content":"In the <bpt id=\"p1\">**</bpt>ValueChanged<ept id=\"p1\">**</ept> event handler, create a new instance of the <bpt id=\"p2\">[</bpt><bpt id=\"p3\">**</bpt>ZoomSettings<ept id=\"p3\">**</ept><ept id=\"p2\">](https://msdn.microsoft.com/library/windows/apps/dn926722)</ept> class, setting the <bpt id=\"p4\">[</bpt><bpt id=\"p5\">**</bpt>Value<ept id=\"p5\">**</ept><ept id=\"p4\">](https://msdn.microsoft.com/library/windows/apps/dn926724)</ept> property to the current value of the zoom slider control.","pos":[34372,34663],"source":"In the **ValueChanged** event handler, create a new instance of the [**ZoomSettings**](https://msdn.microsoft.com/library/windows/apps/dn926722) class, setting the [**Value**](https://msdn.microsoft.com/library/windows/apps/dn926724) property to the current value of the zoom slider control."},{"content":"If the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>SupportedModes<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/dn926721)</ept> property of the <bpt id=\"p3\">**</bpt>ZoomControl<ept id=\"p3\">**</ept> contains <bpt id=\"p4\">[</bpt><bpt id=\"p5\">**</bpt>ZoomTransitionMode.Smooth<ept id=\"p5\">**</ept><ept id=\"p4\">](https://msdn.microsoft.com/library/windows/apps/dn926726)</ept>, it means the device supports smooth transitions between zoom levels.","pos":[34664,34950],"source":" If the [**SupportedModes**](https://msdn.microsoft.com/library/windows/apps/dn926721) property of the **ZoomControl** contains [**ZoomTransitionMode.Smooth**](https://msdn.microsoft.com/library/windows/apps/dn926726), it means the device supports smooth transitions between zoom levels."},{"content":"Since this modes provides a better user experience, you will typically want to use this value for the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>Mode<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/dn926723)</ept> property of the <bpt id=\"p3\">**</bpt>ZoomSettings<ept id=\"p3\">**</ept> object.","pos":[34951,35162],"source":" Since this modes provides a better user experience, you will typically want to use this value for the [**Mode**](https://msdn.microsoft.com/library/windows/apps/dn926723) property of the **ZoomSettings** object."},{"pos":[35164,35366],"content":"Finally, change the current zoom settings by passing your <bpt id=\"p1\">**</bpt>ZoomSettings<ept id=\"p1\">**</ept> object into the <bpt id=\"p2\">[</bpt><bpt id=\"p3\">**</bpt>Configure<ept id=\"p3\">**</ept><ept id=\"p2\">](https://msdn.microsoft.com/library/windows/apps/dn926719)</ept> method of the <bpt id=\"p4\">**</bpt>ZoomControl<ept id=\"p4\">**</ept> object.","source":"Finally, change the current zoom settings by passing your **ZoomSettings** object into the [**Configure**](https://msdn.microsoft.com/library/windows/apps/dn926719) method of the **ZoomControl** object."},{"pos":[35378,35388],"content":"ZoomSlider"},{"content":"Smooth zoom using pinch gesture","pos":[35480,35511]},{"content":"As discussed in the previous section, on devices that support it, smooth zoom mode allows the capture device to smoothly transition between digital zoom levels, allowing the user to dynamically adjust the zoom level during the capture operation without discrete and jarring transitions.","pos":[35513,35799]},{"content":"This section describes how to adjust the zoom level in response to a pinch gesture.","pos":[35800,35883]},{"content":"First, determine if the digital zoom control is supported on the current device by checking the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>ZoomControl.Supported<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/dn633819)</ept> property.","pos":[35885,36076],"source":"First, determine if the digital zoom control is supported on the current device by checking the [**ZoomControl.Supported**](https://msdn.microsoft.com/library/windows/apps/dn633819) property."},{"content":"Next, determine if smooth zoom mode is available by checking the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>ZoomControl.SupportedModes<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/dn926721)</ept> to see if it contains the value <bpt id=\"p3\">[</bpt><bpt id=\"p4\">**</bpt>ZoomTransitionMode.Smooth<ept id=\"p4\">**</ept><ept id=\"p3\">](https://msdn.microsoft.com/library/windows/apps/dn926726)</ept>.","pos":[36077,36355],"source":" Next, determine if smooth zoom mode is available by checking the [**ZoomControl.SupportedModes**](https://msdn.microsoft.com/library/windows/apps/dn926721) to see if it contains the value [**ZoomTransitionMode.Smooth**](https://msdn.microsoft.com/library/windows/apps/dn926726)."},{"pos":[36367,36388],"content":"IsSmoothZoomSupported"},{"content":"On a multi-touch enabled device, a typical scenario is to adjust the zoom factor based on a two-finger pinch gesture.","pos":[36472,36589]},{"content":"Set the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>ManipulationMode<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br208948)</ept> property of the <bpt id=\"p3\">[</bpt><bpt id=\"p4\">**</bpt>CaptureElement<ept id=\"p4\">**</ept><ept id=\"p3\">](https://msdn.microsoft.com/library/windows/apps/br209278)</ept> control to <bpt id=\"p5\">[</bpt><bpt id=\"p6\">**</bpt>ManipulationModes.Scale<ept id=\"p6\">**</ept><ept id=\"p5\">](https://msdn.microsoft.com/library/windows/apps/br227934)</ept> to enable the pinch gesture.","pos":[36590,36901],"source":" Set the [**ManipulationMode**](https://msdn.microsoft.com/library/windows/apps/br208948) property of the [**CaptureElement**](https://msdn.microsoft.com/library/windows/apps/br209278) control to [**ManipulationModes.Scale**](https://msdn.microsoft.com/library/windows/apps/br227934) to enable the pinch gesture."},{"content":"Then, register for the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>ManipulationDelta<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br208946)</ept> event which is raised when the pinch gesture changes size.","pos":[36902,37065],"source":" Then, register for the [**ManipulationDelta**](https://msdn.microsoft.com/library/windows/apps/br208946) event which is raised when the pinch gesture changes size."},{"pos":[37077,37104],"content":"RegisterPinchGestureHandler"},{"content":"In the handler for the <bpt id=\"p1\">**</bpt>ManipulationDelta<ept id=\"p1\">**</ept> event, update the zoom factor based on the change in the user's pinch gesture.","pos":[37194,37317],"source":"In the handler for the **ManipulationDelta** event, update the zoom factor based on the change in the user's pinch gesture."},{"content":"The <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>ManipulationDelta.Scale<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br242016)</ept> value represents the change in scale of the pinch gesture such that a small increase in the size of the pinch is a number slightly larger than 1.0 and a small decrease in the pinch size is a number slightly smaller than 1.0.","pos":[37318,37634],"source":" The [**ManipulationDelta.Scale**](https://msdn.microsoft.com/library/windows/apps/br242016) value represents the change in scale of the pinch gesture such that a small increase in the size of the pinch is a number slightly larger than 1.0 and a small decrease in the pinch size is a number slightly smaller than 1.0."},{"content":"In this example, the current value of the zoom control is multiplied by the scale delta.","pos":[37635,37723]},{"content":"Before setting the zoom factor, you must make sure that the value is not less than the minimum value supported by the device as indicated by the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>ZoomControl.Min<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/dn633817)</ept> property.","pos":[37725,37959],"source":"Before setting the zoom factor, you must make sure that the value is not less than the minimum value supported by the device as indicated by the [**ZoomControl.Min**](https://msdn.microsoft.com/library/windows/apps/dn633817) property."},{"content":"Also, make sure that the value is less than or equal to the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>ZoomControl.Max<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/dn608150)</ept> value.","pos":[37960,38106],"source":" Also, make sure that the value is less than or equal to the [**ZoomControl.Max**](https://msdn.microsoft.com/library/windows/apps/dn608150) value."},{"content":"Finally, you must make sure that the the zoom factor is a multiple of the zoom step size supported by the device as indicated by the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>Step<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/dn633818)</ept> property.","pos":[38107,38318],"source":" Finally, you must make sure that the the zoom factor is a multiple of the zoom step size supported by the device as indicated by the [**Step**](https://msdn.microsoft.com/library/windows/apps/dn633818) property."},{"content":"If your zoom factor does not meet these requirements, an exception will be thrown when you attempt to set the zoom level on the capture device.","pos":[38319,38462]},{"content":"Set the zoom level on the capture device by creating a new <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>ZoomSettings<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/dn926722)</ept> object.","pos":[38464,38607],"source":"Set the zoom level on the capture device by creating a new [**ZoomSettings**](https://msdn.microsoft.com/library/windows/apps/dn926722) object."},{"content":"Set the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>Mode<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/dn926723)</ept> property to <bpt id=\"p3\">[</bpt><bpt id=\"p4\">**</bpt>ZoomTransitionMode.Smooth<ept id=\"p4\">**</ept><ept id=\"p3\">](https://msdn.microsoft.com/library/windows/apps/dn926726)</ept> and then set the <bpt id=\"p5\">[</bpt><bpt id=\"p6\">**</bpt>Value<ept id=\"p6\">**</ept><ept id=\"p5\">](https://msdn.microsoft.com/library/windows/apps/dn926724)</ept> property to your desired zoom factor.","pos":[38608,38911],"source":" Set the [**Mode**](https://msdn.microsoft.com/library/windows/apps/dn926723) property to [**ZoomTransitionMode.Smooth**](https://msdn.microsoft.com/library/windows/apps/dn926726) and then set the [**Value**](https://msdn.microsoft.com/library/windows/apps/dn926724) property to your desired zoom factor."},{"content":"Finally, call <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>ZoomControl.Configure<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/dn926719)</ept> to set the new zoom value on the device.","pos":[38912,39052],"source":" Finally, call [**ZoomControl.Configure**](https://msdn.microsoft.com/library/windows/apps/dn926719) to set the new zoom value on the device."},{"content":"The device will smoothly transition to the new zoom value.","pos":[39053,39111]},{"pos":[39123,39140],"content":"ManipulationDelta"},{"content":"Related topics","pos":[39223,39237]},{"content":"Capture photos and video with MediaCapture","pos":[39242,39284]}],"content":"---\nauthor: drewbatgit\nms.assetid: 831123A7-1F40-4B74-AE9F-69AC9883B4AD\ndescription: This article shows you how video device controls to enable enhanced photo and video capture scenarios including optical image stabilization and smooth zoom.\ntitle: Capture device controls for photo and video capture\n---\n\n# Capture device controls for photo and video capture\n\n\\[ Updated for UWP apps on Windows 10. For Windows 8.x articles, see the [archive](http://go.microsoft.com/fwlink/p/?linkid=619132) \\]\n\n\nThis article shows you how video device controls to enable enhanced photo and video capture scenarios including optical image stabilization and smooth zoom.\n\nThe controls discussed in this article are all added to your app using the same pattern. First, you check to see if the control is supported on the current device on which your app is running. If the control is supported, then you set the desired mode for the control. Typically, if a particular control is unsupported on the current device, you should disable or hide the UI element that allows the user to enable the feature.\n\nThe code in this article was adapted from the [Camera Manual Controls SDK sample](http://go.microsoft.com/fwlink/?LinkId=619479). You can download the sample to see the code used in context or to use the sample as a starting point for your own app.\n\n**Note** This article builds on concepts and code discussed in [Capture Photos and Video with MediaCapture](capture-photos-and-video-with-mediacapture.md), which describes the steps for implementing basic photo and video capture. It is recommended that you familiarize yourself with the basic media capture pattern in that article before moving on to more advanced capture scenarios. The code in this article assumes that your app already has an instance of MediaCapture that has been properly initialized.\n\nAll of the device control APIs discussed in this article are members of the [**Windows.Media.Devices**](https://msdn.microsoft.com/library/windows/apps/br206902) namespace.\n\n[!code-cs[VideoControllersUsing](./code/BasicMediaCaptureWin10/cs/MainPage.xaml.cs#SnippetVideoControllersUsing)]\n\n## Exposure\n\nThe [**ExposureControl**](https://msdn.microsoft.com/library/windows/apps/dn278910) allows you to set the shutter speed used during photo or video capture.\n\nThis example uses a [**Slider**](https://msdn.microsoft.com/library/windows/apps/br209614) control to adjust the current exposure value and a checkbox to toggle automatic exposure adjustment.\n\n[!code-xml[ExposureXAML](./code/BasicMediaCaptureWin10/cs/MainPage.xaml#SnippetExposureXAML)]\n\nCheck to see if the current capture device supports the **ExposureControl** by checking the [**Supported**](https://msdn.microsoft.com/library/windows/apps/dn297710) property. If the control is supported, then you can show and enable the UI for this feature. Set the checked state of the checkbox to indicate if automatic exposure adjustment is currently active to the value of the [**Auto**](https://msdn.microsoft.com/library/windows/apps/dn278911) property.\n\nThe exposure value must be within the range supported by the device and must be an increment of the supported step size. Get the supported values for the current device by checking the [**Min**](https://msdn.microsoft.com/library/windows/apps/dn278919), [**Max**](https://msdn.microsoft.com/library/windows/apps/dn278914), and [**Step**](https://msdn.microsoft.com/library/windows/apps/dn278930) properties, which are used to set the corresponding properties of the slider control.\n\nSet the slider control's value to the current value of the **ExposureControl** after unregistering the [**ValueChanged**](https://msdn.microsoft.com/library/windows/apps/br209737) event handler so that the event is not triggered when the value is set.\n\n[!code-cs[ExposureControl](./code/BasicMediaCaptureWin10/cs/MainPage.ManualControls.xaml.cs#SnippetExposureControl)]\n\nIn the **ValueChanged** event handler, get the current value of the control and the set the exposure value by calling [**SetValueAsync**](https://msdn.microsoft.com/library/windows/apps/dn278927).\n\n[!code-cs[ExposureSlider](./code/BasicMediaCaptureWin10/cs/MainPage.ManualControls.xaml.cs#SnippetExposureSlider)]\n\nIn the **CheckedChanged** event handler of the auto exposure checkbox, turn automatic exposure adjustment on or off by calling [**SetAutoAsync**](https://msdn.microsoft.com/library/windows/apps/dn278920) and passing in a boolean value.\n\n[!code-cs[ExposureCheckBox](./code/BasicMediaCaptureWin10/cs/MainPage.ManualControls.xaml.cs#SnippetExposureCheckBox)]\n\n**Important** Automatic exposure mode is only supported while the preview stream is running. Check to make sure that the preview stream is running before turning on automatic exposure.\n\n## Exposure compensation\n\nThe [**ExposureCompensationControl**](https://msdn.microsoft.com/library/windows/apps/dn278897) allows you to set the exposure compensation used during photo or video capture.\n\nThis example uses a [**Slider**](https://msdn.microsoft.com/library/windows/apps/br209614) control to adjust the current exposure compensation value.\n\n[!code-xml[EvXAML](./code/BasicMediaCaptureWin10/cs/MainPage.xaml#SnippetEvXAML)]\n\nCheck to see if the current capture device supports the **ExposureCompensationControl** by checking the [Supported](supported-codecs.md) property. If the control is supported, then you can show and enable the UI for this feature.\n\nThe exposure compensation value must be within the range supported by the device and must be an increment of the supported step size. Get the supported values for the current device by checking the [**Min**](https://msdn.microsoft.com/library/windows/apps/dn278901), [**Max**](https://msdn.microsoft.com/library/windows/apps/dn278899), and [**Step**](https://msdn.microsoft.com/library/windows/apps/dn278904) properties, which are used to set the corresponding properties of the slider control.\n\nSet slider control's value to the current value of the **ExposureCompensationControl** after unregistering the [**ValueChanged**](https://msdn.microsoft.com/library/windows/apps/br209737) event handler so that the event is not triggered when the value is set.\n\n[!code-cs[EvControl](./code/BasicMediaCaptureWin10/cs/MainPage.ManualControls.xaml.cs#SnippetEvControl)]\n\nIn the **ValueChanged** event handler, get the current value of the control and the set the exposure value by calling [**SetValueAsync**](https://msdn.microsoft.com/library/windows/apps/dn278903).\n\n[!code-cs[EvValueChanged](./code/BasicMediaCaptureWin10/cs/MainPage.ManualControls.xaml.cs#SnippetEvValueChanged)]\n\n## Flash\n\nThe [**FlashControl**](https://msdn.microsoft.com/library/windows/apps/dn297725) allows you to enable or disable the flash or to enable automatic flash, where the system dynamically determines whether to use the flash. This control also allows you to enable automatic red eye reduction on devices that support it. These settings all apply to capturing photos. The [**TorchControl**](https://msdn.microsoft.com/library/windows/apps/dn279077) is a separate control for turning the torch on or off for video capture.\n\nThis example uses a set of radio buttons to allow the user to switch between on, off, and auto flash settings. A checkbox is also provided to allow toggling of red eye reduction and the video torch.\n\n[!code-xml[FlashXAML](./code/BasicMediaCaptureWin10/cs/MainPage.xaml#SnippetFlashXAML)]\n\nCheck to see if the current capture device supports the **FlashControl** by checking the [**Supported**](https://msdn.microsoft.com/library/windows/apps/dn297837) property. If the control is supported, then you can show and enable the UI for this feature. If the **FlashControl** is supported, automatic red eye reduction may or may not be supported, so check the [**RedEyeReductionSupported**](https://msdn.microsoft.com/library/windows/apps/dn297766) property before enabling the UI. Since the **TorchControl** is separate from the flash control, you must also check its [**Supported**](https://msdn.microsoft.com/library/windows/apps/dn279081) property before using it.\n\nIn the [**Checked**](https://msdn.microsoft.com/library/windows/apps/br209796) event handler for each of the flash radio buttons, enable or disable the appropriate corresponding flash setting. Note that to set the flash to always be used, you must set the [**Enabled**](https://msdn.microsoft.com/library/windows/apps/dn297733) property to true and the [**Auto**](https://msdn.microsoft.com/library/windows/apps/dn297728) property to false.\n\n[!code-cs[FlashControl](./code/BasicMediaCaptureWin10/cs/MainPage.ManualControls.xaml.cs#SnippetFlashControl)]\n\n[!code-cs[FlashRadioButtons](./code/BasicMediaCaptureWin10/cs/MainPage.ManualControls.xaml.cs#SnippetFlashRadioButtons)]\n\nIn the handler for the red eye reduction checkbox, set the [**RedEyeReduction**](https://msdn.microsoft.com/library/windows/apps/dn297758) property to the appropriate value.\n\n[!code-cs[RedEye](./code/BasicMediaCaptureWin10/cs/MainPage.ManualControls.xaml.cs#SnippetRedEye)]\n\nFinally, in the handler for the video torch checkbox, set the [**Enabled**](https://msdn.microsoft.com/library/windows/apps/dn279078) property to the appropriate value.\n\n[!code-cs[Torch](./code/BasicMediaCaptureWin10/cs/MainPage.ManualControls.xaml.cs#SnippetTorch)]\n\n**Note** On some devices the torch will not emit light, even if [**TorchControl.Enabled**](https://msdn.microsoft.com/library/windows/apps/dn279078) is set to true, unless the device has a preview stream running and is actively capturing video. The recommended order of operations is to turn on the video preview, then turn on the torch by setting **Enabled** to true, and then initiate video capture. On some devices the torch will light up after the preview is started. On other devices, the torch may not light up until video capture is started.\n\n## Focus\n\nThree different commonly used methods for adjusting the focus of the camera are supported by the [**FocusControl**](https://msdn.microsoft.com/library/windows/apps/dn297788) object, continuous autofocus, tap to focus, and manual focus. A camera app may support all three of these methods, but for readability, this article discusses each technique separately. This section also discusses how to enable the focus assist light.\n\n### Continuous autofocus\n\nEnabling continuous autofocus instructs the camera to adjust the focus dynamically to try to keep the subject of the photo or video in focus. This example uses a radio button to toggle continuous autofocus on and off.\n\n[!code-xml[CAFXAML](./code/BasicMediaCaptureWin10/cs/MainPage.xaml#SnippetCAFXAML)]\n\nCheck to see if the current capture device supports the **FocusControl** by checking the [**Supported**](https://msdn.microsoft.com/library/windows/apps/dn297785) property. Then, see if continuous autofocus is supported by checking the [**SupportedFocusModes**](https://msdn.microsoft.com/library/windows/apps/dn608079) list to see if it contains the value [**FocusMode.Continuous**](https://msdn.microsoft.com/library/windows/apps/dn608084), and if so, show the continuous autofocus radio button.\n\n[!code-cs[CAF](./code/BasicMediaCaptureWin10/cs/MainPage.ManualControls.xaml.cs#SnippetCAF)]\n\nIn the [**Checked**](https://msdn.microsoft.com/library/windows/apps/br209796) event handler for the continuous autofocus radio button, use the [**VideoDeviceController.FocusControl**](https://msdn.microsoft.com/library/windows/apps/dn279091) property to get an instance of the control. Call [**UnlockAsync**](https://msdn.microsoft.com/library/windows/apps/dn608081) to unlock the control in case your app has previously called [**LockAsync**](https://msdn.microsoft.com/library/windows/apps/dn608075) to enable one of the other focus modes.\n\nCreate a new [**FocusSettings**](https://msdn.microsoft.com/library/windows/apps/dn608085) object and set the [**Mode**](https://msdn.microsoft.com/library/windows/apps/dn608090) property to **Continuous**. Set the [**AutoFocusRange**](https://msdn.microsoft.com/library/windows/apps/dn608086) property to a value appropriate for your app scenario or selected by the user from your UI. Pass your **FocusSettings** object into the [**Configure**](https://msdn.microsoft.com/library/windows/apps/dn608067) method and then call [**FocusAsync**](https://msdn.microsoft.com/library/windows/apps/dn297794) to initiate continuous autofocus.\n\n[!code-cs[CafFocusRadioButton](./code/BasicMediaCaptureWin10/cs/MainPage.ManualControls.xaml.cs#SnippetCafFocusRadioButton)]\n\n**Important** Autofocus mode is only supported while the preview stream is running. Check to make sure that the preview stream is running before turning on continuous autofocus.\n\n### Tap to focus\n\nThe tap-to-focus technique uses the [**FocusControl**](https://msdn.microsoft.com/library/windows/apps/dn297788) and the [**RegionsOfInterestControl**](https://msdn.microsoft.com/library/windows/apps/dn279064) to specify a subregion of the capture frame where the capture device should focus. The region of focus is determined by the user tapping on the screen displaying the preview stream.\n\nThis example uses a radio button to enable and disable tap-to-focus mode.\n\n[!code-xml[TapFocusXAML](./code/BasicMediaCaptureWin10/cs/MainPage.xaml#SnippetTapFocusXAML)]\n\nCheck to see if the current capture device supports the **FocusControl** by checking the [**Supported**](https://msdn.microsoft.com/library/windows/apps/dn297785) property. The **RegionsOfInterestControl** must be supported, and must support at least one region, in order to use this technique. Check the [**AutoFocusSupported**](https://msdn.microsoft.com/library/windows/apps/dn279066) and [**MaxRegions**](https://msdn.microsoft.com/library/windows/apps/dn279069) properties to determine whether to show or hide the radio button for tap-to-focus.\n\n[!code-cs[TapFocus](./code/BasicMediaCaptureWin10/cs/MainPage.ManualControls.xaml.cs#SnippetTapFocus)]\n\nIn the [**Checked**](https://msdn.microsoft.com/library/windows/apps/br209796) event handler for the tap-to-focus radio button, use the [**VideoDeviceController.FocusControl**](https://msdn.microsoft.com/library/windows/apps/dn279091) property to get an instance of the control. Call [**LockAsync**](https://msdn.microsoft.com/library/windows/apps/dn608075) to lock the control in case your app has previously called [**UnlockAsync**](https://msdn.microsoft.com/library/windows/apps/dn608081) to enable continuous autofocus. Then you wait for the user to tap the screen to change the focus.\n\n[!code-cs[TapFocusRadioButton](./code/BasicMediaCaptureWin10/cs/MainPage.ManualControls.xaml.cs#SnippetTapFocusRadioButton)]\n\nThis example focuses on a region when the user taps the screen, and then removes the focus from that region when the user taps again, like a toggle. Use a boolean variable to track the current toggled state.\n\n[!code-cs[IsFocused](./code/BasicMediaCaptureWin10/cs/MainPage.ManualControls.xaml.cs#SnippetIsFocused)]\n\nThe next step is to listen for the event when the user taps the screen by handling the [**Tapped**](https://msdn.microsoft.com/library/windows/apps/br208985) event of the [**CaptureElement**](https://msdn.microsoft.com/library/windows/apps/br209278) that is currently displaying the capture preview stream. If the camera isn't currently previewing, or if tap-to-focus mode is disabled, then return from the handler without doing anything.\n\nIf the tracking variable *\\_isFocused* is toggled to false and if the camera isn't currently in the process of focus - determined by the [**FocusState**](https://msdn.microsoft.com/library/windows/apps/dn608074) property of the **FocusControl** - then begin the tap-to-focus process. Get the position of the user's tap from the event args passed into the handler. This example also uses this opportunity to pick the size of the region that will be focused upon. In this case, the size is 1/4 of the smallest dimension of the capture element. Pass the tap position and the region size into the **TapToFocus** helper method that is defined in the next section.\n\nIf the *\\_isFocused* toggle is set to true, then the user tap should clear the focus from the previous region. This is done in the **TapUnfocus** helper method shown below.\n\n[!code-cs[TapFocusPreviewControl](./code/BasicMediaCaptureWin10/cs/MainPage.ManualControls.xaml.cs#SnippetTapFocusPreviewControl)]\n\nIn the **TapToFocus** helper method, first set the *\\_isFocused* toggle to true so that the next screen tap will release the focus from the tapped region.\n\nThe next task in this helper method is to determine the rectangle within the preview stream that will be assigned to the focus control. This requires two steps. The first step is to determine the rectangle that the preview stream takes up within the [**CaptureElement**](https://msdn.microsoft.com/library/windows/apps/br209278) control. This depends on the dimensions of the preview stream and the orientation of the device. The helper method **GetPreviewStreamRectInControl**, shown at the end of this section, performs this task and returns the rectangle containing the preview stream.\n\nThe next task in **TapToFocus** is to convert the tap location and desired focus rectangle size, which were determined within the **CaptureElement.Tapped** event handler, into coordinates within capture stream. The **ConvertUiTapToPreviewRect** helper method, shown later in this section, performs this conversion and returns the rectangle, in capture stream coordinates, where the focus will be requested.\n\nNow that the target rectangle has been obtained, create a new [**RegionOfInterest**](https://msdn.microsoft.com/library/windows/apps/dn279058) object, setting the [**Bounds**](https://msdn.microsoft.com/library/windows/apps/dn279062) property to the target rectangle obtained in the previous steps.\n\nGet the capture device's [**FocusControl**](https://msdn.microsoft.com/library/windows/apps/dn297788). Create a new [**FocusSettings**](https://msdn.microsoft.com/library/windows/apps/dn608085) object and set the [**Mode**](https://msdn.microsoft.com/library/windows/apps/dn608076) and [**AutoFocusRange**](https://msdn.microsoft.com/library/windows/apps/dn608086) to your desired values, after checking to make sure that they are supported by the **FocusControl**. Call [**Configure**](https://msdn.microsoft.com/library/windows/apps/dn608067) on the **FocusControl** to make your settings active and signal the device to begin focusing on the specified region.\n\nNext, get the capture device's [**RegionsOfInterestControl**](https://msdn.microsoft.com/library/windows/apps/dn279064) and call [**SetRegionsAsync**](https://msdn.microsoft.com/library/windows/apps/dn279070) to set the active region. Multiple regions of interest can be set on devices that support it, but this example only sets a single region.\n\nFinally, call [**FocusAsync**](https://msdn.microsoft.com/library/windows/apps/dn297794) on the **FocusControl** to initiate focusing.\n\n**Important** When implementing tap to focus, the order of operations is important. You should call these APIs in the following order:\n\n**1.**[**FocusControl.Configure**](https://msdn.microsoft.com/library/windows/apps/dn608067)\n**2.**[**RegionsOfInterestControl.SetRegionsAsync**](https://msdn.microsoft.com/library/windows/apps/dn279070)\n**3.**[**FocusControl.FocusAsync**](https://msdn.microsoft.com/library/windows/apps/dn297794)\n\n[!code-cs[TapToFocus](./code/BasicMediaCaptureWin10/cs/MainPage.ManualControls.xaml.cs#SnippetTapToFocus)]\n\nIn the **TapUnfocus** helper method, obtain the **RegionsOfInterestControl** and call [**ClearRegionsAsync**](https://msdn.microsoft.com/library/windows/apps/dn279068) to clear the region that was registered with the control within the **TapToFocus** helper method. Then, get the **FocusControl** and call [**FocusAsync**](https://msdn.microsoft.com/library/windows/apps/dn297794) to cause the device to refocus without a region of interest.\n\n[!code-cs[TapUnfocus](./code/BasicMediaCaptureWin10/cs/MainPage.ManualControls.xaml.cs#SnippetTapUnfocus)]\n\nThe **GetPreviewStreamRectInControl** helper method uses the resolution of the preview stream and the orientation of the device to determine the rectangle within the preview element that contains the preview stream, trimming off any letterboxed padding that the control may provide to maintain the stream's aspect ratio. This method uses class member variables defined in the basic media capture example code found in [Capture Photos and Video with MediaCapture](capture-photos-and-video-with-mediacapture.md).\n\n[!code-cs[GetPreviewStreamRectInControl](./code/BasicMediaCaptureWin10/cs/MainPage.ManualControls.xaml.cs#SnippetGetPreviewStreamRectInControl)]\n\nThe **ConvertUiTapToPreviewRect** helper method takes as arguments the location of the tap event, the desired size of the focus region, and the rectangle containing the preview stream obtained from the **GetPreviewStreamRectInControl** helper method. This method uses these values and the device's current orientation to calculate the rectangle within the preview stream that contains the desired region. Once again, this method uses class member variables defined in the basic media capture example code found in [Capture Photos and Video with MediaCapture](capture-photos-and-video-with-mediacapture.md).\n\n[!code-cs[ConvertUiTapToPreviewRect](./code/BasicMediaCaptureWin10/cs/MainPage.ManualControls.xaml.cs#SnippetConvertUiTapToPreviewRect)]\n\n### Manual focus\n\nThe manual focus technique uses a **Slider** control to set the current focus depth of the capture device. A radio button is used to toggle manual focus on and off.\n\n[!code-xml[ManualFocusXAML](./code/BasicMediaCaptureWin10/cs/MainPage.xaml#SnippetManualFocusXAML)]\n\nCheck to see if the current capture device supports the **FocusControl** by checking the [**Supported**](https://msdn.microsoft.com/library/windows/apps/dn297837) property. If the control is supported, then you can show and enable the UI for this feature.\n\nThe focus value must be within the range supported by the device and must be an increment of the supported step size. Get the supported values for the current device by checking the [**Min**](https://msdn.microsoft.com/library/windows/apps/dn297808), [**Max**](https://msdn.microsoft.com/library/windows/apps/dn297802), and [**Step**](https://msdn.microsoft.com/library/windows/apps/dn297833) properties, which are used to set the corresponding properties of the slider control.\n\nSet the slider control's value to the current value of the **FocusControl** after unregistering the [**ValueChanged**](https://msdn.microsoft.com/library/windows/apps/br209737) event handler so that the event is not triggered when the value is set.\n\n[!code-cs[Focus](./code/BasicMediaCaptureWin10/cs/MainPage.ManualControls.xaml.cs#SnippetFocus)]\n\nIn the **Checked** event handler for the manual focus radio button, get the **FocusControl** object and call [**LockAsync**](https://msdn.microsoft.com/library/windows/apps/dn608075) in case your app had previously unlocked the focus with a call to [**UnlockAsync**](https://msdn.microsoft.com/library/windows/apps/dn608081).\n\n[!code-cs[ManualFocusChecked](./code/BasicMediaCaptureWin10/cs/MainPage.ManualControls.xaml.cs#SnippetManualFocusChecked)]\n\nIn the **ValueChanged** event handler of the manual focus slider, get the current value of the control and the set the focus value by calling [**SetValueAsync**](https://msdn.microsoft.com/library/windows/apps/dn297828).\n\n[!code-cs[FocusSlider](./code/BasicMediaCaptureWin10/cs/MainPage.ManualControls.xaml.cs#SnippetFocusSlider)]\n\n### Enable the focus light\n\nOn devices that support it, you can enable a focus assist light to help the device focus. This example uses a checkbox to enable or disable the focus assist light.\n\n[!code-xml[FocusLightXAML](./code/BasicMediaCaptureWin10/cs/MainPage.xaml#SnippetFocusLightXAML)]\n\nCheck to see if the current capture device supports the **FlashControl** by checking the [**Supported**](https://msdn.microsoft.com/library/windows/apps/dn297785) property. Also check the [**AssistantLightSupported**](https://msdn.microsoft.com/library/windows/apps/dn608066) to make sure the assist light is also supported. If these are both supported, then you can show and enable the UI for this feature.\n\n[!code-cs[FocusLight](./code/BasicMediaCaptureWin10/cs/MainPage.ManualControls.xaml.cs#SnippetFocusLight)]\n\nIn the **CheckedChanged** event handler, get the capture devices [**FlashControl**](https://msdn.microsoft.com/library/windows/apps/dn297725) object. Set the [**AssistantLightEnabled**](https://msdn.microsoft.com/library/windows/apps/dn608065) property to enable or disable the focus light.\n\n[!code-cs[FocusLightCheckBox](./code/BasicMediaCaptureWin10/cs/MainPage.ManualControls.xaml.cs#SnippetFocusLightCheckBox)]\n\n## ISO speed\n\nThe [**IsoSpeedControl**](https://msdn.microsoft.com/library/windows/apps/dn297850) allows you to set the ISO speed used during photo or video capture.\n\nThis example uses a [**Slider**](https://msdn.microsoft.com/library/windows/apps/br209614) control to adjust the current exposure compensation value and a checkbox to toggle automatic ISO speed adjustment.\n\n[!code-xml[IsoXAML](./code/BasicMediaCaptureWin10/cs/MainPage.xaml#SnippetIsoXAML)]\n\nCheck to see if the current capture device supports the **IsoSpeedControl** by checking the [**Supported**](https://msdn.microsoft.com/library/windows/apps/dn297869) property. If the control is supported, then you can show and enable the UI for this feature. Set the checked state of the checkbox to indicate if automatic ISO speed adjustment is currently active to the value of the [**Auto**](https://msdn.microsoft.com/library/windows/apps/dn608093) property.\n\nThe ISO speed value must be within the range supported by the device and must be an increment of the supported step size. Get the supported values for the current device by checking the [**Min**](https://msdn.microsoft.com/library/windows/apps/dn608095), [**Max**](https://msdn.microsoft.com/library/windows/apps/dn608094), and [**Step**](https://msdn.microsoft.com/library/windows/apps/dn608129) properties, which are used to set the corresponding properties of the slider control.\n\nSet the slider control's value to the current value of the **IsoSpeedControl** after unregistering the [**ValueChanged**](https://msdn.microsoft.com/library/windows/apps/br209737) event handler so that the event is not triggered when the value is set.\n\n[!code-cs[IsoControl](./code/BasicMediaCaptureWin10/cs/MainPage.ManualControls.xaml.cs#SnippetIsoControl)]\n\nIn the **ValueChanged** event handler, get the current value of the control and the set the ISO speed value by calling [**SetValueAsync**](https://msdn.microsoft.com/library/windows/apps/dn608128).\n\n[!code-cs[IsoSlider](./code/BasicMediaCaptureWin10/cs/MainPage.ManualControls.xaml.cs#SnippetIsoSlider)]\n\nIn the **CheckedChanged** event handler of the auto ISO speed checkbox, turn on automatic ISO speed adjustment by calling [**SetAutoAsync**](https://msdn.microsoft.com/library/windows/apps/dn608127). Turn automatic ISO speed adjustment off by calling [**SetValueAsync**](https://msdn.microsoft.com/library/windows/apps/dn608128) and passing in the current value of the slider control.\n\n[!code-cs[IsoCheckBox](./code/BasicMediaCaptureWin10/cs/MainPage.ManualControls.xaml.cs#SnippetIsoCheckBox)]\n\n## Optical image stabilization\n\nOptical image stabilization (OIS) stabilizes a the captured video stream by mechanically manipulating the hardware capture device, which can provide a superior result than digital stabilization. On devices that don't support OIS, you can use the VideoStabilizationEffect to perform digital stabilization on your captured vide. For more information, see [Effects for video capture](effects-for-video-capture.md).\n\nDetermine if OIS is supported on the current device by checking the [**OpticalImageStabilizationControl.Supported**](https://msdn.microsoft.com/library/windows/apps/dn926689) property.\n\nThe OIS control supports three modes: on, off, and automatic, which means that the device dynamically determines if OIS would improve the media capture and, if so, enables OIS. To determine if a particular mode is supported on a device, check to see if the [**OpticalImageStabilizationControl.SupportedModes**](https://msdn.microsoft.com/library/windows/apps/dn926690) collection contains the desired mode.\n\nEnable or disable OIS by setting the [**OpticalImageStabilizationControl.Mode**](https://msdn.microsoft.com/library/windows/apps/dn926691) to the desired mode.\n\n[!code-cs[SetOpticalImageStabilizationMode](./code/BasicMediaCaptureWin10/cs/MainPage.xaml.cs#SnippetSetOpticalImageStabilizationMode)]\n\n## White balance\n\nThe [**WhiteBalanceControl**](https://msdn.microsoft.com/library/windows/apps/dn279104) allows you to set the white balance used during photo or video capture.\n\nThis example uses a [**ComboBox**](https://msdn.microsoft.com/library/windows/apps/br209348) control to select from built-in color temperature presets and a [**Slider**](https://msdn.microsoft.com/library/windows/apps/br209614) control for manual white balance adjustment.\n\n[!code-xml[WhiteBalanceXAML](./code/BasicMediaCaptureWin10/cs/MainPage.xaml#SnippetWhiteBalanceXAML)]\n\nCheck to see if the current capture device supports the **WhiteBalanceControl** by checking the [**Supported**](https://msdn.microsoft.com/library/windows/apps/dn279120) property. If the control is supported, then you can show and enable the UI for this feature. Set the items of the combo box to the values of the [**ColorTemperaturePreset**](https://msdn.microsoft.com/library/windows/apps/dn278894) enumeration. And set the selected item to the current value of the [**Preset**](https://msdn.microsoft.com/library/windows/apps/dn279110) property.\n\nFor manual control, the white balance value must be within the range supported by the device and must be an increment of the supported step size. Get the supported values for the current device by checking the [**Min**](https://msdn.microsoft.com/library/windows/apps/dn279109), [**Max**](https://msdn.microsoft.com/library/windows/apps/dn279107), and [**Step**](https://msdn.microsoft.com/library/windows/apps/dn279119) properties, which are used to set the corresponding properties of the slider control. Before enabling manual control, check to make sure that the range between the minimum and maximum supported values is greater than the step size. If it is not, manual control is not supported on the current device.\n\nSet the slider control's value to the current value of the **WhiteBalanceControl** after unregistering the [**ValueChanged**](https://msdn.microsoft.com/library/windows/apps/br209737) event handler so that the event is not triggered when the value is set.\n\n[!code-cs[WhiteBalance](./code/BasicMediaCaptureWin10/cs/MainPage.ManualControls.xaml.cs#SnippetWhiteBalance)]\n\nIn the [**SelectionChanged**](https://msdn.microsoft.com/library/windows/apps/br209776) event handler of the color temperature preset combo box, get the currently selected preset and set the value of the control by calling [**SetPresetAsync**](https://msdn.microsoft.com/library/windows/apps/dn279113). If the selected preset value is not **Manual**, then disable the manual white balance slider.\n\n[!code-cs[WhiteBalanceComboBox](./code/BasicMediaCaptureWin10/cs/MainPage.ManualControls.xaml.cs#SnippetWhiteBalanceComboBox)]\n\nIn the **ValueChanged** event handler, get the current value of the control and the set the white balance value by calling [**SetValueAsync**](https://msdn.microsoft.com/library/windows/apps/dn278927).\n\n[!code-cs[WhiteBalanceSlider](./code/BasicMediaCaptureWin10/cs/MainPage.ManualControls.xaml.cs#SnippetWhiteBalanceSlider)]\n\n**Important** Adjusting the white balance is only supported while the preview stream is running. Check to make sure that the preview stream is running before setting the white balance value or preset.\n\n**Important** The **ColorTemperaturePreset.Auto** preset value instructs the system to automatically adjust the white balance level. For some scenarios, such as capturing a photo sequence where the white balance levels should be the same for each frame, you may want to lock the control to the current automatic value. To do this, call [**SetPresetAsync**](https://msdn.microsoft.com/library/windows/apps/dn279113) and specify the **Manual** preset and do not set a value on the control using [**SetValueAsync**](https://msdn.microsoft.com/library/windows/apps/dn279114). This will cause the device to lock the current value. Do not attempt to read the current control value and then pass the returned value into **SetValueAsync** because this value is not guaranteed to be correct.\n\n## Zoom\n\nThe [**ZoomControl**](https://msdn.microsoft.com/library/windows/apps/dn608149) allows you to set the zoom level used during photo or video capture.\n\nThis example uses a [**Slider**](https://msdn.microsoft.com/library/windows/apps/br209614) control to adjust the current zoom level. The following section shows how to adjust zoom based on a pinch gesture on the screen.\n\n[!code-xml[ZoomXAML](./code/BasicMediaCaptureWin10/cs/MainPage.xaml#SnippetZoomXAML)]\n\nCheck to see if the current capture device supports the **ZoomControl** by checking the [**Supported**](https://msdn.microsoft.com/library/windows/apps/dn633819) property. If the control is supported, then you can show and enable the UI for this feature.\n\nThe zoom level value must be within the range supported by the device and must be an increment of the supported step size. Get the supported values for the current device by checking the [**Min**](https://msdn.microsoft.com/library/windows/apps/dn633817), [**Max**](https://msdn.microsoft.com/library/windows/apps/dn608150), and [**Step**](https://msdn.microsoft.com/library/windows/apps/dn633818) properties, which are used to set the corresponding properties of the slider control.\n\nSet the slider control's value to the current value of the **ZoomControl** after unregistering the [**ValueChanged**](https://msdn.microsoft.com/library/windows/apps/br209737) event handler so that the event is not triggered when the value is set.\n\n[!code-cs[ZoomControl](./code/BasicMediaCaptureWin10/cs/MainPage.ManualControls.xaml.cs#SnippetZoomControl)]\n\nIn the **ValueChanged** event handler, create a new instance of the [**ZoomSettings**](https://msdn.microsoft.com/library/windows/apps/dn926722) class, setting the [**Value**](https://msdn.microsoft.com/library/windows/apps/dn926724) property to the current value of the zoom slider control. If the [**SupportedModes**](https://msdn.microsoft.com/library/windows/apps/dn926721) property of the **ZoomControl** contains [**ZoomTransitionMode.Smooth**](https://msdn.microsoft.com/library/windows/apps/dn926726), it means the device supports smooth transitions between zoom levels. Since this modes provides a better user experience, you will typically want to use this value for the [**Mode**](https://msdn.microsoft.com/library/windows/apps/dn926723) property of the **ZoomSettings** object.\n\nFinally, change the current zoom settings by passing your **ZoomSettings** object into the [**Configure**](https://msdn.microsoft.com/library/windows/apps/dn926719) method of the **ZoomControl** object.\n\n[!code-cs[ZoomSlider](./code/BasicMediaCaptureWin10/cs/MainPage.ManualControls.xaml.cs#SnippetZoomSlider)]\n\n### Smooth zoom using pinch gesture\n\nAs discussed in the previous section, on devices that support it, smooth zoom mode allows the capture device to smoothly transition between digital zoom levels, allowing the user to dynamically adjust the zoom level during the capture operation without discrete and jarring transitions. This section describes how to adjust the zoom level in response to a pinch gesture.\n\nFirst, determine if the digital zoom control is supported on the current device by checking the [**ZoomControl.Supported**](https://msdn.microsoft.com/library/windows/apps/dn633819) property. Next, determine if smooth zoom mode is available by checking the [**ZoomControl.SupportedModes**](https://msdn.microsoft.com/library/windows/apps/dn926721) to see if it contains the value [**ZoomTransitionMode.Smooth**](https://msdn.microsoft.com/library/windows/apps/dn926726).\n\n[!code-cs[IsSmoothZoomSupported](./code/BasicMediaCaptureWin10/cs/MainPage.xaml.cs#SnippetIsSmoothZoomSupported)]\n\nOn a multi-touch enabled device, a typical scenario is to adjust the zoom factor based on a two-finger pinch gesture. Set the [**ManipulationMode**](https://msdn.microsoft.com/library/windows/apps/br208948) property of the [**CaptureElement**](https://msdn.microsoft.com/library/windows/apps/br209278) control to [**ManipulationModes.Scale**](https://msdn.microsoft.com/library/windows/apps/br227934) to enable the pinch gesture. Then, register for the [**ManipulationDelta**](https://msdn.microsoft.com/library/windows/apps/br208946) event which is raised when the pinch gesture changes size.\n\n[!code-cs[RegisterPinchGestureHandler](./code/BasicMediaCaptureWin10/cs/MainPage.xaml.cs#SnippetRegisterPinchGestureHandler)]\n\nIn the handler for the **ManipulationDelta** event, update the zoom factor based on the change in the user's pinch gesture. The [**ManipulationDelta.Scale**](https://msdn.microsoft.com/library/windows/apps/br242016) value represents the change in scale of the pinch gesture such that a small increase in the size of the pinch is a number slightly larger than 1.0 and a small decrease in the pinch size is a number slightly smaller than 1.0. In this example, the current value of the zoom control is multiplied by the scale delta.\n\nBefore setting the zoom factor, you must make sure that the value is not less than the minimum value supported by the device as indicated by the [**ZoomControl.Min**](https://msdn.microsoft.com/library/windows/apps/dn633817) property. Also, make sure that the value is less than or equal to the [**ZoomControl.Max**](https://msdn.microsoft.com/library/windows/apps/dn608150) value. Finally, you must make sure that the the zoom factor is a multiple of the zoom step size supported by the device as indicated by the [**Step**](https://msdn.microsoft.com/library/windows/apps/dn633818) property. If your zoom factor does not meet these requirements, an exception will be thrown when you attempt to set the zoom level on the capture device.\n\nSet the zoom level on the capture device by creating a new [**ZoomSettings**](https://msdn.microsoft.com/library/windows/apps/dn926722) object. Set the [**Mode**](https://msdn.microsoft.com/library/windows/apps/dn926723) property to [**ZoomTransitionMode.Smooth**](https://msdn.microsoft.com/library/windows/apps/dn926726) and then set the [**Value**](https://msdn.microsoft.com/library/windows/apps/dn926724) property to your desired zoom factor. Finally, call [**ZoomControl.Configure**](https://msdn.microsoft.com/library/windows/apps/dn926719) to set the new zoom value on the device. The device will smoothly transition to the new zoom value.\n\n[!code-cs[ManipulationDelta](./code/BasicMediaCaptureWin10/cs/MainPage.xaml.cs#SnippetManipulationDelta)]\n\n## Related topics\n\n* [Capture photos and video with MediaCapture](capture-photos-and-video-with-mediacapture.md)\n"}