{"nodes":[{"pos":[11,33],"content":"Fingerprint biometrics","needQuote":true,"needEscape":true,"nodes":[{"content":"Fingerprint biometrics","pos":[0,22]}]},{"pos":[47,148],"content":"This article explains how to add fingerprint biometrics to your Universal Windows Platform (UWP) app.","needQuote":true,"needEscape":true,"nodes":[{"content":"This article explains how to add fingerprint biometrics to your Universal Windows Platform (UWP) app.","pos":[0,101]}]},{"content":"Fingerprint biometrics","pos":[205,227]},{"content":"\\[ Updated for UWP apps on Windows 10.","pos":[230,268]},{"content":"For Windows 8.x articles, see the <bpt id=\"p1\">[</bpt>archive<ept id=\"p1\">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept> \\]","pos":[269,364],"source":" For Windows 8.x articles, see the [archive](http://go.microsoft.com/fwlink/p/?linkid=619132) \\]"},{"content":"This article explains how to add fingerprint biometrics to your Universal Windows Platform (UWP) app.","pos":[367,468]},{"content":"Including a request for fingerprint authentication when the user must consent to a particular action increases the security of your app.","pos":[469,605]},{"content":"For example, you could require fingerprint authentication before authorizing an in-app purchase, or access to restricted resources.","pos":[606,737]},{"content":"Fingerprint authentication is managed using the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>UserConsentVerifier<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/dn279134)</ept> class in the <bpt id=\"p3\">[</bpt><bpt id=\"p4\">**</bpt>Windows.Security.Credentials.UI<ept id=\"p4\">**</ept><ept id=\"p3\">](https://msdn.microsoft.com/library/windows/apps/hh701356)</ept> namespace.","pos":[738,989],"source":" Fingerprint authentication is managed using the [**UserConsentVerifier**](https://msdn.microsoft.com/library/windows/apps/dn279134) class in the [**Windows.Security.Credentials.UI**](https://msdn.microsoft.com/library/windows/apps/hh701356) namespace."},{"content":"Check the device for a fingerprint reader","pos":[994,1035]},{"content":"To find out whether the device has a fingerprint reader, call <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>UserConsentVerifier.CheckAvailabilityAsync<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/dn279138)</ept>.","pos":[1038,1207],"source":"To find out whether the device has a fingerprint reader, call [**UserConsentVerifier.CheckAvailabilityAsync**](https://msdn.microsoft.com/library/windows/apps/dn279138)."},{"content":"Even if a device supports fingerprint authentication, your app should still provide users with an option in Settings to enable or disable it.","pos":[1208,1349]},{"content":"Request consent and return results","pos":[3087,3121]},{"content":"To request user consent from a fingerprint scan, call the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>UserConsentVerifier.RequestVerificationAsync<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/dn279139)</ept> method.","pos":[3124,3298],"source":"To request user consent from a fingerprint scan, call the [**UserConsentVerifier.RequestVerificationAsync**](https://msdn.microsoft.com/library/windows/apps/dn279139) method."},{"content":"For fingerprint authentication to work, the user must have previously added a fingerprint \"signature\" to the fingerprint database.","pos":[3299,3429]},{"content":"When you call the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>UserConsentVerifier.RequestVerificationAsync<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/dn279139)</ept>, the user is presented with a modal dialog requesting a fingerprint scan.","pos":[3431,3631],"source":"When you call the [**UserConsentVerifier.RequestVerificationAsync**](https://msdn.microsoft.com/library/windows/apps/dn279139), the user is presented with a modal dialog requesting a fingerprint scan."},{"content":"You can supply a message to the <bpt id=\"p1\">**</bpt>UserConsentVerifier.RequestVerificationAsync<ept id=\"p1\">**</ept> method that will be displayed to the user as part of the modal dialog, as shown in the following image.","pos":[3632,3816],"source":" You can supply a message to the **UserConsentVerifier.RequestVerificationAsync** method that will be displayed to the user as part of the modal dialog, as shown in the following image."}],"content":"---\ntitle: Fingerprint biometrics\ndescription: This article explains how to add fingerprint biometrics to your Universal Windows Platform (UWP) app.\nms.assetid: 55483729-5F8A-401A-8072-3CD611DDFED2\n---\n\n# Fingerprint biometrics\n\n\n\\[ Updated for UWP apps on Windows 10. For Windows 8.x articles, see the [archive](http://go.microsoft.com/fwlink/p/?linkid=619132) \\]\n\n\nThis article explains how to add fingerprint biometrics to your Universal Windows Platform (UWP) app. Including a request for fingerprint authentication when the user must consent to a particular action increases the security of your app. For example, you could require fingerprint authentication before authorizing an in-app purchase, or access to restricted resources. Fingerprint authentication is managed using the [**UserConsentVerifier**](https://msdn.microsoft.com/library/windows/apps/dn279134) class in the [**Windows.Security.Credentials.UI**](https://msdn.microsoft.com/library/windows/apps/hh701356) namespace.\n\n## Check the device for a fingerprint reader\n\n\nTo find out whether the device has a fingerprint reader, call [**UserConsentVerifier.CheckAvailabilityAsync**](https://msdn.microsoft.com/library/windows/apps/dn279138). Even if a device supports fingerprint authentication, your app should still provide users with an option in Settings to enable or disable it.\n\n```cs\npublic async System.Threading.Tasks.Task<string> CheckFingerprintAvailability()\n{\n    string returnMessage = \"\";\n\n    try\n    {\n        // Check the availability of fingerprint authentication.\n        var ucvAvailability = await Windows.Security.Credentials.UI.UserConsentVerifier.CheckAvailabilityAsync();\n\n        switch (ucvAvailability)\n        {\n            case Windows.Security.Credentials.UI.UserConsentVerifierAvailability.Available:\n                returnMessage = \"Fingerprint verification is available.\";\n                break;\n            case Windows.Security.Credentials.UI.UserConsentVerifierAvailability.DeviceBusy:\n                returnMessage = \"Biometric device is busy.\";\n                break;\n            case Windows.Security.Credentials.UI.UserConsentVerifierAvailability.DeviceNotPresent:\n                returnMessage = \"No biometric device found.\";\n                break;\n            case Windows.Security.Credentials.UI.UserConsentVerifierAvailability.DisabledByPolicy:\n                returnMessage = \"Biometric verification is disabled by policy.\";\n                break;\n            case Windows.Security.Credentials.UI.UserConsentVerifierAvailability.NotConfiguredForUser:\n                returnMessage = \"The user has no fingerprints registered. Please add a fingerprint to the \" +\n                                \"fingerprint database and try again.\";\n                break;\n            default:\n                returnMessage = \"Fingerprints verification is currently unavailable.\";\n                break;\n        }\n    }\n    catch (Exception ex)\n    {\n        returnMessage = \"Fingerprint authentication availability check failed: \" + ex.ToString();\n    }\n\n    return returnMessage;\n}\n```\n\n## Request consent and return results\n\n\nTo request user consent from a fingerprint scan, call the [**UserConsentVerifier.RequestVerificationAsync**](https://msdn.microsoft.com/library/windows/apps/dn279139) method. For fingerprint authentication to work, the user must have previously added a fingerprint \"signature\" to the fingerprint database.\n\nWhen you call the [**UserConsentVerifier.RequestVerificationAsync**](https://msdn.microsoft.com/library/windows/apps/dn279139), the user is presented with a modal dialog requesting a fingerprint scan. You can supply a message to the **UserConsentVerifier.RequestVerificationAsync** method that will be displayed to the user as part of the modal dialog, as shown in the following image.\n\n```cs\nprivate async System.Threading.Tasks.Task<string> RequestConsent(string userMessage)\n{\n    string returnMessage;\n\n    if (String.IsNullOrEmpty(userMessage))\n    {\n        userMessage = \"Please provide fingerprint verification.\";\n    }\n\n    try\n    {\n        // Request the logged on user&#39;s consent via fingerprint swipe.\n        var consentResult = await Windows.Security.Credentials.UI.UserConsentVerifier.RequestVerificationAsync(userMessage);\n\n        switch (consentResult)\n        {\n            case Windows.Security.Credentials.UI.UserConsentVerificationResult.Verified:\n                returnMessage = \"Fingerprint verified.\";\n                break;\n            case Windows.Security.Credentials.UI.UserConsentVerificationResult.DeviceBusy:\n                returnMessage = \"Biometric device is busy.\";\n                break;\n            case Windows.Security.Credentials.UI.UserConsentVerificationResult.DeviceNotPresent:\n                returnMessage = \"No biometric device found.\";\n                break;\n            case Windows.Security.Credentials.UI.UserConsentVerificationResult.DisabledByPolicy:\n                returnMessage = \"Biometric verification is disabled by policy.\";\n                break;\n            case Windows.Security.Credentials.UI.UserConsentVerificationResult.NotConfiguredForUser:\n                returnMessage = \"The user has no fingerprints registered. Please add a fingerprint to the \" +\n                                \"fingerprint database and try again.\";\n                break;\n            case Windows.Security.Credentials.UI.UserConsentVerificationResult.RetriesExhausted:\n                returnMessage = \"There have been too many failed attempts. Fingerprint authentication canceled.\";\n                break;\n            case Windows.Security.Credentials.UI.UserConsentVerificationResult.Canceled:\n                returnMessage = \"Fingerprint authentication canceled.\";\n                break;\n            default:\n                returnMessage = \"Fingerprint authentication is currently unavailable.\";\n                break;\n        }\n    }\n    catch (Exception ex)\n    {\n        returnMessage = \"Fingerprint authentication failed: \" + ex.ToString();\n    }\n\n    return returnMessage;\n}\n```\n\n \n\n \n\n\n\n\n"}