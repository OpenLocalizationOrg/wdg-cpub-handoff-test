{"nodes":[{"pos":[17,157],"content":"Date and time controls let you view and set the date and time. This article provides design guidelines and helps you pick the right control.","needQuote":true,"needEscape":true,"nodes":[{"content":"Date and time controls let you view and set the date and time. This article provides design guidelines and helps you pick the right control.","pos":[0,140],"nodes":[{"content":"Date and time controls let you view and set the date and time.","pos":[0,62]},{"content":"This article provides design guidelines and helps you pick the right control.","pos":[63,140]}]}]},{"pos":[165,202],"content":"Guidelines for date and time controls","needQuote":true,"needEscape":true,"nodes":[{"content":"Guidelines for date and time controls","pos":[0,37]}]},{"content":"Calendar, date, and time controls","pos":[321,354]},{"content":"Date and time controls give you standard, localized ways to let a user view and set date and time values in your app.","pos":[356,473]},{"content":"This article provides design guidelines and helps you pick the right control.","pos":[474,551]},{"pos":[610,624],"content":"Important APIs"},{"content":"CalendarView class","pos":[640,658]},{"content":"CalendarDatePicker class","pos":[766,790]},{"content":"DatePicker class","pos":[904,920]},{"content":"TimePicker class","pos":[1026,1042]},{"content":"Which date or time control should you use?","pos":[1145,1187]},{"content":"There are four date and time controls to choose from; the control you use depends on your scenario.","pos":[1189,1288]},{"content":"Use this info to pick the right control to use in your app.","pos":[1289,1348]},{"content":"Calendar view","pos":[1646,1659]},{"content":"Example of calendar view","pos":[1669,1693]},{"content":"Use to pick a single date or a range of dates from an always visible calendar.","pos":[1741,1819]},{"content":"Calendar date picker","pos":[1839,1859]},{"content":"Example of calendar date picker","pos":[1862,1893]},{"content":"Use to pick a single date from a contextual calendar.","pos":[1935,1988]},{"content":"Date picker","pos":[1990,2001]},{"content":"Example of date picker","pos":[2013,2035]},{"content":"Use to pick a single known date when contextual info isn't important.","pos":[2068,2137]},{"content":"Time picker","pos":[2138,2149]},{"content":"Example of time picker","pos":[2161,2183]},{"content":"Use to pick a single time value.","pos":[2216,2248]},{"content":"Calendar view","pos":[2353,2366]},{"content":"<bpt id=\"p1\">**</bpt>CalendarView<ept id=\"p1\">**</ept> lets a user view and interact with a calendar that they can navigate by month, year, or decade.","pos":[2368,2480],"source":"**CalendarView** lets a user view and interact with a calendar that they can navigate by month, year, or decade."},{"content":"A user can select a single date or a range of dates.","pos":[2481,2533]},{"content":"It doesn't have a picker surface and the calendar is always visible.","pos":[2534,2602]},{"content":"The calendar view is made up of 3 separate views: the month view, year view, and decade view.","pos":[2604,2697]},{"content":"By default, it starts with the month view open, but you can specify any view as the startup view.","pos":[2698,2795]},{"content":"Example of calendar date picker","pos":[2799,2830]},{"pos":[2869,2950],"content":"If you need to let a user select multiple dates, you must use a <bpt id=\"p1\">**</bpt>CalendarView<ept id=\"p1\">**</ept>.","source":"If you need to let a user select multiple dates, you must use a **CalendarView**."},{"pos":[2953,3117],"content":"If you need to let a user pick only a single date and don’t need a calendar to be always visible, consider using a <bpt id=\"p1\">**</bpt>CalendarDatePicker<ept id=\"p1\">**</ept> or <bpt id=\"p2\">**</bpt>DatePicker<ept id=\"p2\">**</ept> control.","source":"If you need to let a user pick only a single date and don’t need a calendar to be always visible, consider using a **CalendarDatePicker** or **DatePicker** control."},{"content":"Calendar date picker","pos":[3123,3143]},{"content":"<bpt id=\"p1\">**</bpt>CalendarDatePicker<ept id=\"p1\">**</ept> is a drop down control that’s optimized for picking a single date from a calendar view where contextual information like the day of the week or fullness of the calendar is important.","pos":[3145,3350],"source":"**CalendarDatePicker** is a drop down control that’s optimized for picking a single date from a calendar view where contextual information like the day of the week or fullness of the calendar is important."},{"content":"You can modify the calendar to provide additional context or to limit available dates.","pos":[3351,3437]},{"content":"The entry point displays placeholder text if a date has not been set; otherwise, it displays the chosen date.","pos":[3439,3548]},{"content":"When the user selects the entry point, a calendar view expands for the user to make a date selection.","pos":[3549,3650]},{"content":"The calendar view overlays other UI; it doesn't push other UI out of the way.","pos":[3651,3728]},{"content":"Example of calendar date picker","pos":[3732,3763]},{"content":"Use a calendar date picker for things like choosing an appointment or departure date.","pos":[3809,3894]},{"content":"Date picker","pos":[3901,3912]},{"pos":[3914,3995],"content":"The <bpt id=\"p1\">**</bpt>DatePicker<ept id=\"p1\">**</ept> control provides a standardized way to choose a specific date.","source":"The **DatePicker** control provides a standardized way to choose a specific date."},{"content":"The entry point displays the chosen date, and when the user selects the entry point, a picker surface expands vertically from the middle for the user to make a selection.","pos":[3998,4168]},{"content":"The date picker overlays other UI; it doesn't push other UI out of the way.","pos":[4169,4244]},{"content":"Example of the date picker expanding","pos":[4248,4284]},{"content":"Use a date picker to let a user pick a known date, such as a date of birth, where the context of the calendar is not important.","pos":[4328,4455]},{"content":"Time picker","pos":[4461,4472]},{"content":"The <bpt id=\"p1\">**</bpt>TimePicker<ept id=\"p1\">**</ept> is used to select a single time value for things like appointments or a departure time.","pos":[4474,4580],"source":"The **TimePicker** is used to select a single time value for things like appointments or a departure time."},{"content":"It's a static display that is set by the user or in code, but it doesn't update to display the current time.","pos":[4581,4689]},{"content":"The entry point displays the chosen time, and when the user selects the entry point, a picker surface expands vertically from the middle for the user to make a selection.","pos":[4692,4862]},{"content":"The time picker overlays other UI; it doesn't push other UI out of the way.","pos":[4863,4938]},{"content":"Example of the time picker expanding","pos":[4942,4978]},{"content":"Use a time picker to let a user pick a single time value.","pos":[5022,5079]},{"content":"Create a date or time control","pos":[5084,5113]},{"content":"See these articles for info and examples specific to each date and time control.","pos":[5115,5195]},{"content":"Calendar view","pos":[5202,5215]},{"content":"Calendar date picker","pos":[5242,5262]},{"content":"Date picker","pos":[5296,5307]},{"content":"Time Picker","pos":[5332,5343]},{"content":"Globalization","pos":[5368,5381]},{"content":"The XAML date controls support each of the calendar systems supported by Windows.","pos":[5383,5464]},{"content":"These calendars are specified in the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>Windows.Globalization.CalendarIdentifiers<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.globalization.calendaridentifiers.aspx)</ept> class.","pos":[5465,5657],"source":" These calendars are specified in the [**Windows.Globalization.CalendarIdentifiers**](https://msdn.microsoft.com/library/windows/apps/xaml/windows.globalization.calendaridentifiers.aspx) class."},{"content":"Each control uses the correct calendar for your app's default language, or you can set the <bpt id=\"p1\">**</bpt>CalendarIdentifier<ept id=\"p1\">**</ept> property to use a specific calendar system.","pos":[5658,5815],"source":" Each control uses the correct calendar for your app's default language, or you can set the **CalendarIdentifier** property to use a specific calendar system."},{"content":"The time picker control supports each of the clock systems specified in the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>Windows.Globalization.ClockIdentifiers<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.globalization.clockidentifiers.aspx)</ept> class.","pos":[5817,6042],"source":"The time picker control supports each of the clock systems specified in the [**Windows.Globalization.ClockIdentifiers**](https://msdn.microsoft.com/library/windows/apps/xaml/windows.globalization.clockidentifiers.aspx) class."},{"content":"You can set the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>ClockIdentifier<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.timepicker.clockidentifier.aspx)</ept> property to use either a 12-hour clock or 24-hour clock.","pos":[6043,6248],"source":" You can set the [**ClockIdentifier**](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.timepicker.clockidentifier.aspx) property to use either a 12-hour clock or 24-hour clock."},{"content":"The type of the property is String, but you must use values that correspond to the static string properties of the ClockIdentifiers class.","pos":[6249,6387]},{"content":"These are: TwelveHour (the string \"12HourClock\")and TwentyFourHour (the string \"24HourClock\").","pos":[6388,6482]},{"content":"\"12HourClock\" is the default value.","pos":[6483,6518]},{"content":"DateTime and Calendar values","pos":[6525,6553]},{"content":"The date objects used in the XAML date and time controls have a different representation depending on your programming language.","pos":[6555,6683]},{"pos":[6687,6855],"content":"C# and Visual Basic use the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>System.DateTimeOffset<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/xaml/system.datetimeoffset.aspx)</ept> structure that is part of .NET.","source":"C# and Visual Basic use the [**System.DateTimeOffset**](https://msdn.microsoft.com/library/windows/apps/xaml/system.datetimeoffset.aspx) structure that is part of .NET."},{"pos":[6859,6989],"content":"C++/CX uses the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>Windows::Foundation::DateTime<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/xaml/br205770.aspx)</ept> structure.","source":"C++/CX uses the [**Windows::Foundation::DateTime**](https://msdn.microsoft.com/library/windows/apps/xaml/br205770.aspx) structure."},{"content":"A related concept is the Calendar class, which influences how dates are interpreted in context.","pos":[6992,7087]},{"content":"All Windows Runtime apps can use the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>Windows.Globalization.Calendar<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.globalization.calendar.aspx)</ept> class.","pos":[7088,7258],"source":" All Windows Runtime apps can use the [**Windows.Globalization.Calendar**](https://msdn.microsoft.com/library/windows/apps/xaml/windows.globalization.calendar.aspx) class."},{"content":"C# and Visual Basic apps can alternatively use the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>System.Globalization.Calendar<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/xaml/system.globalization.calendar.aspx)</ept> class, which has very similar functionality.","pos":[7259,7479],"source":" C# and Visual Basic apps can alternatively use the [**System.Globalization.Calendar**](https://msdn.microsoft.com/library/windows/apps/xaml/system.globalization.calendar.aspx) class, which has very similar functionality."},{"content":"(Windows Runtime apps can use the base .NET Calendar class but not the specific implementations; for example, GregorianCalendar.)","pos":[7480,7609]},{"content":".NET also supports a type named <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>DateTime<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/xaml/system.datetime.aspx)</ept>, which is implicitly convertible to a <bpt id=\"p3\">[</bpt><bpt id=\"p4\">**</bpt>DateTimeOffset<ept id=\"p4\">**</ept><ept id=\"p3\">](https://msdn.microsoft.com/library/windows/apps/xaml/system.datetimeoffset.aspx)</ept>.","pos":[7611,7873],"source":".NET also supports a type named [**DateTime**](https://msdn.microsoft.com/library/windows/apps/xaml/system.datetime.aspx), which is implicitly convertible to a [**DateTimeOffset**](https://msdn.microsoft.com/library/windows/apps/xaml/system.datetimeoffset.aspx)."},{"content":"So you might see a \"DateTime\" type being used in .NET code that's used to set values that are really DateTimeOffset.","pos":[7874,7990]},{"content":"For more info on the difference between DateTime and DateTimeOffset, see Remarks in the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>DateTimeOffset<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/xaml/system.datetimeoffset.aspx)</ept> class.","pos":[7991,8187],"source":" For more info on the difference between DateTime and DateTimeOffset, see Remarks in the [**DateTimeOffset**](https://msdn.microsoft.com/library/windows/apps/xaml/system.datetimeoffset.aspx) class."},{"content":"<bpt id=\"p1\">**</bpt>Note<ept id=\"p1\">**</ept><ph id=\"ph1\">&amp;nbsp;&amp;nbsp;</ph>Properties that take date objects can't be set as a XAML attribute string, because the Windows Runtime XAML parser doesn't have a conversion logic for converting strings to dates as DateTime/DateTimeOffset objects.","pos":[8191,8425],"source":"**Note**&nbsp;&nbsp;Properties that take date objects can't be set as a XAML attribute string, because the Windows Runtime XAML parser doesn't have a conversion logic for converting strings to dates as DateTime/DateTimeOffset objects."},{"content":"You typically set these values in code.","pos":[8426,8465]},{"content":"Another possible technique is to define a date that's available as a data object or in the data context, then set the property as a XAML attribute that references a <bpt id=\"p1\">[</bpt>\\{Binding\\} markup extension<ept id=\"p1\">](../xaml-platform/binding-markup-extension.md)</ept> expression that can access the date as data.","pos":[8466,8752],"source":" Another possible technique is to define a date that's available as a data object or in the data context, then set the property as a XAML attribute that references a [\\{Binding\\} markup extension](../xaml-platform/binding-markup-extension.md) expression that can access the date as data."},{"content":"\\[This article contains information that is specific to Universal Windows Platform (UWP) apps and Windows 10.","pos":[8756,8865]},{"content":"For Windows 8.1 guidance, please download the <bpt id=\"p1\">[</bpt>Windows 8.1 guidelines PDF<ept id=\"p1\">](https://go.microsoft.com/fwlink/p/?linkid=258743)</ept>.\\]","pos":[8866,8993],"source":" For Windows 8.1 guidance, please download the [Windows 8.1 guidelines PDF](https://go.microsoft.com/fwlink/p/?linkid=258743).\\]"},{"content":"Related topics","pos":[8998,9012]},{"content":"For developers (XAML)","pos":[9016,9037]},{"content":"CalendarView class","pos":[9045,9063]},{"content":"CalendarDatePicker class","pos":[9130,9154]},{"content":"DatePicker class","pos":[9221,9237]},{"content":"TimePicker class","pos":[9304,9320]}],"content":"---\nDescription: Date and time controls let you view and set the date and time. This article provides design guidelines and helps you pick the right control.\ntitle: Guidelines for date and time controls\nms.assetid: 4641FFBB-8D82-4290-94C1-D87617997F61\nlabel: Calendar, date, and time controls\ntemplate: detail.hbs\n---\n\n# Calendar, date, and time controls\n\nDate and time controls give you standard, localized ways to let a user view and set date and time values in your app. This article provides design guidelines and helps you pick the right control.\n\n<span class=\"sidebar_heading\" style=\"font-weight: bold;\">Important APIs</span>\n\n-   [**CalendarView class**](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.calendarview.aspx)\n-   [**CalendarDatePicker class**](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.calendardatepicker.aspx)\n-   [**DatePicker class**](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.datepicker.aspx)\n-   [**TimePicker class**](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.timepicker.aspx)\n\n## Which date or time control should you use?\n\nThere are four date and time controls to choose from; the control you use depends on your scenario. Use this info to pick the right control to use in your app.\n\n&nbsp;|&nbsp;|&nbsp;                                                                                                                      \n--------------------|-------|-------------------------------------------------------------------------------------------------------------------------------\nCalendar view       |![Example of calendar view](images/controls_calendar_monthview_small.png)|Use to pick a single date or a range of dates from an always visible calendar.                   \nCalendar date picker|![Example of calendar date picker](images/calendar-date-picker-closed.png)|Use to pick a single date from a contextual calendar. \nDate picker         |![Example of date picker](images/date-picker-closed.png)|Use to pick a single known date when contextual info isn't important.\nTime picker         |![Example of time picker](images/time-picker-closed.png)|Use to pick a single time value.                                        \n\n<!-- This table seems redundant, not sure it's needed.-->\n\n### Calendar view\n\n**CalendarView** lets a user view and interact with a calendar that they can navigate by month, year, or decade. A user can select a single date or a range of dates. It doesn't have a picker surface and the calendar is always visible.\n\nThe calendar view is made up of 3 separate views: the month view, year view, and decade view. By default, it starts with the month view open, but you can specify any view as the startup view.\n\n![Example of calendar date picker](images/calendar-view-3-views.png)\n\n- If you need to let a user select multiple dates, you must use a **CalendarView**.\n- If you need to let a user pick only a single date and don’t need a calendar to be always visible, consider using a **CalendarDatePicker** or **DatePicker** control.\n\n### Calendar date picker\n\n**CalendarDatePicker** is a drop down control that’s optimized for picking a single date from a calendar view where contextual information like the day of the week or fullness of the calendar is important. You can modify the calendar to provide additional context or to limit available dates.\n\nThe entry point displays placeholder text if a date has not been set; otherwise, it displays the chosen date. When the user selects the entry point, a calendar view expands for the user to make a date selection. The calendar view overlays other UI; it doesn't push other UI out of the way.\n\n![Example of calendar date picker](images/calendar-date-picker-2-views.png)\n\n- Use a calendar date picker for things like choosing an appointment or departure date. \n\n### Date picker\n\nThe **DatePicker** control provides a standardized way to choose a specific date. \n\nThe entry point displays the chosen date, and when the user selects the entry point, a picker surface expands vertically from the middle for the user to make a selection. The date picker overlays other UI; it doesn't push other UI out of the way.\n\n![Example of the date picker expanding](images/controls_datepicker_expand.png)\n\n- Use a date picker to let a user pick a known date, such as a date of birth, where the context of the calendar is not important.\n\n### Time picker\n\nThe **TimePicker** is used to select a single time value for things like appointments or a departure time. It's a static display that is set by the user or in code, but it doesn't update to display the current time. \n\nThe entry point displays the chosen time, and when the user selects the entry point, a picker surface expands vertically from the middle for the user to make a selection. The time picker overlays other UI; it doesn't push other UI out of the way.\n\n![Example of the time picker expanding](images/controls_timepicker_expand.png)\n\n- Use a time picker to let a user pick a single time value.\n\n## Create a date or time control\n\nSee these articles for info and examples specific to each date and time control.\n\n- [**Calendar view**](calendar-view.md)\n- [**Calendar date picker**](calendar-date-picker.md)\n- [**Date picker**](date-picker.md)\n- [**Time Picker**](time-picker.md)\n\n### Globalization\n\nThe XAML date controls support each of the calendar systems supported by Windows. These calendars are specified in the [**Windows.Globalization.CalendarIdentifiers**](https://msdn.microsoft.com/library/windows/apps/xaml/windows.globalization.calendaridentifiers.aspx) class. Each control uses the correct calendar for your app's default language, or you can set the **CalendarIdentifier** property to use a specific calendar system.\n\nThe time picker control supports each of the clock systems specified in the [**Windows.Globalization.ClockIdentifiers**](https://msdn.microsoft.com/library/windows/apps/xaml/windows.globalization.clockidentifiers.aspx) class. You can set the [**ClockIdentifier**](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.timepicker.clockidentifier.aspx) property to use either a 12-hour clock or 24-hour clock. The type of the property is String, but you must use values that correspond to the static string properties of the ClockIdentifiers class. These are: TwelveHour (the string \"12HourClock\")and TwentyFourHour (the string \"24HourClock\"). \"12HourClock\" is the default value.\n\n\n### DateTime and Calendar values\n\nThe date objects used in the XAML date and time controls have a different representation depending on your programming language. \n- C# and Visual Basic use the [**System.DateTimeOffset**](https://msdn.microsoft.com/library/windows/apps/xaml/system.datetimeoffset.aspx) structure that is part of .NET. \n- C++/CX uses the [**Windows::Foundation::DateTime**](https://msdn.microsoft.com/library/windows/apps/xaml/br205770.aspx) structure. \n\nA related concept is the Calendar class, which influences how dates are interpreted in context. All Windows Runtime apps can use the [**Windows.Globalization.Calendar**](https://msdn.microsoft.com/library/windows/apps/xaml/windows.globalization.calendar.aspx) class. C# and Visual Basic apps can alternatively use the [**System.Globalization.Calendar**](https://msdn.microsoft.com/library/windows/apps/xaml/system.globalization.calendar.aspx) class, which has very similar functionality. (Windows Runtime apps can use the base .NET Calendar class but not the specific implementations; for example, GregorianCalendar.)\n\n.NET also supports a type named [**DateTime**](https://msdn.microsoft.com/library/windows/apps/xaml/system.datetime.aspx), which is implicitly convertible to a [**DateTimeOffset**](https://msdn.microsoft.com/library/windows/apps/xaml/system.datetimeoffset.aspx). So you might see a \"DateTime\" type being used in .NET code that's used to set values that are really DateTimeOffset. For more info on the difference between DateTime and DateTimeOffset, see Remarks in the [**DateTimeOffset**](https://msdn.microsoft.com/library/windows/apps/xaml/system.datetimeoffset.aspx) class.\n\n> **Note**&nbsp;&nbsp;Properties that take date objects can't be set as a XAML attribute string, because the Windows Runtime XAML parser doesn't have a conversion logic for converting strings to dates as DateTime/DateTimeOffset objects. You typically set these values in code. Another possible technique is to define a date that's available as a data object or in the data context, then set the property as a XAML attribute that references a [\\{Binding\\} markup extension](../xaml-platform/binding-markup-extension.md) expression that can access the date as data.\n\n\n\n\\[This article contains information that is specific to Universal Windows Platform (UWP) apps and Windows 10. For Windows 8.1 guidance, please download the [Windows 8.1 guidelines PDF](https://go.microsoft.com/fwlink/p/?linkid=258743).\\]\n\n## Related topics\n\n**For developers (XAML)**\n- [**CalendarView class**](https://msdn.microsoft.com/library/windows/apps/dn890052)\n- [**CalendarDatePicker class**](https://msdn.microsoft.com/library/windows/apps/dn950083)\n- [**DatePicker class**](https://msdn.microsoft.com/library/windows/apps/dn298584)\n- [**TimePicker class**](https://msdn.microsoft.com/library/windows/apps/dn299280)\n"}