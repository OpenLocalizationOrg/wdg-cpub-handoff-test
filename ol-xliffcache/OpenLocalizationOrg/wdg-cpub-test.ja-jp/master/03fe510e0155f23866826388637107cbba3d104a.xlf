<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="ja-jp" version="2.0" xml:space="preserve" xmlns="urn:oasis:names:tc:xliff:document:2.0">
	<file id="1">
		<mda:metadata>
			<mda:metaGroup>
				<mda:meta type="tool-id">mdxliff</mda:meta>
				<mda:meta type="tool-name">mdxliff</mda:meta>
				<mda:meta type="tool-version">1.0-00ddeee</mda:meta>
				<mda:meta type="tool-company">Microsoft</mda:meta>
			</mda:metaGroup>
		<mda:metaGroup><mda:meta type="olfilehash">03fe510e0155f23866826388637107cbba3d104a</mda:meta><mda:meta type="olfilepath">wdg-cpub-test\ndolci2\launch-resume\monitor-background-task-progress-and-completion.md</mda:meta><mda:meta type="oltranslationpriority"></mda:meta><mda:meta type="oltranslationtype">Human Translation</mda:meta><mda:meta type="olskeletonhash">71886c24e6e24c4db47e93dfd4b5622bf02fb09a</mda:meta><mda:meta type="olxliffhash">20d0215751831fc15e0f2e98600b78a9ea29468a</mda:meta></mda:metaGroup></mda:metadata>
		<group id="content">
			<unit id="101" translate="yes">
				<segment state="initial">
					<source>Monitor background task progress and completion</source>
					<target>Monitor background task progress and completion</target>
				</segment>
			</unit>
			<unit id="102" translate="yes">
				<segment state="initial">
					<source>Learn how your app can recognize progress and completion reported by a background task.</source>
					<target>Learn how your app can recognize progress and completion reported by a background task.</target>
				</segment>
			</unit>
			<unit id="103" translate="yes">
				<segment state="initial">
					<source>Monitor background task progress and completion</source>
					<target>Monitor background task progress and completion</target>
				</segment>
			</unit>
			<unit id="104" translate="yes">
				<segment state="initial">
					<source>\[ Updated for UWP apps on Windows 10.</source>
					<target>\[ Updated for UWP apps on Windows 10.</target>
				</segment>
			</unit>
			<unit id="105" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](http://go.microsoft.com/fwlink/p/?linkid=619132)</data>
				</originalData>
				<segment state="initial">
					<source>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</source>
					<target>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</target>
				</segment>
			</unit>
			<unit id="106" translate="yes">
				<segment state="initial">
					<source>Important APIs</source>
					<target>Important APIs</target>
				</segment>
			</unit>
			<unit id="107" translate="yes">
				<segment state="initial">
					<source>BackgroundTaskRegistration</source>
					<target>BackgroundTaskRegistration</target>
				</segment>
			</unit>
			<unit id="108" translate="yes">
				<segment state="initial">
					<source>BackgroundTaskProgressEventHandler</source>
					<target>BackgroundTaskProgressEventHandler</target>
				</segment>
			</unit>
			<unit id="109" translate="yes">
				<segment state="initial">
					<source>BackgroundTaskCompletedEventHandler</source>
					<target>BackgroundTaskCompletedEventHandler</target>
				</segment>
			</unit>
			<unit id="110" translate="yes">
				<segment state="initial">
					<source>Learn how your app can recognize progress and completion reported by a background task.</source>
					<target>Learn how your app can recognize progress and completion reported by a background task.</target>
				</segment>
			</unit>
			<unit id="111" translate="yes">
				<segment state="initial">
					<source>Background tasks are decoupled from the app, and they run separately, but background task progress and completion can be monitored by app code.</source>
					<target>Background tasks are decoupled from the app, and they run separately, but background task progress and completion can be monitored by app code.</target>
				</segment>
			</unit>
			<unit id="112" translate="yes">
				<segment state="initial">
					<source>To make this happen, the app subscribes to events from the background task(s) it has registered with the system.</source>
					<target>To make this happen, the app subscribes to events from the background task(s) it has registered with the system.</target>
				</segment>
			</unit>
			<unit id="113" translate="yes">
				<segment state="initial">
					<source>This topic assumes that you have an app that registers background tasks.</source>
					<target>This topic assumes that you have an app that registers background tasks.</target>
				</segment>
			</unit>
			<unit id="114" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](create-and-register-a-background-task.md)</data>
				</originalData>
				<segment state="initial">
					<source>To get started quickly building a background task, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Create and register a background task</pc>.</source>
					<target>To get started quickly building a background task, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Create and register a background task</pc>.</target>
				</segment>
			</unit>
			<unit id="115" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](support-your-app-with-background-tasks.md)</data>
				</originalData>
				<segment state="initial">
					<source>For more in-depth information on conditions and triggers, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Support your app with background tasks</pc>.</source>
					<target>For more in-depth information on conditions and triggers, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Support your app with background tasks</pc>.</target>
				</segment>
			</unit>
			<unit id="116" translate="yes">
				<segment state="initial">
					<source>Create an event handler to handle completed background tasks</source>
					<target>Create an event handler to handle completed background tasks</target>
				</segment>
			</unit>
			<unit id="117" translate="yes">
				<segment state="initial">
					<source>Create an event handler function to handle completed background tasks.</source>
					<target>Create an event handler function to handle completed background tasks.</target>
				</segment>
			</unit>
			<unit id="118" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br224803)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/br224778)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>This code needs to follow a specific footprint, which takes in an <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">IBackgroundTaskRegistration</pc></pc> object and a <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">BackgroundTaskCompletedEventArgs</pc></pc> object.</source>
					<target>This code needs to follow a specific footprint, which takes in an <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">IBackgroundTaskRegistration</pc></pc> object and a <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">BackgroundTaskCompletedEventArgs</pc></pc> object.</target>
				</segment>
			</unit>
			<unit id="119" translate="yes">
				<segment state="initial">
					<source>Use the following footprint for the OnCompleted background task event handler method:</source>
					<target>Use the following footprint for the OnCompleted background task event handler method:</target>
				</segment>
			</unit>
			<unit id="120" translate="yes">
				<segment state="initial">
					<source>Add code to the event handler that deals with the background task completion.</source>
					<target>Add code to the event handler that deals with the background task completion.</target>
				</segment>
			</unit>
			<unit id="121" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](http://go.microsoft.com/fwlink/p/?LinkId=618666)</data>
				</originalData>
				<segment state="initial">
					<source>For example, the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">background task sample</pc> updates the UI.</source>
					<target>For example, the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">background task sample</pc> updates the UI.</target>
				</segment>
			</unit>
			<unit id="122" translate="yes">
				<segment state="initial">
					<source>Create an event handler function to handle background task progress</source>
					<target>Create an event handler function to handle background task progress</target>
				</segment>
			</unit>
			<unit id="123" translate="yes">
				<segment state="initial">
					<source>Create an event handler function to handle completed background tasks.</source>
					<target>Create an event handler function to handle completed background tasks.</target>
				</segment>
			</unit>
			<unit id="124" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br224803)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/br224782)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>This code needs to follow a specific footprint, which takes in an <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">IBackgroundTaskRegistration</pc></pc> object and a <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">BackgroundTaskProgressEventArgs</pc></pc> object:</source>
					<target>This code needs to follow a specific footprint, which takes in an <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">IBackgroundTaskRegistration</pc></pc> object and a <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">BackgroundTaskProgressEventArgs</pc></pc> object:</target>
				</segment>
			</unit>
			<unit id="125" translate="yes">
				<segment state="initial">
					<source>Use the following footprint for the OnProgress background task event handler method:</source>
					<target>Use the following footprint for the OnProgress background task event handler method:</target>
				</segment>
			</unit>
			<unit id="126" translate="yes">
				<segment state="initial">
					<source>Add code to the event handler that deals with the background task completion.</source>
					<target>Add code to the event handler that deals with the background task completion.</target>
				</segment>
			</unit>
			<unit id="127" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](http://go.microsoft.com/fwlink/p/?LinkId=618666)</data>
					<data id="id3">*</data>
					<data id="id4">*</data>
				</originalData>
				<segment state="initial">
					<source>For example, the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">background task sample</pc> updates the UI with the progress status passed in via the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">args</pc> parameter:</source>
					<target>For example, the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">background task sample</pc> updates the UI with the progress status passed in via the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">args</pc> parameter:</target>
				</segment>
			</unit>
			<unit id="128" translate="yes">
				<segment state="initial">
					<source>```cs private void OnProgress(IBackgroundTaskRegistration task, BackgroundTaskProgressEventArgs args) { var progress = "Progress: " + args.Progress + "%"; BackgroundTaskSample.SampleBackgroundTaskProgress = progress;</source>
					<target>```cs private void OnProgress(IBackgroundTaskRegistration task, BackgroundTaskProgressEventArgs args) { var progress = "Progress: " + args.Progress + "%"; BackgroundTaskSample.SampleBackgroundTaskProgress = progress;</target>
				</segment>
			</unit>
			<unit id="129" translate="yes">
				<segment state="initial">
					<source>Register the event handler functions with new and existing background tasks.</source>
					<target>Register the event handler functions with new and existing background tasks.</target>
				</segment>
			</unit>
			<unit id="130" translate="yes">
				<segment state="initial">
					<source>When the app registers a background task for the first time, it should register to receive progress and completion updates for it, in case the task runs while the app is still active in the foreground.</source>
					<target>When the app registers a background task for the first time, it should register to receive progress and completion updates for it, in case the task runs while the app is still active in the foreground.</target>
				</segment>
			</unit>
			<unit id="131" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](http://go.microsoft.com/fwlink/p/?LinkId=618666)</data>
				</originalData>
				<segment state="initial">
					<source>For example, the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">background task sample</pc> calls the following function on each background task that it registers:</source>
					<target>For example, the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">background task sample</pc> calls the following function on each background task that it registers:</target>
				</segment>
			</unit>
			<unit id="132" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](BackgroundTaskRegistration^ task, BackgroundTaskProgressEventArgs^ args)</data>
					<data id="id3">
</data>
				</originalData>
				<segment state="initial">
					<source>```cpp void SampleBackgroundTask::AttachProgressAndCompletedHandlers(IBackgroundTaskRegistration^ task) { auto progress = <pc dataRefEnd="id2" dataRefStart="id1" id="p1">this</pc><ph dataRef="id3" id="ph1" />        { auto progress = "Progress: " + args-&gt;Progress + "%"; BackgroundTaskSample::SampleBackgroundTaskProgress = progress; UpdateUI(); };</source>
					<target>```cpp void SampleBackgroundTask::AttachProgressAndCompletedHandlers(IBackgroundTaskRegistration^ task) { auto progress = <pc dataRefEnd="id2" dataRefStart="id1" id="p1">this</pc><ph dataRef="id3" id="ph1" />        { auto progress = "Progress: " + args-&gt;Progress + "%"; BackgroundTaskSample::SampleBackgroundTaskProgress = progress; UpdateUI(); };</target>
				</segment>
			</unit>
			<unit id="133" translate="yes">
				<segment state="initial">
					<source>When the app launches, or navigates to a new page where background task status is relevant, it should get a list of background tasks currently registered and associate them with the progress and completion event handler functions.</source>
					<target>When the app launches, or navigates to a new page where background task status is relevant, it should get a list of background tasks currently registered and associate them with the progress and completion event handler functions.</target>
				</segment>
			</unit>
			<unit id="134" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br224786)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/br224787)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>The list of background tasks currently registered by the application is kept in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">BackgroundTaskRegistration</pc></pc>.<pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">AllTasks</pc></pc> property.</source>
					<target>The list of background tasks currently registered by the application is kept in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">BackgroundTaskRegistration</pc></pc>.<pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">AllTasks</pc></pc> property.</target>
				</segment>
			</unit>
			<unit id="135" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](http://go.microsoft.com/fwlink/p/?LinkId=618666)</data>
				</originalData>
				<segment state="initial">
					<source>For example, the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">background task sample</pc> uses the following code to attach event handlers when the SampleBackgroundTask page is navigated to:</source>
					<target>For example, the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">background task sample</pc> uses the following code to attach event handlers when the SampleBackgroundTask page is navigated to:</target>
				</segment>
			</unit>
			<unit id="136" translate="yes">
				<segment state="initial">
					<source>```cs protected override void OnNavigatedTo(NavigationEventArgs e) { foreach (var task in BackgroundTaskRegistration.AllTasks) { if (task.Value.Name == BackgroundTaskSample.SampleBackgroundTaskName) { AttachProgressAndCompletedHandlers(task.Value); BackgroundTaskSample.UpdateBackgroundTaskStatus(BackgroundTaskSample.SampleBackgroundTaskName, true); } }</source>
					<target>```cs protected override void OnNavigatedTo(NavigationEventArgs e) { foreach (var task in BackgroundTaskRegistration.AllTasks) { if (task.Value.Name == BackgroundTaskSample.SampleBackgroundTaskName) { AttachProgressAndCompletedHandlers(task.Value); BackgroundTaskSample.UpdateBackgroundTaskStatus(BackgroundTaskSample.SampleBackgroundTaskName, true); } }</target>
				</segment>
			</unit>
			<unit id="137" translate="yes">
				<segment state="initial">
					<source>Related topics</source>
					<target>Related topics</target>
				</segment>
			</unit>
			<unit id="138" translate="yes">
				<segment state="initial">
					<source>Create and register a background task</source>
					<target>Create and register a background task</target>
				</segment>
			</unit>
			<unit id="139" translate="yes">
				<segment state="initial">
					<source>Declare background tasks in the application manifest</source>
					<target>Declare background tasks in the application manifest</target>
				</segment>
			</unit>
			<unit id="140" translate="yes">
				<segment state="initial">
					<source>Handle a cancelled background task</source>
					<target>Handle a cancelled background task</target>
				</segment>
			</unit>
			<unit id="141" translate="yes">
				<segment state="initial">
					<source>Register a background task</source>
					<target>Register a background task</target>
				</segment>
			</unit>
			<unit id="142" translate="yes">
				<segment state="initial">
					<source>Respond to system events with background tasks</source>
					<target>Respond to system events with background tasks</target>
				</segment>
			</unit>
			<unit id="143" translate="yes">
				<segment state="initial">
					<source>Set conditions for running a background task</source>
					<target>Set conditions for running a background task</target>
				</segment>
			</unit>
			<unit id="144" translate="yes">
				<segment state="initial">
					<source>Update a live tile from a background task</source>
					<target>Update a live tile from a background task</target>
				</segment>
			</unit>
			<unit id="145" translate="yes">
				<segment state="initial">
					<source>Use a maintenance trigger</source>
					<target>Use a maintenance trigger</target>
				</segment>
			</unit>
			<unit id="146" translate="yes">
				<segment state="initial">
					<source>Run a background task on a timer</source>
					<target>Run a background task on a timer</target>
				</segment>
			</unit>
			<unit id="147" translate="yes">
				<segment state="initial">
					<source>Guidelines for background tasks</source>
					<target>Guidelines for background tasks</target>
				</segment>
			</unit>
			<unit id="148" translate="yes">
				<segment state="initial">
					<source>Debug a background task</source>
					<target>Debug a background task</target>
				</segment>
			</unit>
			<unit id="149" translate="yes">
				<segment state="initial">
					<source>How to trigger suspend, resume, and background events in Windows Store apps (when debugging)</source>
					<target>How to trigger suspend, resume, and background events in Windows Store apps (when debugging)</target>
				</segment>
			</unit>
		</group>
	</file>
</xliff>