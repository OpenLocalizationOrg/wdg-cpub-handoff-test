<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="ja-jp" version="2.0" xml:space="preserve" xmlns="urn:oasis:names:tc:xliff:document:2.0">
	<file id="1">
		<mda:metadata>
			<mda:metaGroup>
				<mda:meta type="tool-id">mdxliff</mda:meta>
				<mda:meta type="tool-name">mdxliff</mda:meta>
				<mda:meta type="tool-version">1.0-00ddeee</mda:meta>
				<mda:meta type="tool-company">Microsoft</mda:meta>
			</mda:metaGroup>
		<mda:metaGroup><mda:meta type="olfilehash">ff454af0dcccabd5a1baea879f37722fdab633d2</mda:meta><mda:meta type="olfilepath">wdg-cpub-test\ndolci2\gaming\tutorial--adding-sound.md</mda:meta><mda:meta type="oltranslationpriority"></mda:meta><mda:meta type="oltranslationtype">Human Translation</mda:meta><mda:meta type="olskeletonhash">9fe61d1fa79131da43416733fa7159e53ca23f3d</mda:meta><mda:meta type="olxliffhash">edb84dbc38c27962cacc17aebbce54c7f9321d9c</mda:meta></mda:metaGroup></mda:metadata>
		<group id="content">
			<unit id="101" translate="yes">
				<segment state="initial">
					<source>Add sound</source>
					<target>Add sound</target>
				</segment>
			</unit>
			<unit id="102" translate="yes">
				<segment state="initial">
					<source>In this step, we examine how the shooting game sample creates an object for sound playback using the XAudio2 APIs.</source>
					<target>In this step, we examine how the shooting game sample creates an object for sound playback using the XAudio2 APIs.</target>
				</segment>
			</unit>
			<unit id="103" translate="yes">
				<segment state="initial">
					<source>Add sound</source>
					<target>Add sound</target>
				</segment>
			</unit>
			<unit id="104" translate="yes">
				<segment state="initial">
					<source>\[ Updated for UWP apps on Windows 10.</source>
					<target>\[ Updated for UWP apps on Windows 10.</target>
				</segment>
			</unit>
			<unit id="105" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](http://go.microsoft.com/fwlink/p/?linkid=619132)</data>
				</originalData>
				<segment state="initial">
					<source>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</source>
					<target>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</target>
				</segment>
			</unit>
			<unit id="106" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/desktop/ee415813)</data>
				</originalData>
				<segment state="initial">
					<source>In this step, we examine how the shooting game sample creates an object for sound playback using the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">XAudio2</pc> APIs.</source>
					<target>In this step, we examine how the shooting game sample creates an object for sound playback using the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">XAudio2</pc> APIs.</target>
				</segment>
			</unit>
			<unit id="107" translate="yes">
				<segment state="initial">
					<source>Objective</source>
					<target>Objective</target>
				</segment>
			</unit>
			<unit id="108" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/desktop/ee415813)</data>
				</originalData>
				<segment state="initial">
					<source>To add sound output using <pc dataRefEnd="id2" dataRefStart="id1" id="p1">XAudio2</pc>.</source>
					<target>To add sound output using <pc dataRefEnd="id2" dataRefStart="id1" id="p1">XAudio2</pc>.</target>
				</segment>
			</unit>
			<unit id="109" translate="yes">
				<segment state="initial">
					<source>In the game sample, the audio objects and behaviors are defined in three files:</source>
					<target>In the game sample, the audio objects and behaviors are defined in three files:</target>
				</segment>
			</unit>
			<unit id="110" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Audio.h/.cpp</pc>.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Audio.h/.cpp</pc>.</target>
				</segment>
			</unit>
			<unit id="111" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>This code file defines the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Audio</pc> object, which contains the XAudio2 resources for sound playback.</source>
					<target>This code file defines the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Audio</pc> object, which contains the XAudio2 resources for sound playback.</target>
				</segment>
			</unit>
			<unit id="112" translate="yes">
				<segment state="initial">
					<source>It also defines the method for suspending and resuming audio playback if the game is paused or deactivated.</source>
					<target>It also defines the method for suspending and resuming audio playback if the game is paused or deactivated.</target>
				</segment>
			</unit>
			<unit id="113" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaReader.h/.cpp</pc>.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaReader.h/.cpp</pc>.</target>
				</segment>
			</unit>
			<unit id="114" translate="yes">
				<segment state="initial">
					<source>This code defines the methods for reading audio .wav files from local storage.</source>
					<target>This code defines the methods for reading audio .wav files from local storage.</target>
				</segment>
			</unit>
			<unit id="115" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">SoundEffect.h/.cpp</pc>.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">SoundEffect.h/.cpp</pc>.</target>
				</segment>
			</unit>
			<unit id="116" translate="yes">
				<segment state="initial">
					<source>This code defines an object for in-game sound playback.</source>
					<target>This code defines an object for in-game sound playback.</target>
				</segment>
			</unit>
			<unit id="117" translate="yes">
				<segment state="initial">
					<source>Defining the audio engine</source>
					<target>Defining the audio engine</target>
				</segment>
			</unit>
			<unit id="118" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>When the game sample starts, it creates an <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Audio</pc> object that allocates the audio resources for the game.</source>
					<target>When the game sample starts, it creates an <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Audio</pc> object that allocates the audio resources for the game.</target>
				</segment>
			</unit>
			<unit id="119" translate="yes">
				<segment state="initial">
					<source>The code that declares this object looks like this:</source>
					<target>The code that declares this object looks like this:</target>
				</segment>
			</unit>
			<unit id="120" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/desktop/ee415908)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Audio::MusicEngine</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Audio::SoundEffectEngine</pc> methods return references to <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">IXAudio2</pc></pc> objects that define the mastering voice for each audio type.</source>
					<target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Audio::MusicEngine</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Audio::SoundEffectEngine</pc> methods return references to <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">IXAudio2</pc></pc> objects that define the mastering voice for each audio type.</target>
				</segment>
			</unit>
			<unit id="121" translate="yes">
				<segment state="initial">
					<source>A mastering voice is the audio device used for playback.</source>
					<target>A mastering voice is the audio device used for playback.</target>
				</segment>
			</unit>
			<unit id="122" translate="yes">
				<segment state="initial">
					<source>Sound data buffers cannot be submitted directly to mastering voices, but data submitted to other types of voices must be directed to a mastering voice to be heard.</source>
					<target>Sound data buffers cannot be submitted directly to mastering voices, but data submitted to other types of voices must be directed to a mastering voice to be heard.</target>
				</segment>
			</unit>
			<unit id="123" translate="yes">
				<segment state="initial">
					<source>Initializing the audio resources</source>
					<target>Initializing the audio resources</target>
				</segment>
			</unit>
			<unit id="124" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/desktop/ee415908)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/desktop/ee419212)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>The sample initializes the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">IXAudio2</pc></pc> objects for the music and sound effect engines with calls to <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">XAudio2Create</pc></pc>.</source>
					<target>The sample initializes the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">IXAudio2</pc></pc> objects for the music and sound effect engines with calls to <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">XAudio2Create</pc></pc>.</target>
				</segment>
			</unit>
			<unit id="125" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/desktop/hh405048)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>After the engines have been instantiated, it creates a mastering voice for each with calls to <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">IXAudio2::CreateMasteringVoice</pc></pc>, as here:</source>
					<target>After the engines have been instantiated, it creates a mastering voice for each with calls to <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">IXAudio2::CreateMasteringVoice</pc></pc>, as here:</target>
				</segment>
			</unit>
			<unit id="126" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/desktop/ee418607)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>As a music or sound effect audio file is loaded, this method calls <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">IXAudio2::CreateSourceVoice</pc></pc> on the mastering voice, which creates an instance of a source voice for playback.</source>
					<target>As a music or sound effect audio file is loaded, this method calls <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">IXAudio2::CreateSourceVoice</pc></pc> on the mastering voice, which creates an instance of a source voice for playback.</target>
				</segment>
			</unit>
			<unit id="127" translate="yes">
				<segment state="initial">
					<source>We look at the code for this as soon as we finish reviewing how the game sample loads audio files.</source>
					<target>We look at the code for this as soon as we finish reviewing how the game sample loads audio files.</target>
				</segment>
			</unit>
			<unit id="128" translate="yes">
				<segment state="initial">
					<source>Reading an audio file</source>
					<target>Reading an audio file</target>
				</segment>
			</unit>
			<unit id="129" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>In the game sample, the code for reading audio format files is defined in <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaReader.cpp</pc>.</source>
					<target>In the game sample, the code for reading audio format files is defined in <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaReader.cpp</pc>.</target>
				</segment>
			</unit>
			<unit id="130" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>The specific method that reads in an encoded .wav audio file, <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaReader::LoadMedia</pc>, looks like this:</source>
					<target>The specific method that reads in an encoded .wav audio file, <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaReader::LoadMedia</pc>, looks like this:</target>
				</segment>
			</unit>
			<unit id="131" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/desktop/ms694197)</data>
				</originalData>
				<segment state="initial">
					<source>This method uses the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Media Foundation</pc> APIs to read in the .wav audio file as a Pulse Code Modulation (PCM) buffer.</source>
					<target>This method uses the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Media Foundation</pc> APIs to read in the .wav audio file as a Pulse Code Modulation (PCM) buffer.</target>
				</segment>
			</unit>
			<unit id="132" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/desktop/dd374655)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/desktop/dd388110)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>Creates a media source reader (<pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">IMFSourceReader</pc></pc>) object by calling <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">MFCreateSourceReaderFromURL</pc></pc>.</source>
					<target>Creates a media source reader (<pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">IMFSourceReader</pc></pc>) object by calling <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">MFCreateSourceReaderFromURL</pc></pc>.</target>
				</segment>
			</unit>
			<unit id="133" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/desktop/ms704850)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/desktop/ms693861)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>Creates a media type (<pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">IMFMediaType</pc></pc>) for the decoding of the audio file by calling <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">MFCreateMediaType</pc></pc>.</source>
					<target>Creates a media type (<pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">IMFMediaType</pc></pc>) for the decoding of the audio file by calling <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">MFCreateMediaType</pc></pc>.</target>
				</segment>
			</unit>
			<unit id="134" translate="yes">
				<segment state="initial">
					<source>This method specifies that the decoded output is PCM audio, which is an audio type that XAudio2 can use.</source>
					<target>This method specifies that the decoded output is PCM audio, which is an audio type that XAudio2 can use.</target>
				</segment>
			</unit>
			<unit id="135" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/desktop/bb970432)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Sets the decoded output media type for the reader by calling <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">IMFSourceReader::SetCurrentMediaType</pc></pc>.</source>
					<target>Sets the decoded output media type for the reader by calling <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">IMFSourceReader::SetCurrentMediaType</pc></pc>.</target>
				</segment>
			</unit>
			<unit id="136" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/hardware/ff538799)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/desktop/ms702177)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
					<data id="id9">[</data>
					<data id="id10">](https://msdn.microsoft.com/library/windows/desktop/ms704850)</data>
					<data id="id11">**</data>
					<data id="id12">**</data>
				</originalData>
				<segment state="initial">
					<source>Creates a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">WAVEFORMATEX</pc></pc> buffer and copies the results of a call to <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">IMFMediaType::MFCreateWaveFormatExFromMFMediaType</pc></pc> on the <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">IMFMediaType</pc></pc> object.</source>
					<target>Creates a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">WAVEFORMATEX</pc></pc> buffer and copies the results of a call to <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">IMFMediaType::MFCreateWaveFormatExFromMFMediaType</pc></pc> on the <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">IMFMediaType</pc></pc> object.</target>
				</segment>
			</unit>
			<unit id="137" translate="yes">
				<segment state="initial">
					<source>This formats the buffer that holds the audio file after it is loaded.</source>
					<target>This formats the buffer that holds the audio file after it is loaded.</target>
				</segment>
			</unit>
			<unit id="138" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/desktop/dd374662)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Gets the duration, in seconds, of the audio stream by calling <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">IMFSourceReader::GetPresentationAttribute</pc></pc> and then converts the duration to bytes.</source>
					<target>Gets the duration, in seconds, of the audio stream by calling <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">IMFSourceReader::GetPresentationAttribute</pc></pc> and then converts the duration to bytes.</target>
				</segment>
			</unit>
			<unit id="139" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/desktop/dd374665)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Reads the audio file in as a stream by calling <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">IMFSourceReader::ReadSample</pc></pc>.</source>
					<target>Reads the audio file in as a stream by calling <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">IMFSourceReader::ReadSample</pc></pc>.</target>
				</segment>
			</unit>
			<unit id="140" translate="yes">
				<segment state="initial">
					<source>Copies the contents of the audio sample buffer into an array returned by the method.</source>
					<target>Copies the contents of the audio sample buffer into an array returned by the method.</target>
				</segment>
			</unit>
			<unit id="141" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>The most important thing in <pc dataRefEnd="id2" dataRefStart="id1" id="p1">SoundEffect::Initialize</pc> is the creation of the source voice object, <pc dataRefEnd="id4" dataRefStart="id3" id="p2">m\_sourceVoice</pc>, from the mastering voice.</source>
					<target>The most important thing in <pc dataRefEnd="id2" dataRefStart="id1" id="p1">SoundEffect::Initialize</pc> is the creation of the source voice object, <pc dataRefEnd="id4" dataRefStart="id3" id="p2">m\_sourceVoice</pc>, from the mastering voice.</target>
				</segment>
			</unit>
			<unit id="142" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>We use the source voice for the actual play back of the sound data buffer obtained from <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaReader::LoadMedia</pc>.</source>
					<target>We use the source voice for the actual play back of the sound data buffer obtained from <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaReader::LoadMedia</pc>.</target>
				</segment>
			</unit>
			<unit id="143" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>The sample game calls this method when it initializes the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">SoundEffect</pc> object, like this:</source>
					<target>The sample game calls this method when it initializes the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">SoundEffect</pc> object, like this:</target>
				</segment>
			</unit>
			<unit id="144" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>This method is passed the results of calls to <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Audio::SoundEffectEngine</pc> (or <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Audio::MusicEngine</pc>), <pc dataRefEnd="id6" dataRefStart="id5" id="p3">MediaReader::GetOutputWaveFormatEx</pc>, and the buffer returned by a call to <pc dataRefEnd="id8" dataRefStart="id7" id="p4">MediaReader::LoadMedia</pc>, as seen here.</source>
					<target>This method is passed the results of calls to <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Audio::SoundEffectEngine</pc> (or <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Audio::MusicEngine</pc>), <pc dataRefEnd="id6" dataRefStart="id5" id="p3">MediaReader::GetOutputWaveFormatEx</pc>, and the buffer returned by a call to <pc dataRefEnd="id8" dataRefStart="id7" id="p4">MediaReader::LoadMedia</pc>, as seen here.</target>
				</segment>
			</unit>
			<unit id="145" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">SoundEffect::Initialize</pc> is called from the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Simple3DGame:Initialize</pc> method that initializes the main game object.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">SoundEffect::Initialize</pc> is called from the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Simple3DGame:Initialize</pc> method that initializes the main game object.</target>
				</segment>
			</unit>
			<unit id="146" translate="yes">
				<segment state="initial">
					<source>Now that the sample game has an audio file in memory, let's see how it plays it back during game play!</source>
					<target>Now that the sample game has an audio file in memory, let's see how it plays it back during game play!</target>
				</segment>
			</unit>
			<unit id="147" translate="yes">
				<segment state="initial">
					<source>Playing back an audio file</source>
					<target>Playing back an audio file</target>
				</segment>
			</unit>
			<unit id="148" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>To play the sound, this method uses the source voice object <pc dataRefEnd="id2" dataRefStart="id1" id="p1">m\_sourceVoice</pc> to start the playback of the sound data buffer <pc dataRefEnd="id4" dataRefStart="id3" id="p2">m\_soundData</pc>.</source>
					<target>To play the sound, this method uses the source voice object <pc dataRefEnd="id2" dataRefStart="id1" id="p1">m\_sourceVoice</pc> to start the playback of the sound data buffer <pc dataRefEnd="id4" dataRefStart="id3" id="p2">m\_soundData</pc>.</target>
				</segment>
			</unit>
			<unit id="149" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/desktop/ee419228)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/desktop/ee418473)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>It creates an <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">XAUDIO2\_BUFFER</pc></pc>, to which it provides a reference to the sound data buffer, and then submits it with a call to <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">IXAudio2SourceVoice::SubmitSourceBuffer</pc></pc>.</source>
					<target>It creates an <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">XAUDIO2\_BUFFER</pc></pc>, to which it provides a reference to the sound data buffer, and then submits it with a call to <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">IXAudio2SourceVoice::SubmitSourceBuffer</pc></pc>.</target>
				</segment>
			</unit>
			<unit id="150" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">[</data>
					<data id="id4">](https://msdn.microsoft.com/library/windows/desktop/ee418471)</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source>With the sound data queued up, <pc dataRefEnd="id2" dataRefStart="id1" id="p1">SoundEffect::PlaySound</pc> starts play back by calling <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">IXAudio2SourceVoice::Start</pc></pc>.</source>
					<target>With the sound data queued up, <pc dataRefEnd="id2" dataRefStart="id1" id="p1">SoundEffect::PlaySound</pc> starts play back by calling <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">IXAudio2SourceVoice::Start</pc></pc>.</target>
				</segment>
			</unit>
			<unit id="151" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>Now, whenever a collision between the ammo and a target occurs, a call to <pc dataRefEnd="id2" dataRefStart="id1" id="p1">SoundEffect::PlaySound</pc> causes a noise to play.</source>
					<target>Now, whenever a collision between the ammo and a target occurs, a call to <pc dataRefEnd="id2" dataRefStart="id1" id="p1">SoundEffect::PlaySound</pc> causes a noise to play.</target>
				</segment>
			</unit>
			<unit id="152" translate="yes">
				<segment state="initial">
					<source>Next steps</source>
					<target>Next steps</target>
				</segment>
			</unit>
			<unit id="153" translate="yes">
				<segment state="initial">
					<source>That was a whirlwind tour of Universal Windows Platform (UWP) DirectX game development!</source>
					<target>That was a whirlwind tour of Universal Windows Platform (UWP) DirectX game development!</target>
				</segment>
			</unit>
			<unit id="154" translate="yes">
				<segment state="initial">
					<source>At this point, you have an idea of what you need to do to make your own game for Windows 8 a great experience.</source>
					<target>At this point, you have an idea of what you need to do to make your own game for Windows 8 a great experience.</target>
				</segment>
			</unit>
			<unit id="155" translate="yes">
				<segment state="initial">
					<source>Remember, your game can be played on a wide variety of Windows 8 devices and platforms, so design your components: your graphics, your controls, your user interface, and your audio for as wide a set of configurations as you can!</source>
					<target>Remember, your game can be played on a wide variety of Windows 8 devices and platforms, so design your components: your graphics, your controls, your user interface, and your audio for as wide a set of configurations as you can!</target>
				</segment>
			</unit>
			<unit id="156" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](tutorial-resources.md)</data>
				</originalData>
				<segment state="initial">
					<source>For more info about ways to modify the game sample provided in these documents, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Extending the game sample</pc>.</source>
					<target>For more info about ways to modify the game sample provided in these documents, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Extending the game sample</pc>.</target>
				</segment>
			</unit>
			<unit id="157" translate="yes">
				<segment state="initial">
					<source>Complete sample code for this section</source>
					<target>Complete sample code for this section</target>
				</segment>
			</unit>
			<unit id="158" translate="yes">
				<segment state="initial">
					<source>Audio.h</source>
					<target>Audio.h</target>
				</segment>
			</unit>
			<unit id="159" translate="yes">
				<segment state="initial">
					<source>Audio.cpp</source>
					<target>Audio.cpp</target>
				</segment>
			</unit>
			<unit id="160" translate="yes">
				<segment state="initial">
					<source>SoundEffect.h</source>
					<target>SoundEffect.h</target>
				</segment>
			</unit>
			<unit id="161" translate="yes">
				<segment state="initial">
					<source>SoundEffect.cpp</source>
					<target>SoundEffect.cpp</target>
				</segment>
			</unit>
		</group>
	</file>
</xliff>