<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="it-it" version="2.0" xml:space="preserve" xmlns="urn:oasis:names:tc:xliff:document:2.0">
	<file id="1">
		<mda:metadata>
			<mda:metaGroup>
				<mda:meta type="tool-id">mdxliff</mda:meta>
				<mda:meta type="tool-name">mdxliff</mda:meta>
				<mda:meta type="tool-version">1.0-00ddeee</mda:meta>
				<mda:meta type="tool-company">Microsoft</mda:meta>
			</mda:metaGroup>
		<mda:metaGroup><mda:meta type="olfilehash">16ae34742832f17eebb3d8dfbaa08ab57ce9bfb8</mda:meta><mda:meta type="olfilepath">wdg-cpub-test\v-paulj\Windows-driver-docs_develop\avoiding_floating_point_errors_in_custom_build_environments.md</mda:meta><mda:meta type="oltranslationpriority"></mda:meta><mda:meta type="oltranslationtype">Human Translation</mda:meta><mda:meta type="olskeletonhash">27324faeb343db18a082fff29a173067a71e15a4</mda:meta><mda:meta type="olxliffhash">217f24d1c87e1d99750cf1b70409abfbfc838f17</mda:meta></mda:metaGroup></mda:metadata>
		<group id="content">
			<unit id="101" translate="yes">
				<segment state="initial">
					<source>Avoiding Floating Point Errors in Custom Build Environments</source>
					<target>Avoiding Floating Point Errors in Custom Build Environments</target>
				</segment>
			</unit>
			<unit id="102" translate="yes">
				<segment state="initial">
					<source>This information is intended for developers and build engineers who compile kernel-mode drivers for Windows.</source>
					<target>This information is intended for developers and build engineers who compile kernel-mode drivers for Windows.</target>
				</segment>
			</unit>
			<unit id="103" translate="yes">
				<segment state="initial">
					<source>In Microsoft Visual Studio Professional 2012, the default architecture for the Visual C++ (VC++) compiler changed from IA32 to the Streaming SIMD Extensions 2 (SSE2) instruction set.</source>
					<target>In Microsoft Visual Studio Professional 2012, the default architecture for the Visual C++ (VC++) compiler changed from IA32 to the Streaming SIMD Extensions 2 (SSE2) instruction set.</target>
				</segment>
			</unit>
			<unit id="104" translate="yes">
				<segment state="initial">
					<source>As a result of this change, SSE2 floating point (FP) instructions injected into the binary at compile time can generate floating-point errors if not accounted for.</source>
					<target>As a result of this change, SSE2 floating point (FP) instructions injected into the binary at compile time can generate floating-point errors if not accounted for.</target>
				</segment>
			</unit>
			<unit id="105" translate="yes">
				<segment state="initial">
					<source>The issue can be encountered by those who use the Microsoft VC++ compiler, or a custom build environment to develop Windows drivers.</source>
					<target>The issue can be encountered by those who use the Microsoft VC++ compiler, or a custom build environment to develop Windows drivers.</target>
				</segment>
			</unit>
			<unit id="106" translate="yes">
				<segment state="initial">
					<source>However, the issue does not affect developers who use the Microsoft Visual Studio development environment, or who use the MSbuild utility to build drivers with an unmodified toolset.</source>
					<target>However, the issue does not affect developers who use the Microsoft Visual Studio development environment, or who use the MSbuild utility to build drivers with an unmodified toolset.</target>
				</segment>
			</unit>
			<unit id="107" translate="yes">
				<segment state="initial">
					<source>Floating point errors can cause data corruption or computer crashes</source>
					<target>Floating point errors can cause data corruption or computer crashes</target>
				</segment>
			</unit>
			<unit id="108" translate="yes">
				<originalData>
					<data id="id1">*</data>
					<data id="id2">*</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>If you compile a driver <pc dataRefEnd="id2" dataRefStart="id1" id="p1">without</pc> using the WDK, Visual Studio, and the recommended platform toolset for Windows drivers (<pc dataRefEnd="id4" dataRefStart="id3" id="p2">WindowsKernelModeDriver8.0</pc>), the driver might not manage floating point operations correctly, even if the driver compiles without errors.</source>
					<target>If you compile a driver <pc dataRefEnd="id2" dataRefStart="id1" id="p1">without</pc> using the WDK, Visual Studio, and the recommended platform toolset for Windows drivers (<pc dataRefEnd="id4" dataRefStart="id3" id="p2">WindowsKernelModeDriver8.0</pc>), the driver might not manage floating point operations correctly, even if the driver compiles without errors.</target>
				</segment>
			</unit>
			<unit id="109" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>The Visual Studio Professional 2012 VC++ compiler emits code that uses the SSE2 instruction set by setting the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">/arch:sse2</pc> compiler option.</source>
					<target>The Visual Studio Professional 2012 VC++ compiler emits code that uses the SSE2 instruction set by setting the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">/arch:sse2</pc> compiler option.</target>
				</segment>
			</unit>
			<unit id="110" translate="yes">
				<segment state="initial">
					<source>Starting with Visual Studio Professional 2012, this is the default option for x86 VC++ compiler code generation.</source>
					<target>Starting with Visual Studio Professional 2012, this is the default option for x86 VC++ compiler code generation.</target>
				</segment>
			</unit>
			<unit id="111" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Specifically, the default value changes from <pc dataRefEnd="id2" dataRefStart="id1" id="p1">/arch:ia32</pc> to <pc dataRefEnd="id4" dataRefStart="id3" id="p2">/arch:sse2</pc>.</source>
					<target>Specifically, the default value changes from <pc dataRefEnd="id2" dataRefStart="id1" id="p1">/arch:ia32</pc> to <pc dataRefEnd="id4" dataRefStart="id3" id="p2">/arch:sse2</pc>.</target>
				</segment>
			</unit>
			<unit id="112" translate="yes">
				<segment state="initial">
					<source>For applications this change generates code that performs better and uses less processor time during execution.</source>
					<target>For applications this change generates code that performs better and uses less processor time during execution.</target>
				</segment>
			</unit>
			<unit id="113" translate="yes">
				<segment state="initial">
					<source>However, for kernel-mode drivers this change will not manage the floating point (FP) state properly.</source>
					<target>However, for kernel-mode drivers this change will not manage the floating point (FP) state properly.</target>
				</segment>
			</unit>
			<unit id="114" translate="yes">
				<segment state="initial">
					<source>This is due to the VC++ compiler introducing FP instruction sequences in places where the context has not been saved.</source>
					<target>This is due to the VC++ compiler introducing FP instruction sequences in places where the context has not been saved.</target>
				</segment>
			</unit>
			<unit id="115" translate="yes">
				<segment state="initial">
					<source>Any binary floating-point system can represent only a finite number of floating-point values in exact form, with the rest being approximations.</source>
					<target>Any binary floating-point system can represent only a finite number of floating-point values in exact form, with the rest being approximations.</target>
				</segment>
			</unit>
			<unit id="116" translate="yes">
				<segment state="initial">
					<source>The floating-point control state, such as, rounding mode or precision, is what keeps FP operations in sync with each other.</source>
					<target>The floating-point control state, such as, rounding mode or precision, is what keeps FP operations in sync with each other.</target>
				</segment>
			</unit>
			<unit id="117" translate="yes">
				<segment state="initial">
					<source>When the state is undefined, this leads to FP calculation errors.</source>
					<target>When the state is undefined, this leads to FP calculation errors.</target>
				</segment>
			</unit>
			<unit id="118" translate="yes">
				<segment state="initial">
					<source>These calculation errors are hard to detect because in most cases application state corruption is the only sign of this issue.</source>
					<target>These calculation errors are hard to detect because in most cases application state corruption is the only sign of this issue.</target>
				</segment>
			</unit>
			<unit id="119" translate="yes">
				<segment state="initial">
					<source>This corruption can manifest itself in many ways, ranging from random crashes to data corruption.</source>
					<target>This corruption can manifest itself in many ways, ranging from random crashes to data corruption.</target>
				</segment>
			</unit>
			<unit id="120" translate="yes">
				<segment state="initial">
					<source>Solution</source>
					<target>Solution</target>
				</segment>
			</unit>
			<unit id="121" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>To avoid these problem with floating-point calculations, add the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">/kernel</pc> flag to the C++ compiler and linker command lines to prevent generating SSE2 instructions.</source>
					<target>To avoid these problem with floating-point calculations, add the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">/kernel</pc> flag to the C++ compiler and linker command lines to prevent generating SSE2 instructions.</target>
				</segment>
			</unit>
			<unit id="122" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">/kernel</pc> flag changes the default <pc dataRefEnd="id4" dataRefStart="id3" id="p2">/arch:sse2</pc> value back to <pc dataRefEnd="id6" dataRefStart="id5" id="p3">/arch:ia32</pc>.</source>
					<target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">/kernel</pc> flag changes the default <pc dataRefEnd="id4" dataRefStart="id3" id="p2">/arch:sse2</pc> value back to <pc dataRefEnd="id6" dataRefStart="id5" id="p3">/arch:ia32</pc>.</target>
				</segment>
			</unit>
			<unit id="123" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>In addition, if you build a driver using the WDK and the Visual Studio Professional 2012 development environment, or use MSBuild, in a Visual Studio Command prompt window, the Microsoft provided platform toolset (<pc dataRefEnd="id2" dataRefStart="id1" id="p1">WindowsKernelModeDriver8.0</pc>) sets the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">/kernel</pc> flag.</source>
					<target>In addition, if you build a driver using the WDK and the Visual Studio Professional 2012 development environment, or use MSBuild, in a Visual Studio Command prompt window, the Microsoft provided platform toolset (<pc dataRefEnd="id2" dataRefStart="id1" id="p1">WindowsKernelModeDriver8.0</pc>) sets the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">/kernel</pc> flag.</target>
				</segment>
			</unit>
			<unit id="124" translate="yes">
				<segment state="initial">
					<source>As a result, floating-point generation errors are avoided.</source>
					<target>As a result, floating-point generation errors are avoided.</target>
				</segment>
			</unit>
			<unit id="125" translate="yes">
				<segment state="initial">
					<source>Recommendations</source>
					<target>Recommendations</target>
				</segment>
			</unit>
			<unit id="126" translate="yes">
				<segment state="initial">
					<source>Here are the recommended solutions based on the type of development environment you use:</source>
					<target>Here are the recommended solutions based on the type of development environment you use:</target>
				</segment>
			</unit>
			<unit id="127" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Microsoft tool set (MSBuild)</pc> - No work required.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Microsoft tool set (MSBuild)</pc> - No work required.</target>
				</segment>
			</unit>
			<unit id="128" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Use <pc dataRefEnd="id2" dataRefStart="id1" id="p1">WindowsKernelModeDriver8.0</pc> as the platform toolset the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">/kernel</pc> is automatically added where appropriate.</source>
					<target>Use <pc dataRefEnd="id2" dataRefStart="id1" id="p1">WindowsKernelModeDriver8.0</pc> as the platform toolset the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">/kernel</pc> is automatically added where appropriate.</target>
				</segment>
			</unit>
			<unit id="129" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Microsoft VC++ Compiler</pc> - Add the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">/kernel</pc> flag to prevent compiler from emitting SSE2.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Microsoft VC++ Compiler</pc> - Add the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">/kernel</pc> flag to prevent compiler from emitting SSE2.</target>
				</segment>
			</unit>
			<unit id="130" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Custom Tooling/Non-Microsoft Compiler</pc> - You must manually account for the assembly instructions used in the resulting binary.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Custom Tooling/Non-Microsoft Compiler</pc> - You must manually account for the assembly instructions used in the resulting binary.</target>
				</segment>
			</unit>
			<unit id="131" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">]</data>
					<data id="id3">(mailto:wsddocfb@microsoft.com?subject=Documentation%20feedback%20[VsDriver\vsdriver]:%20Avoiding%20Floating%20Point%20Errors%20in%20Custom%20Build%20Environments%20%20RELEASE:%20%289/30/2015%29&amp;body=%0A%0APRIVACY%20STATEMENT%0A%0AWe%20use%20your%20feedback%20to%20improve%20the%20documentation.%20We%20don't%20use%20your%20email%20address%20for%20any%20other%20purpose,%20and%20we'll%20remove%20your%20email%20address%20from%20our%20system%20after%20the%20issue%20that%20you're%20reporting%20is%20fixed.%20While%20we're%20working%20to%20fix%20this%20issue,%20we%20might%20send%20you%20an%20email%20message%20to%20ask%20for%20more%20info.%20Later,%20we%20might%20also%20send%20you%20an%20email%20message%20to%20let%20you%20know%20that%20we've%20addressed%20your%20feedback.%0A%0AFor%20more%20info%20about%20Microsoft's%20privacy%20policy,%20see%20http://privacy.microsoft.com/en-us/default. "</data>
					<data id="id4">")</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Send comments about this topic to Microsoft</pc><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Send comments about this topic to Microsoft</pc></source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Send comments about this topic to Microsoft</pc><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Send comments about this topic to Microsoft</pc></target>
				</segment>
			</unit>
		</group>
	</file>
</xliff>