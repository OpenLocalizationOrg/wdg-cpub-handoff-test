<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="it-it" version="2.0" xml:space="preserve" xmlns="urn:oasis:names:tc:xliff:document:2.0">
	<file id="1">
		<mda:metadata>
			<mda:metaGroup>
				<mda:meta type="tool-id">mdxliff</mda:meta>
				<mda:meta type="tool-name">mdxliff</mda:meta>
				<mda:meta type="tool-version">1.0-00ddeee</mda:meta>
				<mda:meta type="tool-company">Microsoft</mda:meta>
			</mda:metaGroup>
		<mda:metaGroup><mda:meta type="olfilehash">d7c8c0917d0c97ff28f3d8efcf74468088b8f865</mda:meta><mda:meta type="olfilepath">wdg-cpub-test\ndolci2\layout\alignment-margin-padding.md</mda:meta><mda:meta type="oltranslationpriority"></mda:meta><mda:meta type="oltranslationtype">Human Translation</mda:meta><mda:meta type="olskeletonhash">a96cacb2cb144305ae462cd4bf4e1d3f93bf468b</mda:meta><mda:meta type="olxliffhash">a64abc0627fcbead2d8d970ffac6dc74b2320869</mda:meta></mda:metaGroup></mda:metadata>
		<group id="content">
			<unit id="101" translate="yes">
				<segment state="initial">
					<source>Use alignment, margin, and padding to influence the layout of elements on a page.</source>
					<target>Use alignment, margin, and padding to influence the layout of elements on a page.</target>
				</segment>
			</unit>
			<unit id="102" translate="yes">
				<segment state="initial">
					<source>Alignment, margin, and padding for Universal Windows Platform (UWP) apps</source>
					<target>Alignment, margin, and padding for Universal Windows Platform (UWP) apps</target>
				</segment>
			</unit>
			<unit id="103" translate="yes">
				<segment state="initial">
					<source>Alignment, margin, and padding</source>
					<target>Alignment, margin, and padding</target>
				</segment>
			</unit>
			<unit id="104" translate="yes">
				<segment state="initial">
					<source>\[ Updated for UWP apps on Windows 10.</source>
					<target>\[ Updated for UWP apps on Windows 10.</target>
				</segment>
			</unit>
			<unit id="105" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](http://go.microsoft.com/fwlink/p/?linkid=619132)</data>
				</originalData>
				<segment state="initial">
					<source>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</source>
					<target>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</target>
				</segment>
			</unit>
			<unit id="106" translate="yes">
				<segment state="initial">
					<source>In addition to dimension properties (width, height, and constraints) elements can also have alignment, margin, and padding properties that influence the layout behavior when an element goes through a layout pass and is rendered in a UI.</source>
					<target>In addition to dimension properties (width, height, and constraints) elements can also have alignment, margin, and padding properties that influence the layout behavior when an element goes through a layout pass and is rendered in a UI.</target>
				</segment>
			</unit>
			<unit id="107" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br208706)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>There are relationships between alignment, margin, padding and dimension properties that have a typical logic flow when a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">FrameworkElement</pc></pc> object is positioned, such that values are sometimes used and sometimes ignored depending on the circumstances.</source>
					<target>There are relationships between alignment, margin, padding and dimension properties that have a typical logic flow when a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">FrameworkElement</pc></pc> object is positioned, such that values are sometimes used and sometimes ignored depending on the circumstances.</target>
				</segment>
			</unit>
			<unit id="108" translate="yes">
				<segment state="initial">
					<source>Alignment properties</source>
					<target>Alignment properties</target>
				</segment>
			</unit>
			<unit id="109" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br208720)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/br208749)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">HorizontalAlignment</pc></pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">VerticalAlignment</pc></pc> properties describe how a child element should be positioned within a parent element's allocated layout space.</source>
					<target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">HorizontalAlignment</pc></pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">VerticalAlignment</pc></pc> properties describe how a child element should be positioned within a parent element's allocated layout space.</target>
				</segment>
			</unit>
			<unit id="110" translate="yes">
				<segment state="initial">
					<source>By using these properties together, layout logic for a container can position child elements within the container (either a panel or a control).</source>
					<target>By using these properties together, layout logic for a container can position child elements within the container (either a panel or a control).</target>
				</segment>
			</unit>
			<unit id="111" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br208706)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source>Alignment properties are intended to hint the desired layout to an adaptive layout container, so basically they're set on <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">FrameworkElement</pc></pc> children and interpreted by another <pc dataRefEnd="id6" dataRefStart="id5" id="p3">FrameworkElement</pc> container parent.</source>
					<target>Alignment properties are intended to hint the desired layout to an adaptive layout container, so basically they're set on <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">FrameworkElement</pc></pc> children and interpreted by another <pc dataRefEnd="id6" dataRefStart="id5" id="p3">FrameworkElement</pc> container parent.</target>
				</segment>
			</unit>
			<unit id="112" translate="yes">
				<segment state="initial">
					<source>Alignment values can specify whether elements align to one of the two edges of an orientation, or to the center.</source>
					<target>Alignment values can specify whether elements align to one of the two edges of an orientation, or to the center.</target>
				</segment>
			</unit>
			<unit id="113" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>However, the default value for both alignment properties is <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Stretch</pc>.</source>
					<target>However, the default value for both alignment properties is <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Stretch</pc>.</target>
				</segment>
			</unit>
			<unit id="114" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>With <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Stretch</pc> alignment, elements fill the space they're provided in layout.</source>
					<target>With <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Stretch</pc> alignment, elements fill the space they're provided in layout.</target>
				</segment>
			</unit>
			<unit id="115" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">[</data>
					<data id="id4">](https://msdn.microsoft.com/library/windows/apps/br208921)</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Stretch</pc> is the default so that it's easier to use adaptive layout techniques in the cases where there is no explicit measurement or no <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">DesiredSize</pc></pc> value that came from the measure pass of layout.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Stretch</pc> is the default so that it's easier to use adaptive layout techniques in the cases where there is no explicit measurement or no <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">DesiredSize</pc></pc> value that came from the measure pass of layout.</target>
				</segment>
			</unit>
			<unit id="116" translate="yes">
				<segment state="initial">
					<source>With this default, there's no risk of an explicit height/width not fitting within the container and being clipped until you size each container.</source>
					<target>With this default, there's no risk of an explicit height/width not fitting within the container and being clipped until you size each container.</target>
				</segment>
			</unit>
			<unit id="117" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">&amp;nbsp;&amp;nbsp;</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc><ph dataRef="id3" id="ph1" />As a general layout principle, it's best to only apply measurements to certain key elements and use the adaptive layout behavior for the other elements.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc><ph dataRef="id3" id="ph1" />As a general layout principle, it's best to only apply measurements to certain key elements and use the adaptive layout behavior for the other elements.</target>
				</segment>
			</unit>
			<unit id="118" translate="yes">
				<segment state="initial">
					<source>This provides flexible layout behavior for when the user sizes the top app window, which typically is possible to do at any time.</source>
					<target>This provides flexible layout behavior for when the user sizes the top app window, which typically is possible to do at any time.</target>
				</segment>
			</unit>
			<unit id="119" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br208718)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/br208751)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
					<data id="id9">**</data>
					<data id="id10">**</data>
				</originalData>
				<segment state="initial">
					<source>If there are either <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Height</pc></pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Width</pc></pc> values or clipping within an adaptive container, even if <pc dataRefEnd="id10" dataRefStart="id9" id="p5">Stretch</pc> is set as an alignment value, the layout is controlled by the behavior of its container.</source>
					<target>If there are either <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Height</pc></pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Width</pc></pc> values or clipping within an adaptive container, even if <pc dataRefEnd="id10" dataRefStart="id9" id="p5">Stretch</pc> is set as an alignment value, the layout is controlled by the behavior of its container.</target>
				</segment>
			</unit>
			<unit id="120" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>In panels, a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Stretch</pc> value that's been obviated by <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Height</pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Width</pc> acts as if the value is <pc dataRefEnd="id8" dataRefStart="id7" id="p4">Center</pc>.</source>
					<target>In panels, a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Stretch</pc> value that's been obviated by <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Height</pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Width</pc> acts as if the value is <pc dataRefEnd="id8" dataRefStart="id7" id="p4">Center</pc>.</target>
				</segment>
			</unit>
			<unit id="121" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>If there are no natural or calculated height and width values, these dimension values are mathematically <pc dataRefEnd="id2" dataRefStart="id1" id="p1">NaN</pc> (Not A Number).</source>
					<target>If there are no natural or calculated height and width values, these dimension values are mathematically <pc dataRefEnd="id2" dataRefStart="id1" id="p1">NaN</pc> (Not A Number).</target>
				</segment>
			</unit>
			<unit id="122" translate="yes">
				<segment state="initial">
					<source>The elements are waiting for their layout container to give them dimensions.</source>
					<target>The elements are waiting for their layout container to give them dimensions.</target>
				</segment>
			</unit>
			<unit id="123" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br208707)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/br208709)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
					<data id="id9">**</data>
					<data id="id10">**</data>
				</originalData>
				<segment state="initial">
					<source>After layout is run, there will be values for <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ActualHeight</pc></pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">ActualWidth</pc></pc> properties for elements where a <pc dataRefEnd="id10" dataRefStart="id9" id="p5">Stretch</pc> alignment was used.</source>
					<target>After layout is run, there will be values for <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ActualHeight</pc></pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">ActualWidth</pc></pc> properties for elements where a <pc dataRefEnd="id10" dataRefStart="id9" id="p5">Stretch</pc> alignment was used.</target>
				</segment>
			</unit>
			<unit id="124" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">[</data>
					<data id="id4">](https://msdn.microsoft.com/library/windows/apps/br208718)</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
					<data id="id7">[</data>
					<data id="id8">](https://msdn.microsoft.com/library/windows/apps/br208751)</data>
					<data id="id9">**</data>
					<data id="id10">**</data>
				</originalData>
				<segment state="initial">
					<source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">NaN</pc> values remain in <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">Height</pc></pc> and <pc dataRefEnd="id8" dataRefStart="id7" id="p4"><pc dataRefEnd="id10" dataRefStart="id9" id="p5">Width</pc></pc> for the child elements so that the adaptive behavior can run again, for example, if layout-related changes such as app window sizing causes another layout cycle.</source>
					<target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">NaN</pc> values remain in <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">Height</pc></pc> and <pc dataRefEnd="id8" dataRefStart="id7" id="p4"><pc dataRefEnd="id10" dataRefStart="id9" id="p5">Width</pc></pc> for the child elements so that the adaptive behavior can run again, for example, if layout-related changes such as app window sizing causes another layout cycle.</target>
				</segment>
			</unit>
			<unit id="125" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br209652)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/br208709)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
					<data id="id9">**</data>
					<data id="id10">**</data>
				</originalData>
				<segment state="initial">
					<source>Text elements such as <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">TextBlock</pc></pc> don't usually have an explicitly declared width, but they do have a calculated width that you can query with <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">ActualWidth</pc></pc>, and that width also cancels out a <pc dataRefEnd="id10" dataRefStart="id9" id="p5">Stretch</pc> alignment.</source>
					<target>Text elements such as <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">TextBlock</pc></pc> don't usually have an explicitly declared width, but they do have a calculated width that you can query with <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">ActualWidth</pc></pc>, and that width also cancels out a <pc dataRefEnd="id10" dataRefStart="id9" id="p5">Stretch</pc> alignment.</target>
				</segment>
			</unit>
			<unit id="126" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br209657)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>(The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">FontSize</pc></pc> property and other text properties, as well as the text itself, are already hinting the intended layout size.</source>
					<target>(The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">FontSize</pc></pc> property and other text properties, as well as the text itself, are already hinting the intended layout size.</target>
				</segment>
			</unit>
			<unit id="127" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>You don't typically want your text to be stretched.) Text used as content within a control has the same effect; the presence of text that needs presenting causes an <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ActualWidth</pc> to be calculated, and this also commutes a desired width and size to the containing control.</source>
					<target>You don't typically want your text to be stretched.) Text used as content within a control has the same effect; the presence of text that needs presenting causes an <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ActualWidth</pc> to be calculated, and this also commutes a desired width and size to the containing control.</target>
				</segment>
			</unit>
			<unit id="128" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br208707)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Text elements also have an <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ActualHeight</pc></pc> based on font size per line, line breaks, and other text properties.</source>
					<target>Text elements also have an <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ActualHeight</pc></pc> based on font size per line, line breaks, and other text properties.</target>
				</segment>
			</unit>
			<unit id="129" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br242704)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/hh759795)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>A panel such as <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Grid</pc></pc> already has other logic for layout (row and column definitions, and attached properties such as <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Grid.Row</pc></pc> set on elements to indicate which cell to be drawn in).</source>
					<target>A panel such as <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Grid</pc></pc> already has other logic for layout (row and column definitions, and attached properties such as <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Grid.Row</pc></pc> set on elements to indicate which cell to be drawn in).</target>
				</segment>
			</unit>
			<unit id="130" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>In that case, the alignment properties influence how the content is aligned within the area of that cell, but the cell structure and sizing is controlled by settings on the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Grid</pc>.</source>
					<target>In that case, the alignment properties influence how the content is aligned within the area of that cell, but the cell structure and sizing is controlled by settings on the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Grid</pc>.</target>
				</segment>
			</unit>
			<unit id="131" translate="yes">
				<segment state="initial">
					<source>Item controls sometimes display items where the base types of the items are data.</source>
					<target>Item controls sometimes display items where the base types of the items are data.</target>
				</segment>
			</unit>
			<unit id="132" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br242843)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>This involves an <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ItemsPresenter</pc></pc>.</source>
					<target>This involves an <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ItemsPresenter</pc></pc>.</target>
				</segment>
			</unit>
			<unit id="133" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br208706)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
					<data id="id7">[</data>
					<data id="id8">](https://msdn.microsoft.com/library/windows/apps/br208720)</data>
					<data id="id9">**</data>
					<data id="id10">**</data>
					<data id="id11">[</data>
					<data id="id12">](https://msdn.microsoft.com/library/windows/apps/br208749)</data>
					<data id="id13">**</data>
					<data id="id14">**</data>
				</originalData>
				<segment state="initial">
					<source>Although the data itself is not a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">FrameworkElement</pc></pc> derived type, <pc dataRefEnd="id6" dataRefStart="id5" id="p3">ItemsPresenter</pc> is, so you can set <pc dataRefEnd="id8" dataRefStart="id7" id="p4"><pc dataRefEnd="id10" dataRefStart="id9" id="p5">HorizontalAlignment</pc></pc> and <pc dataRefEnd="id12" dataRefStart="id11" id="p6"><pc dataRefEnd="id14" dataRefStart="id13" id="p7">VerticalAlignment</pc></pc> for the presenter and that alignment applies to the data items when presented in the items control.</source>
					<target>Although the data itself is not a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">FrameworkElement</pc></pc> derived type, <pc dataRefEnd="id6" dataRefStart="id5" id="p3">ItemsPresenter</pc> is, so you can set <pc dataRefEnd="id8" dataRefStart="id7" id="p4"><pc dataRefEnd="id10" dataRefStart="id9" id="p5">HorizontalAlignment</pc></pc> and <pc dataRefEnd="id12" dataRefStart="id11" id="p6"><pc dataRefEnd="id14" dataRefStart="id13" id="p7">VerticalAlignment</pc></pc> for the presenter and that alignment applies to the data items when presented in the items control.</target>
				</segment>
			</unit>
			<unit id="134" translate="yes">
				<segment state="initial">
					<source>Alignment properties are only relevant for cases when there's extra space available in a dimension of the parent layout container.</source>
					<target>Alignment properties are only relevant for cases when there's extra space available in a dimension of the parent layout container.</target>
				</segment>
			</unit>
			<unit id="135" translate="yes">
				<segment state="initial">
					<source>If a layout container is already clipping content, alignment can affect the area of the element where the clipping will apply.</source>
					<target>If a layout container is already clipping content, alignment can affect the area of the element where the clipping will apply.</target>
				</segment>
			</unit>
			<unit id="136" translate="yes">
				<originalData>
					<data id="id1">`HorizontalAlignment="Left"`</data>
				</originalData>
				<segment state="initial">
					<source>For example, if you set <ph dataRef="id1" id="ph1" />, the right size of the element gets clipped.</source>
					<target>For example, if you set <ph dataRef="id1" id="ph1" />, the right size of the element gets clipped.</target>
				</segment>
			</unit>
			<unit id="137" translate="yes">
				<segment state="initial">
					<source>Margin</source>
					<target>Margin</target>
				</segment>
			</unit>
			<unit id="138" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br208724)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Margin</pc></pc> property describes the distance between an element and its peers in a layout situation, and also the distance between an element and the content area of a container that contains the element.</source>
					<target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Margin</pc></pc> property describes the distance between an element and its peers in a layout situation, and also the distance between an element and the content area of a container that contains the element.</target>
				</segment>
			</unit>
			<unit id="139" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br208707)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/br208709)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
					<data id="id9">**</data>
					<data id="id10">**</data>
					<data id="id11">**</data>
					<data id="id12">**</data>
					<data id="id13">**</data>
					<data id="id14">**</data>
				</originalData>
				<segment state="initial">
					<source>If you think of elements as bounding boxes or rectangles where the dimensions are the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ActualHeight</pc></pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">ActualWidth</pc></pc>, the <pc dataRefEnd="id10" dataRefStart="id9" id="p5">Margin</pc> layout applies to the outside of that rectangle and does not add pixels to the <pc dataRefEnd="id12" dataRefStart="id11" id="p6">ActualHeight</pc> and <pc dataRefEnd="id14" dataRefStart="id13" id="p7">ActualWidth</pc>.</source>
					<target>If you think of elements as bounding boxes or rectangles where the dimensions are the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ActualHeight</pc></pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">ActualWidth</pc></pc>, the <pc dataRefEnd="id10" dataRefStart="id9" id="p5">Margin</pc> layout applies to the outside of that rectangle and does not add pixels to the <pc dataRefEnd="id12" dataRefStart="id11" id="p6">ActualHeight</pc> and <pc dataRefEnd="id14" dataRefStart="id13" id="p7">ActualWidth</pc>.</target>
				</segment>
			</unit>
			<unit id="140" translate="yes">
				<segment state="initial">
					<source>The margin is also not considered part of the element for purposes of hit testing and sourcing input events.</source>
					<target>The margin is also not considered part of the element for purposes of hit testing and sourcing input events.</target>
				</segment>
			</unit>
			<unit id="141" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br208724)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/br208718)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
					<data id="id9">[</data>
					<data id="id10">](https://msdn.microsoft.com/library/windows/apps/br208751)</data>
					<data id="id11">**</data>
					<data id="id12">**</data>
				</originalData>
				<segment state="initial">
					<source>In general layout behavior, components of a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Margin</pc></pc> value are constrained last, and are constrained only after <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Height</pc></pc> and <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">Width</pc></pc> are already constrained all the way to 0.</source>
					<target>In general layout behavior, components of a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Margin</pc></pc> value are constrained last, and are constrained only after <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Height</pc></pc> and <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">Width</pc></pc> are already constrained all the way to 0.</target>
				</segment>
			</unit>
			<unit id="142" translate="yes">
				<segment state="initial">
					<source>So, be careful with margins when the container is already clipping or constraining the element; otherwise, your margin could be the cause of an element not appearing to render (because one of its dimensions has been constrained to 0 after the margin was applied).</source>
					<target>So, be careful with margins when the container is already clipping or constraining the element; otherwise, your margin could be the cause of an element not appearing to render (because one of its dimensions has been constrained to 0 after the margin was applied).</target>
				</segment>
			</unit>
			<unit id="143" translate="yes">
				<originalData>
					<data id="id1">`Margin="20"`</data>
				</originalData>
				<segment state="initial">
					<source>Margin values can be uniform, by using syntax like <ph dataRef="id1" id="ph1" />.</source>
					<target>Margin values can be uniform, by using syntax like <ph dataRef="id1" id="ph1" />.</target>
				</segment>
			</unit>
			<unit id="144" translate="yes">
				<segment state="initial">
					<source>With this syntax, a uniform margin of 20 pixels would be applied to the element, with a 20-pixel margin on the left, top, right, and bottom sides.</source>
					<target>With this syntax, a uniform margin of 20 pixels would be applied to the element, with a 20-pixel margin on the left, top, right, and bottom sides.</target>
				</segment>
			</unit>
			<unit id="145" translate="yes">
				<segment state="initial">
					<source>Margin values can also take the form of four distinct values, each value describing a distinct margin to apply to the left, top, right, and bottom (in that order).</source>
					<target>Margin values can also take the form of four distinct values, each value describing a distinct margin to apply to the left, top, right, and bottom (in that order).</target>
				</segment>
			</unit>
			<unit id="146" translate="yes">
				<originalData>
					<data id="id1">`Margin="0,10,5,25"`</data>
				</originalData>
				<segment state="initial">
					<source>For example, <ph dataRef="id1" id="ph1" />.</source>
					<target>For example, <ph dataRef="id1" id="ph1" />.</target>
				</segment>
			</unit>
			<unit id="147" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br208724)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/br208864)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
					<data id="id9">[</data>
					<data id="id10">](https://msdn.microsoft.com/library/windows/apps/hh673893)</data>
					<data id="id11">**</data>
					<data id="id12">**</data>
					<data id="id13">[</data>
					<data id="id14">](https://msdn.microsoft.com/library/windows/apps/hh673840)</data>
					<data id="id15">**</data>
					<data id="id16">**</data>
					<data id="id17">[</data>
					<data id="id18">](https://msdn.microsoft.com/library/windows/apps/hh673881)</data>
					<data id="id19">**</data>
					<data id="id20">**</data>
					<data id="id21">[</data>
					<data id="id22">](https://msdn.microsoft.com/library/windows/apps/hh673775)</data>
					<data id="id23">**</data>
					<data id="id24">**</data>
					<data id="id25">**</data>
					<data id="id26">**</data>
				</originalData>
				<segment state="initial">
					<source>The underlying type for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Margin</pc></pc> property is a <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Thickness</pc></pc> structure, which has properties that hold the <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">Left</pc></pc>, <pc dataRefEnd="id14" dataRefStart="id13" id="p7"><pc dataRefEnd="id16" dataRefStart="id15" id="p8">Top</pc></pc>, <pc dataRefEnd="id18" dataRefStart="id17" id="p9"><pc dataRefEnd="id20" dataRefStart="id19" id="p10">Right</pc></pc>, and <pc dataRefEnd="id22" dataRefStart="id21" id="p11"><pc dataRefEnd="id24" dataRefStart="id23" id="p12">Bottom</pc></pc> values as separate <pc dataRefEnd="id26" dataRefStart="id25" id="p13">Double</pc> values.</source>
					<target>The underlying type for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Margin</pc></pc> property is a <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Thickness</pc></pc> structure, which has properties that hold the <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">Left</pc></pc>, <pc dataRefEnd="id14" dataRefStart="id13" id="p7"><pc dataRefEnd="id16" dataRefStart="id15" id="p8">Top</pc></pc>, <pc dataRefEnd="id18" dataRefStart="id17" id="p9"><pc dataRefEnd="id20" dataRefStart="id19" id="p10">Right</pc></pc>, and <pc dataRefEnd="id22" dataRefStart="id21" id="p11"><pc dataRefEnd="id24" dataRefStart="id23" id="p12">Bottom</pc></pc> values as separate <pc dataRefEnd="id26" dataRefStart="id25" id="p13">Double</pc> values.</target>
				</segment>
			</unit>
			<unit id="148" translate="yes">
				<segment state="initial">
					<source>Margins are additive.</source>
					<target>Margins are additive.</target>
				</segment>
			</unit>
			<unit id="149" translate="yes">
				<segment state="initial">
					<source>For example, if two elements each specify a uniform margin of 10 pixels and they are adjacent peers in any orientation, the distance between the elements is 20 pixels.</source>
					<target>For example, if two elements each specify a uniform margin of 10 pixels and they are adjacent peers in any orientation, the distance between the elements is 20 pixels.</target>
				</segment>
			</unit>
			<unit id="150" translate="yes">
				<segment state="initial">
					<source>Negative margins are permitted.</source>
					<target>Negative margins are permitted.</target>
				</segment>
			</unit>
			<unit id="151" translate="yes">
				<segment state="initial">
					<source>However, using a negative margin can often cause clipping, or overdraws of peers, so it's not a common technique to use negative margins.</source>
					<target>However, using a negative margin can often cause clipping, or overdraws of peers, so it's not a common technique to use negative margins.</target>
				</segment>
			</unit>
			<unit id="152" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br208724)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Proper use of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Margin</pc></pc> property enables very fine control of an element's rendering position and the rendering position of its neighbor elements and children.</source>
					<target>Proper use of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Margin</pc></pc> property enables very fine control of an element's rendering position and the rendering position of its neighbor elements and children.</target>
				</segment>
			</unit>
			<unit id="153" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>When you use element dragging to position elements within the XAML designer in Visual Studio, you'll see that the modified XAML typically has values for <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Margin</pc> of that element that were used to serialize your positioning changes back into the XAML.</source>
					<target>When you use element dragging to position elements within the XAML designer in Visual Studio, you'll see that the modified XAML typically has values for <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Margin</pc> of that element that were used to serialize your positioning changes back into the XAML.</target>
				</segment>
			</unit>
			<unit id="154" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br244379)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/br244503)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
					<data id="id9">[</data>
					<data id="id10">](https://msdn.microsoft.com/library/windows/apps/jj191725)</data>
					<data id="id11">**</data>
					<data id="id12">**</data>
				</originalData>
				<segment state="initial">
					<source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Block</pc></pc> class, which is a base class for <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Paragraph</pc></pc>, also has a <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">Margin</pc></pc> property.</source>
					<target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Block</pc></pc> class, which is a base class for <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Paragraph</pc></pc>, also has a <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">Margin</pc></pc> property.</target>
				</segment>
			</unit>
			<unit id="155" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">[</data>
					<data id="id4">](https://msdn.microsoft.com/library/windows/apps/br227565)</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
					<data id="id7">[</data>
					<data id="id8">](https://msdn.microsoft.com/library/windows/apps/br227548)</data>
					<data id="id9">**</data>
					<data id="id10">**</data>
					<data id="id11">**</data>
					<data id="id12">**</data>
					<data id="id13">[</data>
					<data id="id14">](https://msdn.microsoft.com/library/windows/apps/br244347)</data>
					<data id="id15">**</data>
					<data id="id16">**</data>
				</originalData>
				<segment state="initial">
					<source>It has an analogous effect on how that <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Paragraph</pc> is positioned within its parent container, which is typically a <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">RichTextBlock</pc></pc> or <pc dataRefEnd="id8" dataRefStart="id7" id="p4"><pc dataRefEnd="id10" dataRefStart="id9" id="p5">RichEditBox</pc></pc> object, and also how more than one paragraph is positioned relative to other <pc dataRefEnd="id12" dataRefStart="id11" id="p6">Block</pc> peers from the <pc dataRefEnd="id14" dataRefStart="id13" id="p7"><pc dataRefEnd="id16" dataRefStart="id15" id="p8">RichTextBlock.Blocks</pc></pc> collection.</source>
					<target>It has an analogous effect on how that <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Paragraph</pc> is positioned within its parent container, which is typically a <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">RichTextBlock</pc></pc> or <pc dataRefEnd="id8" dataRefStart="id7" id="p4"><pc dataRefEnd="id10" dataRefStart="id9" id="p5">RichEditBox</pc></pc> object, and also how more than one paragraph is positioned relative to other <pc dataRefEnd="id12" dataRefStart="id11" id="p6">Block</pc> peers from the <pc dataRefEnd="id14" dataRefStart="id13" id="p7"><pc dataRefEnd="id16" dataRefStart="id15" id="p8">RichTextBlock.Blocks</pc></pc> collection.</target>
				</segment>
			</unit>
			<unit id="156" translate="yes">
				<segment state="initial">
					<source>Padding</source>
					<target>Padding</target>
				</segment>
			</unit>
			<unit id="157" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>A <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Padding</pc> property describes the distance between an element and any child elements or content that it contains.</source>
					<target>A <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Padding</pc> property describes the distance between an element and any child elements or content that it contains.</target>
				</segment>
			</unit>
			<unit id="158" translate="yes">
				<segment state="initial">
					<source>Content is treated as a single bounding box that encloses all the content, if it's an element that permits more than one child.</source>
					<target>Content is treated as a single bounding box that encloses all the content, if it's an element that permits more than one child.</target>
				</segment>
			</unit>
			<unit id="159" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br242803)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/br209459)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>For example, if there's an <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ItemsControl</pc></pc> that contains two items, the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Padding</pc></pc> is applied around the bounding box that contains the items.</source>
					<target>For example, if there's an <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ItemsControl</pc></pc> that contains two items, the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Padding</pc></pc> is applied around the bounding box that contains the items.</target>
				</segment>
			</unit>
			<unit id="160" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Padding</pc> subtracts from the available size when it comes to the measure and arrange pass calculations for that container and are part of the desired size values when the container itself goes through the layout pass for whatever contains it.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Padding</pc> subtracts from the available size when it comes to the measure and arrange pass calculations for that container and are part of the desired size values when the container itself goes through the layout pass for whatever contains it.</target>
				</segment>
			</unit>
			<unit id="161" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br208724)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
					<data id="id7">[</data>
					<data id="id8">](https://msdn.microsoft.com/library/windows/apps/br208706)</data>
					<data id="id9">**</data>
					<data id="id10">**</data>
					<data id="id11">**</data>
					<data id="id12">**</data>
				</originalData>
				<segment state="initial">
					<source>Unlike <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Margin</pc></pc>, <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Padding</pc> is not a property of <pc dataRefEnd="id8" dataRefStart="id7" id="p4"><pc dataRefEnd="id10" dataRefStart="id9" id="p5">FrameworkElement</pc></pc>, and in fact there are several classes which each define their own <pc dataRefEnd="id12" dataRefStart="id11" id="p6">Padding</pc> property:</source>
					<target>Unlike <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Margin</pc></pc>, <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Padding</pc> is not a property of <pc dataRefEnd="id8" dataRefStart="id7" id="p4"><pc dataRefEnd="id10" dataRefStart="id9" id="p5">FrameworkElement</pc></pc>, and in fact there are several classes which each define their own <pc dataRefEnd="id12" dataRefStart="id11" id="p6">Padding</pc> property:</target>
				</segment>
			</unit>
			<unit id="162" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br209459)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/br209390)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Control.Padding</pc></pc>: inherits to all <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Control</pc></pc> derived classes.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Control.Padding</pc></pc>: inherits to all <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Control</pc></pc> derived classes.</target>
				</segment>
			</unit>
			<unit id="163" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn279268)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Not all controls have content, so for some controls (for example <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">AppBarSeparator</pc></pc>) setting the property does nothing.</source>
					<target>Not all controls have content, so for some controls (for example <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">AppBarSeparator</pc></pc>) setting the property does nothing.</target>
				</segment>
			</unit>
			<unit id="164" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br209399)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>If the control has a border (see <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Control.BorderThickness</pc></pc>), the padding applies inside that border.</source>
					<target>If the control has a border (see <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Control.BorderThickness</pc></pc>), the padding applies inside that border.</target>
				</segment>
			</unit>
			<unit id="165" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br209263)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/br209256)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
					<data id="id9">/</data>
					<data id="id10">[</data>
					<data id="id11">](https://msdn.microsoft.com/library/windows/apps/br209254)</data>
					<data id="id12">**</data>
					<data id="id13">**</data>
					<data id="id14">[</data>
					<data id="id15">](https://msdn.microsoft.com/library/windows/apps/br209258)</data>
					<data id="id16">**</data>
					<data id="id17">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Border.Padding</pc></pc>: defines space between the rectangle line created by <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">BorderThickness</pc></pc><ph dataRef="id9" id="ph1" /><pc dataRefEnd="id11" dataRefStart="id10" id="p5"><pc dataRefEnd="id13" dataRefStart="id12" id="p6">BorderBrush</pc></pc> and the <pc dataRefEnd="id15" dataRefStart="id14" id="p7"><pc dataRefEnd="id17" dataRefStart="id16" id="p8">Child</pc></pc> element.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Border.Padding</pc></pc>: defines space between the rectangle line created by <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">BorderThickness</pc></pc><ph dataRef="id9" id="ph1" /><pc dataRefEnd="id11" dataRefStart="id10" id="p5"><pc dataRefEnd="id13" dataRefStart="id12" id="p6">BorderBrush</pc></pc> and the <pc dataRefEnd="id15" dataRefStart="id14" id="p7"><pc dataRefEnd="id17" dataRefStart="id16" id="p8">Child</pc></pc> element.</target>
				</segment>
			</unit>
			<unit id="166" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/hh968021)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ItemsPresenter.Padding</pc></pc>: contributes to appearance of the generated visuals for items in item controls, placing the specified padding around each item.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ItemsPresenter.Padding</pc></pc>: contributes to appearance of the generated visuals for items in item controls, placing the specified padding around each item.</target>
				</segment>
			</unit>
			<unit id="167" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br209673)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/br227596)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">TextBlock.Padding</pc></pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">RichTextBlock.Padding</pc></pc>: expands the bounding box around the text of the text element.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">TextBlock.Padding</pc></pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">RichTextBlock.Padding</pc></pc>: expands the bounding box around the text of the text element.</target>
				</segment>
			</unit>
			<unit id="168" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>These text elements don't have a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Background</pc>, so it can be visually difficult to see what's the text's padding versus other layout behavior applied by the text element's container.</source>
					<target>These text elements don't have a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Background</pc>, so it can be visually difficult to see what's the text's padding versus other layout behavior applied by the text element's container.</target>
				</segment>
			</unit>
			<unit id="169" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/jj191725)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/br244379)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
					<data id="id9">[</data>
					<data id="id10">](https://msdn.microsoft.com/library/windows/apps/br227565)</data>
					<data id="id11">**</data>
					<data id="id12">**</data>
				</originalData>
				<segment state="initial">
					<source>For that reason, text element padding is seldom used and it's more typical to use <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Margin</pc></pc> settings on contained <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Block</pc></pc> containers (for the <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">RichTextBlock</pc></pc> case).</source>
					<target>For that reason, text element padding is seldom used and it's more typical to use <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Margin</pc></pc> settings on contained <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Block</pc></pc> containers (for the <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">RichTextBlock</pc></pc> case).</target>
				</segment>
			</unit>
			<unit id="170" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>In each of these cases, the same element also has a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Margin</pc> property.</source>
					<target>In each of these cases, the same element also has a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Margin</pc> property.</target>
				</segment>
			</unit>
			<unit id="171" translate="yes">
				<segment state="initial">
					<source>If both margin and padding are applied, they are additive in the sense that the apparent distance between an outer container and any inner content will be margin plus padding.</source>
					<target>If both margin and padding are applied, they are additive in the sense that the apparent distance between an outer container and any inner content will be margin plus padding.</target>
				</segment>
			</unit>
			<unit id="172" translate="yes">
				<segment state="initial">
					<source>If there are different background values applied to content, element or container, the point at which margin ends and padding begins is potentially visible in the rendering.</source>
					<target>If there are different background values applied to content, element or container, the point at which margin ends and padding begins is potentially visible in the rendering.</target>
				</segment>
			</unit>
			<unit id="173" translate="yes">
				<segment state="initial">
					<source>Dimensions (Height, Width)</source>
					<target>Dimensions (Height, Width)</target>
				</segment>
			</unit>
			<unit id="174" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br208718)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/br208751)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
					<data id="id9">[</data>
					<data id="id10">](https://msdn.microsoft.com/library/windows/apps/br208706)</data>
					<data id="id11">**</data>
					<data id="id12">**</data>
				</originalData>
				<segment state="initial">
					<source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Height</pc></pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Width</pc></pc> properties of a <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">FrameworkElement</pc></pc> often influence how the alignment, margin, and padding properties behave when a layout pass happens.</source>
					<target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Height</pc></pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Width</pc></pc> properties of a <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">FrameworkElement</pc></pc> often influence how the alignment, margin, and padding properties behave when a layout pass happens.</target>
				</segment>
			</unit>
			<unit id="175" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
					<data id="id7">[</data>
					<data id="id8">](https://msdn.microsoft.com/library/windows/apps/br208921)</data>
					<data id="id9">**</data>
					<data id="id10">**</data>
				</originalData>
				<segment state="initial">
					<source>In particular, real-number <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Height</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Width</pc> value cancels <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Stretch</pc> alignments, and is also promoted as a possible component of the <pc dataRefEnd="id8" dataRefStart="id7" id="p4"><pc dataRefEnd="id10" dataRefStart="id9" id="p5">DesiredSize</pc></pc> value that's established during the measure pass of the layout.</source>
					<target>In particular, real-number <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Height</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Width</pc> value cancels <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Stretch</pc> alignments, and is also promoted as a possible component of the <pc dataRefEnd="id8" dataRefStart="id7" id="p4"><pc dataRefEnd="id10" dataRefStart="id9" id="p5">DesiredSize</pc></pc> value that's established during the measure pass of the layout.</target>
				</segment>
			</unit>
			<unit id="176" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
					<data id="id7">[</data>
					<data id="id8">](https://msdn.microsoft.com/library/windows/apps/br208731)</data>
					<data id="id9">**</data>
					<data id="id10">**</data>
					<data id="id11">[</data>
					<data id="id12">](https://msdn.microsoft.com/library/windows/apps/br208726)</data>
					<data id="id13">**</data>
					<data id="id14">**</data>
					<data id="id15">**</data>
					<data id="id16">**</data>
					<data id="id17">[</data>
					<data id="id18">](https://msdn.microsoft.com/library/windows/apps/br208733)</data>
					<data id="id19">**</data>
					<data id="id20">**</data>
					<data id="id21">[</data>
					<data id="id22">](https://msdn.microsoft.com/library/windows/apps/br208728)</data>
					<data id="id23">**</data>
					<data id="id24">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Height</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Width</pc> have constraint properties: the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Height</pc> value can be constrained with <pc dataRefEnd="id8" dataRefStart="id7" id="p4"><pc dataRefEnd="id10" dataRefStart="id9" id="p5">MinHeight</pc></pc> and <pc dataRefEnd="id12" dataRefStart="id11" id="p6"><pc dataRefEnd="id14" dataRefStart="id13" id="p7">MaxHeight</pc></pc>, the <pc dataRefEnd="id16" dataRefStart="id15" id="p8">Width</pc> value can be constrained with <pc dataRefEnd="id18" dataRefStart="id17" id="p9"><pc dataRefEnd="id20" dataRefStart="id19" id="p10">MinWidth</pc></pc> and <pc dataRefEnd="id22" dataRefStart="id21" id="p11"><pc dataRefEnd="id24" dataRefStart="id23" id="p12">MaxWidth</pc></pc>.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Height</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Width</pc> have constraint properties: the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Height</pc> value can be constrained with <pc dataRefEnd="id8" dataRefStart="id7" id="p4"><pc dataRefEnd="id10" dataRefStart="id9" id="p5">MinHeight</pc></pc> and <pc dataRefEnd="id12" dataRefStart="id11" id="p6"><pc dataRefEnd="id14" dataRefStart="id13" id="p7">MaxHeight</pc></pc>, the <pc dataRefEnd="id16" dataRefStart="id15" id="p8">Width</pc> value can be constrained with <pc dataRefEnd="id18" dataRefStart="id17" id="p9"><pc dataRefEnd="id20" dataRefStart="id19" id="p10">MinWidth</pc></pc> and <pc dataRefEnd="id22" dataRefStart="id21" id="p11"><pc dataRefEnd="id24" dataRefStart="id23" id="p12">MaxWidth</pc></pc>.</target>
				</segment>
			</unit>
			<unit id="177" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br208709)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/br208707)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>Also, <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ActualWidth</pc></pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">ActualHeight</pc></pc> are calculated, read-only properties that only contain valid values after a layout pass has completed.</source>
					<target>Also, <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ActualWidth</pc></pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">ActualHeight</pc></pc> are calculated, read-only properties that only contain valid values after a layout pass has completed.</target>
				</segment>
			</unit>
			<unit id="178" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br208718)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/br208751)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>For more info about how the dimensions and constraints or calculated properties interrelate, see Remarks in <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">FrameworkElement.Height</pc></pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">FrameworkElement.Width</pc></pc>.</source>
					<target>For more info about how the dimensions and constraints or calculated properties interrelate, see Remarks in <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">FrameworkElement.Height</pc></pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">FrameworkElement.Width</pc></pc>.</target>
				</segment>
			</unit>
			<unit id="179" translate="yes">
				<segment state="initial">
					<source>Related topics</source>
					<target>Related topics</target>
				</segment>
			</unit>
			<unit id="180" translate="yes">
				<segment state="initial">
					<source>Reference</source>
					<target>Reference</target>
				</segment>
			</unit>
			<unit id="181" translate="yes">
				<segment state="initial">
					<source>FrameworkElement.Height</source>
					<target>FrameworkElement.Height</target>
				</segment>
			</unit>
			<unit id="182" translate="yes">
				<segment state="initial">
					<source>FrameworkElement.Width</source>
					<target>FrameworkElement.Width</target>
				</segment>
			</unit>
			<unit id="183" translate="yes">
				<segment state="initial">
					<source>FrameworkElement.HorizontalAlignment</source>
					<target>FrameworkElement.HorizontalAlignment</target>
				</segment>
			</unit>
			<unit id="184" translate="yes">
				<segment state="initial">
					<source>FrameworkElement.VerticalAlignment</source>
					<target>FrameworkElement.VerticalAlignment</target>
				</segment>
			</unit>
			<unit id="185" translate="yes">
				<segment state="initial">
					<source>FrameworkElement.Margin</source>
					<target>FrameworkElement.Margin</target>
				</segment>
			</unit>
			<unit id="186" translate="yes">
				<segment state="initial">
					<source>Control.Padding</source>
					<target>Control.Padding</target>
				</segment>
			</unit>
		</group>
	</file>
</xliff>