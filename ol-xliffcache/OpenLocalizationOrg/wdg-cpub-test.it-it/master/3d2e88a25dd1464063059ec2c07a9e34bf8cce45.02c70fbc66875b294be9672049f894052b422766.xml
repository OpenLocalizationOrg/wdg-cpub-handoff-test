{"nodes":[{"content":"Create, write, and read a file","pos":[3,33]},{"content":"\\[ Updated for UWP apps on Windows 10.","pos":[36,74]},{"content":"For Windows 8.x articles, see the <bpt id=\"p1\">[</bpt>archive<ept id=\"p1\">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept> \\]","pos":[75,170],"source":" For Windows 8.x articles, see the [archive](http://go.microsoft.com/fwlink/p/?linkid=619132) \\]"},{"content":"Important APIs","pos":[175,189]},{"content":"StorageFolder class","pos":[200,219]},{"content":"StorageFile class","pos":[288,305]},{"content":"FileIO class","pos":[374,386]},{"pos":[449,562],"content":"Read and write a file using a <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>StorageFile<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br227171)</ept> object.","source":"Read and write a file using a [**StorageFile**](https://msdn.microsoft.com/library/windows/apps/br227171) object."},{"pos":[564,657],"content":"<bpt id=\"p1\">**</bpt>Note<ept id=\"p1\">**</ept>  Also see the <bpt id=\"p2\">[</bpt>File access sample<ept id=\"p2\">](http://go.microsoft.com/fwlink/p/?linkid=619995)</ept>.","source":"**Note**  Also see the [File access sample](http://go.microsoft.com/fwlink/p/?linkid=619995)."},{"content":"Prerequisites","pos":[665,678]},{"content":"Understand async programming for Universal Windows Platform (UWP) apps","pos":[687,757]},{"content":"You can learn how to write asynchronous apps in C\\# or Visual Basic, see <bpt id=\"p1\">[</bpt>Call asynchronous APIs in C\\# or Visual Basic<ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/mt187337)</ept>.","pos":[765,944],"source":"You can learn how to write asynchronous apps in C\\# or Visual Basic, see [Call asynchronous APIs in C\\# or Visual Basic](https://msdn.microsoft.com/library/windows/apps/mt187337)."},{"content":"To learn how to write asynchronous apps in C++, see <bpt id=\"p1\">[</bpt>Asynchronous programming in C++<ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/mt187334)</ept>.","pos":[945,1089],"source":" To learn how to write asynchronous apps in C++, see [Asynchronous programming in C++](https://msdn.microsoft.com/library/windows/apps/mt187334)."},{"content":"Know how to get the file that you want to read from, write to, or both","pos":[1097,1167]},{"pos":[1175,1317],"content":"You can learn how to get a file by using a file picker in <bpt id=\"p1\">[</bpt>Open files and folders with a picker<ept id=\"p1\">](quickstart-using-file-and-folder-pickers.md)</ept>.","source":"You can learn how to get a file by using a file picker in [Open files and folders with a picker](quickstart-using-file-and-folder-pickers.md)."},{"content":"Creating a file","pos":[1322,1337]},{"content":"Here's how to create a file in the app's local folder.","pos":[1340,1394]},{"content":"If it already exists, we replace it.","pos":[1395,1431]},{"content":"Writing to a file","pos":[2055,2072]},{"content":"Here's how to write to a writable file on disk using the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>StorageFile<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br227171)</ept> class.","pos":[2075,2214],"source":"Here's how to write to a writable file on disk using the [**StorageFile**](https://msdn.microsoft.com/library/windows/apps/br227171) class."},{"content":"The common first step for each of the ways of writing to a file (unless you're writing to the file immediately after creating it) is to get the file with <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>StorageFolder.GetFileAsync<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br227272)</ept>.","pos":[2215,2460],"source":" The common first step for each of the ways of writing to a file (unless you're writing to the file immediately after creating it) is to get the file with [**StorageFolder.GetFileAsync**](https://msdn.microsoft.com/library/windows/apps/br227272)."},{"content":"Writing text to a file","pos":[2888,2910]},{"pos":[2914,3123],"content":"Write text to your file by calling the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>WriteTextAsync<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/hh701505)</ept> method of the <bpt id=\"p3\">[</bpt><bpt id=\"p4\">**</bpt>FileIO<ept id=\"p4\">**</ept><ept id=\"p3\">](https://msdn.microsoft.com/library/windows/apps/hh701440)</ept> class.","source":"Write text to your file by calling the [**WriteTextAsync**](https://msdn.microsoft.com/library/windows/apps/hh701505) method of the [**FileIO**](https://msdn.microsoft.com/library/windows/apps/hh701440) class."},{"content":"Writing bytes to a file by using a buffer (2 steps)","pos":[3342,3393]},{"pos":[3401,3595],"content":"First, call <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>ConvertStringToBinary<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br241385)</ept> to get a buffer of the bytes (based on an arbitrary string) that you want to write to your file.","source":"First, call [**ConvertStringToBinary**](https://msdn.microsoft.com/library/windows/apps/br241385) to get a buffer of the bytes (based on an arbitrary string) that you want to write to your file."},{"pos":[4058,4296],"content":"Then write the bytes from your buffer to your file by calling the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>WriteBufferAsync<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/hh701490)</ept> method of the <bpt id=\"p3\">[</bpt><bpt id=\"p4\">**</bpt>FileIO<ept id=\"p4\">**</ept><ept id=\"p3\">](https://msdn.microsoft.com/library/windows/apps/hh701440)</ept> class.","source":"Then write the bytes from your buffer to your file by calling the [**WriteBufferAsync**](https://msdn.microsoft.com/library/windows/apps/hh701490) method of the [**FileIO**](https://msdn.microsoft.com/library/windows/apps/hh701440) class."},{"content":"Writing text to a file by using a stream (4 steps)","pos":[4493,4543]},{"content":"First, open the file by calling the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>StorageFile.OpenAsync<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/dn889851)</ept> method.","pos":[4551,4680],"source":"First, open the file by calling the [**StorageFile.OpenAsync**](https://msdn.microsoft.com/library/windows/apps/dn889851) method."},{"content":"It returns a stream of the file's content when the open operation completes.","pos":[4681,4757]},{"content":"Next, get an output stream by calling the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>GetOutputStreamAt<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br241738)</ept> method from the <ph id=\"ph1\">`stream`</ph>.","pos":[4988,5137],"source":"Next, get an output stream by calling the [**GetOutputStreamAt**](https://msdn.microsoft.com/library/windows/apps/br241738) method from the `stream`."},{"content":"Put this in a <bpt id=\"p1\">**</bpt>using<ept id=\"p1\">**</ept> statement to manage the output stream's lifetime.","pos":[5138,5211],"source":" Put this in a **using** statement to manage the output stream's lifetime."},{"pos":[5624,5922],"content":"Now add this code within the existing <bpt id=\"p1\">**</bpt>using<ept id=\"p1\">**</ept> statement to write to the output stream by creating a new <bpt id=\"p2\">[</bpt><bpt id=\"p3\">**</bpt>DataWriter<ept id=\"p3\">**</ept><ept id=\"p2\">](https://msdn.microsoft.com/library/windows/apps/br208154)</ept> object and calling the <bpt id=\"p4\">[</bpt><bpt id=\"p5\">**</bpt>DataWriter.WriteString<ept id=\"p5\">**</ept><ept id=\"p4\">](https://msdn.microsoft.com/library/windows/apps/br241642)</ept> method.","source":"Now add this code within the existing **using** statement to write to the output stream by creating a new [**DataWriter**](https://msdn.microsoft.com/library/windows/apps/br208154) object and calling the [**DataWriter.WriteString**](https://msdn.microsoft.com/library/windows/apps/br241642) method."},{"pos":[6347,6619],"content":"Lastly, add this code (within the inner <bpt id=\"p1\">**</bpt>using<ept id=\"p1\">**</ept> statement) to save the text to your file with <bpt id=\"p2\">[</bpt><bpt id=\"p3\">**</bpt>StoreAsync<ept id=\"p3\">**</ept><ept id=\"p2\">](https://msdn.microsoft.com/library/windows/apps/br208171)</ept> and close the stream with <bpt id=\"p4\">[</bpt><bpt id=\"p5\">**</bpt>FlushAsync<ept id=\"p5\">**</ept><ept id=\"p4\">](https://msdn.microsoft.com/library/windows/apps/br241729)</ept>.","source":"Lastly, add this code (within the inner **using** statement) to save the text to your file with [**StoreAsync**](https://msdn.microsoft.com/library/windows/apps/br208171) and close the stream with [**FlushAsync**](https://msdn.microsoft.com/library/windows/apps/br241729)."},{"content":"Reading from a file","pos":[6835,6854]},{"content":"Here's how to read from a file on disk using the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>StorageFile<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br227171)</ept> class.","pos":[6857,6988],"source":"Here's how to read from a file on disk using the [**StorageFile**](https://msdn.microsoft.com/library/windows/apps/br227171) class."},{"content":"The common first step for each of the ways of reading from a file is to get the file with <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>StorageFolder.GetFileAsync<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br227272)</ept>.","pos":[6989,7170],"source":" The common first step for each of the ways of reading from a file is to get the file with [**StorageFolder.GetFileAsync**](https://msdn.microsoft.com/library/windows/apps/br227272)."},{"content":"Reading text from a file","pos":[7598,7622]},{"pos":[7626,7835],"content":"Read text from your file by calling the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>ReadTextAsync<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/hh701482)</ept> method of the <bpt id=\"p3\">[</bpt><bpt id=\"p4\">**</bpt>FileIO<ept id=\"p4\">**</ept><ept id=\"p3\">](https://msdn.microsoft.com/library/windows/apps/hh701440)</ept> class.","source":"Read text from your file by calling the [**ReadTextAsync**](https://msdn.microsoft.com/library/windows/apps/hh701482) method of the [**FileIO**](https://msdn.microsoft.com/library/windows/apps/hh701440) class."},{"content":"Reading bytes from a file by using a buffer (2 steps)","pos":[8045,8098]},{"pos":[8106,8340],"content":"First, read bytes from your buffer to your file by calling the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>ReadBufferAsync<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/hh701468)</ept> method of the <bpt id=\"p3\">[</bpt><bpt id=\"p4\">**</bpt>FileIO<ept id=\"p4\">**</ept><ept id=\"p3\">](https://msdn.microsoft.com/library/windows/apps/hh701440)</ept> class.","source":"First, read bytes from your buffer to your file by calling the [**ReadBufferAsync**](https://msdn.microsoft.com/library/windows/apps/hh701468) method of the [**FileIO**](https://msdn.microsoft.com/library/windows/apps/hh701440) class."},{"pos":[8547,8701],"content":"Then use a <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>DataReader<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br208119)</ept> object to read first the length of the buffer and then its contents.","source":"Then use a [**DataReader**](https://msdn.microsoft.com/library/windows/apps/br208119) object to read first the length of the buffer and then its contents."},{"content":"Reading text from a file by using a stream (4 steps)","pos":[9063,9115]},{"content":"Open a stream for your file by calling the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>StorageFile.OpenAsync<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/dn889851)</ept> method.","pos":[9123,9259],"source":"Open a stream for your file by calling the [**StorageFile.OpenAsync**](https://msdn.microsoft.com/library/windows/apps/dn889851) method."},{"content":"It returns a stream of the file's content when the operation completes.","pos":[9260,9331]},{"content":"Get the size of the stream to use later.","pos":[9562,9602]},{"content":"Get an input stream by calling the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>GetInputStreamAt<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br241737)</ept> method.","pos":[9717,9840],"source":"Get an input stream by calling the [**GetInputStreamAt**](https://msdn.microsoft.com/library/windows/apps/br241737) method."},{"content":"Put this in a <bpt id=\"p1\">**</bpt>using<ept id=\"p1\">**</ept> statement to manage the stream's lifetime.","pos":[9841,9907],"source":" Put this in a **using** statement to manage the stream's lifetime."},{"content":"Specify 0 when you call <bpt id=\"p1\">**</bpt>GetInputStreamAt<ept id=\"p1\">**</ept> to set the position to the beginning of the stream.","pos":[9908,10004],"source":" Specify 0 when you call **GetInputStreamAt** to set the position to the beginning of the stream."},{"pos":[10305,10677],"content":"Lastly, add this code within the existing <bpt id=\"p1\">**</bpt>using<ept id=\"p1\">**</ept> statement to get a <bpt id=\"p2\">[</bpt><bpt id=\"p3\">**</bpt>DataReader<ept id=\"p3\">**</ept><ept id=\"p2\">](https://msdn.microsoft.com/library/windows/apps/br208119)</ept> object on the stream then read the text by calling <bpt id=\"p4\">[</bpt><bpt id=\"p5\">**</bpt>DataReader.LoadAsync<ept id=\"p5\">**</ept><ept id=\"p4\">](https://msdn.microsoft.com/library/windows/apps/br208135)</ept> and <bpt id=\"p6\">[</bpt><bpt id=\"p7\">**</bpt>DataReader.ReadString<ept id=\"p7\">**</ept><ept id=\"p6\">](https://msdn.microsoft.com/library/windows/apps/br208147)</ept>.","source":"Lastly, add this code within the existing **using** statement to get a [**DataReader**](https://msdn.microsoft.com/library/windows/apps/br208119) object on the stream then read the text by calling [**DataReader.LoadAsync**](https://msdn.microsoft.com/library/windows/apps/br208135) and [**DataReader.ReadString**](https://msdn.microsoft.com/library/windows/apps/br208147)."}],"content":"\n# Create, write, and read a file\n\n\n\\[ Updated for UWP apps on Windows 10. For Windows 8.x articles, see the [archive](http://go.microsoft.com/fwlink/p/?linkid=619132) \\]\n\n\n**Important APIs**\n\n-   [**StorageFolder class**](https://msdn.microsoft.com/library/windows/apps/br227230)\n-   [**StorageFile class**](https://msdn.microsoft.com/library/windows/apps/br227171)\n-   [**FileIO class**](https://msdn.microsoft.com/library/windows/apps/hh701440)\n\nRead and write a file using a [**StorageFile**](https://msdn.microsoft.com/library/windows/apps/br227171) object.\n\n**Note**  Also see the [File access sample](http://go.microsoft.com/fwlink/p/?linkid=619995).\n\n \n\n## Prerequisites\n\n\n-   **Understand async programming for Universal Windows Platform (UWP) apps**\n\n    You can learn how to write asynchronous apps in C\\# or Visual Basic, see [Call asynchronous APIs in C\\# or Visual Basic](https://msdn.microsoft.com/library/windows/apps/mt187337). To learn how to write asynchronous apps in C++, see [Asynchronous programming in C++](https://msdn.microsoft.com/library/windows/apps/mt187334).\n\n-   **Know how to get the file that you want to read from, write to, or both**\n\n    You can learn how to get a file by using a file picker in [Open files and folders with a picker](quickstart-using-file-and-folder-pickers.md).\n\n## Creating a file\n\n\nHere's how to create a file in the app's local folder. If it already exists, we replace it.\n> [!div class=\"tabbedCodeSnippets\"]\n```CSharp\n// Create sample file; replace if exists.\nWindows.Storage.StorageFolder storageFolder =\n    Windows.Storage.ApplicationData.Current.LocalFolder;\nWindows.Storage.StorageFile sampleFile =\n    await storageFolder.CreateFileAsync(\"sample.txt\",\n        Windows.Storage.CreationCollisionOption.ReplaceExisting);\n```\n```vb\n' Create sample file; replace if exists.\nDim storageFolder As StorageFolder = Windows.Storage.ApplicationData.Current.LocalFolder\nDim sampleFile As StorageFile = Await storageFolder.CreateFileAsync(\"sample.txt\", CreationCollisionOption.ReplaceExisting)\n```\n\n## Writing to a file\n\n\nHere's how to write to a writable file on disk using the [**StorageFile**](https://msdn.microsoft.com/library/windows/apps/br227171) class. The common first step for each of the ways of writing to a file (unless you're writing to the file immediately after creating it) is to get the file with [**StorageFolder.GetFileAsync**](https://msdn.microsoft.com/library/windows/apps/br227272).\n> [!div class=\"tabbedCodeSnippets\"]\n```CSharp\nWindows.Storage.StorageFolder storageFolder =\n    Windows.Storage.ApplicationData.Current.LocalFolder;\nWindows.Storage.StorageFile sampleFile =\n    await storageFolder.GetFileAsync(\"sample.txt\");\n```\n```vb\nDim storageFolder As StorageFolder = Windows.Storage.ApplicationData.Current.LocalFolder\nDim sampleFile As StorageFile = Await storageFolder.GetFileAsync(\"sample.txt\")\n```\n\n**Writing text to a file**\n\nWrite text to your file by calling the [**WriteTextAsync**](https://msdn.microsoft.com/library/windows/apps/hh701505) method of the [**FileIO**](https://msdn.microsoft.com/library/windows/apps/hh701440) class.\n> [!div class=\"tabbedCodeSnippets\"]\n```CSharp\nawait Windows.Storage.FileIO.WriteTextAsync(sampleFile, \"Swift as a shadow\");\n```\n```vb\nAwait Windows.Storage.FileIO.WriteTextAsync(sampleFile, \"Swift as a shadow\")\n```\n\n**Writing bytes to a file by using a buffer (2 steps)**\n\n1.  First, call [**ConvertStringToBinary**](https://msdn.microsoft.com/library/windows/apps/br241385) to get a buffer of the bytes (based on an arbitrary string) that you want to write to your file.\n> [!div class=\"tabbedCodeSnippets\"]\n```CSharp\nvar buffer = Windows.Security.Cryptography.CryptographicBuffer.ConvertStringToBinary(\n        \"What fools these mortals be\", Windows.Security.Cryptography.BinaryStringEncoding.Utf8);\n```\n```vb\nDim buffer = Windows.Security.Cryptography.CryptographicBuffer.ConvertStringToBinary(\n                    \"What fools these mortals be\",\n                    Windows.Security.Cryptography.BinaryStringEncoding.Utf8)\n```\n\n2.  Then write the bytes from your buffer to your file by calling the [**WriteBufferAsync**](https://msdn.microsoft.com/library/windows/apps/hh701490) method of the [**FileIO**](https://msdn.microsoft.com/library/windows/apps/hh701440) class.\n> [!div class=\"tabbedCodeSnippets\"]\n```CSharp\nawait Windows.Storage.FileIO.WriteBufferAsync(sampleFile, buffer);\n```\n```vb\nAwait Windows.Storage.FileIO.WriteBufferAsync(sampleFile, buffer)\n```\n\n**Writing text to a file by using a stream (4 steps)**\n\n1.  First, open the file by calling the [**StorageFile.OpenAsync**](https://msdn.microsoft.com/library/windows/apps/dn889851) method. It returns a stream of the file's content when the open operation completes.\n> [!div class=\"tabbedCodeSnippets\"]\n```CSharp\nvar stream = await sampleFile.OpenAsync(Windows.Storage.FileAccessMode.ReadWrite);\n```\n```vb\nDim stream = Await sampleFile.OpenAsync(Windows.Storage.FileAccessMode.ReadWrite)\n```\n\n2.  Next, get an output stream by calling the [**GetOutputStreamAt**](https://msdn.microsoft.com/library/windows/apps/br241738) method from the `stream`. Put this in a **using** statement to manage the output stream's lifetime.\n> [!div class=\"tabbedCodeSnippets\"]\n```CSharp\nusing (var outputStream = stream.GetOutputStreamAt(0))\n    {\n        // We'll add more code here in the next step.\n    }\n    stream.Dispose(); // Or use the stream variable (see previous code snippet) with a using statement as well.\n```\n```vb\nUsing outputStream = stream.GetOutputStreamAt(0)\n\n        ' We'll add more code here in the next step.\n\nEnd Using\n```\n\n3.  Now add this code within the existing **using** statement to write to the output stream by creating a new [**DataWriter**](https://msdn.microsoft.com/library/windows/apps/br208154) object and calling the [**DataWriter.WriteString**](https://msdn.microsoft.com/library/windows/apps/br241642) method.\n> [!div class=\"tabbedCodeSnippets\"]\n```CSharp\nusing (var dataWriter = new Windows.Storage.Streams.DataWriter(outputStream))\n    {\n        dataWriter.WriteString(\"DataWriter has methods to write to various types, such as DataTimeOffset.\");\n    }\n```\n```vb\n    Dim dataWriter As New DataWriter(outputStream)\n\n        dataWriter.WriteString(\"DataWriter has methods to write to various types, such as DataTimeOffset.\")\n```\n\n4.  Lastly, add this code (within the inner **using** statement) to save the text to your file with [**StoreAsync**](https://msdn.microsoft.com/library/windows/apps/br208171) and close the stream with [**FlushAsync**](https://msdn.microsoft.com/library/windows/apps/br241729).\n> [!div class=\"tabbedCodeSnippets\"]\n```CSharp\n    await dataWriter.StoreAsync();\n        await outputStream.FlushAsync(); \n```\n```vb\n    Await dataWriter.StoreAsync()\n        Await outputStream.FlushAsync()\n```\n\n## Reading from a file\n\n\nHere's how to read from a file on disk using the [**StorageFile**](https://msdn.microsoft.com/library/windows/apps/br227171) class. The common first step for each of the ways of reading from a file is to get the file with [**StorageFolder.GetFileAsync**](https://msdn.microsoft.com/library/windows/apps/br227272).\n> [!div class=\"tabbedCodeSnippets\"]\n```CSharp\nWindows.Storage.StorageFolder storageFolder =\n    Windows.Storage.ApplicationData.Current.LocalFolder;\nWindows.Storage.StorageFile sampleFile =\n    await storageFolder.GetFileAsync(\"sample.txt\");\n```\n```vb\nDim storageFolder As StorageFolder = Windows.Storage.ApplicationData.Current.LocalFolder\nDim sampleFile As StorageFile = Await storageFolder.GetFileAsync(\"sample.txt\")\n```\n\n**Reading text from a file**\n\nRead text from your file by calling the [**ReadTextAsync**](https://msdn.microsoft.com/library/windows/apps/hh701482) method of the [**FileIO**](https://msdn.microsoft.com/library/windows/apps/hh701440) class.\n> [!div class=\"tabbedCodeSnippets\"]\n```CSharp\nstring text = await Windows.Storage.FileIO.ReadTextAsync(sampleFile);\n```\n```vb\nDim text As String = Await Windows.Storage.FileIO.ReadTextAsync(sampleFile)\n```\n\n**Reading bytes from a file by using a buffer (2 steps)**\n\n1.  First, read bytes from your buffer to your file by calling the [**ReadBufferAsync**](https://msdn.microsoft.com/library/windows/apps/hh701468) method of the [**FileIO**](https://msdn.microsoft.com/library/windows/apps/hh701440) class.\n> [!div class=\"tabbedCodeSnippets\"]\n```CSharp\nvar buffer = await Windows.Storage.FileIO.ReadBufferAsync(sampleFile);\n```\n```vb\nDim buffer = Await Windows.Storage.FileIO.ReadBufferAsync(sampleFile)\n```\n\n2.  Then use a [**DataReader**](https://msdn.microsoft.com/library/windows/apps/br208119) object to read first the length of the buffer and then its contents.\n> [!div class=\"tabbedCodeSnippets\"]\n```CSharp\nusing (var dataReader = Windows.Storage.Streams.DataReader.FromBuffer(buffer))\n    {\n        string text = dataReader.ReadString(buffer.Length);\n    }\n```\n```vb\nDim dataReader As DataReader = Windows.Storage.Streams.DataReader.FromBuffer(buffer)\n    Dim text As String = dataReader.ReadString(buffer.Length)\n```\n\n**Reading text from a file by using a stream (4 steps)**\n\n1.  Open a stream for your file by calling the [**StorageFile.OpenAsync**](https://msdn.microsoft.com/library/windows/apps/dn889851) method. It returns a stream of the file's content when the operation completes.\n> [!div class=\"tabbedCodeSnippets\"]\n```CSharp\nvar stream = await sampleFile.OpenAsync(Windows.Storage.FileAccessMode.ReadWrite);\n```\n```vb\nDim stream = Await sampleFile.OpenAsync(Windows.Storage.FileAccessMode.ReadWrite)\n```\n\n2.  Get the size of the stream to use later.\n> [!div class=\"tabbedCodeSnippets\"]\n```CSharp\nulong size = stream.Size;\n```\n```vb\nDim size = stream.Size\n```\n\n3.  Get an input stream by calling the [**GetInputStreamAt**](https://msdn.microsoft.com/library/windows/apps/br241737) method. Put this in a **using** statement to manage the stream's lifetime. Specify 0 when you call **GetInputStreamAt** to set the position to the beginning of the stream.\n> [!div class=\"tabbedCodeSnippets\"]\n```CSharp\nusing (var inputStream = stream.GetInputStreamAt(0))\n    {\n        // We'll add more code here in the next step.\n    }\n```\n```vb\nUsing inputStream = stream.GetInputStreamAt(0)\n\n        ' We'll add more code here in the next step.\n\n    End Using\n```\n\n4.  Lastly, add this code within the existing **using** statement to get a [**DataReader**](https://msdn.microsoft.com/library/windows/apps/br208119) object on the stream then read the text by calling [**DataReader.LoadAsync**](https://msdn.microsoft.com/library/windows/apps/br208135) and [**DataReader.ReadString**](https://msdn.microsoft.com/library/windows/apps/br208147).\n> [!div class=\"tabbedCodeSnippets\"]\n```CSharp\nusing (var dataReader = new Windows.Storage.Streams.DataReader(inputStream))\n    {\n        uint numBytesLoaded = await dataReader.LoadAsync((uint)size);\n        string text = dataReader.ReadString(numBytesLoaded);\n    }\n```\n```vb\nDim dataReader As New DataReader(inputStream)\n    Dim numBytesLoaded As UInteger = Await dataReader.LoadAsync(CUInt(size))\n    Dim text As String = dataReader.ReadString(numBytesLoaded)\n```\n\n \n\n \n\n\n\n"}