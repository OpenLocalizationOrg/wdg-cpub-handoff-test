{"nodes":[{"pos":[17,130],"content":"This article explains how to support copy and paste in Universal Windows Platform (UWP) apps using the clipboard.","needQuote":true,"needEscape":true,"nodes":[{"content":"This article explains how to support copy and paste in Universal Windows Platform (UWP) apps using the clipboard.","pos":[0,113]}]},{"pos":[138,152],"content":"Copy and paste","needQuote":true,"needEscape":true,"nodes":[{"content":"Copy and paste","pos":[0,14]}]},{"content":"Copy and paste","pos":[207,221]},{"content":"\\[ Updated for UWP apps on Windows 10.","pos":[223,261]},{"content":"For Windows 8.x articles, see the <bpt id=\"p1\">[</bpt>archive<ept id=\"p1\">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept> \\]","pos":[262,357],"source":" For Windows 8.x articles, see the [archive](http://go.microsoft.com/fwlink/p/?linkid=619132) \\]"},{"content":"This article explains how to support copy and paste in Universal Windows Platform (UWP) apps using the clipboard.","pos":[360,473]},{"content":"Copy and paste is the classic way to exchange data either between apps, or within an app, and almost every app can support clipboard operations to some degree.","pos":[474,633]},{"content":"Check for built-in clipboard support","pos":[638,674]},{"content":"In many cases, you do not need to write code to support clipboard operations.","pos":[677,754]},{"content":"Many of the default XAML controls you can use to create apps already support clipboard operations.","pos":[755,853]},{"content":"For more information about which controls are available, see the <bpt id=\"p1\">[</bpt>controls list<ept id=\"p1\">]</ept><bpt id=\"p2\">[</bpt>ControlsList<ept id=\"p2\">]</ept>.","pos":[854,949],"source":" For more information about which controls are available, see the [controls list][ControlsList]."},{"content":"Get set up","pos":[954,964]},{"content":"First, include the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>Windows.ApplicationModel.DataTransfer<ept id=\"p2\">**</ept><ept id=\"p1\">]</ept><bpt id=\"p3\">[</bpt>DataTransfer<ept id=\"p3\">]</ept> namespace in your app.","pos":[966,1065],"source":"First, include the [**Windows.ApplicationModel.DataTransfer**][DataTransfer] namespace in your app."},{"content":"Then, add an instance of the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>DataPackage<ept id=\"p2\">**</ept><ept id=\"p1\">]</ept><bpt id=\"p3\">[</bpt>DataPackage<ept id=\"p3\">]</ept> object.","pos":[1066,1133],"source":" Then, add an instance of the [**DataPackage**][DataPackage] object."},{"content":"This object contains both the data the user wants to copy and any properties (such as a description) that you want to include.","pos":[1134,1260]},{"content":"Copy and cut","pos":[1460,1472]},{"content":"Copy and cut (also referred to as move) work almost exactly the same.","pos":[1474,1543]},{"content":"Choose which operation you want using the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>DataPackage.RequestedOperation<ept id=\"p2\">**</ept><ept id=\"p1\">]</ept><bpt id=\"p3\">[</bpt>RequestedOperation<ept id=\"p3\">]</ept> property.","pos":[1544,1652],"source":" Choose which operation you want using the [**DataPackage.RequestedOperation**][RequestedOperation] property."},{"content":"Next, you can add the data that a user has selected to the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>DataPackage<ept id=\"p2\">**</ept><ept id=\"p1\">]</ept><bpt id=\"p3\">[</bpt>DataPackage<ept id=\"p3\">]</ept> object.","pos":[1804,1901],"source":"Next, you can add the data that a user has selected to the [**DataPackage**][DataPackage] object."},{"content":"If this data is supported by the <bpt id=\"p1\">**</bpt>DataPackage<ept id=\"p1\">**</ept> class, you can use one of the corresponding methods in the <bpt id=\"p2\">**</bpt>DataPackage<ept id=\"p2\">**</ept> object.","pos":[1902,2033],"source":" If this data is supported by the **DataPackage** class, you can use one of the corresponding methods in the **DataPackage** object."},{"content":"Here's how to add text:","pos":[2034,2057]},{"pos":[2117,2261],"content":"The last step is to add the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>DataPackage<ept id=\"p2\">**</ept><ept id=\"p1\">]</ept><bpt id=\"p3\">[</bpt>DataPackage<ept id=\"p3\">]</ept> to the clipboard by calling the static <bpt id=\"p4\">[</bpt><bpt id=\"p5\">**</bpt>Clipboard.SetContent<ept id=\"p5\">**</ept><ept id=\"p4\">]</ept><bpt id=\"p6\">[</bpt>SetContent<ept id=\"p6\">]</ept> method.","source":"The last step is to add the [**DataPackage**][DataPackage] to the clipboard by calling the static [**Clipboard.SetContent**][SetContent] method."},{"content":"Paste","pos":[2311,2316]},{"content":"To get the contents of the clipboard, call the static [<bpt id=\"p1\">**</bpt>Clipboard.GetContent<ept id=\"p1\">**</ept><bpt id=\"p2\">[</bpt>GetContent<ept id=\"p2\">]</ept> method.","pos":[2318,2417],"source":"To get the contents of the clipboard, call the static [**Clipboard.GetContent**[GetContent] method."},{"content":"This method returns a <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>DataPackageView<ept id=\"p2\">**</ept><ept id=\"p1\">]</ept><bpt id=\"p3\">[</bpt>DataPackageView<ept id=\"p3\">]</ept> that contains the content.","pos":[2418,2505],"source":" This method returns a [**DataPackageView**][DataPackageView] that contains the content."},{"content":"This object is almost identical to a <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>DataPackage<ept id=\"p2\">**</ept><ept id=\"p1\">]</ept><bpt id=\"p3\">[</bpt>DataPackage<ept id=\"p3\">]</ept> object, except that its contents are read-only.","pos":[2506,2621],"source":" This object is almost identical to a [**DataPackage**][DataPackage] object, except that its contents are read-only."},{"content":"With that object, you can use either the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>AvailableFormats<ept id=\"p2\">**</ept><ept id=\"p1\">]</ept><bpt id=\"p3\">[</bpt>AvailableFormats<ept id=\"p3\">]</ept> or the <bpt id=\"p4\">[</bpt><bpt id=\"p5\">**</bpt>Contains<ept id=\"p5\">**</ept><ept id=\"p4\">]</ept><bpt id=\"p6\">[</bpt>Contains<ept id=\"p6\">]</ept> method to identify what formats are available.","pos":[2622,2782],"source":" With that object, you can use either the [**AvailableFormats**][AvailableFormats] or the [**Contains**][Contains] method to identify what formats are available."},{"content":"Then, you can call the corresponding <bpt id=\"p1\">**</bpt>DataPackageView<ept id=\"p1\">**</ept> method to get the data.","pos":[2783,2863],"source":" Then, you can call the corresponding **DataPackageView** method to get the data."},{"content":"Track changes to the clipboard","pos":[3194,3224]},{"content":"In addition to copy and paste commands, you may also want to track clipboard changes.","pos":[3226,3311]},{"content":"Do this by handling the clipboard's <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>Clipboard.ContentChanged<ept id=\"p2\">**</ept><ept id=\"p1\">]</ept><bpt id=\"p3\">[</bpt>ContentChanged<ept id=\"p3\">]</ept> event.","pos":[3312,3401],"source":" Do this by handling the clipboard's [**Clipboard.ContentChanged**][ContentChanged] event."},{"content":"DataTransfer","pos":[3820,3832]},{"content":"DataPackage","pos":[3934,3945]},{"content":"DataPackageView","pos":[4059,4074]},{"content":"DataPackagePropertySet","pos":[4191,4213]},{"content":"DataRequest","pos":[4338,4349]},{"content":"DataRequested","pos":[4463,4476]},{"content":"FailWithDisplayText","pos":[4612,4631]},{"content":"ShowShareUi","pos":[4764,4775]},{"content":"RequestedOperation","pos":[4908,4926]},{"content":"ControlsList","pos":[5059,5071]},{"content":"SetContent","pos":[5149,5159]},{"content":"GetContent","pos":[5287,5297]},{"content":"AvailableFormats","pos":[5424,5440]},{"content":"Contains","pos":[5575,5583]},{"content":"ContentChanged","pos":[5709,5723]}],"content":"---\ndescription: This article explains how to support copy and paste in Universal Windows Platform (UWP) apps using the clipboard.\ntitle: Copy and paste\nms.assetid: E882DC15-E12D-4420-B49D-F495BB484BEE\n---\n#Copy and paste\n\n\\[ Updated for UWP apps on Windows 10. For Windows 8.x articles, see the [archive](http://go.microsoft.com/fwlink/p/?linkid=619132) \\]\n\n\nThis article explains how to support copy and paste in Universal Windows Platform (UWP) apps using the clipboard. Copy and paste is the classic way to exchange data either between apps, or within an app, and almost every app can support clipboard operations to some degree.\n\n## Check for built-in clipboard support\n\n\nIn many cases, you do not need to write code to support clipboard operations. Many of the default XAML controls you can use to create apps already support clipboard operations. For more information about which controls are available, see the [controls list][ControlsList].\n\n## Get set up\n\nFirst, include the [**Windows.ApplicationModel.DataTransfer**][DataTransfer] namespace in your app. Then, add an instance of the [**DataPackage**][DataPackage] object. This object contains both the data the user wants to copy and any properties (such as a description) that you want to include.\n\n<!-- For some reason, the snippets in this file are all inline in the WDCML topic. Suggest moving to VS project with rest of snippets. -->\n```cs\nDataPackage dataPackage = new DataPackage();\n```\n\n## Copy and cut\n\nCopy and cut (also referred to as move) work almost exactly the same. Choose which operation you want using the [**DataPackage.RequestedOperation**][RequestedOperation] property.\n\n```cs\n// copy \ndataPackage.RequestedOperation = DataPackageOperation.Copy;\n// or cut\ndataPackage.RequestedOperation = DataPackageOperation.Move;\n```\n\nNext, you can add the data that a user has selected to the [**DataPackage**][DataPackage] object. If this data is supported by the **DataPackage** class, you can use one of the corresponding methods in the **DataPackage** object. Here's how to add text:\n\n```cs\ndataPackage.SetText(&quot;Hello World!&quot;);\n```\n\nThe last step is to add the [**DataPackage**][DataPackage] to the clipboard by calling the static [**Clipboard.SetContent**][SetContent] method.\n\n```cs\nClipboard.SetContent(dataPackage);\n```\n## Paste\n\nTo get the contents of the clipboard, call the static [**Clipboard.GetContent**[GetContent] method. This method returns a [**DataPackageView**][DataPackageView] that contains the content. This object is almost identical to a [**DataPackage**][DataPackage] object, except that its contents are read-only. With that object, you can use either the [**AvailableFormats**][AvailableFormats] or the [**Contains**][Contains] method to identify what formats are available. Then, you can call the corresponding **DataPackageView** method to get the data.\n\n```cs\nDataPackageView dataPackageView = Clipboard.GetContent();\nif (dataPackageView.Contains(StandardDataFormats.Text))\n{\n    string text = await dataPackageView.GetTextAsync();\n    // To output the text from this example, you need a TextBlock control\n    TextOutput.Text = &quot;Clipboard now contains: &quot; + text;\n}\n```\n\n## Track changes to the clipboard\n\nIn addition to copy and paste commands, you may also want to track clipboard changes. Do this by handling the clipboard's [**Clipboard.ContentChanged**][ContentChanged] event.\n\n```cs\nClipboard.ContentChanged += (s, e) =&gt; \n{\n    DataPackageView dataPackageView = Clipboard.GetContent();\n    if (dataPackageView.Contains(StandardDataFormats.Text))\n    {\n        string text = await dataPackageView.GetTextAsync();\n        // To output the text from this example, you need a TextBlock control\n        TextOutput.Text = &quot;Clipboard now contains: &quot; + text;\n    }\n}\n```\n\n<!-- LINKS --> \n[DataTransfer]: https://msdn.microsoft.com/en-us/library/windows/apps/windows.applicationmodel.datatransfer.aspx \n[DataPackage]: https://msdn.microsoft.com/en-us/library/windows/apps/windows.applicationmodel.datatransfer.datapackage.aspx \n[DataPackageView]: https://msdn.microsoft.com/en-us/library/windows/apps/windows.applicationmodel.datatransfer.datapackageview.aspx\n[DataPackagePropertySet]: https://msdn.microsoft.com/en-us/library/windows/apps/windows.applicationmodel.datatransfer.datapackagepropertyset.aspx \n[DataRequest]: https://msdn.microsoft.com/en-us/library/windows/apps/windows.applicationmodel.datatransfer.datarequest.aspx \n[DataRequested]: https://msdn.microsoft.com/en-us/library/windows/apps/windows.applicationmodel.datatransfer.datatransfermanager.datarequested.aspx \n[FailWithDisplayText]: https://msdn.microsoft.com/en-us/library/windows/apps/windows.applicationmodel.datatransfer.datarequest.failwithdisplaytext.aspx\n[ShowShareUi]: https://msdn.microsoft.com/en-us/library/windows/apps/windows.applicationmodel.datatransfer.datatransfermanager.showshareui.aspx\n[RequestedOperation]: https://msdn.microsoft.com/en-us/library/windows/apps/windows.applicationmodel.datatransfer.datapackage.requestedoperation.aspx \n[ControlsList]: https://msdn.microsoft.com/en-us/library/windows/apps/xaml/mt185406.aspx \n[SetContent]: https://msdn.microsoft.com/en-us/library/windows/apps/xaml/windows.applicationmodel.datatransfer.clipboard.setcontent.aspx \n[GetContent]: https://msdn.microsoft.com/en-us/library/windows/apps/xaml/windows.applicationmodel.datatransfer.clipboard.getcontent.aspx\n[AvailableFormats]: https://msdn.microsoft.com/en-us/library/windows/apps/windows.applicationmodel.datatransfer.datapackageview.availableformats.aspx \n[Contains]: https://msdn.microsoft.com/en-us/library/windows/apps/windows.applicationmodel.datatransfer.datapackageview.contains.aspx\n[ContentChanged]: https://msdn.microsoft.com/en-us/library/windows/apps/xaml/windows.applicationmodel.datatransfer.clipboard.contentchanged.aspx \n\n"}