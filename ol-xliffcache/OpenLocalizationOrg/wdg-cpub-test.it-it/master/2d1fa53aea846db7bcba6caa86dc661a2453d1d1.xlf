<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="it-it" version="2.0" xml:space="preserve" xmlns="urn:oasis:names:tc:xliff:document:2.0">
	<file id="1">
		<mda:metadata>
			<mda:metaGroup>
				<mda:meta type="tool-id">mdxliff</mda:meta>
				<mda:meta type="tool-name">mdxliff</mda:meta>
				<mda:meta type="tool-version">1.0-00ddeee</mda:meta>
				<mda:meta type="tool-company">Microsoft</mda:meta>
			</mda:metaGroup>
		<mda:metaGroup><mda:meta type="olfilehash">2d1fa53aea846db7bcba6caa86dc661a2453d1d1</mda:meta><mda:meta type="olfilepath">wdg-cpub-test\ndolci\devices-sensors\host-card-emulation.md</mda:meta><mda:meta type="oltranslationpriority"></mda:meta><mda:meta type="oltranslationtype">Human Translation</mda:meta><mda:meta type="olskeletonhash">42d0a7575cd10e1da35dc1ca29c1f7e4d556b629</mda:meta><mda:meta type="olxliffhash">728bf4bbf03a511adbf5554280a3a4428070b770</mda:meta></mda:metaGroup></mda:metadata>
		<group id="content">
			<unit id="101" translate="yes">
				<segment state="initial">
					<source>Create an NFC Smart Card app</source>
					<target>Create an NFC Smart Card app</target>
				</segment>
			</unit>
			<unit id="102" translate="yes">
				<segment state="initial">
					<source>\[ Updated for UWP apps on Windows 10.</source>
					<target>\[ Updated for UWP apps on Windows 10.</target>
				</segment>
			</unit>
			<unit id="103" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](http://go.microsoft.com/fwlink/p/?linkid=619132)</data>
				</originalData>
				<segment state="initial">
					<source>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</source>
					<target>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</target>
				</segment>
			</unit>
			<unit id="104" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Important</pc>  This topic applies to Windows 10 Mobile only.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Important</pc>  This topic applies to Windows 10 Mobile only.</target>
				</segment>
			</unit>
			<unit id="105" translate="yes">
				<segment state="initial">
					<source>Windows Phone 8.1 supported NFC card emulation apps using a SIM-based secure element, but that model required secure payment apps to be tightly coupled with mobile-network operators (MNO).</source>
					<target>Windows Phone 8.1 supported NFC card emulation apps using a SIM-based secure element, but that model required secure payment apps to be tightly coupled with mobile-network operators (MNO).</target>
				</segment>
			</unit>
			<unit id="106" translate="yes">
				<segment state="initial">
					<source>This limited the variety of possible payment solutions by other merchants or developers that are not coupled with MNOs.</source>
					<target>This limited the variety of possible payment solutions by other merchants or developers that are not coupled with MNOs.</target>
				</segment>
			</unit>
			<unit id="107" translate="yes">
				<segment state="initial">
					<source>In Windows 10 Mobile, we have introduced a new card emulation technology called, Host Card Emulation (HCE).</source>
					<target>In Windows 10 Mobile, we have introduced a new card emulation technology called, Host Card Emulation (HCE).</target>
				</segment>
			</unit>
			<unit id="108" translate="yes">
				<segment state="initial">
					<source>HCE technology allows your app to directly communicate with an NFC card reader.</source>
					<target>HCE technology allows your app to directly communicate with an NFC card reader.</target>
				</segment>
			</unit>
			<unit id="109" translate="yes">
				<segment state="initial">
					<source>This topic illustrates how Host Card Emulation (HCE) works on Windows 10 Mobile devices and how you can develop an HCE app so that your customers can access your services through their phone instead of a physical card without collaborating with an MNO.</source>
					<target>This topic illustrates how Host Card Emulation (HCE) works on Windows 10 Mobile devices and how you can develop an HCE app so that your customers can access your services through their phone instead of a physical card without collaborating with an MNO.</target>
				</segment>
			</unit>
			<unit id="110" translate="yes">
				<segment state="initial">
					<source>What you need to develop an HCE app</source>
					<target>What you need to develop an HCE app</target>
				</segment>
			</unit>
			<unit id="111" translate="yes">
				<segment state="initial">
					<source>To develop an HCE-based card emulation app for Windows 10 Mobile, you will need to get your development environment setup.</source>
					<target>To develop an HCE-based card emulation app for Windows 10 Mobile, you will need to get your development environment setup.</target>
				</segment>
			</unit>
			<unit id="112" translate="yes">
				<segment state="initial">
					<source>You can get set up by installing Microsoft Visual Studio 2015, which includes the Windows developer tools and the Windows 10 Mobile emulator with NFC emulation support.</source>
					<target>You can get set up by installing Microsoft Visual Studio 2015, which includes the Windows developer tools and the Windows 10 Mobile emulator with NFC emulation support.</target>
				</segment>
			</unit>
			<unit id="113" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/Dn726766)</data>
				</originalData>
				<segment state="initial">
					<source>For more information about getting setup, see, <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Get set up</pc></source>
					<target>For more information about getting setup, see, <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Get set up</pc></target>
				</segment>
			</unit>
			<unit id="114" translate="yes">
				<segment state="initial">
					<source>Optionally, if you want to test with a real Windows 10 Mobile device instead of the included Windows 10 Mobile emulator, you will also need the following items.</source>
					<target>Optionally, if you want to test with a real Windows 10 Mobile device instead of the included Windows 10 Mobile emulator, you will also need the following items.</target>
				</segment>
			</unit>
			<unit id="115" translate="yes">
				<segment state="initial">
					<source>A Windows 10 Mobile device with NFC HCE support.</source>
					<target>A Windows 10 Mobile device with NFC HCE support.</target>
				</segment>
			</unit>
			<unit id="116" translate="yes">
				<segment state="initial">
					<source>Currently, the Lumia 730, 830, 640, and the 640 XL have the hardware to support NFC HCE apps.</source>
					<target>Currently, the Lumia 730, 830, 640, and the 640 XL have the hardware to support NFC HCE apps.</target>
				</segment>
			</unit>
			<unit id="117" translate="yes">
				<segment state="initial">
					<source>A reader terminal that supports protocols ISO/IEC 14443-4 and ISO/IEC 7816-4</source>
					<target>A reader terminal that supports protocols ISO/IEC 14443-4 and ISO/IEC 7816-4</target>
				</segment>
			</unit>
			<unit id="118" translate="yes">
				<segment state="initial">
					<source>Windows 10 Mobile implements an HCE service that provides the following functionalities.</source>
					<target>Windows 10 Mobile implements an HCE service that provides the following functionalities.</target>
				</segment>
			</unit>
			<unit id="119" translate="yes">
				<segment state="initial">
					<source>Apps can register the applet identifiers (AIDs) for the cards they would like to emulate.</source>
					<target>Apps can register the applet identifiers (AIDs) for the cards they would like to emulate.</target>
				</segment>
			</unit>
			<unit id="120" translate="yes">
				<segment state="initial">
					<source>Conflict resolution and routing of the Application Protocol Data Unit (APDU) command and response pairs to one of the registered apps based on the external reader card selection and user preference.</source>
					<target>Conflict resolution and routing of the Application Protocol Data Unit (APDU) command and response pairs to one of the registered apps based on the external reader card selection and user preference.</target>
				</segment>
			</unit>
			<unit id="121" translate="yes">
				<segment state="initial">
					<source>Handling of events and notifications to the apps as a result of user actions.</source>
					<target>Handling of events and notifications to the apps as a result of user actions.</target>
				</segment>
			</unit>
			<unit id="122" translate="yes">
				<segment state="initial">
					<source>Windows 10 supports emulation of smart cards that are based on ISO-DEP (ISO-IEC 14443-4) and communicates using APDUs as defined in the ISO-IEC 7816-4 specification.</source>
					<target>Windows 10 supports emulation of smart cards that are based on ISO-DEP (ISO-IEC 14443-4) and communicates using APDUs as defined in the ISO-IEC 7816-4 specification.</target>
				</segment>
			</unit>
			<unit id="123" translate="yes">
				<segment state="initial">
					<source>Windows 10 supports ISO/IEC 14443-4 Type A technology for HCE apps.</source>
					<target>Windows 10 supports ISO/IEC 14443-4 Type A technology for HCE apps.</target>
				</segment>
			</unit>
			<unit id="124" translate="yes">
				<segment state="initial">
					<source>Type B, type F, and non-ISO-DEP (eg MIFARE) technologies are routed to the SIM by default.</source>
					<target>Type B, type F, and non-ISO-DEP (eg MIFARE) technologies are routed to the SIM by default.</target>
				</segment>
			</unit>
			<unit id="125" translate="yes">
				<segment state="initial">
					<source>Only Windows 10 Mobile devices are enabled with the card emulation feature.</source>
					<target>Only Windows 10 Mobile devices are enabled with the card emulation feature.</target>
				</segment>
			</unit>
			<unit id="126" translate="yes">
				<segment state="initial">
					<source>SIM-based and HCE-based card emulation is not available on other versions of Windows 10.</source>
					<target>SIM-based and HCE-based card emulation is not available on other versions of Windows 10.</target>
				</segment>
			</unit>
			<unit id="127" translate="yes">
				<segment state="initial">
					<source>The architecture for HCE and SIM based card emulation support is shown in the diagram below.</source>
					<target>The architecture for HCE and SIM based card emulation support is shown in the diagram below.</target>
				</segment>
			</unit>
			<unit id="128" translate="yes">
				<segment state="initial">
					<source>App selection and AID routing</source>
					<target>App selection and AID routing</target>
				</segment>
			</unit>
			<unit id="129" translate="yes">
				<segment state="initial">
					<source>To develop an HCE app, you must understand how Windows 10 Mobile devices route AIDs to a specific app because users can install multiple different HCE apps.</source>
					<target>To develop an HCE app, you must understand how Windows 10 Mobile devices route AIDs to a specific app because users can install multiple different HCE apps.</target>
				</segment>
			</unit>
			<unit id="130" translate="yes">
				<segment state="initial">
					<source>Each app can register multiple HCE and SIM-based cards.</source>
					<target>Each app can register multiple HCE and SIM-based cards.</target>
				</segment>
			</unit>
			<unit id="131" translate="yes">
				<segment state="initial">
					<source>Legacy Windows Phone 8.1 apps that are SIM-based will continue to work on Windows 10 Mobile as long as the user chooses the "SIM Card" option as their default payment card in the NFC Setting menu.</source>
					<target>Legacy Windows Phone 8.1 apps that are SIM-based will continue to work on Windows 10 Mobile as long as the user chooses the "SIM Card" option as their default payment card in the NFC Setting menu.</target>
				</segment>
			</unit>
			<unit id="132" translate="yes">
				<segment state="initial">
					<source>This is set by default when turning the device on for the first time.</source>
					<target>This is set by default when turning the device on for the first time.</target>
				</segment>
			</unit>
			<unit id="133" translate="yes">
				<segment state="initial">
					<source>When the user taps their Windows 10 Mobile device to a terminal, the data is automatically routed to the proper app installed on the device.</source>
					<target>When the user taps their Windows 10 Mobile device to a terminal, the data is automatically routed to the proper app installed on the device.</target>
				</segment>
			</unit>
			<unit id="134" translate="yes">
				<segment state="initial">
					<source>This routing is based on the applet IDs (AIDs) which are 5-16 byte identifiers.</source>
					<target>This routing is based on the applet IDs (AIDs) which are 5-16 byte identifiers.</target>
				</segment>
			</unit>
			<unit id="135" translate="yes">
				<segment state="initial">
					<source>During a tap, the external terminal will transmit a SELECT command APDU to specify the AID it would like all subsequent APDU commands to be routed to.</source>
					<target>During a tap, the external terminal will transmit a SELECT command APDU to specify the AID it would like all subsequent APDU commands to be routed to.</target>
				</segment>
			</unit>
			<unit id="136" translate="yes">
				<segment state="initial">
					<source>Subsequent SELECT commands, will change the routing again.</source>
					<target>Subsequent SELECT commands, will change the routing again.</target>
				</segment>
			</unit>
			<unit id="137" translate="yes">
				<segment state="initial">
					<source>Based on the AIDs registered by apps and user settings, the APDU traffic is routed to a specific app, which will send a response APDU.</source>
					<target>Based on the AIDs registered by apps and user settings, the APDU traffic is routed to a specific app, which will send a response APDU.</target>
				</segment>
			</unit>
			<unit id="138" translate="yes">
				<segment state="initial">
					<source>Be aware that a terminal may want to communicate with several different apps during the same tap.</source>
					<target>Be aware that a terminal may want to communicate with several different apps during the same tap.</target>
				</segment>
			</unit>
			<unit id="139" translate="yes">
				<segment state="initial">
					<source>So you must ensure your app's background task exits as quickly as possible when deactivated to make room for another app's background task to respond to the APDU.</source>
					<target>So you must ensure your app's background task exits as quickly as possible when deactivated to make room for another app's background task to respond to the APDU.</target>
				</segment>
			</unit>
			<unit id="140" translate="yes">
				<segment state="initial">
					<source>We will discuss background tasks later in this topic.</source>
					<target>We will discuss background tasks later in this topic.</target>
				</segment>
			</unit>
			<unit id="141" translate="yes">
				<segment state="initial">
					<source>HCE apps must register themselves with particular AIDs they can handle so they will receive APDUs for an AID.</source>
					<target>HCE apps must register themselves with particular AIDs they can handle so they will receive APDUs for an AID.</target>
				</segment>
			</unit>
			<unit id="142" translate="yes">
				<segment state="initial">
					<source>Apps decalre AIDs by using AID groups.</source>
					<target>Apps decalre AIDs by using AID groups.</target>
				</segment>
			</unit>
			<unit id="143" translate="yes">
				<segment state="initial">
					<source>An AID group is conceptually equivalent to an individual physical card.</source>
					<target>An AID group is conceptually equivalent to an individual physical card.</target>
				</segment>
			</unit>
			<unit id="144" translate="yes">
				<segment state="initial">
					<source>For example, one credit card is declared with an AID group and a second credit card from a different bank is declared with a different, second AID group, even though both of them may have the same AID.</source>
					<target>For example, one credit card is declared with an AID group and a second credit card from a different bank is declared with a different, second AID group, even though both of them may have the same AID.</target>
				</segment>
			</unit>
			<unit id="145" translate="yes">
				<segment state="initial">
					<source>Conflict resolution for payment AID groups</source>
					<target>Conflict resolution for payment AID groups</target>
				</segment>
			</unit>
			<unit id="146" translate="yes">
				<segment state="initial">
					<source>When an app registers physical cards (AID groups), it can declare the AID group category as either "Payment" or "Other."</source>
					<target>When an app registers physical cards (AID groups), it can declare the AID group category as either "Payment" or "Other."</target>
				</segment>
			</unit>
			<unit id="147" translate="yes">
				<segment state="initial">
					<source>While there can be multiple payment AID groups registered at any given time, only one of these payment AID groups may be enabled for Tap and Pay at a time, which is selected by the user.</source>
					<target>While there can be multiple payment AID groups registered at any given time, only one of these payment AID groups may be enabled for Tap and Pay at a time, which is selected by the user.</target>
				</segment>
			</unit>
			<unit id="148" translate="yes">
				<segment state="initial">
					<source>This behavior exists because the user expects be in control of consciously choosing a single payment, credit, or debit card to use so they don't pay with a different unintended card when tapping their device to a terminal.</source>
					<target>This behavior exists because the user expects be in control of consciously choosing a single payment, credit, or debit card to use so they don't pay with a different unintended card when tapping their device to a terminal.</target>
				</segment>
			</unit>
			<unit id="149" translate="yes">
				<segment state="initial">
					<source>However, multiple AID groups registered as "Other" can be enabled at the same time without user interaction.</source>
					<target>However, multiple AID groups registered as "Other" can be enabled at the same time without user interaction.</target>
				</segment>
			</unit>
			<unit id="150" translate="yes">
				<segment state="initial">
					<source>This behavior exists because other types of cards like loyalty, coupons, or transit are expected to just work without any effort or prompting whenever they tap their phone.</source>
					<target>This behavior exists because other types of cards like loyalty, coupons, or transit are expected to just work without any effort or prompting whenever they tap their phone.</target>
				</segment>
			</unit>
			<unit id="151" translate="yes">
				<segment state="initial">
					<source>All the AID groups that are registered as "Payment" appear in the list of cards in the NFC Settings page, where the user can select their default payment card.</source>
					<target>All the AID groups that are registered as "Payment" appear in the list of cards in the NFC Settings page, where the user can select their default payment card.</target>
				</segment>
			</unit>
			<unit id="152" translate="yes">
				<segment state="initial">
					<source>When a default payment card is selected, the app that registered this payment AID group becomes the default payment app.</source>
					<target>When a default payment card is selected, the app that registered this payment AID group becomes the default payment app.</target>
				</segment>
			</unit>
			<unit id="153" translate="yes">
				<segment state="initial">
					<source>Default payment apps can enable or disable any of their AID groups without user interaction.</source>
					<target>Default payment apps can enable or disable any of their AID groups without user interaction.</target>
				</segment>
			</unit>
			<unit id="154" translate="yes">
				<segment state="initial">
					<source>If the user declines the default payment app prompt, then the current default payment app (if any) continues to remain as default.</source>
					<target>If the user declines the default payment app prompt, then the current default payment app (if any) continues to remain as default.</target>
				</segment>
			</unit>
			<unit id="155" translate="yes">
				<segment state="initial">
					<source>The following screenshot shows the NFC Settings page.</source>
					<target>The following screenshot shows the NFC Settings page.</target>
				</segment>
			</unit>
			<unit id="156" translate="yes">
				<segment state="initial">
					<source>Using the example screenshot above, if the user changes his default payment card to another card that is not registered by "HCE Application 1," the system creates a confirmation prompt for the user’s consent.</source>
					<target>Using the example screenshot above, if the user changes his default payment card to another card that is not registered by "HCE Application 1," the system creates a confirmation prompt for the user’s consent.</target>
				</segment>
			</unit>
			<unit id="157" translate="yes">
				<segment state="initial">
					<source>However, if the user changes his default payment card to another card that is registered by "HCE Application 1," the system does not create a confirmation prompt for the user, because "HCE Application1" is already the default payment app.</source>
					<target>However, if the user changes his default payment card to another card that is registered by "HCE Application 1," the system does not create a confirmation prompt for the user, because "HCE Application1" is already the default payment app.</target>
				</segment>
			</unit>
			<unit id="158" translate="yes">
				<segment state="initial">
					<source>Conflict resolution for non-payment AID groups</source>
					<target>Conflict resolution for non-payment AID groups</target>
				</segment>
			</unit>
			<unit id="159" translate="yes">
				<segment state="initial">
					<source>Non-payment cards categorized as "Other" do not appear in the NFC settings page.</source>
					<target>Non-payment cards categorized as "Other" do not appear in the NFC settings page.</target>
				</segment>
			</unit>
			<unit id="160" translate="yes">
				<segment state="initial">
					<source>Your app can create, register and enable non-payment AID groups in the same manner as payment AID groups.</source>
					<target>Your app can create, register and enable non-payment AID groups in the same manner as payment AID groups.</target>
				</segment>
			</unit>
			<unit id="161" translate="yes">
				<segment state="initial">
					<source>The main difference is that for non-payment AID groups the emulation category is set to "Other" as opposed to "Payment".</source>
					<target>The main difference is that for non-payment AID groups the emulation category is set to "Other" as opposed to "Payment".</target>
				</segment>
			</unit>
			<unit id="162" translate="yes">
				<segment state="initial">
					<source>After registering the AID group with the system, you need to enable the AID group to receive NFC traffic.</source>
					<target>After registering the AID group with the system, you need to enable the AID group to receive NFC traffic.</target>
				</segment>
			</unit>
			<unit id="163" translate="yes">
				<segment state="initial">
					<source>When you try to enable a non-payment AID group to receive traffic, the user is not prompted for a confirmation unless there is a conflict with one of the AIDs already registered in the system by a different app.</source>
					<target>When you try to enable a non-payment AID group to receive traffic, the user is not prompted for a confirmation unless there is a conflict with one of the AIDs already registered in the system by a different app.</target>
				</segment>
			</unit>
			<unit id="164" translate="yes">
				<segment state="initial">
					<source>If there is a conflict, the user will be prompted with information about which card and it's associated app will be disabled if the user chooses to enable the newly registered AID group.</source>
					<target>If there is a conflict, the user will be prompted with information about which card and it's associated app will be disabled if the user chooses to enable the newly registered AID group.</target>
				</segment>
			</unit>
			<unit id="165" translate="yes">
				<segment state="initial">
					<source>Coexistence with SIM based NFC applications</source>
					<target>Coexistence with SIM based NFC applications</target>
				</segment>
			</unit>
			<unit id="166" translate="yes">
				<segment state="initial">
					<source>In Windows 10 Mobile, the system sets up the NFC controller routing table that is used to make routing decisions at the controller layer.</source>
					<target>In Windows 10 Mobile, the system sets up the NFC controller routing table that is used to make routing decisions at the controller layer.</target>
				</segment>
			</unit>
			<unit id="167" translate="yes">
				<segment state="initial">
					<source>The table contains routing information for the following items.</source>
					<target>The table contains routing information for the following items.</target>
				</segment>
			</unit>
			<unit id="168" translate="yes">
				<segment state="initial">
					<source>Individual AID routes.</source>
					<target>Individual AID routes.</target>
				</segment>
			</unit>
			<unit id="169" translate="yes">
				<segment state="initial">
					<source>Protocol based route (ISO-DEP).</source>
					<target>Protocol based route (ISO-DEP).</target>
				</segment>
			</unit>
			<unit id="170" translate="yes">
				<segment state="initial">
					<source>Technology based routing (NFC-A/B/F).</source>
					<target>Technology based routing (NFC-A/B/F).</target>
				</segment>
			</unit>
			<unit id="171" translate="yes">
				<segment state="initial">
					<source>When an external reader sends a "SELECT AID" command, the NFC controller first checks AID routes in the routing table for a match.</source>
					<target>When an external reader sends a "SELECT AID" command, the NFC controller first checks AID routes in the routing table for a match.</target>
				</segment>
			</unit>
			<unit id="172" translate="yes">
				<segment state="initial">
					<source>If there is no match, it will use the protocol-based route as the default route for ISO-DEP (14443-4-A) traffic.</source>
					<target>If there is no match, it will use the protocol-based route as the default route for ISO-DEP (14443-4-A) traffic.</target>
				</segment>
			</unit>
			<unit id="173" translate="yes">
				<segment state="initial">
					<source>For any other non-ISO-DEP traffic it will use the technology based routing.</source>
					<target>For any other non-ISO-DEP traffic it will use the technology based routing.</target>
				</segment>
			</unit>
			<unit id="174" translate="yes">
				<segment state="initial">
					<source>Windows 10 Mobile provides a menu option "SIM Card" in the NFC Settings page to continue to use legacy Windows Phone 8.1 SIM-based apps, which do not register their AIDs with the system.</source>
					<target>Windows 10 Mobile provides a menu option "SIM Card" in the NFC Settings page to continue to use legacy Windows Phone 8.1 SIM-based apps, which do not register their AIDs with the system.</target>
				</segment>
			</unit>
			<unit id="175" translate="yes">
				<segment state="initial">
					<source>If the user selects "SIM card" as their default payment card, then the ISO-DEP route is set to UICC, for all other selections in the drop-down menu the ISO-DEP route is to the host.</source>
					<target>If the user selects "SIM card" as their default payment card, then the ISO-DEP route is set to UICC, for all other selections in the drop-down menu the ISO-DEP route is to the host.</target>
				</segment>
			</unit>
			<unit id="176" translate="yes">
				<segment state="initial">
					<source>The ISO-DEP route is set to "SIM Card" for devices that have an SE enabled SIM card when the device is booted for the first time with Windows 10 Mobile.</source>
					<target>The ISO-DEP route is set to "SIM Card" for devices that have an SE enabled SIM card when the device is booted for the first time with Windows 10 Mobile.</target>
				</segment>
			</unit>
			<unit id="177" translate="yes">
				<segment state="initial">
					<source>When the user installs an HCE enabled app and that app enables any HCE AID group registrations, the ISO-DEP route will be pointed to the host.</source>
					<target>When the user installs an HCE enabled app and that app enables any HCE AID group registrations, the ISO-DEP route will be pointed to the host.</target>
				</segment>
			</unit>
			<unit id="178" translate="yes">
				<segment state="initial">
					<source>New SIM-based applications need to register the AIDs in the SIM in order for the specific AID routes to be populated in the controller routing table.</source>
					<target>New SIM-based applications need to register the AIDs in the SIM in order for the specific AID routes to be populated in the controller routing table.</target>
				</segment>
			</unit>
			<unit id="179" translate="yes">
				<segment state="initial">
					<source>Creating an HCE based app</source>
					<target>Creating an HCE based app</target>
				</segment>
			</unit>
			<unit id="180" translate="yes">
				<segment state="initial">
					<source>Your HCE app has two parts.</source>
					<target>Your HCE app has two parts.</target>
				</segment>
			</unit>
			<unit id="181" translate="yes">
				<segment state="initial">
					<source>The main foreground app for the user interaction.</source>
					<target>The main foreground app for the user interaction.</target>
				</segment>
			</unit>
			<unit id="182" translate="yes">
				<segment state="initial">
					<source>A background task that is triggered by the system to process APDUs for a given AID.</source>
					<target>A background task that is triggered by the system to process APDUs for a given AID.</target>
				</segment>
			</unit>
			<unit id="183" translate="yes">
				<segment state="initial">
					<source>Because of the extremely tight performance requirements for loading your background task in response to an NFC tap, we recommend that your entire background task be implementing in C++/CX native code (including any dependencies, references, or libraries you depend on) rather than C\# or managed code.</source>
					<target>Because of the extremely tight performance requirements for loading your background task in response to an NFC tap, we recommend that your entire background task be implementing in C++/CX native code (including any dependencies, references, or libraries you depend on) rather than C\# or managed code.</target>
				</segment>
			</unit>
			<unit id="184" translate="yes">
				<segment state="initial">
					<source>While C\# and managed code normally performs well, there is overhead, like loading the .NET CLR, that can be avoided by writing it in C++/CX.</source>
					<target>While C\# and managed code normally performs well, there is overhead, like loading the .NET CLR, that can be avoided by writing it in C++/CX.</target>
				</segment>
			</unit>
			<unit id="185" translate="yes">
				<segment state="initial">
					<source>Create and register your background task</source>
					<target>Create and register your background task</target>
				</segment>
			</unit>
			<unit id="186" translate="yes">
				<segment state="initial">
					<source>You need to create a background task in your HCE app for processing and responding to APDUs routed to it by the system.</source>
					<target>You need to create a background task in your HCE app for processing and responding to APDUs routed to it by the system.</target>
				</segment>
			</unit>
			<unit id="187" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/BR224803)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>During the first time your app is launched, the foreground registers an HCE background task that implements the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">IBackgroundTaskRegistration</pc></pc> interface as shown in the following code.</source>
					<target>During the first time your app is launched, the foreground registers an HCE background task that implements the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">IBackgroundTaskRegistration</pc></pc> interface as shown in the following code.</target>
				</segment>
			</unit>
			<unit id="188" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/Dn608017)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Notice that the task trigger is set to <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SmartCardTriggerType</pc></pc>.</source>
					<target>Notice that the task trigger is set to <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SmartCardTriggerType</pc></pc>.</target>
				</segment>
			</unit>
			<unit id="189" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">EmulatorHostApplicationActivated</pc>.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">EmulatorHostApplicationActivated</pc>.</target>
				</segment>
			</unit>
			<unit id="190" translate="yes">
				<segment state="initial">
					<source>This means that whenever a SELECT AID command APDU is received by the OS resolving to your app, your background task will be launched.</source>
					<target>This means that whenever a SELECT AID command APDU is received by the OS resolving to your app, your background task will be launched.</target>
				</segment>
			</unit>
			<unit id="191" translate="yes">
				<segment state="initial">
					<source>Receive and respond to APDUs</source>
					<target>Receive and respond to APDUs</target>
				</segment>
			</unit>
			<unit id="192" translate="yes">
				<segment state="initial">
					<source>When there is an APDU targeted for your app, the system will launch your background task.</source>
					<target>When there is an APDU targeted for your app, the system will launch your background task.</target>
				</segment>
			</unit>
			<unit id="193" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/Dn894640)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/en-us/library/windows/apps/windows.devices.smartcards.smartcardemulatorapdureceivedeventargs.commandapdu.aspx)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
					<data id="id9">[</data>
					<data id="id10">](https://msdn.microsoft.com/en-us/library/windows/apps/mt634299.aspx)</data>
					<data id="id11">**</data>
					<data id="id12">**</data>
				</originalData>
				<segment state="initial">
					<source>Your background task receives the APDU passed through the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SmartCardEmulatorApduReceivedEventArgs</pc></pc> object’s <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">CommandApdu</pc></pc> property and responds to the APDU using the <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">TryRespondAsync</pc></pc> method of the same object.</source>
					<target>Your background task receives the APDU passed through the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SmartCardEmulatorApduReceivedEventArgs</pc></pc> object’s <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">CommandApdu</pc></pc> property and responds to the APDU using the <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">TryRespondAsync</pc></pc> method of the same object.</target>
				</segment>
			</unit>
			<unit id="194" translate="yes">
				<segment state="initial">
					<source>Consider keeping your background task for light operations for performance reasons.</source>
					<target>Consider keeping your background task for light operations for performance reasons.</target>
				</segment>
			</unit>
			<unit id="195" translate="yes">
				<segment state="initial">
					<source>For example, respond to the APDUs immediately and exit your background task when all processing is complete.</source>
					<target>For example, respond to the APDUs immediately and exit your background task when all processing is complete.</target>
				</segment>
			</unit>
			<unit id="196" translate="yes">
				<segment state="initial">
					<source>Due to the nature of NFC transactions, users tend to hold their device against the reader for only a very short amount of time.</source>
					<target>Due to the nature of NFC transactions, users tend to hold their device against the reader for only a very short amount of time.</target>
				</segment>
			</unit>
			<unit id="197" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/Dn894644)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Your background task will continue to receive traffic from the reader until your connection is deactivated, in which case you will receive a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SmartCardEmulatorConnectionDeactivatedEventArgs</pc></pc> object.</source>
					<target>Your background task will continue to receive traffic from the reader until your connection is deactivated, in which case you will receive a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SmartCardEmulatorConnectionDeactivatedEventArgs</pc></pc> object.</target>
				</segment>
			</unit>
			<unit id="198" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/windows.devices.smartcards.smartcardemulatorconnectiondeactivatedeventargs.reason)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Your connection can be deactivated because of the following reasons as indicated in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SmartCardEmulatorConnectionDeactivatedEventArgs.Reason</pc></pc> property.</source>
					<target>Your connection can be deactivated because of the following reasons as indicated in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SmartCardEmulatorConnectionDeactivatedEventArgs.Reason</pc></pc> property.</target>
				</segment>
			</unit>
			<unit id="199" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>If the connection is deactivated with the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ConnectionLost</pc> value, it means that the user pulled their device away from the reader.</source>
					<target>If the connection is deactivated with the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ConnectionLost</pc> value, it means that the user pulled their device away from the reader.</target>
				</segment>
			</unit>
			<unit id="200" translate="yes">
				<segment state="initial">
					<source>If your app needs the user to tap to the terminal longer, you might want to consider prompting them with feedback.</source>
					<target>If your app needs the user to tap to the terminal longer, you might want to consider prompting them with feedback.</target>
				</segment>
			</unit>
			<unit id="201" translate="yes">
				<segment state="initial">
					<source>You should terminate your background task quickly (by completing your deferral) to ensure if they tap again it won’t be delayed waiting for the previous background task to exit.</source>
					<target>You should terminate your background task quickly (by completing your deferral) to ensure if they tap again it won’t be delayed waiting for the previous background task to exit.</target>
				</segment>
			</unit>
			<unit id="202" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>If the connection is deactivated with the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ConnectionRedirected</pc>, it means that the terminal sent a new SELECT AID command APDU directed to a different AID.</source>
					<target>If the connection is deactivated with the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ConnectionRedirected</pc>, it means that the terminal sent a new SELECT AID command APDU directed to a different AID.</target>
				</segment>
			</unit>
			<unit id="203" translate="yes">
				<segment state="initial">
					<source>In this case, your app should exit the background task immediately (by completing your deferral) to allow another background task to run.</source>
					<target>In this case, your app should exit the background task immediately (by completing your deferral) to allow another background task to run.</target>
				</segment>
			</unit>
			<unit id="204" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/BR224798)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/BR224797)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>The background task should also register for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Canceled event</pc></pc> on <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">IBackgroundTaskInstance interface</pc></pc>, and likewise quickly exit the background task (by completing your deferral) because this event is fired by the system when it is finished with your background task.</source>
					<target>The background task should also register for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Canceled event</pc></pc> on <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">IBackgroundTaskInstance interface</pc></pc>, and likewise quickly exit the background task (by completing your deferral) because this event is fired by the system when it is finished with your background task.</target>
				</segment>
			</unit>
			<unit id="205" translate="yes">
				<segment state="initial">
					<source>Below is code that demonstrates an HCE app background task.</source>
					<target>Below is code that demonstrates an HCE app background task.</target>
				</segment>
			</unit>
			<unit id="206" translate="yes">
				<segment state="initial">
					<source>Create and register AID groups</source>
					<target>Create and register AID groups</target>
				</segment>
			</unit>
			<unit id="207" translate="yes">
				<segment state="initial">
					<source>During the first launch of your application when the card is being provisioned, you will create and register AID groups with the system.</source>
					<target>During the first launch of your application when the card is being provisioned, you will create and register AID groups with the system.</target>
				</segment>
			</unit>
			<unit id="208" translate="yes">
				<segment state="initial">
					<source>The system determines the app that an external reader would like to talk to and route APDUs accordingly based on the registered AIDs and user settings.</source>
					<target>The system determines the app that an external reader would like to talk to and route APDUs accordingly based on the registered AIDs and user settings.</target>
				</segment>
			</unit>
			<unit id="209" translate="yes">
				<segment state="initial">
					<source>Most of the payment cards register for the same AID (which is PPSE AID) along with additional payment network card specific AIDs.</source>
					<target>Most of the payment cards register for the same AID (which is PPSE AID) along with additional payment network card specific AIDs.</target>
				</segment>
			</unit>
			<unit id="210" translate="yes">
				<segment state="initial">
					<source>Each AID group represents a card and when the user enables the card, all AIDs in the group are enabled.</source>
					<target>Each AID group represents a card and when the user enables the card, all AIDs in the group are enabled.</target>
				</segment>
			</unit>
			<unit id="211" translate="yes">
				<segment state="initial">
					<source>Similarly, when the user deactivates the card, all AIDs in the group are disabled.</source>
					<target>Similarly, when the user deactivates the card, all AIDs in the group are disabled.</target>
				</segment>
			</unit>
			<unit id="212" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/Dn910955)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>To register an AID group, you need to create a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SmartCardAppletIdGroup</pc></pc> object and set its properties to reflect that this is an HCE-based payment card.</source>
					<target>To register an AID group, you need to create a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SmartCardAppletIdGroup</pc></pc> object and set its properties to reflect that this is an HCE-based payment card.</target>
				</segment>
			</unit>
			<unit id="213" translate="yes">
				<segment state="initial">
					<source>Your display name should be descriptive to the user because it will show up in the NFC settings menu as well as user prompts.</source>
					<target>Your display name should be descriptive to the user because it will show up in the NFC settings menu as well as user prompts.</target>
				</segment>
			</unit>
			<unit id="214" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/en-us/library/windows/apps/windows.devices.smartcards.smartcardappletidgroup.smartcardemulationcategory.aspx)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
					<data id="id7">[</data>
					<data id="id8">](https://msdn.microsoft.com/library/windows/apps/windows.devices.smartcards.smartcardappletidgroup.smartcardemulationtype)</data>
					<data id="id9">**</data>
					<data id="id10">**</data>
					<data id="id11">**</data>
					<data id="id12">**</data>
				</originalData>
				<segment state="initial">
					<source>For HCE payment cards, the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SmartCardEmulationCategory</pc></pc> property should be set to <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Payment</pc> and the <pc dataRefEnd="id8" dataRefStart="id7" id="p4"><pc dataRefEnd="id10" dataRefStart="id9" id="p5">SmartCardEmulationType</pc></pc> property should be set to <pc dataRefEnd="id12" dataRefStart="id11" id="p6">Host</pc>.</source>
					<target>For HCE payment cards, the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SmartCardEmulationCategory</pc></pc> property should be set to <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Payment</pc> and the <pc dataRefEnd="id8" dataRefStart="id7" id="p4"><pc dataRefEnd="id10" dataRefStart="id9" id="p5">SmartCardEmulationType</pc></pc> property should be set to <pc dataRefEnd="id12" dataRefStart="id11" id="p6">Host</pc>.</target>
				</segment>
			</unit>
			<unit id="215" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/en-us/library/windows/apps/windows.devices.smartcards.smartcardappletidgroup.smartcardemulationcategory.aspx)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
					<data id="id7">[</data>
					<data id="id8">](https://msdn.microsoft.com/library/windows/apps/windows.devices.smartcards.smartcardappletidgroup.smartcardemulationtype)</data>
					<data id="id9">**</data>
					<data id="id10">**</data>
					<data id="id11">**</data>
					<data id="id12">**</data>
				</originalData>
				<segment state="initial">
					<source>For non-payment HCE cards, the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SmartCardEmulationCategory</pc></pc> property should be set to <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Other</pc> and the <pc dataRefEnd="id8" dataRefStart="id7" id="p4"><pc dataRefEnd="id10" dataRefStart="id9" id="p5">SmartCardEmulationType</pc></pc> property should be set to <pc dataRefEnd="id12" dataRefStart="id11" id="p6">Host</pc>.</source>
					<target>For non-payment HCE cards, the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SmartCardEmulationCategory</pc></pc> property should be set to <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Other</pc> and the <pc dataRefEnd="id8" dataRefStart="id7" id="p4"><pc dataRefEnd="id10" dataRefStart="id9" id="p5">SmartCardEmulationType</pc></pc> property should be set to <pc dataRefEnd="id12" dataRefStart="id11" id="p6">Host</pc>.</target>
				</segment>
			</unit>
			<unit id="216" translate="yes">
				<segment state="initial">
					<source>You can include up to 9 AIDs (of length 5-16 bytes each) per AID group.</source>
					<target>You can include up to 9 AIDs (of length 5-16 bytes each) per AID group.</target>
				</segment>
			</unit>
			<unit id="217" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/Dn894656)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/Dn910955registration)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>Use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">RegisterAppletIdGroupAsync</pc></pc> method to register your AID group with the system, which will return a <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">SmartCardAppletIdGroupRegistration</pc></pc> object.</source>
					<target>Use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">RegisterAppletIdGroupAsync</pc></pc> method to register your AID group with the system, which will return a <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">SmartCardAppletIdGroupRegistration</pc></pc> object.</target>
				</segment>
			</unit>
			<unit id="218" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/Dn910955registration_activationpolicy)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source>By default, the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ActivationPolicy</pc></pc> property of the registration object is set to <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Disabled</pc>.</source>
					<target>By default, the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ActivationPolicy</pc></pc> property of the registration object is set to <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Disabled</pc>.</target>
				</segment>
			</unit>
			<unit id="219" translate="yes">
				<segment state="initial">
					<source>This means even though your AIDs are registered with the system, they are not enabled yet and won’t receive traffic.</source>
					<target>This means even though your AIDs are registered with the system, they are not enabled yet and won’t receive traffic.</target>
				</segment>
			</unit>
			<unit id="220" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/Dn910955registration_requestactivationpolicychangeasync)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/Dn910955registration)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>You can enable your registered cards (AID groups) by using the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">RequestActivationPolicyChangeAsync</pc></pc> method of the<pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">SmartCardAppletIdGroupRegistration</pc></pc> class as shown below.</source>
					<target>You can enable your registered cards (AID groups) by using the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">RequestActivationPolicyChangeAsync</pc></pc> method of the<pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">SmartCardAppletIdGroupRegistration</pc></pc> class as shown below.</target>
				</segment>
			</unit>
			<unit id="221" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/Dn910955registration_activationpolicy)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source>Because only a single payment card can be enabled at a time on the system, setting the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ActivationPolicy</pc></pc> of a payment AID group to <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Enabled</pc> is the same as setting the default payment card.</source>
					<target>Because only a single payment card can be enabled at a time on the system, setting the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ActivationPolicy</pc></pc> of a payment AID group to <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Enabled</pc> is the same as setting the default payment card.</target>
				</segment>
			</unit>
			<unit id="222" translate="yes">
				<segment state="initial">
					<source>The user will be prompted to allow this card as a default payment card, regardless of whether there is a default payment card already selected or not.</source>
					<target>The user will be prompted to allow this card as a default payment card, regardless of whether there is a default payment card already selected or not.</target>
				</segment>
			</unit>
			<unit id="223" translate="yes">
				<segment state="initial">
					<source>This statement is not true if your app is already the default payment application, and is merely changing between it’s own AID groups.</source>
					<target>This statement is not true if your app is already the default payment application, and is merely changing between it’s own AID groups.</target>
				</segment>
			</unit>
			<unit id="224" translate="yes">
				<segment state="initial">
					<source>You can register up to 10 AID groups per app.</source>
					<target>You can register up to 10 AID groups per app.</target>
				</segment>
			</unit>
			<unit id="225" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/Dn894654)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>You can query your app’s registered AID groups with the OS and check their activation policy using the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">GetAppletIdGroupRegistrationsAsync</pc></pc> method.</source>
					<target>You can query your app’s registered AID groups with the OS and check their activation policy using the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">GetAppletIdGroupRegistrationsAsync</pc></pc> method.</target>
				</segment>
			</unit>
			<unit id="226" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Users will be prompted when you change the activation policy of a payment card from <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Disabled</pc> to <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Enabled</pc>, only if your app is not already the default payment app.</source>
					<target>Users will be prompted when you change the activation policy of a payment card from <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Disabled</pc> to <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Enabled</pc>, only if your app is not already the default payment app.</target>
				</segment>
			</unit>
			<unit id="227" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Users will only be prompted when you change the activation policy of a non-payment card from <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Disabled</pc> to <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Enabled</pc> if there is an AID conflict.</source>
					<target>Users will only be prompted when you change the activation policy of a non-payment card from <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Disabled</pc> to <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Enabled</pc> if there is an AID conflict.</target>
				</segment>
			</unit>
			<unit id="228" translate="yes">
				<segment state="initial">
					<source>Event notification when activation policy change</source>
					<target>Event notification when activation policy change</target>
				</segment>
			</unit>
			<unit id="229" translate="yes">
				<segment state="initial">
					<source>In your background task, you can register to receive events for when the activation policy of one of your AID group registrations changes outside of your app.</source>
					<target>In your background task, you can register to receive events for when the activation policy of one of your AID group registrations changes outside of your app.</target>
				</segment>
			</unit>
			<unit id="230" translate="yes">
				<segment state="initial">
					<source>For example, the user may change the default payment app through the NFC settings menu from one of your cards to another card hosted by another app.</source>
					<target>For example, the user may change the default payment app through the NFC settings menu from one of your cards to another card hosted by another app.</target>
				</segment>
			</unit>
			<unit id="231" translate="yes">
				<segment state="initial">
					<source>If your app needs to know about this change for internal setup such as updating live tiles, you can receive event notifications for this change and take action in your app accordingly.</source>
					<target>If your app needs to know about this change for internal setup such as updating live tiles, you can receive event notifications for this change and take action in your app accordingly.</target>
				</segment>
			</unit>
			<unit id="232" translate="yes">
				<segment state="initial">
					<source>Foreground override behavior</source>
					<target>Foreground override behavior</target>
				</segment>
			</unit>
			<unit id="233" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/Dn910955registration_activationpolicy)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source>You can change the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ActivationPolicy</pc></pc> of any of your AID group registrations to <pc dataRefEnd="id6" dataRefStart="id5" id="p3">ForegroundOverride</pc> while your app is in the foreground without prompting the user.</source>
					<target>You can change the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ActivationPolicy</pc></pc> of any of your AID group registrations to <pc dataRefEnd="id6" dataRefStart="id5" id="p3">ForegroundOverride</pc> while your app is in the foreground without prompting the user.</target>
				</segment>
			</unit>
			<unit id="234" translate="yes">
				<segment state="initial">
					<source>When the user taps their device to a terminal while your app is in the foreground, the traffic is routed to your app even if none of your payment cards were chosen by the user as their default payment card.</source>
					<target>When the user taps their device to a terminal while your app is in the foreground, the traffic is routed to your app even if none of your payment cards were chosen by the user as their default payment card.</target>
				</segment>
			</unit>
			<unit id="235" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>When you change a card’s activation policy to <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ForegroundOverride</pc>, this change is only temporary until your app leaves the foreground and it will not change the current default payment card set by the user.</source>
					<target>When you change a card’s activation policy to <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ForegroundOverride</pc>, this change is only temporary until your app leaves the foreground and it will not change the current default payment card set by the user.</target>
				</segment>
			</unit>
			<unit id="236" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>You can change the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ActivationPolicy</pc> of your payment or non-payment cards from your foreground app as follows.</source>
					<target>You can change the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ActivationPolicy</pc> of your payment or non-payment cards from your foreground app as follows.</target>
				</segment>
			</unit>
			<unit id="237" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/Dn910955registration_requestactivationpolicychangeasync)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Note that the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">RequestActivationPolicyChangeAsync</pc></pc> method can only be called from a foreground app and cannot be called from a background task.</source>
					<target>Note that the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">RequestActivationPolicyChangeAsync</pc></pc> method can only be called from a foreground app and cannot be called from a background task.</target>
				</segment>
			</unit>
			<unit id="238" translate="yes">
				<segment state="initial">
					<source>Also, you can register an AID group consisting of a single 0-length AID which will cause the system to route all APDUs regardless of the AID and including any command APDUs sent before a SELECT AID command is received.</source>
					<target>Also, you can register an AID group consisting of a single 0-length AID which will cause the system to route all APDUs regardless of the AID and including any command APDUs sent before a SELECT AID command is received.</target>
				</segment>
			</unit>
			<unit id="239" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>However, such an AID group only works while your app is in the foreground because it can only be set to <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ForegroundOverride</pc> and cannot be permanently enabled.</source>
					<target>However, such an AID group only works while your app is in the foreground because it can only be set to <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ForegroundOverride</pc> and cannot be permanently enabled.</target>
				</segment>
			</unit>
			<unit id="240" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/Dn894639)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>Also, this mechanism works both for <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Host</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">UICC</pc> values of the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">SmartCardEmulationType</pc></pc> enumeration to either route all traffic to your HCE background task, or to the SIM card.</source>
					<target>Also, this mechanism works both for <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Host</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">UICC</pc> values of the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">SmartCardEmulationType</pc></pc> enumeration to either route all traffic to your HCE background task, or to the SIM card.</target>
				</segment>
			</unit>
			<unit id="241" translate="yes">
				<segment state="initial">
					<source>Check for NFC and HCE support</source>
					<target>Check for NFC and HCE support</target>
				</segment>
			</unit>
			<unit id="242" translate="yes">
				<segment state="initial">
					<source>Your app should check whether a device has NFC hardware, supports the card emulation feature, and supports host card emulation prior to offering such features to the user.</source>
					<target>Your app should check whether a device has NFC hardware, supports the card emulation feature, and supports host card emulation prior to offering such features to the user.</target>
				</segment>
			</unit>
			<unit id="243" translate="yes">
				<segment state="initial">
					<source>The NFC smart card emulation feature is only enabled on Windows 10 Mobile, so trying to use the smart card emulator APIs in any other versions of Windows 10, will cause errors.</source>
					<target>The NFC smart card emulation feature is only enabled on Windows 10 Mobile, so trying to use the smart card emulator APIs in any other versions of Windows 10, will cause errors.</target>
				</segment>
			</unit>
			<unit id="244" translate="yes">
				<segment state="initial">
					<source>You can check for smart card API support in the following code snippet.</source>
					<target>You can check for smart card API support in the following code snippet.</target>
				</segment>
			</unit>
			<unit id="245" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/Dn608008)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>You can additionally check to see if the device has NFC hardware capable of some form of card emulation by checking if the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SmartCardEmulator.GetDefaultAsync</pc></pc> method returns null.</source>
					<target>You can additionally check to see if the device has NFC hardware capable of some form of card emulation by checking if the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SmartCardEmulator.GetDefaultAsync</pc></pc> method returns null.</target>
				</segment>
			</unit>
			<unit id="246" translate="yes">
				<segment state="initial">
					<source>If it does, then no NFC card emulation is supported on the device.</source>
					<target>If it does, then no NFC card emulation is supported on the device.</target>
				</segment>
			</unit>
			<unit id="247" translate="yes">
				<segment state="initial">
					<source>Support for HCE and AID-based UICC routing is only available on recently launched devices such as the Lumia 730, 830, 640, and 640 XL.</source>
					<target>Support for HCE and AID-based UICC routing is only available on recently launched devices such as the Lumia 730, 830, 640, and 640 XL.</target>
				</segment>
			</unit>
			<unit id="248" translate="yes">
				<segment state="initial">
					<source>Any new NFC capable devices running Windows 10 Mobile and after should support HCE.</source>
					<target>Any new NFC capable devices running Windows 10 Mobile and after should support HCE.</target>
				</segment>
			</unit>
			<unit id="249" translate="yes">
				<segment state="initial">
					<source>Your app can check for HCE support as follows.</source>
					<target>Your app can check for HCE support as follows.</target>
				</segment>
			</unit>
			<unit id="250" translate="yes">
				<segment state="initial">
					<source>Lock screen and screen off behavior</source>
					<target>Lock screen and screen off behavior</target>
				</segment>
			</unit>
			<unit id="251" translate="yes">
				<segment state="initial">
					<source>Windows 10 Mobile has device-level card emulation settings, which can be set by the mobile operator or the manufacturer of the device.</source>
					<target>Windows 10 Mobile has device-level card emulation settings, which can be set by the mobile operator or the manufacturer of the device.</target>
				</segment>
			</unit>
			<unit id="252" translate="yes">
				<segment state="initial">
					<source>By default, "tap to pay" toggle is disabled and the "enablement policy at device level" is set to "Always", unless the MO or OEM overwrites these values.</source>
					<target>By default, "tap to pay" toggle is disabled and the "enablement policy at device level" is set to "Always", unless the MO or OEM overwrites these values.</target>
				</segment>
			</unit>
			<unit id="253" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/Dn608006)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Your application can query the value of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">EnablementPolicy</pc></pc> at device level and take action for each case depending on the desired behavior of your app in each state.</source>
					<target>Your application can query the value of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">EnablementPolicy</pc></pc> at device level and take action for each case depending on the desired behavior of your app in each state.</target>
				</segment>
			</unit>
			<unit id="254" translate="yes">
				<segment state="initial">
					<source>Your app's background task will be launched even if the phone is locked and/or the screen is off only if the external reader selects an AID that resolves to your app.</source>
					<target>Your app's background task will be launched even if the phone is locked and/or the screen is off only if the external reader selects an AID that resolves to your app.</target>
				</segment>
			</unit>
			<unit id="255" translate="yes">
				<segment state="initial">
					<source>You can respond to the commands from the reader in your background task, but if you need any input from the user or if you want to show a message to the user, you can launch your foreground app with some arguments.</source>
					<target>You can respond to the commands from the reader in your background task, but if you need any input from the user or if you want to show a message to the user, you can launch your foreground app with some arguments.</target>
				</segment>
			</unit>
			<unit id="256" translate="yes">
				<segment state="initial">
					<source>Your background task can launch your foreground app with the following behavior.</source>
					<target>Your background task can launch your foreground app with the following behavior.</target>
				</segment>
			</unit>
			<unit id="257" translate="yes">
				<segment state="initial">
					<source>Under the device lock screen (the user will see your foreground app only after she unlocks the device)</source>
					<target>Under the device lock screen (the user will see your foreground app only after she unlocks the device)</target>
				</segment>
			</unit>
			<unit id="258" translate="yes">
				<segment state="initial">
					<source>Above the device lock screen (after the user dismisses your app, the device is still in locked state)</source>
					<target>Above the device lock screen (after the user dismisses your app, the device is still in locked state)</target>
				</segment>
			</unit>
			<unit id="259" translate="yes">
				<segment state="initial">
					<source>AID registration and other updates for SIM based apps</source>
					<target>AID registration and other updates for SIM based apps</target>
				</segment>
			</unit>
			<unit id="260" translate="yes">
				<segment state="initial">
					<source>Card emulation apps that use the SIM as the secure element can register with the Windows service to declare the AIDs supported on the SIM.</source>
					<target>Card emulation apps that use the SIM as the secure element can register with the Windows service to declare the AIDs supported on the SIM.</target>
				</segment>
			</unit>
			<unit id="261" translate="yes">
				<segment state="initial">
					<source>This registration is very similar to an HCE-based app registration.</source>
					<target>This registration is very similar to an HCE-based app registration.</target>
				</segment>
			</unit>
			<unit id="262" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/Dn894639)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>The only difference is the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SmartCardEmulationType</pc></pc>, which should be set to Uicc for SIM-based apps.</source>
					<target>The only difference is the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SmartCardEmulationType</pc></pc>, which should be set to Uicc for SIM-based apps.</target>
				</segment>
			</unit>
			<unit id="263" translate="yes">
				<segment state="initial">
					<source>As the result of the payment card registration, the display name of the card will also be populated in the NFC setting menu.</source>
					<target>As the result of the payment card registration, the display name of the card will also be populated in the NFC setting menu.</target>
				</segment>
			</unit>
			<unit id="264" translate="yes">
				<segment state="initial">
					<source>Important</source>
					<target>Important</target>
				</segment>
			</unit>
			<unit id="265" translate="yes">
				<segment state="initial">
					<source>The legacy binary SMS intercept support in Windows Phone 8.1 has been removed and replaced with new broader SMS support in Windows 10 Mobile, but any legacy Windows Phone 8.1 apps relying on that must update to use the new Windows 10 Mobile SMS APIs.</source>
					<target>The legacy binary SMS intercept support in Windows Phone 8.1 has been removed and replaced with new broader SMS support in Windows 10 Mobile, but any legacy Windows Phone 8.1 apps relying on that must update to use the new Windows 10 Mobile SMS APIs.</target>
				</segment>
			</unit>
		</group>
	</file>
</xliff>