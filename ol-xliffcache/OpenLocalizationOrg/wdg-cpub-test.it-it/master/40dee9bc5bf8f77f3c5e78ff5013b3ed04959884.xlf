<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="it-it" version="2.0" xml:space="preserve" xmlns="urn:oasis:names:tc:xliff:document:2.0">
	<file id="1">
		<mda:metadata>
			<mda:metaGroup>
				<mda:meta type="tool-id">mdxliff</mda:meta>
				<mda:meta type="tool-name">mdxliff</mda:meta>
				<mda:meta type="tool-version">1.0-00ddeee</mda:meta>
				<mda:meta type="tool-company">Microsoft</mda:meta>
			</mda:metaGroup>
		<mda:metaGroup><mda:meta type="olfilehash">40dee9bc5bf8f77f3c5e78ff5013b3ed04959884</mda:meta><mda:meta type="olfilepath">wdg-cpub-test\ndolci1\files\access-the-sd-card.md</mda:meta><mda:meta type="oltranslationpriority"></mda:meta><mda:meta type="oltranslationtype">Human Translation</mda:meta><mda:meta type="olskeletonhash">8079a940c515559b89f42c8211af505ba68b36ae</mda:meta><mda:meta type="olxliffhash">3233d2e11b84f2aff9850b4d8382be1b64455682</mda:meta></mda:metaGroup></mda:metadata>
		<group id="content">
			<unit id="101" translate="yes">
				<segment state="initial">
					<source>Access the SD card</source>
					<target>Access the SD card</target>
				</segment>
			</unit>
			<unit id="102" translate="yes">
				<segment state="initial">
					<source>You can store and access non-essential data on an optional microSD card, especially on low-cost mobile devices that have limited internal storage.</source>
					<target>You can store and access non-essential data on an optional microSD card, especially on low-cost mobile devices that have limited internal storage.</target>
				</segment>
			</unit>
			<unit id="103" translate="yes">
				<segment state="initial">
					<source>Access the SD card</source>
					<target>Access the SD card</target>
				</segment>
			</unit>
			<unit id="104" translate="yes">
				<segment state="initial">
					<source>\[ Updated for UWP apps on Windows 10.</source>
					<target>\[ Updated for UWP apps on Windows 10.</target>
				</segment>
			</unit>
			<unit id="105" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](http://go.microsoft.com/fwlink/p/?linkid=619132)</data>
				</originalData>
				<segment state="initial">
					<source>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</source>
					<target>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</target>
				</segment>
			</unit>
			<unit id="106" translate="yes">
				<segment state="initial">
					<source>You can store and access non-essential data on an optional microSD card, especially on low-cost mobile devices that have limited internal storage.</source>
					<target>You can store and access non-essential data on an optional microSD card, especially on low-cost mobile devices that have limited internal storage.</target>
				</segment>
			</unit>
			<unit id="107" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>In most cases, you have to specify the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">removableStorage</pc> capability in the app manifest file before your app can store and access files on the SD card.</source>
					<target>In most cases, you have to specify the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">removableStorage</pc> capability in the app manifest file before your app can store and access files on the SD card.</target>
				</segment>
			</unit>
			<unit id="108" translate="yes">
				<segment state="initial">
					<source>Typically you also have to register to handle the type of files that your app stores and accesses.</source>
					<target>Typically you also have to register to handle the type of files that your app stores and accesses.</target>
				</segment>
			</unit>
			<unit id="109" translate="yes">
				<segment state="initial">
					<source>You can store and access files on the optional SD card by using the following methods:</source>
					<target>You can store and access files on the optional SD card by using the following methods:</target>
				</segment>
			</unit>
			<unit id="110" translate="yes">
				<segment state="initial">
					<source>File pickers.</source>
					<target>File pickers.</target>
				</segment>
			</unit>
			<unit id="111" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br227346)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.Storage</pc></pc> APIs.</source>
					<target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.Storage</pc></pc> APIs.</target>
				</segment>
			</unit>
			<unit id="112" translate="yes">
				<segment state="initial">
					<source>What you can and can't access on the SD card</source>
					<target>What you can and can't access on the SD card</target>
				</segment>
			</unit>
			<unit id="113" translate="yes">
				<segment state="initial">
					<source>What you can access</source>
					<target>What you can access</target>
				</segment>
			</unit>
			<unit id="114" translate="yes">
				<segment state="initial">
					<source>Your app can only read and write files of file types that the app has registered to handle in the app manifest file.</source>
					<target>Your app can only read and write files of file types that the app has registered to handle in the app manifest file.</target>
				</segment>
			</unit>
			<unit id="115" translate="yes">
				<segment state="initial">
					<source>Your app can also create and manage folders.</source>
					<target>Your app can also create and manage folders.</target>
				</segment>
			</unit>
			<unit id="116" translate="yes">
				<segment state="initial">
					<source>What you can't access</source>
					<target>What you can't access</target>
				</segment>
			</unit>
			<unit id="117" translate="yes">
				<segment state="initial">
					<source>Your app can't see or access system folders and the files that they contain.</source>
					<target>Your app can't see or access system folders and the files that they contain.</target>
				</segment>
			</unit>
			<unit id="118" translate="yes">
				<segment state="initial">
					<source>Your app can't see files that are marked with the Hidden attribute.</source>
					<target>Your app can't see files that are marked with the Hidden attribute.</target>
				</segment>
			</unit>
			<unit id="119" translate="yes">
				<segment state="initial">
					<source>The Hidden attribute is typically used to reduce the risk of deleting data accidentally.</source>
					<target>The Hidden attribute is typically used to reduce the risk of deleting data accidentally.</target>
				</segment>
			</unit>
			<unit id="120" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br227152)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Your app can't see or access the Documents library by using <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">KnownFolders.DocumentsLibrary</pc></pc>.</source>
					<target>Your app can't see or access the Documents library by using <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">KnownFolders.DocumentsLibrary</pc></pc>.</target>
				</segment>
			</unit>
			<unit id="121" translate="yes">
				<segment state="initial">
					<source>However you can access the Documents library on the SD card by traversing the file system.</source>
					<target>However you can access the Documents library on the SD card by traversing the file system.</target>
				</segment>
			</unit>
			<unit id="122" translate="yes">
				<segment state="initial">
					<source>Security and privacy considerations</source>
					<target>Security and privacy considerations</target>
				</segment>
			</unit>
			<unit id="123" translate="yes">
				<segment state="initial">
					<source>When an app saves files in a global location on the SD card, those files are not encrypted so they are typically accessible to other apps.</source>
					<target>When an app saves files in a global location on the SD card, those files are not encrypted so they are typically accessible to other apps.</target>
				</segment>
			</unit>
			<unit id="124" translate="yes">
				<segment state="initial">
					<source>While the SD card is in the device, your files are accessible to other apps that have registered to handle the same file type.</source>
					<target>While the SD card is in the device, your files are accessible to other apps that have registered to handle the same file type.</target>
				</segment>
			</unit>
			<unit id="125" translate="yes">
				<segment state="initial">
					<source>When the SD card is removed from the device and opened from a PC, your files are visible in File Explorer and accessible to other apps.</source>
					<target>When the SD card is removed from the device and opened from a PC, your files are visible in File Explorer and accessible to other apps.</target>
				</segment>
			</unit>
			<unit id="126" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br241621)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>When an app installed on the SD card saves files in its <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">LocalFolder</pc></pc>, however, those files are encrypted and are not accessible to other apps.</source>
					<target>When an app installed on the SD card saves files in its <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">LocalFolder</pc></pc>, however, those files are encrypted and are not accessible to other apps.</target>
				</segment>
			</unit>
			<unit id="127" translate="yes">
				<segment state="initial">
					<source>Requirements for accessing files on the SD card</source>
					<target>Requirements for accessing files on the SD card</target>
				</segment>
			</unit>
			<unit id="128" translate="yes">
				<segment state="initial">
					<source>To access files on the SD card, typically you have to specify the following things.</source>
					<target>To access files on the SD card, typically you have to specify the following things.</target>
				</segment>
			</unit>
			<unit id="129" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>You have to specify the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">removableStorage</pc> capability in the app manifest file.</source>
					<target>You have to specify the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">removableStorage</pc> capability in the app manifest file.</target>
				</segment>
			</unit>
			<unit id="130" translate="yes">
				<segment state="initial">
					<source>You also have to register to handle the file extensions associated with the type of media that you want to access.</source>
					<target>You also have to register to handle the file extensions associated with the type of media that you want to access.</target>
				</segment>
			</unit>
			<unit id="131" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>Use the preceding method also to access media files on the SD card without referencing a known folder like <pc dataRefEnd="id2" dataRefStart="id1" id="p1">KnownFolders.MusicLibrary</pc>, or to access media files that are stored outside of the media library folders.</source>
					<target>Use the preceding method also to access media files on the SD card without referencing a known folder like <pc dataRefEnd="id2" dataRefStart="id1" id="p1">KnownFolders.MusicLibrary</pc>, or to access media files that are stored outside of the media library folders.</target>
				</segment>
			</unit>
			<unit id="132" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source>To access media files stored in the media libraries—Music, Photos, or Videos—by using known folders, you only have to specify the associated capability in the app manifest file—<pc dataRefEnd="id2" dataRefStart="id1" id="p1">musicLibrary</pc>, <pc dataRefEnd="id4" dataRefStart="id3" id="p2">picturesLibrary</pc>, or <pc dataRefEnd="id6" dataRefStart="id5" id="p3">videoLibrary</pc>.</source>
					<target>To access media files stored in the media libraries—Music, Photos, or Videos—by using known folders, you only have to specify the associated capability in the app manifest file—<pc dataRefEnd="id2" dataRefStart="id1" id="p1">musicLibrary</pc>, <pc dataRefEnd="id4" dataRefStart="id3" id="p2">picturesLibrary</pc>, or <pc dataRefEnd="id6" dataRefStart="id5" id="p3">videoLibrary</pc>.</target>
				</segment>
			</unit>
			<unit id="133" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>You do not have to specify the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">removableStorage</pc> capability.</source>
					<target>You do not have to specify the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">removableStorage</pc> capability.</target>
				</segment>
			</unit>
			<unit id="134" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](quickstart-managing-folders-in-the-music-pictures-and-videos-libraries.md)</data>
				</originalData>
				<segment state="initial">
					<source>For more info, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Files and folders in the Music, Pictures, and Videos libraries</pc>.</source>
					<target>For more info, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Files and folders in the Music, Pictures, and Videos libraries</pc>.</target>
				</segment>
			</unit>
			<unit id="135" translate="yes">
				<segment state="initial">
					<source>Accessing files on the SD card</source>
					<target>Accessing files on the SD card</target>
				</segment>
			</unit>
			<unit id="136" translate="yes">
				<segment state="initial">
					<source>Getting a reference to the SD card</source>
					<target>Getting a reference to the SD card</target>
				</segment>
			</unit>
			<unit id="137" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br227158)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/br227230)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">KnownFolders.RemovableDevices</pc></pc> folder is the logical root <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">StorageFolder</pc></pc> for the set of removable devices currently connected to the device.</source>
					<target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">KnownFolders.RemovableDevices</pc></pc> folder is the logical root <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">StorageFolder</pc></pc> for the set of removable devices currently connected to the device.</target>
				</segment>
			</unit>
			<unit id="138" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>If an SD card is present, the first (and only) <pc dataRefEnd="id2" dataRefStart="id1" id="p1">StorageFolder</pc> underneath the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">KnownFolders.RemovableDevices</pc> folder represents the SD card.</source>
					<target>If an SD card is present, the first (and only) <pc dataRefEnd="id2" dataRefStart="id1" id="p1">StorageFolder</pc> underneath the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">KnownFolders.RemovableDevices</pc> folder represents the SD card.</target>
				</segment>
			</unit>
			<unit id="139" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br227230)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Use code like the following to determine whether an SD card is present and to get a reference to it as a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">StorageFolder</pc></pc>.</source>
					<target>Use code like the following to determine whether an SD card is present and to get a reference to it as a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">StorageFolder</pc></pc>.</target>
				</segment>
			</unit>
			<unit id="140" translate="yes">
				<segment state="initial">
					<source>Querying the contents of the SD card</source>
					<target>Querying the contents of the SD card</target>
				</segment>
			</unit>
			<unit id="141" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br227151)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>The SD card can contain many folders and files that aren't recognized as known folders and can't be queried by using a location from <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">KnownFolders</pc></pc>.</source>
					<target>The SD card can contain many folders and files that aren't recognized as known folders and can't be queried by using a location from <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">KnownFolders</pc></pc>.</target>
				</segment>
			</unit>
			<unit id="142" translate="yes">
				<segment state="initial">
					<source>To find files, your app has to enumerate the contents of the card by traversing the file system recursively.</source>
					<target>To find files, your app has to enumerate the contents of the card by traversing the file system recursively.</target>
				</segment>
			</unit>
			<unit id="143" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br227274)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/br227281)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>Use <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">GetFilesAsync (CommonFileQuery.DefaultQuery)</pc></pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">GetFoldersAsync (CommonFolderQuery.DefaultQuery)</pc></pc> to get the contents of the SD card efficiently.</source>
					<target>Use <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">GetFilesAsync (CommonFileQuery.DefaultQuery)</pc></pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">GetFoldersAsync (CommonFolderQuery.DefaultQuery)</pc></pc> to get the contents of the SD card efficiently.</target>
				</segment>
			</unit>
			<unit id="144" translate="yes">
				<segment state="initial">
					<source>We recommend that you use a background thread to traverse the SD card.</source>
					<target>We recommend that you use a background thread to traverse the SD card.</target>
				</segment>
			</unit>
			<unit id="145" translate="yes">
				<segment state="initial">
					<source>An SD card may contain many gigabytes of data.</source>
					<target>An SD card may contain many gigabytes of data.</target>
				</segment>
			</unit>
			<unit id="146" translate="yes">
				<segment state="initial">
					<source>Your app can also require the user to choose specific folders by using the folder picker.</source>
					<target>Your app can also require the user to choose specific folders by using the folder picker.</target>
				</segment>
			</unit>
			<unit id="147" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br227158)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>When you access the file system on the SD card with a path that you derived from <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">KnownFolders.RemovableDevices</pc></pc>, the following methods behave in the following way.</source>
					<target>When you access the file system on the SD card with a path that you derived from <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">KnownFolders.RemovableDevices</pc></pc>, the following methods behave in the following way.</target>
				</segment>
			</unit>
			<unit id="148" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br227273)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">GetFilesAsync</pc></pc> method returns the union of the file extensions that you have registered to handle and the file extensions associated with any media library capabilities that you have specified.</source>
					<target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">GetFilesAsync</pc></pc> method returns the union of the file extensions that you have registered to handle and the file extensions associated with any media library capabilities that you have specified.</target>
				</segment>
			</unit>
			<unit id="149" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br227206)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">GetFileFromPathAsync</pc></pc> method fails if you have not registered to handle the file extension of the file you are trying to access.</source>
					<target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">GetFileFromPathAsync</pc></pc> method fails if you have not registered to handle the file extension of the file you are trying to access.</target>
				</segment>
			</unit>
			<unit id="150" translate="yes">
				<segment state="initial">
					<source>Identifying the individual SD card</source>
					<target>Identifying the individual SD card</target>
				</segment>
			</unit>
			<unit id="151" translate="yes">
				<segment state="initial">
					<source>When the SD card is first mounted, the operating system generates a unique identifier for the card.</source>
					<target>When the SD card is first mounted, the operating system generates a unique identifier for the card.</target>
				</segment>
			</unit>
			<unit id="152" translate="yes">
				<segment state="initial">
					<source>It stores this ID in a file in the WPSystem folder at the root of the card.</source>
					<target>It stores this ID in a file in the WPSystem folder at the root of the card.</target>
				</segment>
			</unit>
			<unit id="153" translate="yes">
				<segment state="initial">
					<source>An app can use this ID to determine whether it recognizes the card.</source>
					<target>An app can use this ID to determine whether it recognizes the card.</target>
				</segment>
			</unit>
			<unit id="154" translate="yes">
				<segment state="initial">
					<source>If an app recognizes the card, the app may be able to postpone certain operations that were completed previously.</source>
					<target>If an app recognizes the card, the app may be able to postpone certain operations that were completed previously.</target>
				</segment>
			</unit>
			<unit id="155" translate="yes">
				<segment state="initial">
					<source>However the contents of the card may have changed since the card was last accessed by the app.</source>
					<target>However the contents of the card may have changed since the card was last accessed by the app.</target>
				</segment>
			</unit>
			<unit id="156" translate="yes">
				<segment state="initial">
					<source>For example, consider an app that indexes ebooks.</source>
					<target>For example, consider an app that indexes ebooks.</target>
				</segment>
			</unit>
			<unit id="157" translate="yes">
				<segment state="initial">
					<source>If the app has previously scanned the whole SD card for ebook files and created an index of the ebooks, it can display the list immediately if the card is reinserted and the app recognizes the card.</source>
					<target>If the app has previously scanned the whole SD card for ebook files and created an index of the ebooks, it can display the list immediately if the card is reinserted and the app recognizes the card.</target>
				</segment>
			</unit>
			<unit id="158" translate="yes">
				<segment state="initial">
					<source>Separately it can start a low-priority background thread to search for new ebooks.</source>
					<target>Separately it can start a low-priority background thread to search for new ebooks.</target>
				</segment>
			</unit>
			<unit id="159" translate="yes">
				<segment state="initial">
					<source>It can also handle a failure to find an ebook that existed previously when the user tries to access the deleted ebook.</source>
					<target>It can also handle a failure to find an ebook that existed previously when the user tries to access the deleted ebook.</target>
				</segment>
			</unit>
			<unit id="160" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>The name of the property that contains this ID is <pc dataRefEnd="id2" dataRefStart="id1" id="p1">WindowsPhone.ExternalStorageId</pc>.</source>
					<target>The name of the property that contains this ID is <pc dataRefEnd="id2" dataRefStart="id1" id="p1">WindowsPhone.ExternalStorageId</pc>.</target>
				</segment>
			</unit>
		</group>
	</file>
</xliff>