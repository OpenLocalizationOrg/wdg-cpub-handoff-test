{"nodes":[{"pos":[11,46],"content":"Basic 3D graphics for DirectX games","needQuote":true,"needEscape":true,"nodes":[{"content":"Basic 3D graphics for DirectX games","pos":[0,35]}]},{"pos":[60,152],"content":"We show how to use DirectX programming to implement the fundamental concepts of 3D graphics.","needQuote":true,"needEscape":true,"nodes":[{"content":"We show how to use DirectX programming to implement the fundamental concepts of 3D graphics.","pos":[0,92]}]},{"content":"Basic 3D graphics for DirectX games","pos":[209,244]},{"content":"\\[ Updated for UWP apps on Windows 10.","pos":[247,285]},{"content":"For Windows 8.x articles, see the <bpt id=\"p1\">[</bpt>archive<ept id=\"p1\">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept> \\]","pos":[286,381],"source":" For Windows 8.x articles, see the [archive](http://go.microsoft.com/fwlink/p/?linkid=619132) \\]"},{"content":"We show how to use DirectX programming to implement the fundamental concepts of 3D graphics.","pos":[383,475]},{"pos":[477,527],"content":"<bpt id=\"p1\">**</bpt>Objective:<ept id=\"p1\">**</ept> Learn to program a 3D graphics app.","source":"**Objective:** Learn to program a 3D graphics app."},{"content":"Prerequisites","pos":[532,545]},{"content":"We assume that you are familiar with C++.","pos":[548,589]},{"content":"You also need basic experience with graphics programming concepts.","pos":[590,656]},{"pos":[658,697],"content":"<bpt id=\"p1\">**</bpt>Total time to complete:<ept id=\"p1\">**</ept> 30 minutes.","source":"**Total time to complete:** 30 minutes."},{"content":"Where to go from here","pos":[702,723]},{"content":"Here, we talk about how to develop 3D graphics with DirectX and C++\\\\Cx.","pos":[726,798]},{"content":"This five-part tutorial introduces you to the <bpt id=\"p1\">[</bpt>Direct3D<ept id=\"p1\">](https://msdn.microsoft.com/library/windows/desktop/hh309466)</ept> API and the concepts and code that are also used in many of the other DirectX samples.","pos":[799,1003],"source":" This five-part tutorial introduces you to the [Direct3D](https://msdn.microsoft.com/library/windows/desktop/hh309466) API and the concepts and code that are also used in many of the other DirectX samples."},{"content":"These parts build upon each other, from configuring DirectX for your UWP C++ app to texturing primitives and adding effects.","pos":[1004,1128]},{"content":"<bpt id=\"p1\">**</bpt>Note<ept id=\"p1\">**</ept>  This tutorial uses a right-handed coordinate system with column vectors.","pos":[1132,1214],"source":"**Note**  This tutorial uses a right-handed coordinate system with column vectors."},{"content":"Many DirectX samples and apps use a left-handed coordinate system with row vectors.","pos":[1215,1298]},{"content":"For a more complete graphics math solution and one that supports a left-handed coordinate system with row vectors, consider using <bpt id=\"p1\">[</bpt>DirectXMath<ept id=\"p1\">](https://msdn.microsoft.com/library/windows/desktop/hh437833)</ept>.","pos":[1299,1504],"source":" For a more complete graphics math solution and one that supports a left-handed coordinate system with row vectors, consider using [DirectXMath](https://msdn.microsoft.com/library/windows/desktop/hh437833)."},{"content":"For more info, see <bpt id=\"p1\">[</bpt>Using DirectXMath with Direct3D<ept id=\"p1\">](https://msdn.microsoft.com/library/windows/desktop/ff729728#Use_DXMath_with_D3D)</ept>.","pos":[1505,1639],"source":" For more info, see [Using DirectXMath with Direct3D](https://msdn.microsoft.com/library/windows/desktop/ff729728#Use_DXMath_with_D3D)."},{"content":"We show you how to:","pos":[1644,1663]},{"pos":[1669,1791],"content":"Initialize <bpt id=\"p1\">[</bpt>Direct3D<ept id=\"p1\">](https://msdn.microsoft.com/library/windows/desktop/hh309466)</ept> interfaces by using the Windows Runtime","source":"Initialize [Direct3D](https://msdn.microsoft.com/library/windows/desktop/hh309466) interfaces by using the Windows Runtime"},{"content":"Apply per-vertex shader operations","pos":[1796,1830]},{"content":"Set up the geometry","pos":[1835,1854]},{"content":"Rasterize the scene (flattening the 3D scene to a 2D projection)","pos":[1859,1923]},{"content":"Cull the hidden surfaces","pos":[1928,1952]},{"content":"Note","pos":[1958,1962]},{"content":"This article is for Windows 10 developers writing Universal Windows Platform (UWP) apps.","pos":[1967,2055]},{"content":"If you’re developing for Windows 8.x or Windows Phone 8.x, see the <bpt id=\"p1\">[</bpt>archived documentation<ept id=\"p1\">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept>.","pos":[2056,2197],"source":" If you’re developing for Windows 8.x or Windows Phone 8.x, see the [archived documentation](http://go.microsoft.com/fwlink/p/?linkid=619132)."},{"content":"Next, we create a Direct3D device, swap chain, and render-target view, and present the rendered image to the display.","pos":[2202,2319]},{"content":"Quickstart: setting up DirectX resources and displaying an image","pos":[2322,2386]},{"content":"Related topics","pos":[2425,2439]},{"content":"Direct3D 11 Graphics","pos":[2445,2465]},{"content":"DXGI","pos":[2531,2535]},{"content":"HLSL","pos":[2601,2605]}],"content":"---\ntitle: Basic 3D graphics for DirectX games\ndescription: We show how to use DirectX programming to implement the fundamental concepts of 3D graphics.\nms.assetid: 2989c91f-7b45-7377-4e83-9daa0325e92e\n---\n\n# Basic 3D graphics for DirectX games\n\n\n\\[ Updated for UWP apps on Windows 10. For Windows 8.x articles, see the [archive](http://go.microsoft.com/fwlink/p/?linkid=619132) \\]\n\nWe show how to use DirectX programming to implement the fundamental concepts of 3D graphics.\n\n**Objective:** Learn to program a 3D graphics app.\n\n## Prerequisites\n\n\nWe assume that you are familiar with C++. You also need basic experience with graphics programming concepts.\n\n**Total time to complete:** 30 minutes.\n\n## Where to go from here\n\n\nHere, we talk about how to develop 3D graphics with DirectX and C++\\\\Cx. This five-part tutorial introduces you to the [Direct3D](https://msdn.microsoft.com/library/windows/desktop/hh309466) API and the concepts and code that are also used in many of the other DirectX samples. These parts build upon each other, from configuring DirectX for your UWP C++ app to texturing primitives and adding effects.\n\n> **Note**  This tutorial uses a right-handed coordinate system with column vectors. Many DirectX samples and apps use a left-handed coordinate system with row vectors. For a more complete graphics math solution and one that supports a left-handed coordinate system with row vectors, consider using [DirectXMath](https://msdn.microsoft.com/library/windows/desktop/hh437833). For more info, see [Using DirectXMath with Direct3D](https://msdn.microsoft.com/library/windows/desktop/ff729728#Use_DXMath_with_D3D).\n\n \n\nWe show you how to:\n\n-   Initialize [Direct3D](https://msdn.microsoft.com/library/windows/desktop/hh309466) interfaces by using the Windows Runtime\n-   Apply per-vertex shader operations\n-   Set up the geometry\n-   Rasterize the scene (flattening the 3D scene to a 2D projection)\n-   Cull the hidden surfaces\n\n> **Note**  \nThis article is for Windows 10 developers writing Universal Windows Platform (UWP) apps. If you’re developing for Windows 8.x or Windows Phone 8.x, see the [archived documentation](http://go.microsoft.com/fwlink/p/?linkid=619132).\n\n \n\nNext, we create a Direct3D device, swap chain, and render-target view, and present the rendered image to the display.\n\n[Quickstart: setting up DirectX resources and displaying an image](setting-up-directx-resources.md)\n\n## Related topics\n\n\n* [Direct3D 11 Graphics](https://msdn.microsoft.com/library/windows/desktop/ff476080)\n* [DXGI](https://msdn.microsoft.com/library/windows/desktop/hh404534)\n* [HLSL](https://msdn.microsoft.com/library/windows/desktop/bb509561)\n\n \n\n \n\n\n\n\n"}