<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="it-it" version="2.0" xml:space="preserve" xmlns="urn:oasis:names:tc:xliff:document:2.0">
	<file id="1">
		<mda:metadata>
			<mda:metaGroup>
				<mda:meta type="tool-id">mdxliff</mda:meta>
				<mda:meta type="tool-name">mdxliff</mda:meta>
				<mda:meta type="tool-version">1.0-00ddeee</mda:meta>
				<mda:meta type="tool-company">Microsoft</mda:meta>
			</mda:metaGroup>
		<mda:metaGroup><mda:meta type="olfilehash">0464a6230368dd19b9f88b603511416820d2e842</mda:meta><mda:meta type="olfilepath">wdg-cpub-test\ndolci2\launch-resume\handle-app-prelaunch.md</mda:meta><mda:meta type="oltranslationpriority"></mda:meta><mda:meta type="oltranslationtype">Human Translation</mda:meta><mda:meta type="olskeletonhash">8dd63dca2d6f6a170e003b2c15dd33c7fb3ef225</mda:meta><mda:meta type="olxliffhash">6dadb43c4dca5e570b12c23954ce454ff45e0db5</mda:meta></mda:metaGroup></mda:metadata>
		<group id="content">
			<unit id="101" translate="yes">
				<segment state="initial">
					<source>Handle app prelaunch</source>
					<target>Handle app prelaunch</target>
				</segment>
			</unit>
			<unit id="102" translate="yes">
				<segment state="initial">
					<source>Learn how to handle app prelaunch by overriding the OnLaunched method.</source>
					<target>Learn how to handle app prelaunch by overriding the OnLaunched method.</target>
				</segment>
			</unit>
			<unit id="103" translate="yes">
				<segment state="initial">
					<source>Handle app prelaunch</source>
					<target>Handle app prelaunch</target>
				</segment>
			</unit>
			<unit id="104" translate="yes">
				<segment state="initial">
					<source>\[ Updated for UWP apps on Windows 10.</source>
					<target>\[ Updated for UWP apps on Windows 10.</target>
				</segment>
			</unit>
			<unit id="105" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](http://go.microsoft.com/fwlink/p/?linkid=619132)</data>
				</originalData>
				<segment state="initial">
					<source>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</source>
					<target>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</target>
				</segment>
			</unit>
			<unit id="106" translate="yes">
				<segment state="initial">
					<source>Important APIs</source>
					<target>Important APIs</target>
				</segment>
			</unit>
			<unit id="107" translate="yes">
				<segment state="initial">
					<source>OnLaunched</source>
					<target>OnLaunched</target>
				</segment>
			</unit>
			<unit id="108" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br242335)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Learn how to handle app prelaunch by overriding the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">OnLaunched</pc></pc> method.</source>
					<target>Learn how to handle app prelaunch by overriding the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">OnLaunched</pc></pc> method.</target>
				</segment>
			</unit>
			<unit id="109" translate="yes">
				<segment state="initial">
					<source>Introduction</source>
					<target>Introduction</target>
				</segment>
			</unit>
			<unit id="110" translate="yes">
				<segment state="initial">
					<source>When available system resources allow, the startup performance of Windows Store apps is improved by proactively launching the user’s most frequently used apps in the background.</source>
					<target>When available system resources allow, the startup performance of Windows Store apps is improved by proactively launching the user’s most frequently used apps in the background.</target>
				</segment>
			</unit>
			<unit id="111" translate="yes">
				<segment state="initial">
					<source>A prelaunched app is put into the suspended state shortly after it is launched.</source>
					<target>A prelaunched app is put into the suspended state shortly after it is launched.</target>
				</segment>
			</unit>
			<unit id="112" translate="yes">
				<segment state="initial">
					<source>When the user invokes the app, the app is resumed by bringing it from the suspended state to the running state--which is faster than launching the app cold.</source>
					<target>When the user invokes the app, the app is resumed by bringing it from the suspended state to the running state--which is faster than launching the app cold.</target>
				</segment>
			</unit>
			<unit id="113" translate="yes">
				<segment state="initial">
					<source>Prior to Windows 10, apps did not automatically take advantage of prelaunch.</source>
					<target>Prior to Windows 10, apps did not automatically take advantage of prelaunch.</target>
				</segment>
			</unit>
			<unit id="114" translate="yes">
				<segment state="initial">
					<source>Starting in Windows 10, all Universal Windows Platform (UWP) apps automatically take advantage of prelaunch.</source>
					<target>Starting in Windows 10, all Universal Windows Platform (UWP) apps automatically take advantage of prelaunch.</target>
				</segment>
			</unit>
			<unit id="115" translate="yes">
				<segment state="initial">
					<source>Most apps should work with prelaunch without any change.</source>
					<target>Most apps should work with prelaunch without any change.</target>
				</segment>
			</unit>
			<unit id="116" translate="yes">
				<segment state="initial">
					<source>However, some types of apps may need to change their startup behavior to work well with prelaunch.</source>
					<target>However, some types of apps may need to change their startup behavior to work well with prelaunch.</target>
				</segment>
			</unit>
			<unit id="117" translate="yes">
				<segment state="initial">
					<source>For example, a messaging app that changes the users's online visibility during startup, or a game which assumes the user is present and displays elaborate visuals when the app starts up.</source>
					<target>For example, a messaging app that changes the users's online visibility during startup, or a game which assumes the user is present and displays elaborate visuals when the app starts up.</target>
				</segment>
			</unit>
			<unit id="118" translate="yes">
				<segment state="initial">
					<source>Prelaunch and app lifecycle</source>
					<target>Prelaunch and app lifecycle</target>
				</segment>
			</unit>
			<unit id="119" translate="yes">
				<segment state="initial">
					<source>Once an app is prelaunched, it soon enters the suspended state.</source>
					<target>Once an app is prelaunched, it soon enters the suspended state.</target>
				</segment>
			</unit>
			<unit id="120" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](suspend-an-app.md)</data>
				</originalData>
				<segment state="initial">
					<source>(see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Handle app suspend</pc>).</source>
					<target>(see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Handle app suspend</pc>).</target>
				</segment>
			</unit>
			<unit id="121" translate="yes">
				<segment state="initial">
					<source>Detect and handle prelaunch</source>
					<target>Detect and handle prelaunch</target>
				</segment>
			</unit>
			<unit id="122" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn263740)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Apps receive the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">LaunchActivatedEventArgs.PrelaunchActivated</pc></pc> flag during activation.</source>
					<target>Apps receive the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">LaunchActivatedEventArgs.PrelaunchActivated</pc></pc> flag during activation.</target>
				</segment>
			</unit>
			<unit id="123" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br242335)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Use this flag to determine whether to perform operations that should only be performed when the user explicitly launches the app as shown in the following excerpt from<pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Application.OnLaunched</pc></pc>.</source>
					<target>Use this flag to determine whether to perform operations that should only be performed when the user explicitly launches the app as shown in the following excerpt from<pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Application.OnLaunched</pc></pc>.</target>
				</segment>
			</unit>
			<unit id="124" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">[</data>
					<data id="id4">](https://msdn.microsoft.com/library/windows/apps/dn263740)</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Tip</pc>  If you wish to opt-out of prelaunch, check the <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">LaunchActivatedEventArgs.PrelaunchActivated</pc></pc> flag.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Tip</pc>  If you wish to opt-out of prelaunch, check the <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">LaunchActivatedEventArgs.PrelaunchActivated</pc></pc> flag.</target>
				</segment>
			</unit>
			<unit id="125" translate="yes">
				<segment state="initial">
					<source>If it is set, return from OnLaunched() before doing any work to create a frame or activate the window.</source>
					<target>If it is set, return from OnLaunched() before doing any work to create a frame or activate the window.</target>
				</segment>
			</unit>
			<unit id="126" translate="yes">
				<segment state="initial">
					<source>Use the VisibilityChanged event</source>
					<target>Use the VisibilityChanged event</target>
				</segment>
			</unit>
			<unit id="127" translate="yes">
				<segment state="initial">
					<source>Apps activated by prelaunch are not visible to the user.</source>
					<target>Apps activated by prelaunch are not visible to the user.</target>
				</segment>
			</unit>
			<unit id="128" translate="yes">
				<segment state="initial">
					<source>They become visible when the user switches to them.</source>
					<target>They become visible when the user switches to them.</target>
				</segment>
			</unit>
			<unit id="129" translate="yes">
				<segment state="initial">
					<source>You may want to delay certain operations until your app's main window becomes visible.</source>
					<target>You may want to delay certain operations until your app's main window becomes visible.</target>
				</segment>
			</unit>
			<unit id="130" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/hh702458)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>For example, if your app displays a list of what's new items from a feed, you could update the list during the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">VisibilityChanged</pc></pc> event rather than rely on a list that was built when the app was prelaunched that may be stale by the time the user activates the app.</source>
					<target>For example, if your app displays a list of what's new items from a feed, you could update the list during the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">VisibilityChanged</pc></pc> event rather than rely on a list that was built when the app was prelaunched that may be stale by the time the user activates the app.</target>
				</segment>
			</unit>
			<unit id="131" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>The following code handles the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">VisibilityChanged</pc> event for <pc dataRefEnd="id4" dataRefStart="id3" id="p2">MainPage</pc>:</source>
					<target>The following code handles the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">VisibilityChanged</pc> event for <pc dataRefEnd="id4" dataRefStart="id3" id="p2">MainPage</pc>:</target>
				</segment>
			</unit>
			<unit id="132" translate="yes">
				<segment state="initial">
					<source>Guidance</source>
					<target>Guidance</target>
				</segment>
			</unit>
			<unit id="133" translate="yes">
				<segment state="initial">
					<source>Apps should not perform long running operations during prelaunch because the app will terminate if it can't be suspended quickly.</source>
					<target>Apps should not perform long running operations during prelaunch because the app will terminate if it can't be suspended quickly.</target>
				</segment>
			</unit>
			<unit id="134" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br242335)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Apps should not initiate audio playback from <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Application.OnLaunched</pc></pc> when the app is prelaunched because the app won't be visible and it won't be apparent why there is audio playing.</source>
					<target>Apps should not initiate audio playback from <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Application.OnLaunched</pc></pc> when the app is prelaunched because the app won't be visible and it won't be apparent why there is audio playing.</target>
				</segment>
			</unit>
			<unit id="135" translate="yes">
				<segment state="initial">
					<source>Apps should not perform any operations during launch which assume that the app is visible to the user, or assume that the app was explicitly launched by the user.</source>
					<target>Apps should not perform any operations during launch which assume that the app is visible to the user, or assume that the app was explicitly launched by the user.</target>
				</segment>
			</unit>
			<unit id="136" translate="yes">
				<segment state="initial">
					<source>Because an app can now be launched in the background without explicit user action, developers should consider the privacy, user experience and performance implications.</source>
					<target>Because an app can now be launched in the background without explicit user action, developers should consider the privacy, user experience and performance implications.</target>
				</segment>
			</unit>
			<unit id="137" translate="yes">
				<segment state="initial">
					<source>An example privacy consideration is when a social app should change the user state to online.</source>
					<target>An example privacy consideration is when a social app should change the user state to online.</target>
				</segment>
			</unit>
			<unit id="138" translate="yes">
				<segment state="initial">
					<source>It should wait until the user switches to the app instead of changing the status when the app is prelaunched.</source>
					<target>It should wait until the user switches to the app instead of changing the status when the app is prelaunched.</target>
				</segment>
			</unit>
			<unit id="139" translate="yes">
				<segment state="initial">
					<source>An example user experience consideration is that if you have an app, such as a game, that displays an introductory sequence when it is launched, you might delay the introductory sequence until the user switches to the app.</source>
					<target>An example user experience consideration is that if you have an app, such as a game, that displays an introductory sequence when it is launched, you might delay the introductory sequence until the user switches to the app.</target>
				</segment>
			</unit>
			<unit id="140" translate="yes">
				<segment state="initial">
					<source>An example performance implication is that you might wait until the user switches to the app to retrieve the current weather information instead of loading it when the app is prelaunched and then need to load it again when the app becomes visible to ensure that the information is current.</source>
					<target>An example performance implication is that you might wait until the user switches to the app to retrieve the current weather information instead of loading it when the app is prelaunched and then need to load it again when the app becomes visible to ensure that the information is current.</target>
				</segment>
			</unit>
			<unit id="141" translate="yes">
				<segment state="initial">
					<source>If your app clears its Live Tile when launched, defer this until the visibility changed event.</source>
					<target>If your app clears its Live Tile when launched, defer this until the visibility changed event.</target>
				</segment>
			</unit>
			<unit id="142" translate="yes">
				<segment state="initial">
					<source>Telemetry for your app should distinguish between normal tile activations and prelaunch activations so that you can identify the scenario where problems occur.</source>
					<target>Telemetry for your app should distinguish between normal tile activations and prelaunch activations so that you can identify the scenario where problems occur.</target>
				</segment>
			</unit>
			<unit id="143" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">&amp;gt;</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">&amp;gt;</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>If you have Microsoft Visual Studio 2015 Update 1 and Windows 10, Version 1511, you can simulate prelaunch for App your app in Visual Studio 2015 by choosing <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Debug</pc> <ph dataRef="id3" id="ph1" /> <pc dataRefEnd="id5" dataRefStart="id4" id="p2">Other Debug Targets</pc> <ph dataRef="id6" id="ph2" /> <pc dataRefEnd="id8" dataRefStart="id7" id="p3">Debug Windows Universal App PreLaunch</pc>.</source>
					<target>If you have Microsoft Visual Studio 2015 Update 1 and Windows 10, Version 1511, you can simulate prelaunch for App your app in Visual Studio 2015 by choosing <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Debug</pc> <ph dataRef="id3" id="ph1" /> <pc dataRefEnd="id5" dataRefStart="id4" id="p2">Other Debug Targets</pc> <ph dataRef="id6" id="ph2" /> <pc dataRefEnd="id8" dataRefStart="id7" id="p3">Debug Windows Universal App PreLaunch</pc>.</target>
				</segment>
			</unit>
			<unit id="144" translate="yes">
				<segment state="initial">
					<source>Related topics</source>
					<target>Related topics</target>
				</segment>
			</unit>
			<unit id="145" translate="yes">
				<segment state="initial">
					<source>App lifecycle</source>
					<target>App lifecycle</target>
				</segment>
			</unit>
		</group>
	</file>
</xliff>