{"nodes":[{"pos":[11,37],"content":"Windows Runtime components","needQuote":true,"needEscape":true,"nodes":[{"content":"Windows Runtime components","pos":[0,26]}]},{"pos":[51,205],"content":"Windows Runtime components are self-contained objects that you can instantiate and use from any language, including C#, Visual Basic, JavaScript, and C++.","needQuote":true,"needEscape":true,"nodes":[{"content":"Windows Runtime components are self-contained objects that you can instantiate and use from any language, including C#, Visual Basic, JavaScript, and C++.","pos":[0,154]}]},{"content":"Windows Runtime components","pos":[262,288]},{"content":"\\[ Updated for UWP apps on Windows 10.","pos":[291,329]},{"content":"For Windows 8.x articles, see the <bpt id=\"p1\">[</bpt>archive<ept id=\"p1\">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept> \\]","pos":[330,425],"source":" For Windows 8.x articles, see the [archive](http://go.microsoft.com/fwlink/p/?linkid=619132) \\]"},{"content":"Windows Runtime components are self-contained objects that you can instantiate and use from any language, including C#, Visual Basic, JavaScript, and C++.","pos":[427,581]},{"content":"You can use Visual Studio and C#, Visual Basic, or C++ to create Windows Runtime components that can be used in Universal Windows Platform (UWP) apps.","pos":[583,733]},{"content":"Topic","pos":[737,742]},{"content":"Description","pos":[745,756]},{"content":"Creating Windows Runtime Components in C++","pos":[786,828]},{"content":"This article shows how to use C++ to create a Windows Runtime component, which is a DLL that's callable from a Universal Windows app that's built by using JavaScript—or C#, Visual Basic, or C++.","pos":[879,1073]},{"content":"Walkthrough: Creating a basic Windows Runtime component in C++ and calling it from JavaScript or C","pos":[1079,1177]},{"content":"This walkthrough shows how to create a basic Windows Runtime Component DLL that's callable from JavaScript, C#, or Visual Basic.","pos":[1289,1417]},{"content":"Before you begin this walkthrough, make sure that you understand concepts such as the Abstract Binary Interface (ABI), ref classes, and the Visual C++ Component Extensions that make working with ref classes easier.","pos":[1418,1632]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Creating Windows Runtime Components in C++<ept id=\"p1\">](creating-windows-runtime-components-in-cpp.md)</ept> and <bpt id=\"p2\">[</bpt>Visual C++ Language Reference (C++/CX)<ept id=\"p2\">](https://msdn.microsoft.com/library/windows/apps/xaml/hh699871.aspx)</ept>.","pos":[1633,1864],"source":" For more information, see [Creating Windows Runtime Components in C++](creating-windows-runtime-components-in-cpp.md) and [Visual C++ Language Reference (C++/CX)](https://msdn.microsoft.com/library/windows/apps/xaml/hh699871.aspx)."},{"content":"Creating Windows Runtime Components in C# and Visual Basic","pos":[1870,1928]},{"content":"Starting with the .NET Framework 4.5, you can use managed code to create your own Windows Runtime types, packaged in a Windows Runtime component.","pos":[1999,2144]},{"content":"You can use your component in Universal Windows Platform (UWP) apps with C++, JavaScript, Visual Basic, or C#.","pos":[2145,2255]},{"content":"This article outlines the rules for creating a component, and discusses some aspects of .NET Framework support for the Windows Runtime.","pos":[2256,2391]},{"content":"In general, that support is designed to be transparent to the .NET Framework programmer.","pos":[2392,2480]},{"content":"However, when you create a component to use with JavaScript or C++, you need to be aware of differences in the way those languages support the Windows Runtime.","pos":[2481,2640]},{"content":"Walkthrough: Creating a Simple Windows Runtime component and calling it from JavaScript","pos":[2646,2733]},{"content":"This walkthrough shows how you can use the .NET Framework with Visual Basic or C# to create your own Windows Runtime types, packaged in a Windows Runtime component, and how to call the component from your Universal Windows app built for Windows using JavaScript.","pos":[2828,3090]},{"content":"Raising Events in Windows Runtime components","pos":[3096,3140]},{"content":"If your Windows Runtime component raises an event of a user-defined delegate type on a background thread (worker thread) and you want JavaScript to be able to receive the event, you can implement and/or raise it in one of these ways:","pos":[3193,3426]}],"content":"---\ntitle: Windows Runtime components\ndescription: Windows Runtime components are self-contained objects that you can instantiate and use from any language, including C#, Visual Basic, JavaScript, and C++.\nms.assetid: 55887622-828b-4318-87f2-25592268f7c1\n---\n\n# Windows Runtime components\n\n\n\\[ Updated for UWP apps on Windows 10. For Windows 8.x articles, see the [archive](http://go.microsoft.com/fwlink/p/?linkid=619132) \\]\n\nWindows Runtime components are self-contained objects that you can instantiate and use from any language, including C#, Visual Basic, JavaScript, and C++.\n\nYou can use Visual Studio and C#, Visual Basic, or C++ to create Windows Runtime components that can be used in Universal Windows Platform (UWP) apps.\n\n| Topic | Description |\n|-------|-------------|\n| [Creating Windows Runtime Components in C++](creating-windows-runtime-components-in-cpp.md) | This article shows how to use C++ to create a Windows Runtime component, which is a DLL that's callable from a Universal Windows app that's built by using JavaScript—or C#, Visual Basic, or C++. |\n| [Walkthrough: Creating a basic Windows Runtime component in C++ and calling it from JavaScript or C#](walkthrough-creating-a-basic-windows-runtime-component-in-cpp-and-calling-it-from-javascript-or-csharp.md) | This walkthrough shows how to create a basic Windows Runtime Component DLL that's callable from JavaScript, C#, or Visual Basic. Before you begin this walkthrough, make sure that you understand concepts such as the Abstract Binary Interface (ABI), ref classes, and the Visual C++ Component Extensions that make working with ref classes easier. For more information, see [Creating Windows Runtime Components in C++](creating-windows-runtime-components-in-cpp.md) and [Visual C++ Language Reference (C++/CX)](https://msdn.microsoft.com/library/windows/apps/xaml/hh699871.aspx). |\n| [Creating Windows Runtime Components in C# and Visual Basic](creating-windows-runtime-components-in-csharp-and-visual-basic.md) | Starting with the .NET Framework 4.5, you can use managed code to create your own Windows Runtime types, packaged in a Windows Runtime component. You can use your component in Universal Windows Platform (UWP) apps with C++, JavaScript, Visual Basic, or C#. This article outlines the rules for creating a component, and discusses some aspects of .NET Framework support for the Windows Runtime. In general, that support is designed to be transparent to the .NET Framework programmer. However, when you create a component to use with JavaScript or C++, you need to be aware of differences in the way those languages support the Windows Runtime. |\n| [Walkthrough: Creating a Simple Windows Runtime component and calling it from JavaScript](walkthrough-creating-a-simple-windows-runtime-component-and-calling-it-from-javascript.md) | This walkthrough shows how you can use the .NET Framework with Visual Basic or C# to create your own Windows Runtime types, packaged in a Windows Runtime component, and how to call the component from your Universal Windows app built for Windows using JavaScript. |\n| [Raising Events in Windows Runtime components](raising-events-in-windows-runtime-components.md) | If your Windows Runtime component raises an event of a user-defined delegate type on a background thread (worker thread) and you want JavaScript to be able to receive the event, you can implement and/or raise it in one of these ways: |\n \n\n \n\n \n\n\n\n"}