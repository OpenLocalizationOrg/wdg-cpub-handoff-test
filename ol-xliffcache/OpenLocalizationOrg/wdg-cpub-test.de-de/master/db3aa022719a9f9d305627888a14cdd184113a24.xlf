<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="de-de" version="2.0" xml:space="preserve" xmlns="urn:oasis:names:tc:xliff:document:2.0">
	<file id="1">
		<mda:metadata>
			<mda:metaGroup>
				<mda:meta type="tool-id">mdxliff</mda:meta>
				<mda:meta type="tool-name">mdxliff</mda:meta>
				<mda:meta type="tool-version">1.0-00ddeee</mda:meta>
				<mda:meta type="tool-company">Microsoft</mda:meta>
			</mda:metaGroup>
		<mda:metaGroup><mda:meta type="olfilehash">db3aa022719a9f9d305627888a14cdd184113a24</mda:meta><mda:meta type="olfilepath">wdg-cpub-test\ndolci2\gaming\game-development-platform-guide.md</mda:meta><mda:meta type="oltranslationpriority"></mda:meta><mda:meta type="oltranslationtype">Human Translation</mda:meta><mda:meta type="olskeletonhash">3a009ecb57c193980e08ba1a4ba42acacf2456b6</mda:meta><mda:meta type="olxliffhash">04231ddfaef44af35191ad39f775925170754406</mda:meta></mda:metaGroup></mda:metadata>
		<group id="content">
			<unit id="101" translate="yes">
				<segment state="initial">
					<source>Game technologies for Universal Windows Platform (UWP) apps</source>
					<target>Game technologies for Universal Windows Platform (UWP) apps</target>
				</segment>
			</unit>
			<unit id="102" translate="yes">
				<segment state="initial">
					<source>In this guide, you'll learn about the technologies available for developing Universal Windows Platform (UWP) games.</source>
					<target>In this guide, you'll learn about the technologies available for developing Universal Windows Platform (UWP) games.</target>
				</segment>
			</unit>
			<unit id="103" translate="yes">
				<segment state="initial">
					<source>Game technologies for Universal Windows Platform (UWP) apps</source>
					<target>Game technologies for Universal Windows Platform (UWP) apps</target>
				</segment>
			</unit>
			<unit id="104" translate="yes">
				<segment state="initial">
					<source>\[ Updated for UWP apps on Windows 10.</source>
					<target>\[ Updated for UWP apps on Windows 10.</target>
				</segment>
			</unit>
			<unit id="105" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](http://go.microsoft.com/fwlink/p/?linkid=619132)</data>
				</originalData>
				<segment state="initial">
					<source>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</source>
					<target>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</target>
				</segment>
			</unit>
			<unit id="106" translate="yes">
				<segment state="initial">
					<source>In this guide, you'll learn about the technologies available for developing Universal Windows Platform (UWP) games.</source>
					<target>In this guide, you'll learn about the technologies available for developing Universal Windows Platform (UWP) games.</target>
				</segment>
			</unit>
			<unit id="107" translate="yes">
				<segment state="initial">
					<source>Benefits of Windows 10 for game development</source>
					<target>Benefits of Windows 10 for game development</target>
				</segment>
			</unit>
			<unit id="108" translate="yes">
				<segment state="initial">
					<source>With the introduction of UWP in Windows 10, your Windows 10 titles will be able to span all of the Microsoft platforms.</source>
					<target>With the introduction of UWP in Windows 10, your Windows 10 titles will be able to span all of the Microsoft platforms.</target>
				</segment>
			</unit>
			<unit id="109" translate="yes">
				<segment state="initial">
					<source>With free migration from previous versions of Windows, there is a steadily increasing number of Windows 10 clients.</source>
					<target>With free migration from previous versions of Windows, there is a steadily increasing number of Windows 10 clients.</target>
				</segment>
			</unit>
			<unit id="110" translate="yes">
				<segment state="initial">
					<source>The combination of these two things means that your Windows 10 titles will be able to reach a huge number of customers through the Windows Store.</source>
					<target>The combination of these two things means that your Windows 10 titles will be able to reach a huge number of customers through the Windows Store.</target>
				</segment>
			</unit>
			<unit id="111" translate="yes">
				<segment state="initial">
					<source>In addition, Windows 10 offers many new features that are particularly beneficial to games:</source>
					<target>In addition, Windows 10 offers many new features that are particularly beneficial to games:</target>
				</segment>
			</unit>
			<unit id="112" translate="yes">
				<segment state="initial">
					<source>Reduced memory paging and reduced overall memory system size</source>
					<target>Reduced memory paging and reduced overall memory system size</target>
				</segment>
			</unit>
			<unit id="113" translate="yes">
				<segment state="initial">
					<source>Improved graphics memory management actively allocates and protects more memory for the foreground game</source>
					<target>Improved graphics memory management actively allocates and protects more memory for the foreground game</target>
				</segment>
			</unit>
			<unit id="114" translate="yes">
				<segment state="initial">
					<source>UWP Games with C++ and DirectX</source>
					<target>UWP Games with C++ and DirectX</target>
				</segment>
			</unit>
			<unit id="115" translate="yes">
				<segment state="initial">
					<source>Real-time games requiring high performance should make use of the DirectX APIs.</source>
					<target>Real-time games requiring high performance should make use of the DirectX APIs.</target>
				</segment>
			</unit>
			<unit id="116" translate="yes">
				<segment state="initial">
					<source>DirectX is a collection of native APIs for creating games and multimedia applications that require high performance, such as 3D games.</source>
					<target>DirectX is a collection of native APIs for creating games and multimedia applications that require high performance, such as 3D games.</target>
				</segment>
			</unit>
			<unit id="117" translate="yes">
				<segment state="initial">
					<source>Because the DirectX APIs are native, C++ is the only language supported for use with DirectX.</source>
					<target>Because the DirectX APIs are native, C++ is the only language supported for use with DirectX.</target>
				</segment>
			</unit>
			<unit id="118" translate="yes">
				<segment state="initial">
					<source>Development Environment</source>
					<target>Development Environment</target>
				</segment>
			</unit>
			<unit id="119" translate="yes">
				<segment state="initial">
					<source>To create games for UWP, you'll need to set up your development environment by installing a copy of Visual Studio 2015.</source>
					<target>To create games for UWP, you'll need to set up your development environment by installing a copy of Visual Studio 2015.</target>
				</segment>
			</unit>
			<unit id="120" translate="yes">
				<segment state="initial">
					<source>Visual Studio 2015 allows you to create UWP apps and provides tools for game development:</source>
					<target>Visual Studio 2015 allows you to create UWP apps and provides tools for game development:</target>
				</segment>
			</unit>
			<unit id="121" translate="yes">
				<segment state="initial">
					<source>Visual Studio tools for DX game programming - Visual Studio provides tools for creating, editing, previewing, and exporting image, model, and shader resources.</source>
					<target>Visual Studio tools for DX game programming - Visual Studio provides tools for creating, editing, previewing, and exporting image, model, and shader resources.</target>
				</segment>
			</unit>
			<unit id="122" translate="yes">
				<segment state="initial">
					<source>There are also tools that you can use to convert resources at build time and debug DirectX graphics code.</source>
					<target>There are also tools that you can use to convert resources at build time and debug DirectX graphics code.</target>
				</segment>
			</unit>
			<unit id="123" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](set-up-visual-studio-for-game-development.md)</data>
				</originalData>
				<segment state="initial">
					<source>For more information, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Use Visual Studio tools for game programming</pc>.</source>
					<target>For more information, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Use Visual Studio tools for game programming</pc>.</target>
				</segment>
			</unit>
			<unit id="124" translate="yes">
				<segment state="initial">
					<source>Visual Studio graphics diagnostics features - Graphics diagnostic tools are now available from within Windows as an optional feature.</source>
					<target>Visual Studio graphics diagnostics features - Graphics diagnostic tools are now available from within Windows as an optional feature.</target>
				</segment>
			</unit>
			<unit id="125" translate="yes">
				<segment state="initial">
					<source>The diagnostic tools allow you to do graphics debugging, graphics frame analysis, and monitor GPU usage in real time.</source>
					<target>The diagnostic tools allow you to do graphics debugging, graphics frame analysis, and monitor GPU usage in real time.</target>
				</segment>
			</unit>
			<unit id="126" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](use-the-directx-runtime-and-visual-studio-graphics-diagnostic-features.md)</data>
				</originalData>
				<segment state="initial">
					<source>For more information, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Use the DirectX runtime and Visual Studio graphics diagnostic features</pc>.</source>
					<target>For more information, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Use the DirectX runtime and Visual Studio graphics diagnostic features</pc>.</target>
				</segment>
			</unit>
			<unit id="127" translate="yes">
				<segment state="initial">
					<source>For more information, see Prepare your Universal Windows Platform and DirectX game programming environment.</source>
					<target>For more information, see Prepare your Universal Windows Platform and DirectX game programming environment.</target>
				</segment>
			</unit>
			<unit id="128" translate="yes">
				<segment state="initial">
					<source>Getting Started with DirectX Game Project Templates</source>
					<target>Getting Started with DirectX Game Project Templates</target>
				</segment>
			</unit>
			<unit id="129" translate="yes">
				<segment state="initial">
					<source>After setting up you development environment, you can use one of the DirectX related project templates to create your UWP DirectX game.</source>
					<target>After setting up you development environment, you can use one of the DirectX related project templates to create your UWP DirectX game.</target>
				</segment>
			</unit>
			<unit id="130" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source>Visual Studio 2015 has three templates available for creating new UWP DirectX projects, <pc dataRefEnd="id2" dataRefStart="id1" id="p1">DirectX 11 App (Universal Windows)</pc>, <pc dataRefEnd="id4" dataRefStart="id3" id="p2">DirectX 12 App (Universal Windows)</pc>, and <pc dataRefEnd="id6" dataRefStart="id5" id="p3">DirectX 11 and XAML App (Universal Windows)</pc>.</source>
					<target>Visual Studio 2015 has three templates available for creating new UWP DirectX projects, <pc dataRefEnd="id2" dataRefStart="id1" id="p1">DirectX 11 App (Universal Windows)</pc>, <pc dataRefEnd="id4" dataRefStart="id3" id="p2">DirectX 12 App (Universal Windows)</pc>, and <pc dataRefEnd="id6" dataRefStart="id5" id="p3">DirectX 11 and XAML App (Universal Windows)</pc>.</target>
				</segment>
			</unit>
			<unit id="131" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](user-interface.md)</data>
				</originalData>
				<segment state="initial">
					<source>For more information, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Create a Universal Windows Platform and DirectX game project from a template</pc>.</source>
					<target>For more information, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Create a Universal Windows Platform and DirectX game project from a template</pc>.</target>
				</segment>
			</unit>
			<unit id="132" translate="yes">
				<segment state="initial">
					<source>Windows 10 APIs</source>
					<target>Windows 10 APIs</target>
				</segment>
			</unit>
			<unit id="133" translate="yes">
				<segment state="initial">
					<source>Windows 10 provides a an extensive collection of APIs that are useful for game development.</source>
					<target>Windows 10 provides a an extensive collection of APIs that are useful for game development.</target>
				</segment>
			</unit>
			<unit id="134" translate="yes">
				<segment state="initial">
					<source>There are APIs for almost all aspects of games including, 3D Graphics, 2D Graphics, Audio, Input, Text Resources, User Interface, and networking.</source>
					<target>There are APIs for almost all aspects of games including, 3D Graphics, 2D Graphics, Audio, Input, Text Resources, User Interface, and networking.</target>
				</segment>
			</unit>
			<unit id="135" translate="yes">
				<segment state="initial">
					<source>There are many APIs related to game development, but not all games need to use all of the APIs.</source>
					<target>There are many APIs related to game development, but not all games need to use all of the APIs.</target>
				</segment>
			</unit>
			<unit id="136" translate="yes">
				<segment state="initial">
					<source>For example, some games will only use 3D graphics and only make use of Direct3D, some games may only use 2D graphics and only make use of Direct2D, and still other games may make use of both.</source>
					<target>For example, some games will only use 3D graphics and only make use of Direct3D, some games may only use 2D graphics and only make use of Direct2D, and still other games may make use of both.</target>
				</segment>
			</unit>
			<unit id="137" translate="yes">
				<segment state="initial">
					<source>The following diagram shows the game development related APIs grouped by functionality type.</source>
					<target>The following diagram shows the game development related APIs grouped by functionality type.</target>
				</segment>
			</unit>
			<unit id="138" translate="yes">
				<segment state="initial">
					<source>game platform technologies</source>
					<target>game platform technologies</target>
				</segment>
			</unit>
			<unit id="139" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/desktop/dn899121)</data>
				</originalData>
				<segment state="initial">
					<source>3D Graphics - Windows 10 supports two 3D graphics API sets, Direct3D 11, and <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Direct3D 12</pc>.</source>
					<target>3D Graphics - Windows 10 supports two 3D graphics API sets, Direct3D 11, and <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Direct3D 12</pc>.</target>
				</segment>
			</unit>
			<unit id="140" translate="yes">
				<segment state="initial">
					<source>Both of these APIs provide the capability to create 3D and 2D graphics.</source>
					<target>Both of these APIs provide the capability to create 3D and 2D graphics.</target>
				</segment>
			</unit>
			<unit id="141" translate="yes">
				<segment state="initial">
					<source>Direct3D 11 and Direct3D 12 are not used together, but either can be used with any of the APIs in the 2D Graphics and UI group.</source>
					<target>Direct3D 11 and Direct3D 12 are not used together, but either can be used with any of the APIs in the 2D Graphics and UI group.</target>
				</segment>
			</unit>
			<unit id="142" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](an-introduction-to-3d-graphics-with-directx.md)</data>
				</originalData>
				<segment state="initial">
					<source>For more information about using the graphics APIs in your game, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Basic 3D graphics for DirectX games</pc>.</source>
					<target>For more information about using the graphics APIs in your game, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Basic 3D graphics for DirectX games</pc>.</target>
				</segment>
			</unit>
			<unit id="143" translate="yes">
				<segment state="initial">
					<source>API</source>
					<target>API</target>
				</segment>
			</unit>
			<unit id="144" translate="yes">
				<segment state="initial">
					<source>Description</source>
					<target>Description</target>
				</segment>
			</unit>
			<unit id="145" translate="yes">
				<segment state="initial">
					<source>Direct3D 12</source>
					<target>Direct3D 12</target>
				</segment>
			</unit>
			<unit id="146" translate="yes">
				<segment state="initial">
					<source>Direct3D 12 introduces the next version of Direct3D, the 3D graphics API at the heart of DirectX.</source>
					<target>Direct3D 12 introduces the next version of Direct3D, the 3D graphics API at the heart of DirectX.</target>
				</segment>
			</unit>
			<unit id="147" translate="yes">
				<segment state="initial">
					<source>This version of Direct3D is designed to be faster and more efficient than previous versions of Direct3D.</source>
					<target>This version of Direct3D is designed to be faster and more efficient than previous versions of Direct3D.</target>
				</segment>
			</unit>
			<unit id="148" translate="yes">
				<segment state="initial">
					<source>The tradeoff for Direct3D 12's increased speed is that it is lower level and requires you to manage your graphics resources yourself and have more extensive graphics programming experience to realize the increased speed.</source>
					<target>The tradeoff for Direct3D 12's increased speed is that it is lower level and requires you to manage your graphics resources yourself and have more extensive graphics programming experience to realize the increased speed.</target>
				</segment>
			</unit>
			<unit id="149" translate="yes">
				<segment state="initial">
					<source>When to use</source>
					<target>When to use</target>
				</segment>
			</unit>
			<unit id="150" translate="yes">
				<segment state="initial">
					<source>Use Direct3D 12 when you need to maximize your game's performance and your game is CPU bound.</source>
					<target>Use Direct3D 12 when you need to maximize your game's performance and your game is CPU bound.</target>
				</segment>
			</unit>
			<unit id="151" translate="yes">
				<segment state="initial">
					<source>For more information</source>
					<target>For more information</target>
				</segment>
			</unit>
			<unit id="152" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/desktop/dn899121)</data>
				</originalData>
				<segment state="initial">
					<source>See the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Direct3d 12</pc> documentation.</source>
					<target>See the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Direct3d 12</pc> documentation.</target>
				</segment>
			</unit>
			<unit id="153" translate="yes">
				<segment state="initial">
					<source>Direct3D 11</source>
					<target>Direct3D 11</target>
				</segment>
			</unit>
			<unit id="154" translate="yes">
				<segment state="initial">
					<source>Direct3D 11 is the previous version of Direct3D and allows you to create 3D graphics using a higher level of hardware abstraction than D3D 12.</source>
					<target>Direct3D 11 is the previous version of Direct3D and allows you to create 3D graphics using a higher level of hardware abstraction than D3D 12.</target>
				</segment>
			</unit>
			<unit id="155" translate="yes">
				<segment state="initial">
					<source>When to use</source>
					<target>When to use</target>
				</segment>
			</unit>
			<unit id="156" translate="yes">
				<segment state="initial">
					<source>Use Direct3D 11 if you have existing Direct3D 11 code, your game is not CPU bound, or you want the benefit of having resources managed for you.</source>
					<target>Use Direct3D 11 if you have existing Direct3D 11 code, your game is not CPU bound, or you want the benefit of having resources managed for you.</target>
				</segment>
			</unit>
			<unit id="157" translate="yes">
				<segment state="initial">
					<source>For more information</source>
					<target>For more information</target>
				</segment>
			</unit>
			<unit id="158" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/desktop/ff476080)</data>
				</originalData>
				<segment state="initial">
					<source>See the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Direct3D 11</pc> documentation.</source>
					<target>See the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Direct3D 11</pc> documentation.</target>
				</segment>
			</unit>
			<unit id="159" translate="yes">
				<segment state="initial">
					<source>2D Graphics and UI - APIs concerning 2D graphics such as text and user interfaces.</source>
					<target>2D Graphics and UI - APIs concerning 2D graphics such as text and user interfaces.</target>
				</segment>
			</unit>
			<unit id="160" translate="yes">
				<segment state="initial">
					<source>All of the 2D graphics and UI APIs are optional.</source>
					<target>All of the 2D graphics and UI APIs are optional.</target>
				</segment>
			</unit>
			<unit id="161" translate="yes">
				<segment state="initial">
					<source>API</source>
					<target>API</target>
				</segment>
			</unit>
			<unit id="162" translate="yes">
				<segment state="initial">
					<source>Description</source>
					<target>Description</target>
				</segment>
			</unit>
			<unit id="163" translate="yes">
				<segment state="initial">
					<source>Direct2D</source>
					<target>Direct2D</target>
				</segment>
			</unit>
			<unit id="164" translate="yes">
				<segment state="initial">
					<source>Direct2D is a hardware-accelerated, immediate-mode, 2-D graphics API that provides high performance and high-quality rendering for 2-D geometry, bitmaps, and text.</source>
					<target>Direct2D is a hardware-accelerated, immediate-mode, 2-D graphics API that provides high performance and high-quality rendering for 2-D geometry, bitmaps, and text.</target>
				</segment>
			</unit>
			<unit id="165" translate="yes">
				<segment state="initial">
					<source>The Direct2D API is built on Direct3D and is designed to interoperate well with GDI, GDI+, and Direct3D.</source>
					<target>The Direct2D API is built on Direct3D and is designed to interoperate well with GDI, GDI+, and Direct3D.</target>
				</segment>
			</unit>
			<unit id="166" translate="yes">
				<segment state="initial">
					<source>When to use</source>
					<target>When to use</target>
				</segment>
			</unit>
			<unit id="167" translate="yes">
				<segment state="initial">
					<source>Direct2D can be used instead of Direct3D to provide graphics for pure 2D games such as a side-scroller or board game, or can be used with Direct3D to simplify creation of 2D graphics in a 3D game, such as a user interface or heads-up-display.</source>
					<target>Direct2D can be used instead of Direct3D to provide graphics for pure 2D games such as a side-scroller or board game, or can be used with Direct3D to simplify creation of 2D graphics in a 3D game, such as a user interface or heads-up-display.</target>
				</segment>
			</unit>
			<unit id="168" translate="yes">
				<segment state="initial">
					<source>For more information</source>
					<target>For more information</target>
				</segment>
			</unit>
			<unit id="169" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/desktop/dd370990)</data>
				</originalData>
				<segment state="initial">
					<source>See the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Direct2D</pc> documentation.</source>
					<target>See the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Direct2D</pc> documentation.</target>
				</segment>
			</unit>
			<unit id="170" translate="yes">
				<segment state="initial">
					<source>DirectWrite</source>
					<target>DirectWrite</target>
				</segment>
			</unit>
			<unit id="171" translate="yes">
				<segment state="initial">
					<source>DirectWrite provides extra capabilities for working with text and can be used with Direct3D or Direct2D to provide text output for user interfaces or other areas where text is required.</source>
					<target>DirectWrite provides extra capabilities for working with text and can be used with Direct3D or Direct2D to provide text output for user interfaces or other areas where text is required.</target>
				</segment>
			</unit>
			<unit id="172" translate="yes">
				<segment state="initial">
					<source>DirectWrite supports measuring, drawing, and hit-testing of multi-format text.</source>
					<target>DirectWrite supports measuring, drawing, and hit-testing of multi-format text.</target>
				</segment>
			</unit>
			<unit id="173" translate="yes">
				<segment state="initial">
					<source>DirectWrite handles text in all supported languages for global and localized applications.</source>
					<target>DirectWrite handles text in all supported languages for global and localized applications.</target>
				</segment>
			</unit>
			<unit id="174" translate="yes">
				<segment state="initial">
					<source>DirectWrite also provides a low-level glyph rendering API for developers who want to perform their own layout and Unicode-to-glyph processing.</source>
					<target>DirectWrite also provides a low-level glyph rendering API for developers who want to perform their own layout and Unicode-to-glyph processing.</target>
				</segment>
			</unit>
			<unit id="175" translate="yes">
				<segment state="initial">
					<source>When to use</source>
					<target>When to use</target>
				</segment>
			</unit>
			<unit id="176" translate="yes">
				<segment state="initial">
					<source>For more information</source>
					<target>For more information</target>
				</segment>
			</unit>
			<unit id="177" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/desktop/dd368038)</data>
				</originalData>
				<segment state="initial">
					<source>See the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">DirectWrite</pc> documentation.</source>
					<target>See the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">DirectWrite</pc> documentation.</target>
				</segment>
			</unit>
			<unit id="178" translate="yes">
				<segment state="initial">
					<source>DirectComposition</source>
					<target>DirectComposition</target>
				</segment>
			</unit>
			<unit id="179" translate="yes">
				<segment state="initial">
					<source>DirectComposition is a Windows component that enables high-performance bitmap composition with transforms, effects, and animations.</source>
					<target>DirectComposition is a Windows component that enables high-performance bitmap composition with transforms, effects, and animations.</target>
				</segment>
			</unit>
			<unit id="180" translate="yes">
				<segment state="initial">
					<source>Application developers can use the DirectComposition API to create visually engaging user interfaces that feature rich and fluid animated transitions from one visual to another.</source>
					<target>Application developers can use the DirectComposition API to create visually engaging user interfaces that feature rich and fluid animated transitions from one visual to another.</target>
				</segment>
			</unit>
			<unit id="181" translate="yes">
				<segment state="initial">
					<source>When to use</source>
					<target>When to use</target>
				</segment>
			</unit>
			<unit id="182" translate="yes">
				<segment state="initial">
					<source>DirectComposition is designed to simplify the process of composing visuals and creating animated transitions.</source>
					<target>DirectComposition is designed to simplify the process of composing visuals and creating animated transitions.</target>
				</segment>
			</unit>
			<unit id="183" translate="yes">
				<segment state="initial">
					<source>If your game requires complex user interfaces, you can use DirectComposition to simplify the creation and management of the UI.</source>
					<target>If your game requires complex user interfaces, you can use DirectComposition to simplify the creation and management of the UI.</target>
				</segment>
			</unit>
			<unit id="184" translate="yes">
				<segment state="initial">
					<source>For more information</source>
					<target>For more information</target>
				</segment>
			</unit>
			<unit id="185" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/desktop/hh437371)</data>
				</originalData>
				<segment state="initial">
					<source>See the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">DirectComposition</pc> documentation.</source>
					<target>See the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">DirectComposition</pc> documentation.</target>
				</segment>
			</unit>
			<unit id="186" translate="yes">
				<segment state="initial">
					<source>Audio - APIs concerning playing audio and applying audio effects.</source>
					<target>Audio - APIs concerning playing audio and applying audio effects.</target>
				</segment>
			</unit>
			<unit id="187" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](working-with-audio-in-your-directx-game.md)</data>
				</originalData>
				<segment state="initial">
					<source>For information about using the audio APIs in your game, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Audio for games</pc>.</source>
					<target>For information about using the audio APIs in your game, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Audio for games</pc>.</target>
				</segment>
			</unit>
			<unit id="188" translate="yes">
				<segment state="initial">
					<source>API</source>
					<target>API</target>
				</segment>
			</unit>
			<unit id="189" translate="yes">
				<segment state="initial">
					<source>Description</source>
					<target>Description</target>
				</segment>
			</unit>
			<unit id="190" translate="yes">
				<segment state="initial">
					<source>XAudio2</source>
					<target>XAudio2</target>
				</segment>
			</unit>
			<unit id="191" translate="yes">
				<segment state="initial">
					<source>XAudio2 is a low-level audio API that provides a foundation for signal processing and mixing.</source>
					<target>XAudio2 is a low-level audio API that provides a foundation for signal processing and mixing.</target>
				</segment>
			</unit>
			<unit id="192" translate="yes">
				<segment state="initial">
					<source>XAudio is designed to be very responsive for game audio engines while maintaining the ability to create custom audio effects and complex chains of audio effects and filters.</source>
					<target>XAudio is designed to be very responsive for game audio engines while maintaining the ability to create custom audio effects and complex chains of audio effects and filters.</target>
				</segment>
			</unit>
			<unit id="193" translate="yes">
				<segment state="initial">
					<source>When to use</source>
					<target>When to use</target>
				</segment>
			</unit>
			<unit id="194" translate="yes">
				<segment state="initial">
					<source>Use XAudio2 when your game needs to play sounds with minimal overhead and delay.</source>
					<target>Use XAudio2 when your game needs to play sounds with minimal overhead and delay.</target>
				</segment>
			</unit>
			<unit id="195" translate="yes">
				<segment state="initial">
					<source>For more information</source>
					<target>For more information</target>
				</segment>
			</unit>
			<unit id="196" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/desktop/hh405049)</data>
				</originalData>
				<segment state="initial">
					<source>See the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">XAudio2</pc> documentation.</source>
					<target>See the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">XAudio2</pc> documentation.</target>
				</segment>
			</unit>
			<unit id="197" translate="yes">
				<segment state="initial">
					<source>Media Foundation</source>
					<target>Media Foundation</target>
				</segment>
			</unit>
			<unit id="198" translate="yes">
				<segment state="initial">
					<source>Microsoft Media Foundation is designed for the playback of media files and streams, both audio and video, but can also be used in games when higher level functionality than XAudio2 is required and some additional overhead is acceptable.</source>
					<target>Microsoft Media Foundation is designed for the playback of media files and streams, both audio and video, but can also be used in games when higher level functionality than XAudio2 is required and some additional overhead is acceptable.</target>
				</segment>
			</unit>
			<unit id="199" translate="yes">
				<segment state="initial">
					<source>When to use</source>
					<target>When to use</target>
				</segment>
			</unit>
			<unit id="200" translate="yes">
				<segment state="initial">
					<source>Media foundation is particularly useful for cinematic scenes or non-interactive components of your game.</source>
					<target>Media foundation is particularly useful for cinematic scenes or non-interactive components of your game.</target>
				</segment>
			</unit>
			<unit id="201" translate="yes">
				<segment state="initial">
					<source>Media foundation is also useful for decoding audio files for playback using XAudio2.</source>
					<target>Media foundation is also useful for decoding audio files for playback using XAudio2.</target>
				</segment>
			</unit>
			<unit id="202" translate="yes">
				<segment state="initial">
					<source>For more information</source>
					<target>For more information</target>
				</segment>
			</unit>
			<unit id="203" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/desktop/ms694197)</data>
				</originalData>
				<segment state="initial">
					<source>See the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Microsoft Media Foundation overview</pc>.</source>
					<target>See the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Microsoft Media Foundation overview</pc>.</target>
				</segment>
			</unit>
			<unit id="204" translate="yes">
				<segment state="initial">
					<source>Input - APIs concerning input from the keyboard, mouse, gamepad, and other user input sources.</source>
					<target>Input - APIs concerning input from the keyboard, mouse, gamepad, and other user input sources.</target>
				</segment>
			</unit>
			<unit id="205" translate="yes">
				<segment state="initial">
					<source>API</source>
					<target>API</target>
				</segment>
			</unit>
			<unit id="206" translate="yes">
				<segment state="initial">
					<source>Description</source>
					<target>Description</target>
				</segment>
			</unit>
			<unit id="207" translate="yes">
				<segment state="initial">
					<source>XInput</source>
					<target>XInput</target>
				</segment>
			</unit>
			<unit id="208" translate="yes">
				<segment state="initial">
					<source>The XInput Game Controller API enables applications to receive input from game controllers.</source>
					<target>The XInput Game Controller API enables applications to receive input from game controllers.</target>
				</segment>
			</unit>
			<unit id="209" translate="yes">
				<segment state="initial">
					<source>When to use</source>
					<target>When to use</target>
				</segment>
			</unit>
			<unit id="210" translate="yes">
				<segment state="initial">
					<source>If your game needs to support gampad input and you have existing XInput code, you can continue to make use of XInput.</source>
					<target>If your game needs to support gampad input and you have existing XInput code, you can continue to make use of XInput.</target>
				</segment>
			</unit>
			<unit id="211" translate="yes">
				<segment state="initial">
					<source>XInput has been replaced by Windows.Gaming.Input for UWP, and if you're writing new input code, you should use Windows.Gaming.Input instead of XInput.</source>
					<target>XInput has been replaced by Windows.Gaming.Input for UWP, and if you're writing new input code, you should use Windows.Gaming.Input instead of XInput.</target>
				</segment>
			</unit>
			<unit id="212" translate="yes">
				<segment state="initial">
					<source>For more information</source>
					<target>For more information</target>
				</segment>
			</unit>
			<unit id="213" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/desktop/hh405053)</data>
				</originalData>
				<segment state="initial">
					<source>See the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">XInput</pc> documentation.</source>
					<target>See the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">XInput</pc> documentation.</target>
				</segment>
			</unit>
			<unit id="214" translate="yes">
				<segment state="initial">
					<source>Windows.Gaming.Input</source>
					<target>Windows.Gaming.Input</target>
				</segment>
			</unit>
			<unit id="215" translate="yes">
				<segment state="initial">
					<source>The Windows.Gaming.Input API replaces XInput and provides the same functionality with the following advantages over Xinput:</source>
					<target>The Windows.Gaming.Input API replaces XInput and provides the same functionality with the following advantages over Xinput:</target>
				</segment>
			</unit>
			<unit id="216" translate="yes">
				<segment state="initial">
					<source>Lower resource usage</source>
					<target>Lower resource usage</target>
				</segment>
			</unit>
			<unit id="217" translate="yes">
				<segment state="initial">
					<source>Lower API call latency for retrieving input</source>
					<target>Lower API call latency for retrieving input</target>
				</segment>
			</unit>
			<unit id="218" translate="yes">
				<segment state="initial">
					<source>The ability to work with more than 4 gamepads at once</source>
					<target>The ability to work with more than 4 gamepads at once</target>
				</segment>
			</unit>
			<unit id="219" translate="yes">
				<segment state="initial">
					<source>The ability to access addition Xbox One gamepad features, such as the trigger vibration motors</source>
					<target>The ability to access addition Xbox One gamepad features, such as the trigger vibration motors</target>
				</segment>
			</unit>
			<unit id="220" translate="yes">
				<segment state="initial">
					<source>The ability to be notified when controllers connect/disconnect via event instead of polling</source>
					<target>The ability to be notified when controllers connect/disconnect via event instead of polling</target>
				</segment>
			</unit>
			<unit id="221" translate="yes">
				<segment state="initial">
					<source>The ability to attribute input to a specific user (Windows.System.User)</source>
					<target>The ability to attribute input to a specific user (Windows.System.User)</target>
				</segment>
			</unit>
			<unit id="222" translate="yes">
				<segment state="initial">
					<source>When to use</source>
					<target>When to use</target>
				</segment>
			</unit>
			<unit id="223" translate="yes">
				<segment state="initial">
					<source>If your game needs to support gamepad input and is not using existing XInput code or you need one of the benefits listed above, you should make use of Windows.Gaming.Input.</source>
					<target>If your game needs to support gamepad input and is not using existing XInput code or you need one of the benefits listed above, you should make use of Windows.Gaming.Input.</target>
				</segment>
			</unit>
			<unit id="224" translate="yes">
				<segment state="initial">
					<source>For more information</source>
					<target>For more information</target>
				</segment>
			</unit>
			<unit id="225" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn707817)</data>
					<data id="id3">&lt;strong&gt;</data>
					<data id="id4">&lt;/strong&gt;</data>
				</originalData>
				<segment state="initial">
					<source>See the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><ph dataRef="id3" id="ph1" />Windows.Gaming.Input<ph dataRef="id4" id="ph2" /></pc> documentation.</source>
					<target>See the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><ph dataRef="id3" id="ph1" />Windows.Gaming.Input<ph dataRef="id4" id="ph2" /></pc> documentation.</target>
				</segment>
			</unit>
			<unit id="226" translate="yes">
				<segment state="initial">
					<source>Windows.UI.Core.CoreWindow</source>
					<target>Windows.UI.Core.CoreWindow</target>
				</segment>
			</unit>
			<unit id="227" translate="yes">
				<segment state="initial">
					<source>The Windows.UI.Core.CoreWindow class provides events for tracking pointer presses and movement, and key down and key up events.</source>
					<target>The Windows.UI.Core.CoreWindow class provides events for tracking pointer presses and movement, and key down and key up events.</target>
				</segment>
			</unit>
			<unit id="228" translate="yes">
				<segment state="initial">
					<source>When to use</source>
					<target>When to use</target>
				</segment>
			</unit>
			<unit id="229" translate="yes">
				<segment state="initial">
					<source>Use Windows.UI.Core.CoreWindows events when you need to track the mouse or key presses in your game.</source>
					<target>Use Windows.UI.Core.CoreWindows events when you need to track the mouse or key presses in your game.</target>
				</segment>
			</unit>
			<unit id="230" translate="yes">
				<segment state="initial">
					<source>For more information</source>
					<target>For more information</target>
				</segment>
			</unit>
			<unit id="231" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](tutorial--adding-move-look-controls-to-your-directx-game.md)</data>
				</originalData>
				<segment state="initial">
					<source>See <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Move-look controls for games</pc> for more information about using the mouse or keyboard in your game.</source>
					<target>See <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Move-look controls for games</pc> for more information about using the mouse or keyboard in your game.</target>
				</segment>
			</unit>
			<unit id="232" translate="yes">
				<segment state="initial">
					<source>Math - APIs concerning simplifying commonly used mathematical operations.</source>
					<target>Math - APIs concerning simplifying commonly used mathematical operations.</target>
				</segment>
			</unit>
			<unit id="233" translate="yes">
				<segment state="initial">
					<source>API</source>
					<target>API</target>
				</segment>
			</unit>
			<unit id="234" translate="yes">
				<segment state="initial">
					<source>Description</source>
					<target>Description</target>
				</segment>
			</unit>
			<unit id="235" translate="yes">
				<segment state="initial">
					<source>DirectXMath</source>
					<target>DirectXMath</target>
				</segment>
			</unit>
			<unit id="236" translate="yes">
				<segment state="initial">
					<source>The DirectXMath API provides SIMD-friendly C++ types and functions for common linear algebra and graphics math operations common to games.</source>
					<target>The DirectXMath API provides SIMD-friendly C++ types and functions for common linear algebra and graphics math operations common to games.</target>
				</segment>
			</unit>
			<unit id="237" translate="yes">
				<segment state="initial">
					<source>When to use</source>
					<target>When to use</target>
				</segment>
			</unit>
			<unit id="238" translate="yes">
				<segment state="initial">
					<source>Use of DirectXMath is optional and simplifies common mathematical operations.</source>
					<target>Use of DirectXMath is optional and simplifies common mathematical operations.</target>
				</segment>
			</unit>
			<unit id="239" translate="yes">
				<segment state="initial">
					<source>For more information</source>
					<target>For more information</target>
				</segment>
			</unit>
			<unit id="240" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/desktop/hh437833)</data>
				</originalData>
				<segment state="initial">
					<source>See the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">DirectXMath</pc> documentation.</source>
					<target>See the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">DirectXMath</pc> documentation.</target>
				</segment>
			</unit>
			<unit id="241" translate="yes">
				<segment state="initial">
					<source>Networking - APIs concerning communicating with other computers and devices over either the Internet or private networks.</source>
					<target>Networking - APIs concerning communicating with other computers and devices over either the Internet or private networks.</target>
				</segment>
			</unit>
			<unit id="242" translate="yes">
				<segment state="initial">
					<source>API</source>
					<target>API</target>
				</segment>
			</unit>
			<unit id="243" translate="yes">
				<segment state="initial">
					<source>Description</source>
					<target>Description</target>
				</segment>
			</unit>
			<unit id="244" translate="yes">
				<segment state="initial">
					<source>Windows.Networking.Sockets</source>
					<target>Windows.Networking.Sockets</target>
				</segment>
			</unit>
			<unit id="245" translate="yes">
				<segment state="initial">
					<source>The Windows.Networking.Sockets namespace provides TCP and UDP sockets that allow reliable or unreliable network communication.</source>
					<target>The Windows.Networking.Sockets namespace provides TCP and UDP sockets that allow reliable or unreliable network communication.</target>
				</segment>
			</unit>
			<unit id="246" translate="yes">
				<segment state="initial">
					<source>When to use</source>
					<target>When to use</target>
				</segment>
			</unit>
			<unit id="247" translate="yes">
				<segment state="initial">
					<source>Use Windows.Networking.Sockets if your game needs to communicate with other computers or devices over the network.</source>
					<target>Use Windows.Networking.Sockets if your game needs to communicate with other computers or devices over the network.</target>
				</segment>
			</unit>
			<unit id="248" translate="yes">
				<segment state="initial">
					<source>For more information</source>
					<target>For more information</target>
				</segment>
			</unit>
			<unit id="249" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](work-with-networking-in-your-directx-game.md)</data>
				</originalData>
				<segment state="initial">
					<source>See <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Work with networking in your game</pc>.</source>
					<target>See <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Work with networking in your game</pc>.</target>
				</segment>
			</unit>
			<unit id="250" translate="yes">
				<segment state="initial">
					<source>Windows.Web.HTTP</source>
					<target>Windows.Web.HTTP</target>
				</segment>
			</unit>
			<unit id="251" translate="yes">
				<segment state="initial">
					<source>The Windows.Web.HTTP namespace provides a reliable connection to HTTP servers that can be used to access a web site.</source>
					<target>The Windows.Web.HTTP namespace provides a reliable connection to HTTP servers that can be used to access a web site.</target>
				</segment>
			</unit>
			<unit id="252" translate="yes">
				<segment state="initial">
					<source>When to use</source>
					<target>When to use</target>
				</segment>
			</unit>
			<unit id="253" translate="yes">
				<segment state="initial">
					<source>Use Windows.Web.HTTP when your game needs to access a web site to retrieve or store information.</source>
					<target>Use Windows.Web.HTTP when your game needs to access a web site to retrieve or store information.</target>
				</segment>
			</unit>
			<unit id="254" translate="yes">
				<segment state="initial">
					<source>For more information</source>
					<target>For more information</target>
				</segment>
			</unit>
			<unit id="255" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](work-with-networking-in-your-directx-game.md)</data>
				</originalData>
				<segment state="initial">
					<source>See <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Work with networking in your game</pc>.</source>
					<target>See <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Work with networking in your game</pc>.</target>
				</segment>
			</unit>
			<unit id="256" translate="yes">
				<segment state="initial">
					<source>Support Utilities - Libraries that build on the Windows 10 APIs.</source>
					<target>Support Utilities - Libraries that build on the Windows 10 APIs.</target>
				</segment>
			</unit>
			<unit id="257" translate="yes">
				<segment state="initial">
					<source>Library</source>
					<target>Library</target>
				</segment>
			</unit>
			<unit id="258" translate="yes">
				<segment state="initial">
					<source>Description</source>
					<target>Description</target>
				</segment>
			</unit>
			<unit id="259" translate="yes">
				<segment state="initial">
					<source>DirectX Tool Kit</source>
					<target>DirectX Tool Kit</target>
				</segment>
			</unit>
			<unit id="260" translate="yes">
				<segment state="initial">
					<source>The DirectX Tool Kit (DirectXTK) is a collection of helper classes for writing DirectX 11.x code in C++.</source>
					<target>The DirectX Tool Kit (DirectXTK) is a collection of helper classes for writing DirectX 11.x code in C++.</target>
				</segment>
			</unit>
			<unit id="261" translate="yes">
				<segment state="initial">
					<source>When to use</source>
					<target>When to use</target>
				</segment>
			</unit>
			<unit id="262" translate="yes">
				<segment state="initial">
					<source>Use the DirectX Tool Kit if you're a C++ developer looking for a modern replacement to the legacy D3DX utility code or you're an XNA Game Studio developer transitioning to native C++.</source>
					<target>Use the DirectX Tool Kit if you're a C++ developer looking for a modern replacement to the legacy D3DX utility code or you're an XNA Game Studio developer transitioning to native C++.</target>
				</segment>
			</unit>
			<unit id="263" translate="yes">
				<segment state="initial">
					<source>For more information</source>
					<target>For more information</target>
				</segment>
			</unit>
			<unit id="264" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://github.com/Microsoft/DirectXTK)</data>
				</originalData>
				<segment state="initial">
					<source>See the DirectX Tool Kit project page, <pc dataRefEnd="id2" dataRefStart="id1" id="p1">https://github.com/Microsoft/DirectXTK</pc>.</source>
					<target>See the DirectX Tool Kit project page, <pc dataRefEnd="id2" dataRefStart="id1" id="p1">https://github.com/Microsoft/DirectXTK</pc>.</target>
				</segment>
			</unit>
			<unit id="265" translate="yes">
				<segment state="initial">
					<source>Win2D</source>
					<target>Win2D</target>
				</segment>
			</unit>
			<unit id="266" translate="yes">
				<segment state="initial">
					<source>Win2D is an easy-to-use Windows Runtime API for immediate mode 2D graphics rendering.</source>
					<target>Win2D is an easy-to-use Windows Runtime API for immediate mode 2D graphics rendering.</target>
				</segment>
			</unit>
			<unit id="267" translate="yes">
				<segment state="initial">
					<source>When to use</source>
					<target>When to use</target>
				</segment>
			</unit>
			<unit id="268" translate="yes">
				<segment state="initial">
					<source>Use Win2D if you're a C++ developer and want an easier to use WinRT wrapper for Direct2D and DirectWrite, or you're a C# developer wanting to use Direct2D and DirectWrite.</source>
					<target>Use Win2D if you're a C++ developer and want an easier to use WinRT wrapper for Direct2D and DirectWrite, or you're a C# developer wanting to use Direct2D and DirectWrite.</target>
				</segment>
			</unit>
			<unit id="269" translate="yes">
				<segment state="initial">
					<source>For more information</source>
					<target>For more information</target>
				</segment>
			</unit>
			<unit id="270" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://github.com/Microsoft/Win2D)</data>
				</originalData>
				<segment state="initial">
					<source>See the Win2D project page, <pc dataRefEnd="id2" dataRefStart="id1" id="p1">https://github.com/Microsoft/Win2D</pc>.</source>
					<target>See the Win2D project page, <pc dataRefEnd="id2" dataRefStart="id1" id="p1">https://github.com/Microsoft/Win2D</pc>.</target>
				</segment>
			</unit>
			<unit id="271" translate="yes">
				<segment state="initial">
					<source>Xbox Live Services</source>
					<target>Xbox Live Services</target>
				</segment>
			</unit>
			<unit id="272" translate="yes">
				<segment state="initial">
					<source>The Xbox Live feature set – cross play with Xbox, Achievements, Gamerscore, and more – is coming to Windows 10.</source>
					<target>The Xbox Live feature set – cross play with Xbox, Achievements, Gamerscore, and more – is coming to Windows 10.</target>
				</segment>
			</unit>
			<unit id="273" translate="yes">
				<segment state="initial">
					<source>Soon, you'll be able to work with ID@Xbox to include Live in your UWP games!</source>
					<target>Soon, you'll be able to work with ID@Xbox to include Live in your UWP games!</target>
				</segment>
			</unit>
			<unit id="274" translate="yes">
				<segment state="initial">
					<source>In the future, we’ll also help you ship your universal app platform games on Xbox One.</source>
					<target>In the future, we’ll also help you ship your universal app platform games on Xbox One.</target>
				</segment>
			</unit>
			<unit id="275" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](http://www.xbox.com/developers/id)</data>
				</originalData>
				<segment state="initial">
					<source>For more information, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ID@Xbox</pc> page.</source>
					<target>For more information, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ID@Xbox</pc> page.</target>
				</segment>
			</unit>
			<unit id="276" translate="yes">
				<segment state="initial">
					<source>Alternatives to writing games with DirectX and UWP</source>
					<target>Alternatives to writing games with DirectX and UWP</target>
				</segment>
			</unit>
			<unit id="277" translate="yes">
				<segment state="initial">
					<source>UWP Games without DirectX</source>
					<target>UWP Games without DirectX</target>
				</segment>
			</unit>
			<unit id="278" translate="yes">
				<segment state="initial">
					<source>Simpler games with minimal performance requirements, such as card games or board games, can be written without DirectX and don't necessarily need to be written in C++.</source>
					<target>Simpler games with minimal performance requirements, such as card games or board games, can be written without DirectX and don't necessarily need to be written in C++.</target>
				</segment>
			</unit>
			<unit id="279" translate="yes">
				<segment state="initial">
					<source>These sort of games can make use of any of the languages supported by UWP such as C#, Visual Basic, C++, and HTML/JavaScript.</source>
					<target>These sort of games can make use of any of the languages supported by UWP such as C#, Visual Basic, C++, and HTML/JavaScript.</target>
				</segment>
			</unit>
			<unit id="280" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](http://code.msdn.microsoft.com/windowsapps/JavaScript-and-HTML5-touch-d96f6031)</data>
				</originalData>
				<segment state="initial">
					<source>If performance and intensive graphics are not a requirement for your game, checkout <pc dataRefEnd="id2" dataRefStart="id1" id="p1">JavaScript and HTML5 touch game sample</pc> as an example.</source>
					<target>If performance and intensive graphics are not a requirement for your game, checkout <pc dataRefEnd="id2" dataRefStart="id1" id="p1">JavaScript and HTML5 touch game sample</pc> as an example.</target>
				</segment>
			</unit>
			<unit id="281" translate="yes">
				<segment state="initial">
					<source>Game Engines</source>
					<target>Game Engines</target>
				</segment>
			</unit>
			<unit id="282" translate="yes">
				<segment state="initial">
					<source>As an alternative to writing your own game engine using the Windows game development APIs, many high quality game engines that build on the Windows game development APIs are available for developing games on Windows platforms.</source>
					<target>As an alternative to writing your own game engine using the Windows game development APIs, many high quality game engines that build on the Windows game development APIs are available for developing games on Windows platforms.</target>
				</segment>
			</unit>
			<unit id="283" translate="yes">
				<segment state="initial">
					<source>When considering a game engine or library, you have multiple options:</source>
					<target>When considering a game engine or library, you have multiple options:</target>
				</segment>
			</unit>
			<unit id="284" translate="yes">
				<segment state="initial">
					<source>Full game engine - A full game engine encapsulates most or all of the Windows 10 APIs you would use when writing a game engine from scratch, such as graphics, audio, input, and networking.</source>
					<target>Full game engine - A full game engine encapsulates most or all of the Windows 10 APIs you would use when writing a game engine from scratch, such as graphics, audio, input, and networking.</target>
				</segment>
			</unit>
			<unit id="285" translate="yes">
				<segment state="initial">
					<source>Full game engines may also provide game logic functionality such as artificial intelligence and pathfinding.</source>
					<target>Full game engines may also provide game logic functionality such as artificial intelligence and pathfinding.</target>
				</segment>
			</unit>
			<unit id="286" translate="yes">
				<segment state="initial">
					<source>Graphics engine - Graphics engines encapsulate the Windows 10 graphics APIs, manage graphics resources, and support a variety of model and world formats.</source>
					<target>Graphics engine - Graphics engines encapsulate the Windows 10 graphics APIs, manage graphics resources, and support a variety of model and world formats.</target>
				</segment>
			</unit>
			<unit id="287" translate="yes">
				<segment state="initial">
					<source>Audio engine - Audio engines encapsulate the Windows 10 audio APIs, manage audio resources, and provide advanced audio processing and effects.</source>
					<target>Audio engine - Audio engines encapsulate the Windows 10 audio APIs, manage audio resources, and provide advanced audio processing and effects.</target>
				</segment>
			</unit>
			<unit id="288" translate="yes">
				<segment state="initial">
					<source>Network engine - Network engines encapsulate Windows 10 networking APIs for adding peer-to-peer or server-based multiplayer support to your game, and may include advanced networking functionality to support large numbers of players.</source>
					<target>Network engine - Network engines encapsulate Windows 10 networking APIs for adding peer-to-peer or server-based multiplayer support to your game, and may include advanced networking functionality to support large numbers of players.</target>
				</segment>
			</unit>
			<unit id="289" translate="yes">
				<segment state="initial">
					<source>Artificial intelligence and pathfinding engine - AI and pathfinding engines provide a framework for controlling the behavior of agents in your game.</source>
					<target>Artificial intelligence and pathfinding engine - AI and pathfinding engines provide a framework for controlling the behavior of agents in your game.</target>
				</segment>
			</unit>
			<unit id="290" translate="yes">
				<segment state="initial">
					<source>Special purpose engines - A variety of additional engines exist for handling almost any game development related task you might run into, such as creating inventory systems and dialog trees.</source>
					<target>Special purpose engines - A variety of additional engines exist for handling almost any game development related task you might run into, such as creating inventory systems and dialog trees.</target>
				</segment>
			</unit>
			<unit id="291" translate="yes">
				<segment state="initial">
					<source>Submitting a game to the Store</source>
					<target>Submitting a game to the Store</target>
				</segment>
			</unit>
			<unit id="292" translate="yes">
				<segment state="initial">
					<source>Once you’re ready to publish your game, you’ll need to create a developer account and submit your game to the Windows Store.</source>
					<target>Once you’re ready to publish your game, you’ll need to create a developer account and submit your game to the Windows Store.</target>
				</segment>
			</unit>
			<unit id="293" translate="yes">
				<originalData>
					<data id="id1">&lt;</data>
					<data id="id2">&gt;</data>
				</originalData>
				<segment state="initial">
					<source>For information about submitting your game to the Windows Store, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">https://dev.windows.com/publish</pc>.</source>
					<target>For information about submitting your game to the Windows Store, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">https://dev.windows.com/publish</pc>.</target>
				</segment>
			</unit>
		</group>
	</file>
</xliff>