<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="de-de" version="2.0" xml:space="preserve" xmlns="urn:oasis:names:tc:xliff:document:2.0">
	<file id="1">
		<mda:metadata>
			<mda:metaGroup>
				<mda:meta type="tool-id">mdxliff</mda:meta>
				<mda:meta type="tool-name">mdxliff</mda:meta>
				<mda:meta type="tool-version">1.0-10daaac</mda:meta>
				<mda:meta type="tool-company">Microsoft</mda:meta>
			</mda:metaGroup>
		<mda:metaGroup><mda:meta type="olfilehash">349ce1064b5a40ff1b65f37fbf8d7fc136d78556</mda:meta><mda:meta type="olfilepath">wdg-cpub-test\joshbax\HelloWorld.md</mda:meta><mda:meta type="oltranslationpriority"></mda:meta><mda:meta type="oltranslationtype">Human Translation</mda:meta><mda:meta type="olskeletonhash">07ae6568dec42fe087cb2aa063ac842b0dc1a160</mda:meta><mda:meta type="olxliffhash">2474f71dc5ab780b3c8d12211d04008ade230e9b</mda:meta></mda:metaGroup></mda:metadata>
		<group id="content">
			<unit id="101" translate="yes">
				<segment state="initial">
					<source>Welcome to WDG CPub Open Publishing Playground</source>
				</segment>
			</unit>
			<unit id="102" translate="yes">
				<segment state="initial">
					<source>We are happy to announce the arrival of the WDG CPub Playground.</source>
				</segment>
			</unit>
			<unit id="103" translate="yes">
				<segment state="initial">
					<source>Git logo</source>
				</segment>
			</unit>
			<unit id="104" translate="yes">
				<segment state="initial">
					<source>Markdown logo</source>
				</segment>
			</unit>
			<unit id="105" translate="yes">
				<segment state="initial">
					<source>Here you can experiment with markdown and GitHub to your heart's content, and then see how your markdown renders in MSDN's Open Publishing environment.</source>
				</segment>
			</unit>
			<unit id="106" translate="yes">
				<segment state="initial">
					<source>If you are already familiar with GitHub, are part of the Microsoft organization, and want to dive right in, skip down to the "Set up your personal playground" section.</source>
				</segment>
			</unit>
			<unit id="107" translate="yes">
				<segment state="initial">
					<source>If you see anything in this topic that is no longer correct or that just bothers you in some way you can't really explain, please fix it by submitting a pull request with the changes.</source>
				</segment>
			</unit>
			<unit id="108" translate="yes">
				<segment state="initial">
					<source>Sign up for GitHub and the Microsoft organization</source>
				</segment>
			</unit>
			<unit id="109" translate="yes">
				<segment state="initial">
					<source>There are two main steps in getting set up for Open Publishing on GitHub: creating a GitHub account and then connecting it to the Microsoft organization.</source>
				</segment>
			</unit>
			<unit id="110" translate="yes">
				<segment state="initial">
					<source>If you already have a GitHub account you want to use, you can skip the first step.</source>
				</segment>
			</unit>
			<unit id="111" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">[</data>
					<data id="id4">](https://github.com/)</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Sign up for GitHub</pc> -- Go to <pc dataRefEnd="id4" dataRefStart="id3" id="p2">https://github.com/</pc> and sign up as a new user.</source>
				</segment>
			</unit>
			<unit id="112" translate="yes">
				<segment state="initial">
					<source>You can use any email account you want to sign up, and your username doesn't have to match your Microsoft alias.</source>
				</segment>
			</unit>
			<unit id="113" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">[</data>
					<data id="id4">](https://opensourcehub.microsoft.com/articles/how-to-join-microsoft-github-org-self-service)</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Connect your GitHub account to your alias and the Microsoft organization</pc> -- For this step, follow the instructions found at  <pc dataRefEnd="id4" dataRefStart="id3" id="p2">https://opensourcehub.microsoft.com/articles/how-to-join-microsoft-github-org-self-service</pc>.</source>
				</segment>
			</unit>
			<unit id="114" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">[</data>
					<data id="id4">](https://opensourcehub.microsoft.com)</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>: Open Source Hub (<pc dataRefEnd="id4" dataRefStart="id3" id="p2">https://opensourcehub.microsoft.com</pc>) is where you manage your connected GitHub profile; you can also create and manage repos and teams.</source>
				</segment>
			</unit>
			<unit id="115" translate="yes">
				<segment state="initial">
					<source>Set up your own personal playground</source>
				</segment>
			</unit>
			<unit id="116" translate="yes">
				<segment state="initial">
					<source>To use the WDG CPub sandbox, all you need to do is:</source>
				</segment>
			</unit>
			<unit id="117" translate="yes">
				<originalData>
					<data id="id1">`&lt;your-alias&gt;`</data>
					<data id="id2">`wdg-cpub-test`</data>
				</originalData>
				<segment state="initial">
					<source>Create folder <ph dataRef="id1" id="ph1" /> as a child of <ph dataRef="id2" id="ph2" />.</source>
				</segment>
			</unit>
			<unit id="118" translate="yes">
				<segment state="initial">
					<source>Start marking down!</source>
				</segment>
			</unit>
			<unit id="119" translate="yes">
				<originalData>
					<data id="id1">`TOC.md`</data>
				</originalData>
				<segment state="initial">
					<source>As needed, add any topics you'd like to the <ph dataRef="id1" id="ph1" /> file to incorporate into the TOC.</source>
				</segment>
			</unit>
			<unit id="120" translate="yes">
				<segment state="initial">
					<source>The TOC uses markdown heading syntax (#, ##, etc.) to designate levels.</source>
				</segment>
			</unit>
			<unit id="121" translate="yes">
				<segment state="initial">
					<source>Learn more...</source>
				</segment>
			</unit>
			<unit id="122" translate="yes">
				<segment state="initial">
					<source>This section provides resources for learning more about using Open Publishing, Git, and markdown.</source>
				</segment>
			</unit>
			<unit id="123" translate="yes">
				<segment state="initial">
					<source>...about Open Publishing</source>
				</segment>
			</unit>
			<unit id="124" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://int.msdn.microsoft.com/en-us/openpublishing/docs/introduction)</data>
				</originalData>
				<segment state="initial">
					<source>MSDN Open Publishing (aka OP or OPS) has its own set of documentation at <pc dataRefEnd="id2" dataRefStart="id1" id="p1">https://int.msdn.microsoft.com/en-us/openpublishing/docs/introduction</pc>.</source>
				</segment>
			</unit>
			<unit id="125" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://int.msdn.microsoft.com/en-us/openpublishing/docs/partnerdocs/local-build-and-preview)</data>
				</originalData>
				<segment state="initial">
					<source>Be sure to check out the documentation on performing <pc dataRefEnd="id2" dataRefStart="id1" id="p1">local builds</pc> to see how you can preview your content locally and publish to stage simply by pushing to the master.</source>
				</segment>
			</unit>
			<unit id="126" translate="yes">
				<segment state="initial">
					<source>...about Git</source>
				</segment>
			</unit>
			<unit id="127" translate="yes">
				<segment state="initial">
					<source>There are many resources on using Git out there.</source>
				</segment>
			</unit>
			<unit id="128" translate="yes">
				<segment state="initial">
					<source>Great tutorials are available on using GitHub on GitHub itself (see the home page).</source>
				</segment>
			</unit>
			<unit id="129" translate="yes">
				<segment state="initial">
					<source>Here are some additional resources some have found helpful:</source>
				</segment>
			</unit>
			<unit id="130" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](http://git-scm.com/book/en/v2)</data>
				</originalData>
				<segment state="initial">
					<source>Pro Git online book -- <pc dataRefEnd="id2" dataRefStart="id1" id="p1">http://git-scm.com/book/en/v2</pc></source>
				</segment>
			</unit>
			<unit id="131" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](http://www.sbf5.com/~cduan/technical/git/)</data>
				</originalData>
				<segment state="initial">
					<source>Online Git tutorial -- <pc dataRefEnd="id2" dataRefStart="id1" id="p1">http://www.sbf5.com/~cduan/technical/git/</pc></source>
				</segment>
			</unit>
			<unit id="132" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](http://githowto.com/)</data>
				</originalData>
				<segment state="initial">
					<source>Git guided tour -- <pc dataRefEnd="id2" dataRefStart="id1" id="p1">http://githowto.com/</pc></source>
				</segment>
			</unit>
			<unit id="133" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](http://sethrobertson.github.io/GitBestPractices/)</data>
				</originalData>
				<segment state="initial">
					<source>Blog post on Git best practices -- <pc dataRefEnd="id2" dataRefStart="id1" id="p1">http://sethrobertson.github.io/GitBestPractices/</pc></source>
				</segment>
			</unit>
			<unit id="134" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](http://pcottle.github.io/learnGitBranching/)</data>
				</originalData>
				<segment state="initial">
					<source>Tutorial on Git branching -- <pc dataRefEnd="id2" dataRefStart="id1" id="p1">http://pcottle.github.io/learnGitBranching/</pc></source>
				</segment>
			</unit>
			<unit id="135" translate="yes">
				<segment state="initial">
					<source>...about markdown</source>
				</segment>
			</unit>
			<unit id="136" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](http://daringfireball.net/projects/markdown/)</data>
				</originalData>
				<segment state="initial">
					<source>Markdown syntax guides are rampant on the Internet, so feel free to search for one you like, but a good introductory one that also talks about the format's goals and the thinking behind it, is <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Daring Fireball</pc>.</source>
				</segment>
			</unit>
			<unit id="137" translate="yes">
				<segment state="initial">
					<source>Choosing the right tools</source>
				</segment>
			</unit>
			<unit id="138" translate="yes">
				<segment state="initial">
					<source>WDG CPub currently doesn't provide any specific recommendation around which tools you should use for doing markdown authoring and interacting with the repo.</source>
				</segment>
			</unit>
			<unit id="139" translate="yes">
				<segment state="initial">
					<source>What follows are some options that some have recommended over the past year of various pilot projects.</source>
				</segment>
			</unit>
			<unit id="140" translate="yes">
				<segment state="initial">
					<source>If you come across a tool that you think works better, please add it here and tell us why it works so well.</source>
				</segment>
			</unit>
			<unit id="141" translate="yes">
				<segment state="initial">
					<source>Markdown editing</source>
				</segment>
			</unit>
			<unit id="142" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">[</data>
					<data id="id4">](https://code.visualstudio.com/)</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">VS Code</pc></pc> -- the new lightweight IDE from Visual Studio has markdown text support (and Git as well).</source>
				</segment>
			</unit>
			<unit id="143" translate="yes">
				<segment state="initial">
					<source>Many Microsoft markdown authors have become fans of this.</source>
				</segment>
			</unit>
			<unit id="144" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">[</data>
					<data id="id4">](http://www.markdownpad.com/)</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">MarkdownPad Pro</pc></pc> -- A very good full-featured editor; real-time preview is excellent.</source>
				</segment>
			</unit>
			<unit id="145" translate="yes">
				<segment state="initial">
					<source>A $15 license needed to use the Pro version which is required to use GitHub-flavored markdown (GFM).</source>
				</segment>
			</unit>
			<unit id="146" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">[</data>
					<data id="id4">](http://atom.io)</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Atom</pc></pc> -- An extensible text editor that comes with packages that provide markdown preview as well as GitHub integration.</source>
				</segment>
			</unit>
			<unit id="147" translate="yes">
				<segment state="initial">
					<source>Additional packages and updates are constantly being developed.</source>
				</segment>
			</unit>
			<unit id="148" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Notepad</pc> -- For the lover of simplicity.</source>
				</segment>
			</unit>
			<unit id="149" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Visual Studio</pc> -- The Markdown Mode plugin provides real-time preview, although as of press time it hasn't been confirmed that it works with VS 2016.</source>
				</segment>
			</unit>
			<unit id="150" translate="yes">
				<segment state="initial">
					<source>The Web Essentialls plugin/extension provides a preview and syntax highlighting for .md files in VS2015.</source>
				</segment>
			</unit>
			<unit id="151" translate="yes">
				<segment state="initial">
					<source>Git management</source>
				</segment>
			</unit>
			<unit id="152" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">[</data>
					<data id="id4">](https://github.com)</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">GitHub</pc></pc> -- You can go quite a ways just using the basic GitHub web UI; you can modify content and push directly or create pull requests.</source>
				</segment>
			</unit>
			<unit id="153" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">[</data>
					<data id="id4">](https://git-for-windows.github.io/)</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">GitHub Desktop</pc></pc> -- Allows you to manage different repos and handle merge conflicts.</source>
				</segment>
			</unit>
			<unit id="154" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">[</data>
					<data id="id4">](https://tortoisegit.org/)</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Tortoise Git</pc></pc> -- Once installed, you interact with Git by using contextual menu commands in your local repository.</source>
				</segment>
			</unit>
			<unit id="155" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">[</data>
					<data id="id4">](https://www.atlassian.com/software/sourcetree/overview)</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SourceTree</pc></pc> -- Git management through a GUI; more straightforward than GitHub Desktop, this is recommended for those who prefer not to use a command-line interface.</source>
				</segment>
			</unit>
			<unit id="156" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">[</data>
					<data id="id4">](https://confluence.atlassian.com/display/SOURCETREEKB/Two-Factor+Authentication+%282FA%29+with+GitHub+in+SourceTree)</data>
				</originalData>
				<segment state="initial">
					<source>(<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note:</pc> Because you've enabled two-factor authentication, you'll need to use a personal access token as your password to clone your repo with SourceTree; see instructions <pc dataRefEnd="id4" dataRefStart="id3" id="p2">here</pc>.)</source>
				</segment>
			</unit>
			<unit id="157" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">[</data>
					<data id="id4">](https://github.com/dahlbyk/posh-git)</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">PoshGit</pc></pc> -- Integrates Git commands with PowerShell.</source>
				</segment>
			</unit>
			<unit id="158" translate="yes">
				<segment state="initial">
					<source>PowerShell lovers, this is the one for you.</source>
				</segment>
			</unit>
			<unit id="159" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">[</data>
					<data id="id4">](http://www.git-scm.com/downloads)</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Git-Scm</pc></pc> -- Git on the command line.</source>
				</segment>
			</unit>
			<unit id="160" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](http://jblevins.org/projects/markdown-mode/)</data>
				</originalData>
				<segment state="initial">
					<source>Get yourself some markdown in Emacs (which does <pc dataRefEnd="id2" dataRefStart="id1" id="p1">exist</pc>), and you're kicking it old school.</source>
				</segment>
			</unit>
			<unit id="161" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">[</data>
					<data id="id4">](https://code.visualstudio.com/)</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Visual Studio/<pc dataRefEnd="id4" dataRefStart="id3" id="p2">VS Code</pc></pc> -- These integrate well with GitHub repos as well as VSO.</source>
				</segment>
			</unit>
			<unit id="162" translate="yes">
				<segment state="initial">
					<source>VS2015 also has GitHub repo integration straight out of the box.</source>
				</segment>
			</unit>
			<unit id="163" translate="yes">
				<segment state="initial">
					<source>Tips and Tricks</source>
				</segment>
			</unit>
			<unit id="164" translate="yes">
				<segment state="initial">
					<source>This section is intended for random links to items of interest:</source>
				</segment>
			</unit>
			<unit id="165" translate="yes">
				<segment state="initial">
					<source>Command line phobic?</source>
				</segment>
			</unit>
			<unit id="166" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](../jasgro/tools-for-beginners.md)</data>
				</originalData>
				<segment state="initial">
					<source>Check out <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Recommended tools for beginners</pc> for a recommendation on how to get started.</source>
				</segment>
			</unit>
			<unit id="167" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](../tedhudek/wdcml-to-open-publish.md)</data>
					<data id="id3">[</data>
					<data id="id4">](../tedhudek/markdown-tips.md)</data>
				</originalData>
				<segment state="initial">
					<source>See Ted Hudek's tips for <pc dataRefEnd="id2" dataRefStart="id1" id="p1">converting WDCML to markdown</pc> and his crowd-pleasing <pc dataRefEnd="id4" dataRefStart="id3" id="p2">markdown tips</pc>.</source>
				</segment>
			</unit>
			<unit id="168" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](../domars/Directions_To_Update_Existing_Topic_Using_Browser.md)</data>
				</originalData>
				<segment state="initial">
					<source>Don Marshall has put together instructions for <pc dataRefEnd="id2" dataRefStart="id1" id="p1">editing content through the GitHub UI</pc> which can be a very painless way to make quick updates.</source>
				</segment>
			</unit>
		</group>
	</file>
</xliff>