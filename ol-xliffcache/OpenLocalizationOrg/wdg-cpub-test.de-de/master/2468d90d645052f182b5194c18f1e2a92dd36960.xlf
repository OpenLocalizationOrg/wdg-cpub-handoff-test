<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="de-de" version="2.0" xml:space="preserve" xmlns="urn:oasis:names:tc:xliff:document:2.0">
	<file id="1">
		<mda:metadata>
			<mda:metaGroup>
				<mda:meta type="tool-id">mdxliff</mda:meta>
				<mda:meta type="tool-name">mdxliff</mda:meta>
				<mda:meta type="tool-version">1.0-00ddeee</mda:meta>
				<mda:meta type="tool-company">Microsoft</mda:meta>
			</mda:metaGroup>
		<mda:metaGroup><mda:meta type="olfilehash">2468d90d645052f182b5194c18f1e2a92dd36960</mda:meta><mda:meta type="olfilepath">wdg-cpub-test\ndolci2\controls-and-patterns\dialogs-popups-menus.md</mda:meta><mda:meta type="oltranslationpriority"></mda:meta><mda:meta type="oltranslationtype">Human Translation</mda:meta><mda:meta type="olskeletonhash">57167922d3e9cdaa18438589ac440043fe58c9fb</mda:meta><mda:meta type="olxliffhash">347efb0597729e77e7d62d16cad6a8af8d205f50</mda:meta></mda:metaGroup></mda:metadata>
		<group id="content">
			<unit id="101" translate="yes">
				<segment state="initial">
					<source>A flyout is a lightweight popup that is used to temporarily show UI that is related to what the user is currently doing.</source>
					<target>A flyout is a lightweight popup that is used to temporarily show UI that is related to what the user is currently doing.</target>
				</segment>
			</unit>
			<unit id="102" translate="yes">
				<segment state="initial">
					<source>Context menus and dialogs</source>
					<target>Context menus and dialogs</target>
				</segment>
			</unit>
			<unit id="103" translate="yes">
				<segment state="initial">
					<source>Menus, dialogs, and popups</source>
					<target>Menus, dialogs, and popups</target>
				</segment>
			</unit>
			<unit id="104" translate="yes">
				<segment state="initial">
					<source>Menus, dialogs, and popups display transient UI elements that appear when the user requests them or when something happens that requires notification or approval.</source>
					<target>Menus, dialogs, and popups display transient UI elements that appear when the user requests them or when something happens that requires notification or approval.</target>
				</segment>
			</unit>
			<unit id="105" translate="yes">
				<segment state="initial">
					<source>Important APIs</source>
					<target>Important APIs</target>
				</segment>
			</unit>
			<unit id="106" translate="yes">
				<segment state="initial">
					<source>MenuFlyout class (XAML)</source>
					<target>MenuFlyout class (XAML)</target>
				</segment>
			</unit>
			<unit id="107" translate="yes">
				<segment state="initial">
					<source>Flyout class (XAML)</source>
					<target>Flyout class (XAML)</target>
				</segment>
			</unit>
			<unit id="108" translate="yes">
				<segment state="initial">
					<source>A context menu provides the user with instant actions.</source>
					<target>A context menu provides the user with instant actions.</target>
				</segment>
			</unit>
			<unit id="109" translate="yes">
				<segment state="initial">
					<source>It can be filled with custom commands.</source>
					<target>It can be filled with custom commands.</target>
				</segment>
			</unit>
			<unit id="110" translate="yes">
				<segment state="initial">
					<source>Context menus can be dismissed by tapping or clicking somewhere outside the menu.</source>
					<target>Context menus can be dismissed by tapping or clicking somewhere outside the menu.</target>
				</segment>
			</unit>
			<unit id="111" translate="yes">
				<segment state="initial">
					<source>Dialogs are modal UI overlays that provide contextual app information.</source>
					<target>Dialogs are modal UI overlays that provide contextual app information.</target>
				</segment>
			</unit>
			<unit id="112" translate="yes">
				<segment state="initial">
					<source>In most cases, dialogs block interactions with the app window until being explicitly dismissed, and often request some kind of action from the user.</source>
					<target>In most cases, dialogs block interactions with the app window until being explicitly dismissed, and often request some kind of action from the user.</target>
				</segment>
			</unit>
			<unit id="113" translate="yes">
				<segment state="initial">
					<source>A popup, also known as a flyout, is a lightweight contextual popup that displays UI related to what the user is doing.</source>
					<target>A popup, also known as a flyout, is a lightweight contextual popup that displays UI related to what the user is doing.</target>
				</segment>
			</unit>
			<unit id="114" translate="yes">
				<segment state="initial">
					<source>It includes placement and sizing logic, and can be used to show a menu, reveal a hidden control, show more detail about an item, or ask the user to confirm an action.</source>
					<target>It includes placement and sizing logic, and can be used to show a menu, reveal a hidden control, show more detail about an item, or ask the user to confirm an action.</target>
				</segment>
			</unit>
			<unit id="115" translate="yes">
				<segment state="initial">
					<source>Popups can be dismissed by tapping or clicking somewhere outside the popup.</source>
					<target>Popups can be dismissed by tapping or clicking somewhere outside the popup.</target>
				</segment>
			</unit>
			<unit id="116" translate="yes">
				<segment state="initial">
					<source>Is this the right control?</source>
					<target>Is this the right control?</target>
				</segment>
			</unit>
			<unit id="117" translate="yes">
				<segment state="initial">
					<source>Context menus can be used for:</source>
					<target>Context menus can be used for:</target>
				</segment>
			</unit>
			<unit id="118" translate="yes">
				<segment state="initial">
					<source>Contextual actions on text selections, such as Copy, Cut, Paste, Check Spelling, and so on.</source>
					<target>Contextual actions on text selections, such as Copy, Cut, Paste, Check Spelling, and so on.</target>
				</segment>
			</unit>
			<unit id="119" translate="yes">
				<segment state="initial">
					<source>Clipboard commands.</source>
					<target>Clipboard commands.</target>
				</segment>
			</unit>
			<unit id="120" translate="yes">
				<segment state="initial">
					<source>Custom commands.</source>
					<target>Custom commands.</target>
				</segment>
			</unit>
			<unit id="121" translate="yes">
				<segment state="initial">
					<source>Commands for an object that must be acted upon but that can't be selected or otherwise indicated.</source>
					<target>Commands for an object that must be acted upon but that can't be selected or otherwise indicated.</target>
				</segment>
			</unit>
			<unit id="122" translate="yes">
				<segment state="initial">
					<source>Dialogs can be used for:</source>
					<target>Dialogs can be used for:</target>
				</segment>
			</unit>
			<unit id="123" translate="yes">
				<segment state="initial">
					<source>Expressing important information that the user must read and acknowledge before proceeding.</source>
					<target>Expressing important information that the user must read and acknowledge before proceeding.</target>
				</segment>
			</unit>
			<unit id="124" translate="yes">
				<segment state="initial">
					<source>Requesting a clear action from the user or communicating an important message that the user should acknowledge.</source>
					<target>Requesting a clear action from the user or communicating an important message that the user should acknowledge.</target>
				</segment>
			</unit>
			<unit id="125" translate="yes">
				<segment state="initial">
					<source>Examples include:</source>
					<target>Examples include:</target>
				</segment>
			</unit>
			<unit id="126" translate="yes">
				<segment state="initial">
					<source>When the user's security might be compromised</source>
					<target>When the user's security might be compromised</target>
				</segment>
			</unit>
			<unit id="127" translate="yes">
				<segment state="initial">
					<source>When the user is about to permanently alter a valuable asset</source>
					<target>When the user is about to permanently alter a valuable asset</target>
				</segment>
			</unit>
			<unit id="128" translate="yes">
				<segment state="initial">
					<source>When the user is about to delete a valuable asset</source>
					<target>When the user is about to delete a valuable asset</target>
				</segment>
			</unit>
			<unit id="129" translate="yes">
				<segment state="initial">
					<source>To confirm an in-app purchase</source>
					<target>To confirm an in-app purchase</target>
				</segment>
			</unit>
			<unit id="130" translate="yes">
				<segment state="initial">
					<source>Error messages that apply to the overall app context, such as a connectivity error.</source>
					<target>Error messages that apply to the overall app context, such as a connectivity error.</target>
				</segment>
			</unit>
			<unit id="131" translate="yes">
				<segment state="initial">
					<source>Questions, when the app needs to ask the user a blocking question, such as when the app can't choose on the user's behalf.</source>
					<target>Questions, when the app needs to ask the user a blocking question, such as when the app can't choose on the user's behalf.</target>
				</segment>
			</unit>
			<unit id="132" translate="yes">
				<segment state="initial">
					<source>A blocking question can't be ignored or postponed, and should offer the user well-defined choices.</source>
					<target>A blocking question can't be ignored or postponed, and should offer the user well-defined choices.</target>
				</segment>
			</unit>
			<unit id="133" translate="yes">
				<segment state="initial">
					<source>Popups (flyouts) can be used for:</source>
					<target>Popups (flyouts) can be used for:</target>
				</segment>
			</unit>
			<unit id="134" translate="yes">
				<segment state="initial">
					<source>Contextual, transient UI.</source>
					<target>Contextual, transient UI.</target>
				</segment>
			</unit>
			<unit id="135" translate="yes">
				<segment state="initial">
					<source>Warnings and confirmations, including ones related to potentially destructive actions.</source>
					<target>Warnings and confirmations, including ones related to potentially destructive actions.</target>
				</segment>
			</unit>
			<unit id="136" translate="yes">
				<segment state="initial">
					<source>Displaying more information, such as details about an item on the screen.</source>
					<target>Displaying more information, such as details about an item on the screen.</target>
				</segment>
			</unit>
			<unit id="137" translate="yes">
				<segment state="initial">
					<source>Second-level menus.</source>
					<target>Second-level menus.</target>
				</segment>
			</unit>
			<unit id="138" translate="yes">
				<segment state="initial">
					<source>Custom commands.</source>
					<target>Custom commands.</target>
				</segment>
			</unit>
			<unit id="139" translate="yes">
				<segment state="initial">
					<source>Examples</source>
					<target>Examples</target>
				</segment>
			</unit>
			<unit id="140" translate="yes">
				<segment state="initial">
					<source>Here's a typical single-pane context menu.</source>
					<target>Here's a typical single-pane context menu.</target>
				</segment>
			</unit>
			<unit id="141" translate="yes">
				<segment state="initial">
					<source>This would be used for a shorter list of simple commands.</source>
					<target>This would be used for a shorter list of simple commands.</target>
				</segment>
			</unit>
			<unit id="142" translate="yes">
				<segment state="initial">
					<source>Use separators as needed to group similar commands.</source>
					<target>Use separators as needed to group similar commands.</target>
				</segment>
			</unit>
			<unit id="143" translate="yes">
				<segment state="initial">
					<source>Example of a typical context menu</source>
					<target>Example of a typical context menu</target>
				</segment>
			</unit>
			<unit id="144" translate="yes">
				<segment state="initial">
					<source>A cascading context menu would be used for a more comprehensive collection of commands.</source>
					<target>A cascading context menu would be used for a more comprehensive collection of commands.</target>
				</segment>
			</unit>
			<unit id="145" translate="yes">
				<segment state="initial">
					<source>It features one flyout level and can scroll.</source>
					<target>It features one flyout level and can scroll.</target>
				</segment>
			</unit>
			<unit id="146" translate="yes">
				<segment state="initial">
					<source>Use separators as needed to group similar commands.</source>
					<target>Use separators as needed to group similar commands.</target>
				</segment>
			</unit>
			<unit id="147" translate="yes">
				<segment state="initial">
					<source>Example of a cascading context menu</source>
					<target>Example of a cascading context menu</target>
				</segment>
			</unit>
			<unit id="148" translate="yes">
				<segment state="initial">
					<source>This is an example of a full-screen, single-button confirmation dialog.</source>
					<target>This is an example of a full-screen, single-button confirmation dialog.</target>
				</segment>
			</unit>
			<unit id="149" translate="yes">
				<segment state="initial">
					<source>With this kind of dialog, the user is presented with a fair amount of information that they're expected to read before pressing the button to proceed.</source>
					<target>With this kind of dialog, the user is presented with a fair amount of information that they're expected to read before pressing the button to proceed.</target>
				</segment>
			</unit>
			<unit id="150" translate="yes">
				<segment state="initial">
					<source>Example of a full-page, single-button dialog</source>
					<target>Example of a full-page, single-button dialog</target>
				</segment>
			</unit>
			<unit id="151" translate="yes">
				<segment state="initial">
					<source>Here's an example of a two-button dialog that presents the user with an A/B choice.</source>
					<target>Here's an example of a two-button dialog that presents the user with an A/B choice.</target>
				</segment>
			</unit>
			<unit id="152" translate="yes">
				<segment state="initial">
					<source>Generally, the amount of information presented in this dialog is brief.</source>
					<target>Generally, the amount of information presented in this dialog is brief.</target>
				</segment>
			</unit>
			<unit id="153" translate="yes">
				<segment state="initial">
					<source>Example of a full-button dialog</source>
					<target>Example of a full-button dialog</target>
				</segment>
			</unit>
			<unit id="154" translate="yes">
				<segment state="initial">
					<source>Usage guidance</source>
					<target>Usage guidance</target>
				</segment>
			</unit>
			<unit id="155" translate="yes">
				<segment state="initial">
					<source>Context menus</source>
					<target>Context menus</target>
				</segment>
			</unit>
			<unit id="156" translate="yes">
				<segment state="initial">
					<source>Use a separator between groups of commands in a context menu to:</source>
					<target>Use a separator between groups of commands in a context menu to:</target>
				</segment>
			</unit>
			<unit id="157" translate="yes">
				<segment state="initial">
					<source>Distinguish groups of related commands.</source>
					<target>Distinguish groups of related commands.</target>
				</segment>
			</unit>
			<unit id="158" translate="yes">
				<segment state="initial">
					<source>Group together sets of commands.</source>
					<target>Group together sets of commands.</target>
				</segment>
			</unit>
			<unit id="159" translate="yes">
				<segment state="initial">
					<source>Divide a predictable set of commands, such as clipboard commands (Cut / Copy / Paste), from app-specific or view-specific commands.</source>
					<target>Divide a predictable set of commands, such as clipboard commands (Cut / Copy / Paste), from app-specific or view-specific commands.</target>
				</segment>
			</unit>
			<unit id="160" translate="yes">
				<segment state="initial">
					<source>On laptops and desktops, context menus and tooltips aren't limited to the application window and can paint outside of it.</source>
					<target>On laptops and desktops, context menus and tooltips aren't limited to the application window and can paint outside of it.</target>
				</segment>
			</unit>
			<unit id="161" translate="yes">
				<segment state="initial">
					<source>If the app tries to render a context menu completely outside of its window, an exception will be thrown.</source>
					<target>If the app tries to render a context menu completely outside of its window, an exception will be thrown.</target>
				</segment>
			</unit>
			<unit id="162" translate="yes">
				<segment state="initial">
					<source>Dialogs</source>
					<target>Dialogs</target>
				</segment>
			</unit>
			<unit id="163" translate="yes">
				<segment state="initial">
					<source>Clearly identify the issue or the user's objective in the first line of the dialog's text.</source>
					<target>Clearly identify the issue or the user's objective in the first line of the dialog's text.</target>
				</segment>
			</unit>
			<unit id="164" translate="yes">
				<segment state="initial">
					<source>The dialog title is the main instruction and is optional.</source>
					<target>The dialog title is the main instruction and is optional.</target>
				</segment>
			</unit>
			<unit id="165" translate="yes">
				<segment state="initial">
					<source>Use a short title to explain what people need to do with the dialog.</source>
					<target>Use a short title to explain what people need to do with the dialog.</target>
				</segment>
			</unit>
			<unit id="166" translate="yes">
				<segment state="initial">
					<source>Long titles do not wrap and are truncated.</source>
					<target>Long titles do not wrap and are truncated.</target>
				</segment>
			</unit>
			<unit id="167" translate="yes">
				<segment state="initial">
					<source>If you're using the dialog to deliver a simple message, error or question, you can optionally omit the title.</source>
					<target>If you're using the dialog to deliver a simple message, error or question, you can optionally omit the title.</target>
				</segment>
			</unit>
			<unit id="168" translate="yes">
				<segment state="initial">
					<source>Rely on the content text to deliver that core information.</source>
					<target>Rely on the content text to deliver that core information.</target>
				</segment>
			</unit>
			<unit id="169" translate="yes">
				<segment state="initial">
					<source>Make sure that the title relates directly to the button choices.</source>
					<target>Make sure that the title relates directly to the button choices.</target>
				</segment>
			</unit>
			<unit id="170" translate="yes">
				<segment state="initial">
					<source>The dialog content contains the descriptive text and is required.</source>
					<target>The dialog content contains the descriptive text and is required.</target>
				</segment>
			</unit>
			<unit id="171" translate="yes">
				<segment state="initial">
					<source>Present the message, error, or blocking question as simply as possible.</source>
					<target>Present the message, error, or blocking question as simply as possible.</target>
				</segment>
			</unit>
			<unit id="172" translate="yes">
				<segment state="initial">
					<source>If a dialog title is used, use the content area to provide more detail or define terminology.</source>
					<target>If a dialog title is used, use the content area to provide more detail or define terminology.</target>
				</segment>
			</unit>
			<unit id="173" translate="yes">
				<segment state="initial">
					<source>Don't repeat the title with slightly different wording.</source>
					<target>Don't repeat the title with slightly different wording.</target>
				</segment>
			</unit>
			<unit id="174" translate="yes">
				<segment state="initial">
					<source>At least one dialog button must appear.</source>
					<target>At least one dialog button must appear.</target>
				</segment>
			</unit>
			<unit id="175" translate="yes">
				<segment state="initial">
					<source>Use buttons with text that identifies specific responses to the main instruction or content.</source>
					<target>Use buttons with text that identifies specific responses to the main instruction or content.</target>
				</segment>
			</unit>
			<unit id="176" translate="yes">
				<segment state="initial">
					<source>An example is, "Do you want to allow AppName to access your location?", followed by "Allow" and "Block" buttons.</source>
					<target>An example is, "Do you want to allow AppName to access your location?", followed by "Allow" and "Block" buttons.</target>
				</segment>
			</unit>
			<unit id="177" translate="yes">
				<segment state="initial">
					<source>Specific responses can be understood more quickly, resulting in efficient decision making.</source>
					<target>Specific responses can be understood more quickly, resulting in efficient decision making.</target>
				</segment>
			</unit>
			<unit id="178" translate="yes">
				<segment state="initial">
					<source>Error dialogs display the error message in the dialog box, along with any pertinent information.</source>
					<target>Error dialogs display the error message in the dialog box, along with any pertinent information.</target>
				</segment>
			</unit>
			<unit id="179" translate="yes">
				<segment state="initial">
					<source>The only button used in an error dialog should be “Close” or a similar action.</source>
					<target>The only button used in an error dialog should be “Close” or a similar action.</target>
				</segment>
			</unit>
			<unit id="180" translate="yes">
				<segment state="initial">
					<source>Don't use dialogs for errors that are contextual to a specific place on the page, such as validation errors (in password fields, for example), use the app's canvas itself to show inline errors.</source>
					<target>Don't use dialogs for errors that are contextual to a specific place on the page, such as validation errors (in password fields, for example), use the app's canvas itself to show inline errors.</target>
				</segment>
			</unit>
			<unit id="181" translate="yes">
				<segment state="initial">
					<source>Popups</source>
					<target>Popups</target>
				</segment>
			</unit>
			<unit id="182" translate="yes">
				<segment state="initial">
					<source>As with other contextual UI, place a popup next to the point from which it's called.</source>
					<target>As with other contextual UI, place a popup next to the point from which it's called.</target>
				</segment>
			</unit>
			<unit id="183" translate="yes">
				<segment state="initial">
					<source>Specify the object to which you want the popup anchored, and the side of the object on which the popup will appear.</source>
					<target>Specify the object to which you want the popup anchored, and the side of the object on which the popup will appear.</target>
				</segment>
			</unit>
			<unit id="184" translate="yes">
				<segment state="initial">
					<source>Try to position the popup so that it doesn’t block important UI.</source>
					<target>Try to position the popup so that it doesn’t block important UI.</target>
				</segment>
			</unit>
			<unit id="185" translate="yes">
				<segment state="initial">
					<source>The popup should be dismissed as soon as something in it is selected.</source>
					<target>The popup should be dismissed as soon as something in it is selected.</target>
				</segment>
			</unit>
			<unit id="186" translate="yes">
				<segment state="initial">
					<source>Popup menus work best with just one level.</source>
					<target>Popup menus work best with just one level.</target>
				</segment>
			</unit>
			<unit id="187" translate="yes">
				<segment state="initial">
					<source>Multiple popup menu levels are difficult to navigate and provide a poor user experience.</source>
					<target>Multiple popup menu levels are difficult to navigate and provide a poor user experience.</target>
				</segment>
			</unit>
			<unit id="188" translate="yes">
				<segment state="initial">
					<source>Recommendations</source>
					<target>Recommendations</target>
				</segment>
			</unit>
			<unit id="189" translate="yes">
				<segment state="initial">
					<source>Keep context menu commands short.</source>
					<target>Keep context menu commands short.</target>
				</segment>
			</unit>
			<unit id="190" translate="yes">
				<segment state="initial">
					<source>Longer commands end up being truncated.</source>
					<target>Longer commands end up being truncated.</target>
				</segment>
			</unit>
			<unit id="191" translate="yes">
				<segment state="initial">
					<source>Use sentence capitalization for each command name.</source>
					<target>Use sentence capitalization for each command name.</target>
				</segment>
			</unit>
			<unit id="192" translate="yes">
				<segment state="initial">
					<source>In any context menu, show the fewest possible number of commands.</source>
					<target>In any context menu, show the fewest possible number of commands.</target>
				</segment>
			</unit>
			<unit id="193" translate="yes">
				<segment state="initial">
					<source>If direct manipulation of a UI element is possible, avoid placing that command within a context menu.</source>
					<target>If direct manipulation of a UI element is possible, avoid placing that command within a context menu.</target>
				</segment>
			</unit>
			<unit id="194" translate="yes">
				<segment state="initial">
					<source>A context menu should be reserved for contextual commands that aren't otherwise discoverable on-screen.</source>
					<target>A context menu should be reserved for contextual commands that aren't otherwise discoverable on-screen.</target>
				</segment>
			</unit>
			<unit id="195" translate="yes">
				<segment state="initial">
					<source>\[This article contains information that is specific to Universal Windows Platform (UWP) apps and Windows 10.</source>
					<target>\[This article contains information that is specific to Universal Windows Platform (UWP) apps and Windows 10.</target>
				</segment>
			</unit>
			<unit id="196" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://go.microsoft.com/fwlink/p/?linkid=258743)</data>
				</originalData>
				<segment state="initial">
					<source>For Windows 8.1 guidance, please download the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Windows 8.1 guidelines PDF</pc>.\]</source>
					<target>For Windows 8.1 guidance, please download the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Windows 8.1 guidelines PDF</pc>.\]</target>
				</segment>
			</unit>
			<unit id="197" translate="yes">
				<segment state="initial">
					<source>Related topics</source>
					<target>Related topics</target>
				</segment>
			</unit>
			<unit id="198" translate="yes">
				<segment state="initial">
					<source>For developers</source>
					<target>For developers</target>
				</segment>
			</unit>
			<unit id="199" translate="yes">
				<segment state="initial">
					<source>MenuFlyout class</source>
					<target>MenuFlyout class</target>
				</segment>
			</unit>
			<unit id="200" translate="yes">
				<segment state="initial">
					<source>Flyout class</source>
					<target>Flyout class</target>
				</segment>
			</unit>
		</group>
	</file>
</xliff>