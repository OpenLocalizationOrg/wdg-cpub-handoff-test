{"nodes":[{"pos":[66,214],"content":"This topic provides an overview of how to add PlayReady hardware-based digital rights management (DRM) to your Universal Windows Platform (UWP) app.","needQuote":true,"needEscape":true,"nodes":[{"content":"This topic provides an overview of how to add PlayReady hardware-based digital rights management (DRM) to your Universal Windows Platform (UWP) app.","pos":[0,148]}]},{"pos":[222,234],"content":"Hardware DRM","needQuote":true,"needEscape":true,"nodes":[{"content":"Hardware DRM","pos":[0,12]}]},{"content":"Hardware DRM","pos":[242,254]},{"content":"\\[ Updated for UWP apps on Windows 10.","pos":[256,294]},{"content":"For Windows 8.x articles, see the <bpt id=\"p1\">[</bpt>archive<ept id=\"p1\">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept> \\]","pos":[295,390],"source":" For Windows 8.x articles, see the [archive](http://go.microsoft.com/fwlink/p/?linkid=619132) \\]"},{"content":"This topic provides an overview of how to add PlayReady hardware-based digital rights management (DRM) to your Universal Windows Platform (UWP) app.","pos":[393,541]},{"content":"<bpt id=\"p1\">**</bpt>Note<ept id=\"p1\">**</ept>  Hardware-based DRM is only supported on certain hardware with a Windows 10 version of that hardware's firmware.","pos":[543,664],"source":"**Note**  Hardware-based DRM is only supported on certain hardware with a Windows 10 version of that hardware's firmware."},{"content":"Refer to the <bpt id=\"p1\">[</bpt>PlayReady Compliance and Robustness Rules<ept id=\"p1\">](http://www.microsoft.com/playready/licensing/compliance/)</ept> for more information on the guarantees provided.","pos":[665,828],"source":" Refer to the [PlayReady Compliance and Robustness Rules](http://www.microsoft.com/playready/licensing/compliance/) for more information on the guarantees provided."},{"content":"Increasingly, content providers are moving towards hardware-based protections for granting permission to play back full high value content in apps.","pos":[830,977]},{"content":"Robust support for a hardware implementation of the cryptographic core has been added to PlayReady to meet this need.","pos":[978,1095]},{"content":"This support enables secure playback of high definition (1080p) and ultra-high definition (UHD) content on multiple device platforms.","pos":[1096,1229]},{"content":"Key material (including private keys, content keys, and any other key material used to derive or unlock said keys), and decrypted compressed and uncompressed video samples are protected by leveraging hardware security.","pos":[1230,1448]},{"content":"Windows TEE Implementation","pos":[1453,1479]},{"content":"This topic provides a brief overview of how Windows 10 implements the trusted execution environment.","pos":[1481,1581]},{"content":"The details of the Windows TEE implementation is out of scope for this document.","pos":[1583,1663]},{"content":"However, a brief discussion of the difference between the standard porting kit TEE port and the Windows port will be beneficial.","pos":[1664,1792]},{"content":"Windows implements the OEM proxy layer and transfers the serialized PRITEE functions calls to a user mode driver in the Windows Media Foundation subsystem.","pos":[1793,1948]},{"content":"This will eventually get routed to either the Windows TrEE (Trusted Execution Environment) driver or the OEM’s graphics driver.","pos":[1949,2076]},{"content":"The details of either of these approaches is out of scope for this document.","pos":[2077,2153]},{"content":"The following diagram shows the general component interaction for the Windows port.","pos":[2154,2237]},{"content":"If you want to develop a Windows PlayReady TEE implementation, you can contact <bpt id=\"p1\">&lt;</bpt>WMLA@Microsoft.com<ept id=\"p1\">&gt;</ept>.","pos":[2238,2338],"source":" If you want to develop a Windows PlayReady TEE implementation, you can contact <WMLA@Microsoft.com>."},{"content":"windows tee component diagram","pos":[2342,2371]},{"content":"Considerations for Using Hardware DRM","pos":[2419,2456]},{"content":"This topic provides a brief list of things that should be considered when developing apps designed to use hardware DRM.","pos":[2458,2577]},{"content":"Protected Media Process (PMP) is not supported.","pos":[2583,2630]},{"content":"Output protection level (OPL) 270 support (no down resolution).","pos":[2635,2698]},{"content":"Microsoft recommends that high definition content for hardware DRM have an OPL greater than 270 (although it is not required).","pos":[2699,2825]},{"content":"An OPL of greater than 270 means HDCP is required.","pos":[2826,2876]},{"content":"Additionally, Microsoft recommends you set HDCP type 1 (version 2.2 or later).","pos":[2877,2955]},{"content":"Unlike software DRM, output protections are enforced on all monitors based on the least capable monitor.","pos":[2960,3064]},{"content":"For example, if the user has two monitors connected where one of the monitors supports HDCP and the other does not, playback will fail if the license requires HDCP even if the content is only being rendered on the monitor that supports HDCP.","pos":[3065,3306]},{"content":"In software DRM, content would play back as long as it is only being rendered on the monitor that supports HDCP.","pos":[3307,3419]},{"content":"Hardware DRM is not guaranteed to be used by the client and secure unless the following conditions are met by the content keys and licenses:","pos":[3424,3564]},{"content":"Audio must be in the clear or be encrypted to a different content key than video.","pos":[3573,3654]},{"content":"Microsoft recommends that the audio be in the clear to improve playback performance.","pos":[3655,3739]},{"content":"The license used for the video content key must have a security level of 3000.","pos":[3748,3826]},{"content":"Multiple graphics processing units (GPUs) are not supported for persistent licenses.","pos":[3831,3915]},{"content":"To handle persistent licenses on machines with multiple GPUs, consider the following scenario:","pos":[3917,4011]},{"content":"A customer buys a new machine with an integrated graphics card.","pos":[4017,4080]},{"content":"The customer uses an app that acquires persistent licenses while using hardware DRM.","pos":[4085,4169]},{"content":"The persistent license is now bound to that graphics card’s hardware keys.","pos":[4174,4248]},{"content":"The customer then installs a new graphics card.","pos":[4253,4300]},{"content":"All licenses in the hashed data store (HDS) are bound to the integrated video card, but the customer now wants to play back protected content using the newly-installed graphics card.","pos":[4305,4487]},{"content":"In order to prevent playback from failing because the licenses can’t be decrypted by the hardware, PlayReady uses a separate hashed data store (HDS) for each graphics card that it encounters.","pos":[4489,4680]},{"content":"This will cause PlayReady to attempt license acquisition for a piece of content where PlayReady would normally already have a license (that is, in the software DRM case or any case without a hardware change, PlayReady wouldn’t need to reacquire a license).","pos":[4681,4937]},{"content":"Therefore, if the app acquires a persistent license while using hardware DRM, your app needs to be able to handle the case where that license is effectively “lost” if the end user installs (or uninstalls) a graphics card.","pos":[4938,5159]},{"content":"Because this is not a common scenario, you may decide to handle the support calls when the content no longer plays after a hardware change rather than figure out how to deal with a hardware change in the client/server code.","pos":[5160,5383]},{"content":"Override Hardware DRM","pos":[5388,5409]},{"content":"This section describes how to override hardware DRM if the content to be played back does not support hardware DRM.","pos":[5411,5526]},{"content":"By default, hardware DRM is used if the system supports it.","pos":[5528,5587]},{"content":"However, some content is not supported in hardware DRM.","pos":[5588,5643]},{"content":"One example of this is Cocktail content.","pos":[5644,5684]},{"content":"Another example is any content that uses a video codec other than H.264 and HEVC.","pos":[5685,5766]},{"content":"Another example is HEVC content, as some hardware DRM will support HEVC and some will not.","pos":[5767,5857]},{"content":"Therefore, if you want to play a piece of content and hardware DRM doesn’t support it on the system in question, you may want to opt out of hardware DRM.","pos":[5858,6011]},{"content":"The following example shows how to opt-out of hardware DRM.","pos":[6013,6072]},{"content":"You only need to do this before you switch.","pos":[6073,6116]},{"content":"Also, make sure you don’t have any PlayReady object in memory, otherwise behavior is undefined.","pos":[6117,6212]},{"pos":[6476,6552],"content":"To switch back to hardware DRM, set the <bpt id=\"p1\">**</bpt>SoftwareOverride<ept id=\"p1\">**</ept> value to <bpt id=\"p2\">**</bpt>0<ept id=\"p2\">**</ept>.","source":"To switch back to hardware DRM, set the **SoftwareOverride** value to **0**."},{"pos":[6554,6626],"content":"For every media playback, you need to set <bpt id=\"p1\">**</bpt>MediaProtectionManager<ept id=\"p1\">**</ept> to:","source":"For every media playback, you need to set **MediaProtectionManager** to:"},{"content":"The best way to tell if you are in hardware DRM or software DRM is look at C:\\\\Users\\\\<ph id=\"ph1\">&amp;lt;</ph>username<ph id=\"ph2\">&amp;gt;</ph>\\\\AppData\\\\Local\\\\Packages\\\\<ph id=\"ph3\">&amp;lt;</ph>application name<ph id=\"ph4\">&amp;gt;</ph>\\\\LocalState\\\\PlayReady\\\\\\*","pos":[6741,6922],"source":"The best way to tell if you are in hardware DRM or software DRM is look at C:\\\\Users\\\\&lt;username&gt;\\\\AppData\\\\Local\\\\Packages\\\\&lt;application name&gt;\\\\LocalState\\\\PlayReady\\\\\\*"},{"content":"If there is an mspr.hds file, then you are in software DRM.","pos":[6928,6987]},{"content":"If you have another \\*.hds file, then you are in hardware DRM.","pos":[6992,7054]},{"content":"You can delete the entire PlayReady folder and retry your test as well.","pos":[7059,7130]},{"content":"Detect the Type of Hardware DRM","pos":[7135,7166]},{"content":"This section describes how to detect what type of hardware DRM is supported on the system.","pos":[7168,7258]},{"content":"You can use the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>PlayReadyStatics.CheckSupportedHardware<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/dn986441)</ept> method to determine whether the system supports a specific hardware digital rights management (DRM) feature.","pos":[7260,7488],"source":"You can use the [**PlayReadyStatics.CheckSupportedHardware**](https://msdn.microsoft.com/library/windows/apps/dn986441) method to determine whether the system supports a specific hardware digital rights management (DRM) feature."},{"content":"For example:","pos":[7489,7501]},{"content":"The <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>PlayReadyHardwareDRMFeatures<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/dn986265)</ept> enumeration contains the valid list of hardware DRM feature values that can be queried.","pos":[7604,7788],"source":"The [**PlayReadyHardwareDRMFeatures**](https://msdn.microsoft.com/library/windows/apps/dn986265) enumeration contains the valid list of hardware DRM feature values that can be queried."},{"content":"To determine if hardware DRM is supported, use the <bpt id=\"p1\">**</bpt>HardwareDRM<ept id=\"p1\">**</ept> member in the query.","pos":[7789,7876],"source":" To determine if hardware DRM is supported, use the **HardwareDRM** member in the query."},{"content":"To determine if the hardware supports the High Efficiency Video Coding (HEVC)/H.265 codec, use the <bpt id=\"p1\">**</bpt>HEVC<ept id=\"p1\">**</ept> member in the query.","pos":[7877,8005],"source":" To determine if the hardware supports the High Efficiency Video Coding (HEVC)/H.265 codec, use the **HEVC** member in the query."},{"content":"You can also use the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>PlayReadyStatics.PlayReadyCertificateSecurityLevel<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/windows.media.protection.playready.playreadystatics.playreadycertificatesecuritylevel.aspx)</ept> property to get the security level of the client certificate to determine if hardware DRM is supported.","pos":[8007,8328],"source":"You can also use the [**PlayReadyStatics.PlayReadyCertificateSecurityLevel**](https://msdn.microsoft.com/library/windows/apps/windows.media.protection.playready.playreadystatics.playreadycertificatesecuritylevel.aspx) property to get the security level of the client certificate to determine if hardware DRM is supported."},{"content":"Unless the returned certificate security level is greater than or equal to 3000, either the client is not individualized or provisioned (in which case this property returns 0) or hardware DRM is not in use (in which case this property returns a value that is less than 3000).","pos":[8329,8604]}],"content":"---\nms.assetid: A7E0DA1E-535A-459E-9A35-68A4150EE9F5\ndescription: This topic provides an overview of how to add PlayReady hardware-based digital rights management (DRM) to your Universal Windows Platform (UWP) app.\ntitle: Hardware DRM\n---\n\n# Hardware DRM\n\n\\[ Updated for UWP apps on Windows 10. For Windows 8.x articles, see the [archive](http://go.microsoft.com/fwlink/p/?linkid=619132) \\]\n\n\nThis topic provides an overview of how to add PlayReady hardware-based digital rights management (DRM) to your Universal Windows Platform (UWP) app.\n\n**Note**  Hardware-based DRM is only supported on certain hardware with a Windows 10 version of that hardware's firmware. Refer to the [PlayReady Compliance and Robustness Rules](http://www.microsoft.com/playready/licensing/compliance/) for more information on the guarantees provided.\n\nIncreasingly, content providers are moving towards hardware-based protections for granting permission to play back full high value content in apps. Robust support for a hardware implementation of the cryptographic core has been added to PlayReady to meet this need. This support enables secure playback of high definition (1080p) and ultra-high definition (UHD) content on multiple device platforms. Key material (including private keys, content keys, and any other key material used to derive or unlock said keys), and decrypted compressed and uncompressed video samples are protected by leveraging hardware security.\n\n## Windows TEE Implementation\n\nThis topic provides a brief overview of how Windows 10 implements the trusted execution environment.\n\nThe details of the Windows TEE implementation is out of scope for this document. However, a brief discussion of the difference between the standard porting kit TEE port and the Windows port will be beneficial. Windows implements the OEM proxy layer and transfers the serialized PRITEE functions calls to a user mode driver in the Windows Media Foundation subsystem. This will eventually get routed to either the Windows TrEE (Trusted Execution Environment) driver or the OEM’s graphics driver. The details of either of these approaches is out of scope for this document. The following diagram shows the general component interaction for the Windows port. If you want to develop a Windows PlayReady TEE implementation, you can contact <WMLA@Microsoft.com>.\n\n![windows tee component diagram](images/windowsteecomponentdiagram720.jpg)\n\n## Considerations for Using Hardware DRM\n\nThis topic provides a brief list of things that should be considered when developing apps designed to use hardware DRM.\n\n-   Protected Media Process (PMP) is not supported.\n-   Output protection level (OPL) 270 support (no down resolution). Microsoft recommends that high definition content for hardware DRM have an OPL greater than 270 (although it is not required). An OPL of greater than 270 means HDCP is required. Additionally, Microsoft recommends you set HDCP type 1 (version 2.2 or later).\n-   Unlike software DRM, output protections are enforced on all monitors based on the least capable monitor. For example, if the user has two monitors connected where one of the monitors supports HDCP and the other does not, playback will fail if the license requires HDCP even if the content is only being rendered on the monitor that supports HDCP. In software DRM, content would play back as long as it is only being rendered on the monitor that supports HDCP.\n-   Hardware DRM is not guaranteed to be used by the client and secure unless the following conditions are met by the content keys and licenses:\n    -   Audio must be in the clear or be encrypted to a different content key than video. Microsoft recommends that the audio be in the clear to improve playback performance.\n    -   The license used for the video content key must have a security level of 3000.\n-   Multiple graphics processing units (GPUs) are not supported for persistent licenses.\n\nTo handle persistent licenses on machines with multiple GPUs, consider the following scenario:\n\n1.  A customer buys a new machine with an integrated graphics card.\n2.  The customer uses an app that acquires persistent licenses while using hardware DRM.\n3.  The persistent license is now bound to that graphics card’s hardware keys.\n4.  The customer then installs a new graphics card.\n5.  All licenses in the hashed data store (HDS) are bound to the integrated video card, but the customer now wants to play back protected content using the newly-installed graphics card.\n\nIn order to prevent playback from failing because the licenses can’t be decrypted by the hardware, PlayReady uses a separate hashed data store (HDS) for each graphics card that it encounters. This will cause PlayReady to attempt license acquisition for a piece of content where PlayReady would normally already have a license (that is, in the software DRM case or any case without a hardware change, PlayReady wouldn’t need to reacquire a license). Therefore, if the app acquires a persistent license while using hardware DRM, your app needs to be able to handle the case where that license is effectively “lost” if the end user installs (or uninstalls) a graphics card. Because this is not a common scenario, you may decide to handle the support calls when the content no longer plays after a hardware change rather than figure out how to deal with a hardware change in the client/server code.\n\n## Override Hardware DRM\n\nThis section describes how to override hardware DRM if the content to be played back does not support hardware DRM.\n\nBy default, hardware DRM is used if the system supports it. However, some content is not supported in hardware DRM. One example of this is Cocktail content. Another example is any content that uses a video codec other than H.264 and HEVC. Another example is HEVC content, as some hardware DRM will support HEVC and some will not. Therefore, if you want to play a piece of content and hardware DRM doesn’t support it on the system in question, you may want to opt out of hardware DRM.\n\nThe following example shows how to opt-out of hardware DRM. You only need to do this before you switch. Also, make sure you don’t have any PlayReady object in memory, otherwise behavior is undefined.\n\n``` syntax\nvar applicationData = Windows.Storage.ApplicationData.current;\nvar localSettings = applicationData.localSettings.createContainer(“PlayReady”, Windows.Storage.ApplicationDataCreateDisposition.always);\nlocalSettings.values[“SoftwareOverride”] = 1;\n```\n\nTo switch back to hardware DRM, set the **SoftwareOverride** value to **0**.\n\nFor every media playback, you need to set **MediaProtectionManager** to:\n\n``` syntax\nmediaProtectionManager.properties[“Windows.Media.Protection.UseSoftwareProtectionLayer”] = true;\n```\n\nThe best way to tell if you are in hardware DRM or software DRM is look at C:\\\\Users\\\\&lt;username&gt;\\\\AppData\\\\Local\\\\Packages\\\\&lt;application name&gt;\\\\LocalState\\\\PlayReady\\\\\\*\n\n-   If there is an mspr.hds file, then you are in software DRM.\n-   If you have another \\*.hds file, then you are in hardware DRM.\n-   You can delete the entire PlayReady folder and retry your test as well.\n\n## Detect the Type of Hardware DRM\n\nThis section describes how to detect what type of hardware DRM is supported on the system.\n\nYou can use the [**PlayReadyStatics.CheckSupportedHardware**](https://msdn.microsoft.com/library/windows/apps/dn986441) method to determine whether the system supports a specific hardware digital rights management (DRM) feature. For example:\n\n``` syntax\nboolean PlayReadyStatics->CheckSupportedHardware(PlayReadyHardwareDRMFeatures enum);\n```\n\nThe [**PlayReadyHardwareDRMFeatures**](https://msdn.microsoft.com/library/windows/apps/dn986265) enumeration contains the valid list of hardware DRM feature values that can be queried. To determine if hardware DRM is supported, use the **HardwareDRM** member in the query. To determine if the hardware supports the High Efficiency Video Coding (HEVC)/H.265 codec, use the **HEVC** member in the query.\n\nYou can also use the [**PlayReadyStatics.PlayReadyCertificateSecurityLevel**](https://msdn.microsoft.com/library/windows/apps/windows.media.protection.playready.playreadystatics.playreadycertificatesecuritylevel.aspx) property to get the security level of the client certificate to determine if hardware DRM is supported. Unless the returned certificate security level is greater than or equal to 3000, either the client is not individualized or provisioned (in which case this property returns 0) or hardware DRM is not in use (in which case this property returns a value that is less than 3000).\n\n"}