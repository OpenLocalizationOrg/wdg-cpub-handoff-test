{"nodes":[{"pos":[85,218],"content":"This article describes how to quickly display the camera preview stream within a XAML page in a Universal Windows Platform (UWP) app.","needQuote":true,"needEscape":true,"nodes":[{"content":"This article describes how to quickly display the camera preview stream within a XAML page in a Universal Windows Platform (UWP) app.","pos":[0,133]}]},{"pos":[226,254],"content":"Simple camera preview access","needQuote":true,"needEscape":true,"nodes":[{"content":"Simple camera preview access","pos":[0,28]}]},{"content":"Simple camera preview access","pos":[262,290]},{"content":"\\[ Updated for UWP apps on Windows 10.","pos":[292,330]},{"content":"For Windows 8.x articles, see the <bpt id=\"p1\">[</bpt>archive<ept id=\"p1\">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept> \\]","pos":[331,426],"source":" For Windows 8.x articles, see the [archive](http://go.microsoft.com/fwlink/p/?linkid=619132) \\]"},{"content":"This article describes how to quickly display the camera preview stream within a XAML page in a Universal Windows Platform (UWP) app.","pos":[428,561]},{"content":"Creating an app that captures photos and videos using the camera requires you to perform tasks like handling device and camera orientation or setting encoding options for the captured file.","pos":[562,751]},{"content":"For some app scenarios, you may want to just simply show the preview stream from the camera without worrying about these other considerations.","pos":[752,894]},{"content":"This article shows you how to do that with a minimum of code.","pos":[895,956]},{"content":"Note that you should always shut down the preview stream properly when you are done with it by following the steps below.","pos":[957,1078]},{"pos":[1080,1248],"content":"For information on writing a camera app that captures photos or videos, see <bpt id=\"p1\">[</bpt>Capture photos and video with MediaCapture<ept id=\"p1\">](capture-photos-and-video-with-mediacapture.md)</ept>.","source":"For information on writing a camera app that captures photos or videos, see [Capture photos and video with MediaCapture](capture-photos-and-video-with-mediacapture.md)."},{"content":"Add capability declarations to the app manifest","pos":[1253,1300]},{"content":"In order for your app to access a device's camera, you must declare that your app uses the <bpt id=\"p1\">*</bpt>webcam<ept id=\"p1\">*</ept> and <bpt id=\"p2\">*</bpt>microphone<ept id=\"p2\">*</ept> device capabilities.","pos":[1302,1439],"source":"In order for your app to access a device's camera, you must declare that your app uses the *webcam* and *microphone* device capabilities."},{"content":"If you want to save captured photos and videos to the users's Pictures or Videos library, you must also declare the <bpt id=\"p1\">*</bpt>picturesLibrary<ept id=\"p1\">*</ept> and <bpt id=\"p2\">*</bpt>videosLibrary<ept id=\"p2\">*</ept> capability.","pos":[1440,1605],"source":" If you want to save captured photos and videos to the users's Pictures or Videos library, you must also declare the *picturesLibrary* and *videosLibrary* capability."},{"content":"Add capabilities to the app manifest","pos":[1609,1645]},{"pos":[1653,1807],"content":"In Microsoft Visual Studio, in <bpt id=\"p1\">**</bpt>Solution Explorer<ept id=\"p1\">**</ept>, open the designer for the application manifest by double-clicking the <bpt id=\"p2\">**</bpt>package.appxmanifest<ept id=\"p2\">**</ept> item.","source":"In Microsoft Visual Studio, in **Solution Explorer**, open the designer for the application manifest by double-clicking the **package.appxmanifest** item."},{"pos":[1812,1844],"content":"Select the <bpt id=\"p1\">**</bpt>Capabilities<ept id=\"p1\">**</ept> tab.","source":"Select the **Capabilities** tab."},{"pos":[1849,1909],"content":"Check the box for <bpt id=\"p1\">**</bpt>Webcam<ept id=\"p1\">**</ept> and the box for <bpt id=\"p2\">**</bpt>Microphone<ept id=\"p2\">**</ept>.","source":"Check the box for **Webcam** and the box for **Microphone**."},{"pos":[1914,2036],"content":"For access to the Pictures and Videos library check the boxes for <bpt id=\"p1\">**</bpt>Pictures Library<ept id=\"p1\">**</ept> and the box for <bpt id=\"p2\">**</bpt>Videos Library<ept id=\"p2\">**</ept>.","source":"For access to the Pictures and Videos library check the boxes for **Pictures Library** and the box for **Videos Library**."},{"content":"Add a CaptureElement to your page","pos":[2041,2074]},{"pos":[2076,2213],"content":"Use a <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>CaptureElement<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br209278)</ept> to display the preview stream within your XAML page.","source":"Use a [**CaptureElement**](https://msdn.microsoft.com/library/windows/apps/br209278) to display the preview stream within your XAML page."},{"pos":[2226,2240],"content":"CaptureElement"},{"content":"Use MediaCapture to start the preview stream","pos":[2320,2364]},{"content":"The <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>MediaCapture<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br241124)</ept> object is your app's interface to the device's camera.","pos":[2366,2501],"source":"The [**MediaCapture**](https://msdn.microsoft.com/library/windows/apps/br241124) object is your app's interface to the device's camera."},{"content":"This class is a member of the Windows.Media.Capture namespace.","pos":[2502,2564]},{"content":"The example in this article also uses APIs from the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>Windows.ApplicationModel<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br224691)</ept> and <bpt id=\"p3\">[</bpt>System.Threading.Tasks<ept id=\"p3\">](https://msdn.microsoft.com/library/windows/apps/xaml/system.threading.tasks.aspx)</ept> namespaces, in addition to those included by the default project template.","pos":[2565,2891],"source":" The example in this article also uses APIs from the [**Windows.ApplicationModel**](https://msdn.microsoft.com/library/windows/apps/br224691) and [System.Threading.Tasks](https://msdn.microsoft.com/library/windows/apps/xaml/system.threading.tasks.aspx) namespaces, in addition to those included by the default project template."},{"content":"Add using directives to include the following namespaces in your page's .cs file.","pos":[2893,2974]},{"pos":[2986,3010],"content":"SimpleCameraPreviewUsing"},{"pos":[3100,3157],"content":"Declare a class variable for the <bpt id=\"p1\">**</bpt>MediaCapture<ept id=\"p1\">**</ept> object.","source":"Declare a class variable for the **MediaCapture** object."},{"pos":[3169,3188],"content":"DeclareMediaCapture"},{"content":"Create a new instance of the <bpt id=\"p1\">**</bpt>MediaCapture<ept id=\"p1\">**</ept> class and call <bpt id=\"p2\">[</bpt><bpt id=\"p3\">**</bpt>InitializeAsync<ept id=\"p3\">**</ept><ept id=\"p2\">](https://msdn.microsoft.com/library/windows/apps/br226598)</ept> to initialize the capture device.","pos":[3273,3447],"source":"Create a new instance of the **MediaCapture** class and call [**InitializeAsync**](https://msdn.microsoft.com/library/windows/apps/br226598) to initialize the capture device."},{"content":"This method may fail, on devices that don't have a camera for example, so you should call it from within a <bpt id=\"p1\">**</bpt>try<ept id=\"p1\">**</ept> block.","pos":[3448,3569],"source":" This method may fail, on devices that don't have a camera for example, so you should call it from within a **try** block."},{"content":"An <bpt id=\"p1\">**</bpt>UnauthorizedAccessException<ept id=\"p1\">**</ept> will be thrown when you attempt to initialize the camera if the user has disabled camera access in the device's privacy settings.","pos":[3570,3734],"source":" An **UnauthorizedAccessException** will be thrown when you attempt to initialize the camera if the user has disabled camera access in the device's privacy settings."},{"content":"You will also see this exception during development if you have neglected to add the proper capabilities to your app manifest.","pos":[3735,3861]},{"content":"<bpt id=\"p1\">**</bpt>Important<ept id=\"p1\">**</ept> On some device families, a user consent prompt is displayed to the user before your app is granted access to the device's camera.","pos":[3863,4006],"source":"**Important** On some device families, a user consent prompt is displayed to the user before your app is granted access to the device's camera."},{"content":"For this reason, you must only call <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>MediaCapture.InitializeAsync<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br226598)</ept> from the main UI thread.","pos":[4007,4160],"source":" For this reason, you must only call [**MediaCapture.InitializeAsync**](https://msdn.microsoft.com/library/windows/apps/br226598) from the main UI thread."},{"content":"Attempting to initialize the camera from another thread may result in initialization failure.","pos":[4161,4254]},{"content":"Connect the <bpt id=\"p1\">**</bpt>MediaCapture<ept id=\"p1\">**</ept> to the <bpt id=\"p2\">**</bpt>CaptureElement<ept id=\"p2\">**</ept> by setting the <bpt id=\"p3\">[</bpt><bpt id=\"p4\">**</bpt>Source<ept id=\"p4\">**</ept><ept id=\"p3\">](https://msdn.microsoft.com/library/windows/apps/br209280)</ept> property.","pos":[4256,4406],"source":"Connect the **MediaCapture** to the **CaptureElement** by setting the [**Source**](https://msdn.microsoft.com/library/windows/apps/br209280) property."},{"content":"Finally, start the preview by calling <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>StartPreviewAsync<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br226613)</ept>.","pos":[4407,4527],"source":" Finally, start the preview by calling [**StartPreviewAsync**](https://msdn.microsoft.com/library/windows/apps/br226613)."},{"pos":[4539,4556],"content":"StartPreviewAsync"},{"content":"Shut down the preview stream","pos":[4643,4671]},{"content":"When you are done using the preview stream, you should always shut down the stream and properly dispose of the associated resources to ensure that the camera is available to other apps on the device.","pos":[4673,4872]},{"content":"The required steps for shutting down the preview stream are:","pos":[4873,4933]},{"pos":[4939,5052],"content":"Call <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>StopPreviewAsync<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br226622)</ept> to stop the preview stream.","source":"Call [**StopPreviewAsync**](https://msdn.microsoft.com/library/windows/apps/br226622) to stop the preview stream."},{"pos":[5057,5179],"content":"Set the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>Source<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br209280)</ept> property of the <bpt id=\"p3\">**</bpt>CaptureElement<ept id=\"p3\">**</ept> to null.","source":"Set the [**Source**](https://msdn.microsoft.com/library/windows/apps/br209280) property of the **CaptureElement** to null."},{"pos":[5184,5320],"content":"Call the <bpt id=\"p1\">**</bpt>MediaCapture<ept id=\"p1\">**</ept> object's <bpt id=\"p2\">[</bpt><bpt id=\"p3\">**</bpt>Dispose<ept id=\"p3\">**</ept><ept id=\"p2\">](https://msdn.microsoft.com/library/windows/apps/dn278858)</ept> method to release the object.","source":"Call the **MediaCapture** object's [**Dispose**](https://msdn.microsoft.com/library/windows/apps/dn278858) method to release the object."},{"pos":[5325,5374],"content":"Set the <bpt id=\"p1\">**</bpt>MediaCapture<ept id=\"p1\">**</ept> member variable to null.","source":"Set the **MediaCapture** member variable to null."},{"pos":[5386,5404],"content":"CleanupCameraAsync"},{"pos":[5488,5677],"content":"You should shut down the preview stream when the user navigates away from your page by overriding the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>OnNavigatedFrom<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br227507)</ept> method.","source":"You should shut down the preview stream when the user navigates away from your page by overriding the [**OnNavigatedFrom**](https://msdn.microsoft.com/library/windows/apps/br227507) method."},{"pos":[5689,5704],"content":"OnNavigatedFrom"},{"content":"You should also shut down the preview stream properly when your app is suspending.","pos":[5785,5867]},{"content":"To do this, register a handler for the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>Application.Suspending<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br205860)</ept> event in your page's constructor.","pos":[5868,6027],"source":" To do this, register a handler for the [**Application.Suspending**](https://msdn.microsoft.com/library/windows/apps/br205860) event in your page's constructor."},{"pos":[6039,6057],"content":"RegisterSuspending"},{"content":"In the <bpt id=\"p1\">**</bpt>Suspending<ept id=\"p1\">**</ept> event handler, first check to make sure that the page is being displayed the application's <bpt id=\"p2\">[</bpt><bpt id=\"p3\">**</bpt>Frame<ept id=\"p3\">**</ept><ept id=\"p2\">](https://msdn.microsoft.com/library/windows/apps/br242682)</ept> by comparing the page type to the <bpt id=\"p4\">[</bpt><bpt id=\"p5\">**</bpt>CurrentSourcePageType<ept id=\"p5\">**</ept><ept id=\"p4\">](https://msdn.microsoft.com/library/windows/apps/hh702390)</ept> property.","pos":[6141,6453],"source":"In the **Suspending** event handler, first check to make sure that the page is being displayed the application's [**Frame**](https://msdn.microsoft.com/library/windows/apps/br242682) by comparing the page type to the [**CurrentSourcePageType**](https://msdn.microsoft.com/library/windows/apps/hh702390) property."},{"content":"If the page is not currently being displayed, then the <bpt id=\"p1\">**</bpt>OnNavigatedFrom<ept id=\"p1\">**</ept> event should already have been raised and the preview stream shut down.","pos":[6454,6600],"source":" If the page is not currently being displayed, then the **OnNavigatedFrom** event should already have been raised and the preview stream shut down."},{"content":"If the page is currently being displayed, get a <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>SuspendingDeferral<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br224684)</ept> object from the event args passed into the handler to make sure the system does not suspend your app until the preview stream has been shut down.","pos":[6601,6877],"source":" If the page is currently being displayed, get a [**SuspendingDeferral**](https://msdn.microsoft.com/library/windows/apps/br224684) object from the event args passed into the handler to make sure the system does not suspend your app until the preview stream has been shut down."},{"content":"After shutting down the stream, call the deferral's <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>Complete<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br224685)</ept> method to let the system continue suspending your app.","pos":[6878,7057],"source":" After shutting down the stream, call the deferral's [**Complete**](https://msdn.microsoft.com/library/windows/apps/br224685) method to let the system continue suspending your app."},{"pos":[7069,7086],"content":"SuspendingHandler"},{"content":"Capture a still image from the preview stream","pos":[7172,7217]},{"content":"It's simple to get a still image from the media capture preview stream in the form of a <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>SoftwareBitmap<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/dn887358)</ept>.","pos":[7219,7386],"source":"It's simple to get a still image from the media capture preview stream in the form of a [**SoftwareBitmap**](https://msdn.microsoft.com/library/windows/apps/dn887358)."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Get a preview frame<ept id=\"p1\">](get-a-preview-frame.md)</ept>.","pos":[7387,7459],"source":" For more information, see [Get a preview frame](get-a-preview-frame.md)."},{"content":"Related topics","pos":[7464,7478]},{"content":"Capture photos and video with MediaCapture","pos":[7483,7525]},{"content":"Get a preview frame","pos":[7577,7596]}],"content":"---\nauthor: drewbatgit\nms.assetid: 9BA3F85A-970F-411C-ACB1-B65768B8548A\ndescription: This article describes how to quickly display the camera preview stream within a XAML page in a Universal Windows Platform (UWP) app.\ntitle: Simple camera preview access\n---\n\n# Simple camera preview access\n\n\\[ Updated for UWP apps on Windows 10. For Windows 8.x articles, see the [archive](http://go.microsoft.com/fwlink/p/?linkid=619132) \\]\n\nThis article describes how to quickly display the camera preview stream within a XAML page in a Universal Windows Platform (UWP) app. Creating an app that captures photos and videos using the camera requires you to perform tasks like handling device and camera orientation or setting encoding options for the captured file. For some app scenarios, you may want to just simply show the preview stream from the camera without worrying about these other considerations. This article shows you how to do that with a minimum of code. Note that you should always shut down the preview stream properly when you are done with it by following the steps below.\n\nFor information on writing a camera app that captures photos or videos, see [Capture photos and video with MediaCapture](capture-photos-and-video-with-mediacapture.md).\n\n## Add capability declarations to the app manifest\n\nIn order for your app to access a device's camera, you must declare that your app uses the *webcam* and *microphone* device capabilities. If you want to save captured photos and videos to the users's Pictures or Videos library, you must also declare the *picturesLibrary* and *videosLibrary* capability.\n\n**Add capabilities to the app manifest**\n\n1.  In Microsoft Visual Studio, in **Solution Explorer**, open the designer for the application manifest by double-clicking the **package.appxmanifest** item.\n2.  Select the **Capabilities** tab.\n3.  Check the box for **Webcam** and the box for **Microphone**.\n4.  For access to the Pictures and Videos library check the boxes for **Pictures Library** and the box for **Videos Library**.\n\n## Add a CaptureElement to your page\n\nUse a [**CaptureElement**](https://msdn.microsoft.com/library/windows/apps/br209278) to display the preview stream within your XAML page.\n\n[!code-xml[CaptureElement](./code/SimpleCameraPreview_Win10/cs/MainPage.xaml#SnippetCaptureElement)]\n\n## Use MediaCapture to start the preview stream\n\nThe [**MediaCapture**](https://msdn.microsoft.com/library/windows/apps/br241124) object is your app's interface to the device's camera. This class is a member of the Windows.Media.Capture namespace. The example in this article also uses APIs from the [**Windows.ApplicationModel**](https://msdn.microsoft.com/library/windows/apps/br224691) and [System.Threading.Tasks](https://msdn.microsoft.com/library/windows/apps/xaml/system.threading.tasks.aspx) namespaces, in addition to those included by the default project template.\n\nAdd using directives to include the following namespaces in your page's .cs file.\n\n[!code-cs[SimpleCameraPreviewUsing](./code/SimpleCameraPreview_Win10/cs/MainPage.xaml.cs#SnippetSimpleCameraPreviewUsing)]\n\nDeclare a class variable for the **MediaCapture** object.\n\n[!code-cs[DeclareMediaCapture](./code/SimpleCameraPreview_Win10/cs/MainPage.xaml.cs#SnippetDeclareMediaCapture)]\n\nCreate a new instance of the **MediaCapture** class and call [**InitializeAsync**](https://msdn.microsoft.com/library/windows/apps/br226598) to initialize the capture device. This method may fail, on devices that don't have a camera for example, so you should call it from within a **try** block. An **UnauthorizedAccessException** will be thrown when you attempt to initialize the camera if the user has disabled camera access in the device's privacy settings. You will also see this exception during development if you have neglected to add the proper capabilities to your app manifest.\n\n**Important** On some device families, a user consent prompt is displayed to the user before your app is granted access to the device's camera. For this reason, you must only call [**MediaCapture.InitializeAsync**](https://msdn.microsoft.com/library/windows/apps/br226598) from the main UI thread. Attempting to initialize the camera from another thread may result in initialization failure.\n\nConnect the **MediaCapture** to the **CaptureElement** by setting the [**Source**](https://msdn.microsoft.com/library/windows/apps/br209280) property. Finally, start the preview by calling [**StartPreviewAsync**](https://msdn.microsoft.com/library/windows/apps/br226613).\n\n[!code-cs[StartPreviewAsync](./code/SimpleCameraPreview_Win10/cs/MainPage.xaml.cs#SnippetStartPreviewAsync)]\n\n\n## Shut down the preview stream\n\nWhen you are done using the preview stream, you should always shut down the stream and properly dispose of the associated resources to ensure that the camera is available to other apps on the device. The required steps for shutting down the preview stream are:\n\n-   Call [**StopPreviewAsync**](https://msdn.microsoft.com/library/windows/apps/br226622) to stop the preview stream.\n-   Set the [**Source**](https://msdn.microsoft.com/library/windows/apps/br209280) property of the **CaptureElement** to null.\n-   Call the **MediaCapture** object's [**Dispose**](https://msdn.microsoft.com/library/windows/apps/dn278858) method to release the object.\n-   Set the **MediaCapture** member variable to null.\n\n[!code-cs[CleanupCameraAsync](./code/SimpleCameraPreview_Win10/cs/MainPage.xaml.cs#SnippetCleanupCameraAsync)]\n\nYou should shut down the preview stream when the user navigates away from your page by overriding the [**OnNavigatedFrom**](https://msdn.microsoft.com/library/windows/apps/br227507) method.\n\n[!code-cs[OnNavigatedFrom](./code/SimpleCameraPreview_Win10/cs/MainPage.xaml.cs#SnippetOnNavigatedFrom)]\n\nYou should also shut down the preview stream properly when your app is suspending. To do this, register a handler for the [**Application.Suspending**](https://msdn.microsoft.com/library/windows/apps/br205860) event in your page's constructor.\n\n[!code-cs[RegisterSuspending](./code/SimpleCameraPreview_Win10/cs/MainPage.xaml.cs#SnippetRegisterSuspending)]\n\nIn the **Suspending** event handler, first check to make sure that the page is being displayed the application's [**Frame**](https://msdn.microsoft.com/library/windows/apps/br242682) by comparing the page type to the [**CurrentSourcePageType**](https://msdn.microsoft.com/library/windows/apps/hh702390) property. If the page is not currently being displayed, then the **OnNavigatedFrom** event should already have been raised and the preview stream shut down. If the page is currently being displayed, get a [**SuspendingDeferral**](https://msdn.microsoft.com/library/windows/apps/br224684) object from the event args passed into the handler to make sure the system does not suspend your app until the preview stream has been shut down. After shutting down the stream, call the deferral's [**Complete**](https://msdn.microsoft.com/library/windows/apps/br224685) method to let the system continue suspending your app.\n\n[!code-cs[SuspendingHandler](./code/SimpleCameraPreview_Win10/cs/MainPage.xaml.cs#SnippetSuspendingHandler)]\n\n## Capture a still image from the preview stream\n\nIt's simple to get a still image from the media capture preview stream in the form of a [**SoftwareBitmap**](https://msdn.microsoft.com/library/windows/apps/dn887358). For more information, see [Get a preview frame](get-a-preview-frame.md).\n\n## Related topics\n\n* [Capture photos and video with MediaCapture](capture-photos-and-video-with-mediacapture.md)\n* [Get a preview frame](get-a-preview-frame.md)\n"}