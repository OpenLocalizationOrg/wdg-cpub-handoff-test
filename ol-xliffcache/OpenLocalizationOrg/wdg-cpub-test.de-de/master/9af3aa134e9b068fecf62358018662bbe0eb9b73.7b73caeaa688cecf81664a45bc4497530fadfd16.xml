{"nodes":[{"content":"Buttons","pos":[46,53]},{"content":"A button gives the user a way to trigger an immediate action.","pos":[54,115]},{"content":"Example of buttons","pos":[119,137]},{"pos":[226,240],"content":"Important APIs"},{"content":"Button class","pos":[256,268]},{"content":"RepeatButton class","pos":[365,383]},{"content":"Click event","pos":[497,508]},{"content":"Is this the right control?","pos":[623,649]},{"content":"A button lets the user initiate an immediate action, such as submitting a form.","pos":[651,730]},{"content":"Don't use a button when the action is to navigate to another page; use a link instead.","pos":[732,818]},{"content":"See <bpt id=\"p1\">[</bpt>Hyperlinks<ept id=\"p1\">](hyperlinks.md)</ept> for more info.","pos":[819,865],"source":" See [Hyperlinks](hyperlinks.md) for more info."},{"content":"Exception: For wizard navigation, use buttons labeled \"Back\" and \"Next\".","pos":[873,945]},{"content":"For other types of backwards navigation or navigation to an upper level, use a back button.","pos":[946,1037]},{"content":"Example","pos":[1042,1049]},{"content":"This example uses two buttons, Close all and Cancel, in a dialog in the Microsoft Edge browser.","pos":[1051,1146]},{"content":"Example of buttons, used in a dialog","pos":[1151,1187]},{"content":"Create a button","pos":[1235,1250]},{"content":"This example shows a button that responds to a click.","pos":[1252,1305]},{"content":"Create the button in XAML.","pos":[1308,1334]},{"content":"Or create the button in code.","pos":[1403,1432]},{"content":"Handle the Click event.","pos":[1661,1684]},{"content":"Button interaction","pos":[2031,2049]},{"content":"When you tap a Button with a finger or stylus, or press a left mouse button while the pointer is over it, the button raises the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>Click<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.primitives.buttonbase.click.aspx)</ept> event.","pos":[2051,2304],"source":"When you tap a Button with a finger or stylus, or press a left mouse button while the pointer is over it, the button raises the [**Click**](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.primitives.buttonbase.click.aspx) event."},{"content":"If a button has keyboard focus, pressing the Enter key or the Spacebar key also raises the Click event.","pos":[2305,2408]},{"content":"You generally can't handle low-level <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>PointerPressed<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.uielement.pointerpressed.aspx)</ept> events on a Button because it has the Click behavior instead.","pos":[2410,2624],"source":"You generally can't handle low-level [**PointerPressed**](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.uielement.pointerpressed.aspx) events on a Button because it has the Click behavior instead."},{"content":"For more info, see <bpt id=\"p1\">[</bpt>Events and routed events overview<ept id=\"p1\">](https://msdn.microsoft.com/en-us/library/windows/apps/mt185584.aspx)</ept>.","pos":[2625,2749],"source":" For more info, see [Events and routed events overview](https://msdn.microsoft.com/en-us/library/windows/apps/mt185584.aspx)."},{"content":"You can change how a button raises the Click event by changing the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>ClickMode<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.primitives.buttonbase.clickmode.aspx)</ept> property.","pos":[2751,2954],"source":"You can change how a button raises the Click event by changing the [**ClickMode**](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.primitives.buttonbase.clickmode.aspx) property."},{"content":"The default ClickMode value is <bpt id=\"p1\">**</bpt>Release<ept id=\"p1\">**</ept>.","pos":[2955,2998],"source":" The default ClickMode value is **Release**."},{"content":"If ClickMode is <bpt id=\"p1\">**</bpt>Hover<ept id=\"p1\">**</ept>, the Click event can't be raised with the keyboard or touch.","pos":[2999,3085],"source":" If ClickMode is **Hover**, the Click event can't be raised with the keyboard or touch."},{"content":"Button content","pos":[3093,3107]},{"content":"Button is a <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>ContentControl<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.contentcontrol.aspx)</ept>.","pos":[3109,3241],"source":"Button is a [**ContentControl**](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.contentcontrol.aspx)."},{"content":"Its XAML content property is <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>Content<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.contentcontrol.content.aspx)</ept>, which enables a syntax like this for XAML: <ph id=\"ph1\">`&lt;Button&gt;A button's content&lt;/Button&gt;`</ph>.","pos":[3242,3474],"source":" Its XAML content property is [**Content**](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.contentcontrol.content.aspx), which enables a syntax like this for XAML: `<Button>A button's content</Button>`."},{"content":"You can set any object as the button's content.","pos":[3475,3522]},{"content":"If the content is a <bpt id=\"p1\">[</bpt>UIElement<ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.uielement.aspx)</ept>, it is rendered in the button.","pos":[3523,3670],"source":" If the content is a [UIElement](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.uielement.aspx), it is rendered in the button."},{"content":"If the content is another type of object, its string representation is shown in the button.","pos":[3671,3762]},{"pos":[3764,3865],"content":"Here, a <bpt id=\"p1\">**</bpt>StackPanel<ept id=\"p1\">**</ept> that contains an image of a banana and text is set as the content of a button.","source":"Here, a **StackPanel** that contains an image of a banana and text is set as the content of a button."},{"content":"The button looks like this.","pos":[4179,4206]},{"content":"A button with image and text content","pos":[4210,4246]},{"content":"Create a repeat button","pos":[4278,4300]},{"content":"A <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>RepeatButton<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.primitives.repeatbutton.aspx)</ept> is a button that raises <bpt id=\"p3\">[</bpt><bpt id=\"p4\">**</bpt>Click<ept id=\"p4\">**</ept><ept id=\"p3\">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.primitives.buttonbase.click.aspx)</ept> events repeatedly from the time it's pressed until it's released.","pos":[4302,4634],"source":"A [**RepeatButton**](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.primitives.repeatbutton.aspx) is a button that raises [**Click**](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.primitives.buttonbase.click.aspx) events repeatedly from the time it's pressed until it's released."},{"content":"Set the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>Delay<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.primitives.repeatbutton.delay.aspx)</ept> property to specify the time that the RepeatButton waits after it is pressed before it starts repeating the click action.","pos":[4635,4885],"source":" Set the [**Delay**](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.primitives.repeatbutton.delay.aspx) property to specify the time that the RepeatButton waits after it is pressed before it starts repeating the click action."},{"content":"Set the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>Interval<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.primitives.repeatbutton.interval.aspx)</ept> property to specify the time between repetitions of the click action.","pos":[4886,5090],"source":" Set the [**Interval**](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.primitives.repeatbutton.interval.aspx) property to specify the time between repetitions of the click action."},{"content":"Times for both properties are specified in milliseconds.","pos":[5091,5147]},{"content":"The following example shows two RepeatButton controls whose respective Click events are used to increase and decrease the value shown in a text block.","pos":[5149,5299]},{"content":"Recommendations","pos":[5991,6006]},{"content":"Make sure the purpose and state of a button are clear to the user.","pos":[6012,6078]},{"content":"Use a concise, specific, self-explanatory text that clearly describes the action that the button performs.","pos":[6083,6189]},{"content":"Usually button text content is a single word, a verb.","pos":[6190,6243]},{"content":"If the button's text content is dynamic, for example, it is localized, consider how the button will resize and what will happen to controls around it.","pos":[6248,6398]},{"content":"For command buttons with text content, use a minimum button width.","pos":[6403,6469]},{"content":"Avoid narrow, short, or tall command buttons with text content.","pos":[6474,6537]},{"content":"Use the default font unless your brand guidelines tell you to use something different.","pos":[6542,6628]},{"pos":[6633,6811],"content":"For an action that needs to be available across multiple pages within your app, instead of duplicating a button on multiple pages, consider using a <bpt id=\"p1\">[</bpt>bottom app bar<ept id=\"p1\">](app-bars.md)</ept>.","source":"For an action that needs to be available across multiple pages within your app, instead of duplicating a button on multiple pages, consider using a [bottom app bar](app-bars.md)."},{"content":"Expose only one or two buttons to the user at a time, for example, Accept and Cancel.","pos":[6816,6901]},{"content":"If you need to expose more actions to the user, consider using <bpt id=\"p1\">[</bpt>checkboxes<ept id=\"p1\">](checkbox.md)</ept> or <bpt id=\"p2\">[</bpt>radio buttons<ept id=\"p2\">](radio-button.md)</ept> from which the user can select actions, with a single command button to trigger those actions.","pos":[6902,7121],"source":" If you need to expose more actions to the user, consider using [checkboxes](checkbox.md) or [radio buttons](radio-button.md) from which the user can select actions, with a single command button to trigger those actions."},{"content":"Use the default command button to indicate the most common or recommended action.","pos":[7126,7207]},{"content":"Consider customizing your buttons.","pos":[7212,7246]},{"content":"A button's shape is rectangular by default, but you can customize the visuals that make up the button's appearance.","pos":[7247,7362]},{"content":"A button's content is usually text—for example, Accept or Cancel—but you could replace the text with an icon, or use an icon plus text.","pos":[7363,7498]},{"content":"Make sure that as the user interacts with a button, the button changes state and appearance to provide feedback to the user.","pos":[7503,7627]},{"content":"Normal, pressed, and disabled are examples of button states.","pos":[7628,7688]},{"content":"Trigger the button's action when the user taps or presses the button.","pos":[7693,7762]},{"content":"Usually the action is triggered when the user releases the button, but you also can set a button's action to trigger when a finger first presses it.","pos":[7763,7911]},{"content":"Don't use a command button to set state.","pos":[7916,7956]},{"content":"Don't change button text while the app is running; for example, don't change the text of a button that says \"Next\" to \"Continue\".","pos":[7961,8090]},{"content":"Don't swap the default submit, reset, and button styles.","pos":[8095,8151]},{"content":"Don't put too much content inside a button.","pos":[8156,8199]},{"content":"Make the content concise and easy to understand (nothing more than a picture and some text).","pos":[8200,8292]},{"content":"Back buttons","pos":[8297,8309]},{"content":"The back button is a system-provided UI affordance that enables backward navigation through either the back stack or navigation history of the user.","pos":[8310,8458]},{"content":"The scope of the navigation history (whether in-app or global) depends on the device and device mode.","pos":[8460,8561]},{"pos":[8620,8627],"content":"Example"},{"content":"The UI for the system back button is optimized for each device and input type, but the navigation experience is global and consistent across devices and Universal Windows Platform (UWP) apps.","pos":[8630,8821]},{"content":"These different experiences include:","pos":[8822,8858]},{"pos":[8860,8898],"content":"Devices Phone <ph id=\"ph1\">![</ph>system back on a phone","source":"Devices\nPhone\n![system back on a phone"},{"content":"Always present.","pos":[8931,8946]},{"content":"A software or hardware button at the bottom of the device.","pos":[8951,9009]},{"content":"Global back navigation within the app and between apps.","pos":[9014,9069]},{"pos":[9146,9195],"content":"Tablet <ph id=\"ph1\">![</ph>system back on a tablet (in tablet mode)","source":"Tablet\n![system back on a tablet (in tablet mode)"},{"content":"Always present in Tablet mode.","pos":[9229,9259]},{"content":"Not available in Desktop mode.","pos":[9265,9295]},{"content":"Title bar back button can be enabled, instead.","pos":[9296,9342]},{"content":"See <bpt id=\"p1\">[</bpt>PC, Laptop, Tablet<ept id=\"p1\">](#PC)</ept>.","pos":[9343,9373],"source":" See [PC, Laptop, Tablet](#PC)."},{"pos":[9379,9582],"content":"Users can switch between running in Tablet mode and Desktop mode by going to <bpt id=\"p1\">**</bpt>Settings <ph id=\"ph1\">&amp;gt;</ph> System <ph id=\"ph2\">&amp;gt;</ph> Tablet mode<ept id=\"p1\">**</ept> and setting <bpt id=\"p2\">**</bpt>Make Windows more touch-friendly when using your device as a tablet<ept id=\"p2\">**</ept>.","source":"Users can switch between running in Tablet mode and Desktop mode by going to **Settings &gt; System &gt; Tablet mode** and setting **Make Windows more touch-friendly when using your device as a tablet**."},{"content":"A software button in the navigation bar at the bottom of the device.","pos":[9588,9656]},{"content":"Global back navigation within the app and between apps.","pos":[9661,9716]},{"pos":[9760,9810],"content":"PC, Laptop, Tablet <ph id=\"ph1\">![</ph>system back on a pc or laptop","source":"PC, Laptop, Tablet\n![system back on a pc or laptop"},{"content":"Optional in Desktop mode.","pos":[9840,9865]},{"content":"Not available in Tablet mode.","pos":[9871,9900]},{"content":"See <bpt id=\"p1\">[</bpt>Tablet<ept id=\"p1\">](#Tablet)</ept>.","pos":[9901,9923],"source":" See [Tablet](#Tablet)."},{"content":"Disabled by default.","pos":[9929,9949]},{"content":"Must opt in to enable it.","pos":[9950,9975]},{"pos":[9981,10184],"content":"Users can switch between running in Tablet mode and Desktop mode by going to <bpt id=\"p1\">**</bpt>Settings <ph id=\"ph1\">&amp;gt;</ph> System <ph id=\"ph2\">&amp;gt;</ph> Tablet mode<ept id=\"p1\">**</ept> and setting <bpt id=\"p2\">**</bpt>Make Windows more touch-friendly when using your device as a tablet<ept id=\"p2\">**</ept>.","source":"Users can switch between running in Tablet mode and Desktop mode by going to **Settings &gt; System &gt; Tablet mode** and setting **Make Windows more touch-friendly when using your device as a tablet**."},{"content":"A software button in the title bar of the app.","pos":[10190,10236]},{"content":"Back navigation within the app only.","pos":[10241,10277]},{"content":"Does not support app-to-app navigation.","pos":[10278,10317]},{"pos":[10319,10361],"content":"Surface Hub <ph id=\"ph1\">![</ph>system back on a surface hub","source":"Surface Hub\n![system back on a surface hub"},{"content":"Always present.","pos":[10399,10414]},{"content":"A software button at the bottom of the device.","pos":[10419,10465]},{"content":"Back navigation within the app and between apps.","pos":[10470,10518]},{"pos":[10628,10643],"content":"Recommendations"},{"content":"Enable back navigation.","pos":[10650,10673]},{"content":"If back navigation is not enabled, your app is included on the global back stack, but in-app page navigation history is not maintained.","pos":[10679,10814]},{"content":"Enable the title bar back button in Desktop mode.","pos":[10820,10869]},{"content":"In-app page navigation history is maintained, app-to-app back navigation is not supported.","pos":[10875,10965]},{"content":"<bpt id=\"p1\">**</bpt>Note<ept id=\"p1\">**</ept>  In Tablet mode, the title bar is displayed when a user swipes down from the top of the device or moves a mouse pointer near the top of the device.","pos":[10971,11127],"source":"**Note**  In Tablet mode, the title bar is displayed when a user swipes down from the top of the device or moves a mouse pointer near the top of the device."},{"content":"To avoid duplication and confusion, the title bar back button is not displayed in Tablet mode.","pos":[11128,11222]},{"content":"Hide or disable the title bar back button in Desktop mode when in-app navigation history is depleted or unavailable.","pos":[11235,11351]},{"content":"Provides a clear indication to the user that they have navigated back as far as possible.","pos":[11357,11446]},{"content":"Each back command should go back one page in the back stack, or, if not in Desktop mode, to the immediately preceding app.","pos":[11452,11574]},{"content":"Users could get confused if back navigation is not intuitive, consistent, and predictable.","pos":[11580,11670]},{"content":"Related articles","pos":[11675,11691]},{"content":"Radio buttons","pos":[11696,11709]},{"content":"Toggle switches","pos":[11731,11746]},{"content":"Check boxes","pos":[11763,11774]},{"content":"For developers (XAML)","pos":[11792,11813]},{"content":"Button class","pos":[11821,11833]}],"content":"---\nlabel: Buttons\ntemplate: detail.hbs\n---\n# Buttons\nA button gives the user a way to trigger an immediate action.\n\n![Example of buttons](images/controls/button.png)\n\n\n<span class=\"sidebar_heading\" style=\"font-weight: bold;\">Important APIs</span>\n\n-   [**Button class**](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.button.aspx)\n-   [**RepeatButton class**](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.primitives.repeatbutton.aspx)\n-   [**Click event**](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.primitives.buttonbase.click.aspx)\n\n## Is this the right control?\n\nA button lets the user initiate an immediate action, such as submitting a form.\n\nDon't use a button when the action is to navigate to another page; use a link instead. See [Hyperlinks](hyperlinks.md) for more info.\n    \n> Exception: For wizard navigation, use buttons labeled \"Back\" and \"Next\". For other types of backwards navigation or navigation to an upper level, use a back button.\n\n## Example\n\nThis example uses two buttons, Close all and Cancel, in a dialog in the Microsoft Edge browser. \n\n![Example of buttons, used in a dialog](images/control-examples/buttons-edge.png)\n\n## Create a button\n\nThis example shows a button that responds to a click. \n\nCreate the button in XAML.\n\n```xaml\n<Button Content=\"Submit\" Click=\"SubmitButton_Click\"/>\n```\n\nOr create the button in code.\n\n```csharp\nButton submitButton = new Button();\nsubmitButton.Content = \"Submit\";\nsubmitButton.Click += SubmitButton_Click;\n\n// Add the button to a parent container in the visual tree.\nstackPanel1.Children.Add(submitButton);\n```\n\nHandle the Click event.\n\n```csharp\nprivate async void SubmitButton_Click(object sender, RoutedEventArgs e)\n{\n    // Call app specific code to submit form. For example:\n    // form.Submit();\n    Windows.UI.Popups.MessageDialog messageDialog = \n        new Windows.UI.Popups.MessageDialog(\"Thank you for your submission.\");\n    await messageDialog.ShowAsync();\n}\n```\n\n### Button interaction\n\nWhen you tap a Button with a finger or stylus, or press a left mouse button while the pointer is over it, the button raises the [**Click**](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.primitives.buttonbase.click.aspx) event. If a button has keyboard focus, pressing the Enter key or the Spacebar key also raises the Click event.\n\nYou generally can't handle low-level [**PointerPressed**](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.uielement.pointerpressed.aspx) events on a Button because it has the Click behavior instead. For more info, see [Events and routed events overview](https://msdn.microsoft.com/en-us/library/windows/apps/mt185584.aspx).\n\nYou can change how a button raises the Click event by changing the [**ClickMode**](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.primitives.buttonbase.clickmode.aspx) property. The default ClickMode value is **Release**. If ClickMode is **Hover**, the Click event can't be raised with the keyboard or touch. \n\n\n### Button content\n\nButton is a [**ContentControl**](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.contentcontrol.aspx). Its XAML content property is [**Content**](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.contentcontrol.content.aspx), which enables a syntax like this for XAML: `<Button>A button's content</Button>`. You can set any object as the button's content. If the content is a [UIElement](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.uielement.aspx), it is rendered in the button. If the content is another type of object, its string representation is shown in the button.\n\nHere, a **StackPanel** that contains an image of a banana and text is set as the content of a button.\n\n```xaml\n<Button Click=\"Button_Click\" \n        Background=\"#FF0D6AA3\" \n        Height=\"100\" Width=\"80\">\n    <StackPanel>\n        <Image Source=\"Assets/Slices.png\" Height=\"62\"/>\n        <TextBlock Text=\"Orange\"  Foreground=\"White\"\n                   HorizontalAlignment=\"Center\"/>\n    </StackPanel>\n</Button>\n```\n\nThe button looks like this.\n\n![A button with image and text content](images/button-orange.png)\n\n## Create a repeat button\n\nA [**RepeatButton**](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.primitives.repeatbutton.aspx) is a button that raises [**Click**](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.primitives.buttonbase.click.aspx) events repeatedly from the time it's pressed until it's released. Set the [**Delay**](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.primitives.repeatbutton.delay.aspx) property to specify the time that the RepeatButton waits after it is pressed before it starts repeating the click action. Set the [**Interval**](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.primitives.repeatbutton.interval.aspx) property to specify the time between repetitions of the click action. Times for both properties are specified in milliseconds.\n\nThe following example shows two RepeatButton controls whose respective Click events are used to increase and decrease the value shown in a text block.\n\n```xaml\n<StackPanel>\n    <RepeatButton Width=\"100\" Delay=\"500\" Interval=\"100\" Click=\"Increase_Click\">Increase</RepeatButton>\n    <RepeatButton Width=\"100\" Delay=\"500\" Interval=\"100\" Click=\"Decrease_Click\">Decrease</RepeatButton>\n    <TextBlock x:Name=\"clickTextBlock\" Text=\"Number of Clicks:\" />\n</StackPanel>\n```\n\n```csharp\nprivate static int _clicks = 0;\nprivate void Increase_Click(object sender, RoutedEventArgs e)\n{\n    _clicks += 1;\n    clickTextBlock.Text = \"Number of Clicks: \" + _clicks;\n}\n\nprivate void Decrease_Click(object sender, RoutedEventArgs e)\n{\n    if(_clicks > 0)\n    {\n        _clicks -= 1;\n        clickTextBlock.Text = \"Number of Clicks: \" + _clicks;\n    }\n}\n```\n\n## Recommendations\n\n-   Make sure the purpose and state of a button are clear to the user.\n-   Use a concise, specific, self-explanatory text that clearly describes the action that the button performs. Usually button text content is a single word, a verb.\n-   If the button's text content is dynamic, for example, it is localized, consider how the button will resize and what will happen to controls around it.\n-   For command buttons with text content, use a minimum button width.\n-   Avoid narrow, short, or tall command buttons with text content.\n-   Use the default font unless your brand guidelines tell you to use something different.\n-   For an action that needs to be available across multiple pages within your app, instead of duplicating a button on multiple pages, consider using a [bottom app bar](app-bars.md).\n-   Expose only one or two buttons to the user at a time, for example, Accept and Cancel. If you need to expose more actions to the user, consider using [checkboxes](checkbox.md) or [radio buttons](radio-button.md) from which the user can select actions, with a single command button to trigger those actions.\n-   Use the default command button to indicate the most common or recommended action.\n-   Consider customizing your buttons. A button's shape is rectangular by default, but you can customize the visuals that make up the button's appearance. A button's content is usually text—for example, Accept or Cancel—but you could replace the text with an icon, or use an icon plus text.\n-   Make sure that as the user interacts with a button, the button changes state and appearance to provide feedback to the user. Normal, pressed, and disabled are examples of button states.\n-   Trigger the button's action when the user taps or presses the button. Usually the action is triggered when the user releases the button, but you also can set a button's action to trigger when a finger first presses it.\n-   Don't use a command button to set state.\n-   Don't change button text while the app is running; for example, don't change the text of a button that says \"Next\" to \"Continue\".\n-   Don't swap the default submit, reset, and button styles.\n-   Don't put too much content inside a button. Make the content concise and easy to understand (nothing more than a picture and some text).\n\n## Back buttons\nThe back button is a system-provided UI affordance that enables backward navigation through either the back stack or navigation history of the user.\n\nThe scope of the navigation history (whether in-app or global) depends on the device and device mode.\n\n## <span id=\"examples\"></span><span id=\"EXAMPLES\"></span>Example\n\n\nThe UI for the system back button is optimized for each device and input type, but the navigation experience is global and consistent across devices and Universal Windows Platform (UWP) apps. These different experiences include:\n\nDevices\nPhone\n![system back on a phone](images/nav-back-phone.png)\n-   Always present.\n-   A software or hardware button at the bottom of the device.\n-   Global back navigation within the app and between apps.\n\n<span id=\"Tablet\"></span><span id=\"tablet\"></span><span id=\"TABLET\"></span>Tablet\n![system back on a tablet (in tablet mode)](images/nav-back-tablet.png)\n-   Always present in Tablet mode.\n\n    Not available in Desktop mode. Title bar back button can be enabled, instead. See [PC, Laptop, Tablet](#PC).\n\n    Users can switch between running in Tablet mode and Desktop mode by going to **Settings &gt; System &gt; Tablet mode** and setting **Make Windows more touch-friendly when using your device as a tablet**.\n\n-   A software button in the navigation bar at the bottom of the device.\n-   Global back navigation within the app and between apps.\n\n<span id=\"PC\"></span><span id=\"pc\"></span>PC, Laptop, Tablet\n![system back on a pc or laptop](images/nav-back-pc.png)\n-   Optional in Desktop mode.\n\n    Not available in Tablet mode. See [Tablet](#Tablet).\n\n    Disabled by default. Must opt in to enable it.\n\n    Users can switch between running in Tablet mode and Desktop mode by going to **Settings &gt; System &gt; Tablet mode** and setting **Make Windows more touch-friendly when using your device as a tablet**.\n\n-   A software button in the title bar of the app.\n-   Back navigation within the app only. Does not support app-to-app navigation.\n\nSurface Hub\n![system back on a surface hub](images/nav-back-surfacehub.png)\n-   Always present.\n-   A software button at the bottom of the device.\n-   Back navigation within the app and between apps.\n\n \n\n## <span id=\"Recommendations\"></span><span id=\"recommendations\"></span><span id=\"RECOMMENDATIONS\"></span>Recommendations\n\n\n-   Enable back navigation.\n\n    If back navigation is not enabled, your app is included on the global back stack, but in-app page navigation history is not maintained.\n\n-   Enable the title bar back button in Desktop mode.\n\n    In-app page navigation history is maintained, app-to-app back navigation is not supported.\n\n    **Note**  In Tablet mode, the title bar is displayed when a user swipes down from the top of the device or moves a mouse pointer near the top of the device. To avoid duplication and confusion, the title bar back button is not displayed in Tablet mode.\n\n     \n\n-   Hide or disable the title bar back button in Desktop mode when in-app navigation history is depleted or unavailable.\n\n    Provides a clear indication to the user that they have navigated back as far as possible.\n\n-   Each back command should go back one page in the back stack, or, if not in Desktop mode, to the immediately preceding app.\n\n    Users could get confused if back navigation is not intuitive, consistent, and predictable.\n\n## Related articles\n\n- [Radio buttons](radio-button.md)\n- [Toggle switches](toggles.md)\n- [Check boxes](checkbox.md)\n\n**For developers (XAML)**\n- [**Button class**](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.button.aspx)\n\n\n"}