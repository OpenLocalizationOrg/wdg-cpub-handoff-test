{"nodes":[{"pos":[17,117],"content":"The {Binding} markup extension is converted at XAML load time into an instance of the Binding class.","needQuote":true,"needEscape":true,"nodes":[{"content":"The {Binding} markup extension is converted at XAML load time into an instance of the Binding class.","pos":[0,100]}]},{"pos":[126,152],"content":"{Binding} markup extension","needQuote":false,"needEscape":true,"nodes":[{"content":"{Binding} markup extension","pos":[0,26]}]},{"content":"{Binding} markup extension","pos":[210,236]},{"content":"\\[ Updated for UWP apps on Windows 10.","pos":[238,276]},{"content":"For Windows 8.x articles, see the <bpt id=\"p1\">[</bpt>archive<ept id=\"p1\">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept> \\]","pos":[277,372],"source":" For Windows 8.x articles, see the [archive](http://go.microsoft.com/fwlink/p/?linkid=619132) \\]"},{"content":"<bpt id=\"p1\">**</bpt>Note<ept id=\"p1\">**</ept>  A new binding mechanism is available for Windows 10, which is optimized for performance and developer productivity.","pos":[374,499],"source":"**Note**  A new binding mechanism is available for Windows 10, which is optimized for performance and developer productivity."},{"content":"See <bpt id=\"p1\">[</bpt>{x:Bind} markup extension<ept id=\"p1\">](x-bind-markup-extension.md)</ept>.","pos":[500,560],"source":" See [{x:Bind} markup extension](x-bind-markup-extension.md)."},{"pos":[562,802],"content":"<bpt id=\"p1\">**</bpt>Note<ept id=\"p1\">**</ept>  For general info about using data binding in your app with <bpt id=\"p2\">**</bpt>{Binding}<ept id=\"p2\">**</ept> (and for an all-up comparison between <bpt id=\"p3\">**</bpt>{x:Bind}<ept id=\"p3\">**</ept> and <bpt id=\"p4\">**</bpt>{Binding}<ept id=\"p4\">**</ept>), see <bpt id=\"p5\">[</bpt>Data binding in depth<ept id=\"p5\">](https://msdn.microsoft.com/library/windows/apps/mt210946)</ept>.","source":"**Note**  For general info about using data binding in your app with **{Binding}** (and for an all-up comparison between **{x:Bind}** and **{Binding}**), see [Data binding in depth](https://msdn.microsoft.com/library/windows/apps/mt210946)."},{"content":"The <bpt id=\"p1\">**</bpt>{Binding}<ept id=\"p1\">**</ept> markup extension is converted at XAML load time into an instance of the <bpt id=\"p2\">[</bpt><bpt id=\"p3\">**</bpt>Binding<ept id=\"p3\">**</ept><ept id=\"p2\">](https://msdn.microsoft.com/library/windows/apps/br209820)</ept> class.","pos":[804,972],"source":"The **{Binding}** markup extension is converted at XAML load time into an instance of the [**Binding**](https://msdn.microsoft.com/library/windows/apps/br209820) class."},{"content":"This binding object gets a value from a property on a data source.","pos":[973,1039]},{"content":"The binding object can optionally be configured to observe changes in the value of the data source property and refresh itself based on those changes.","pos":[1040,1190]},{"content":"It can also optionally be configured to push changes in its own value back to the source property.","pos":[1191,1289]},{"content":"The property that is the target of a data binding must be a dependency property.","pos":[1290,1370]},{"content":"For more info, see <bpt id=\"p1\">[</bpt>Dependency properties overview<ept id=\"p1\">](dependency-properties-overview.md)</ept>.","pos":[1371,1458],"source":" For more info, see [Dependency properties overview](dependency-properties-overview.md)."},{"pos":[1460,1635],"content":"<bpt id=\"p1\">**</bpt>{Binding}<ept id=\"p1\">**</ept> has the same dependency property precedence as a local value, and setting a local value in imperative code removes the effect of any <bpt id=\"p2\">**</bpt>{Binding}<ept id=\"p2\">**</ept> set in markup.","source":"**{Binding}** has the same dependency property precedence as a local value, and setting a local value in imperative code removes the effect of any **{Binding}** set in markup."},{"content":"Sample apps that demonstrate {Binding}","pos":[1639,1677]},{"pos":[1685,1762],"content":"Download the <bpt id=\"p1\">[</bpt>Bookstore1<ept id=\"p1\">](http://go.microsoft.com/fwlink/?linkid=532950)</ept> app.","source":"Download the [Bookstore1](http://go.microsoft.com/fwlink/?linkid=532950) app."},{"pos":[1767,1844],"content":"Download the <bpt id=\"p1\">[</bpt>Bookstore2<ept id=\"p1\">](http://go.microsoft.com/fwlink/?linkid=532952)</ept> app.","source":"Download the [Bookstore2](http://go.microsoft.com/fwlink/?linkid=532952) app."},{"content":"XAML attribute usage","pos":[1849,1869]},{"content":"Term","pos":[2108,2112]},{"content":"Description","pos":[2115,2126]},{"content":"propertyPath","pos":[2155,2167]},{"content":"A string that specifies the property path for the binding.","pos":[2171,2229]},{"content":"More info is in the <bpt id=\"p1\">[</bpt>Property path<ept id=\"p1\">](#property-path)</ept> section below.","pos":[2230,2296],"source":" More info is in the [Property path](#property-path) section below."},{"content":"bindingProperties","pos":[2302,2319]},{"content":"<bpt id=\"p1\">*</bpt>propName<ept id=\"p1\">*</ept><ph id=\"ph1\">=</ph><bpt id=\"p2\">*</bpt>value<ept id=\"p2\">*</ept>\\[, <bpt id=\"p3\">*</bpt>propName<ept id=\"p3\">*</ept><ph id=\"ph2\">=</ph><bpt id=\"p4\">*</bpt>value<ept id=\"p4\">*</ept>\\]*","pos":[2323,2366],"source":"*propName*=*value*\\[, *propName*=*value*\\]*"},{"content":"One or more binding properties that are specified using a name/value pair syntax.","pos":[2371,2452]},{"content":"propName","pos":[2458,2466]},{"content":"The string name of the property to set on the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>Binding<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br209820)</ept> object.","pos":[2470,2595],"source":"The string name of the property to set on the [**Binding**](https://msdn.microsoft.com/library/windows/apps/br209820) object."},{"content":"For example, \"Converter\".","pos":[2596,2621]},{"content":"value","pos":[2628,2633]},{"content":"The value to set the property to.","pos":[2637,2670]},{"content":"The syntax of the argument depends on the property of <bpt id=\"p1\">[</bpt>Properties of the Binding class that can be set with {Binding}<ept id=\"p1\">](#properties-of-binding)</ept> section below.","pos":[2671,2828],"source":" The syntax of the argument depends on the property of [Properties of the Binding class that can be set with {Binding}](#properties-of-binding) section below."},{"content":"Property path","pos":[2835,2848]},{"content":"<bpt id=\"p1\">*</bpt>PropertyPath<ept id=\"p1\">*</ept> sets the value of <bpt id=\"p2\">[</bpt><bpt id=\"p3\">**</bpt>Path<ept id=\"p3\">**</ept><ept id=\"p2\">](https://msdn.microsoft.com/library/windows/apps/br209830)</ept>, which is the property that you're binding to (the source property).","pos":[2850,3020],"source":"*PropertyPath* sets the value of [**Path**](https://msdn.microsoft.com/library/windows/apps/br209830), which is the property that you're binding to (the source property)."},{"content":"You can mention the property name explicitly: <ph id=\"ph1\">`{Binding Path=...}`</ph>.","pos":[3021,3088],"source":" You can mention the property name explicitly: `{Binding Path=...}`."},{"content":"Or you can omit it: <ph id=\"ph1\">`{Binding ...}`</ph>.","pos":[3089,3125],"source":" Or you can omit it: `{Binding ...}`."},{"content":"The type of <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>Path<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br209830)</ept> is a property path, which is a string that evaluates to a property or sub-property of either your custom type or a framework type.","pos":[3127,3338],"source":"The type of [**Path**](https://msdn.microsoft.com/library/windows/apps/br209830) is a property path, which is a string that evaluates to a property or sub-property of either your custom type or a framework type."},{"content":"The type can be, but does not need to be, a <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>DependencyObject<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br242356)</ept>.","pos":[3339,3464],"source":" The type can be, but does not need to be, a [**DependencyObject**](https://msdn.microsoft.com/library/windows/apps/br242356)."},{"content":"Steps in a property path are delimited by dots (.), and you can include multiple delimiters to traverse successive sub-properties.","pos":[3465,3595]},{"content":"Use the dot delimiter regardless of the programming language used to implement the object being bound to.","pos":[3596,3701]},{"content":"For example, to bind UI to an employee object's first name property, your property path might be \"Employee.FirstName\".","pos":[3703,3821]},{"content":"If you are binding an items control to a property that contains an employee's dependents, your property path might be \"Employee.Dependents\", and the item template of the items control would take care of displaying the items in \"Dependents\".","pos":[3822,4062]},{"content":"If the data source is a collection, then a property path can specify items in the collection by their position or index.","pos":[4064,4184]},{"content":"For example, \"Teams\\[0\\].Players\", where the literal \"\\[\\]\" encloses the \"0\" that specifies the first item in a collection.","pos":[4185,4308]},{"content":"When using an <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>ElementName<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br209828)</ept> binding to an existing <bpt id=\"p3\">[</bpt><bpt id=\"p4\">**</bpt>DependencyObject<ept id=\"p4\">**</ept><ept id=\"p3\">](https://msdn.microsoft.com/library/windows/apps/br242356)</ept>, you can use attached properties as part of the property path.","pos":[4310,4566],"source":"When using an [**ElementName**](https://msdn.microsoft.com/library/windows/apps/br209828) binding to an existing [**DependencyObject**](https://msdn.microsoft.com/library/windows/apps/br242356), you can use attached properties as part of the property path."},{"content":"To disambiguate an attached property so that the intermediate dot in the attached property name is not considered a step into a property path, put parentheses around the owner-qualified attached property name; for example, <ph id=\"ph1\">`(AutomationProperties.Name)`</ph>.","pos":[4567,4820],"source":" To disambiguate an attached property so that the intermediate dot in the attached property name is not considered a step into a property path, put parentheses around the owner-qualified attached property name; for example, `(AutomationProperties.Name)`."},{"content":"A property path intermediate object is stored as a <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>PropertyPath<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br244259)</ept> object in a run-time representation, but most scenarios won't need to interact with a <bpt id=\"p3\">**</bpt>PropertyPath<ept id=\"p3\">**</ept> object in code.","pos":[4822,5068],"source":"A property path intermediate object is stored as a [**PropertyPath**](https://msdn.microsoft.com/library/windows/apps/br244259) object in a run-time representation, but most scenarios won't need to interact with a **PropertyPath** object in code."},{"content":"You can usually specify the binding info you need using XAML.","pos":[5069,5130]},{"pos":[5132,5390],"content":"For more info about the string syntax for a property path, property paths in animation feature areas, and constructing a <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>PropertyPath<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br244259)</ept> object, see <bpt id=\"p3\">[</bpt>Property-path syntax<ept id=\"p3\">](property-path-syntax.md)</ept>.","source":"For more info about the string syntax for a property path, property paths in animation feature areas, and constructing a [**PropertyPath**](https://msdn.microsoft.com/library/windows/apps/br244259) object, see [Property-path syntax](property-path-syntax.md)."},{"content":"Properties of the Binding class that can be set with {Binding}","pos":[5395,5457]},{"content":"<bpt id=\"p1\">**</bpt>{Binding}<ept id=\"p1\">**</ept> is illustrated with the <bpt id=\"p2\">*</bpt>bindingProperties<ept id=\"p2\">*</ept> placeholder syntax because there are multiple read/write properties of a <bpt id=\"p3\">[</bpt><bpt id=\"p4\">**</bpt>Binding<ept id=\"p4\">**</ept><ept id=\"p3\">](https://msdn.microsoft.com/library/windows/apps/br209820)</ept> that can be set in the markup extension.","pos":[5460,5703],"source":"**{Binding}** is illustrated with the *bindingProperties* placeholder syntax because there are multiple read/write properties of a [**Binding**](https://msdn.microsoft.com/library/windows/apps/br209820) that can be set in the markup extension."},{"content":"The properties can be set in any order with comma-separated <bpt id=\"p1\">*</bpt>propName<ept id=\"p1\">*</ept><ph id=\"ph1\">=</ph><bpt id=\"p2\">*</bpt>value<ept id=\"p2\">*</ept> pairs.","pos":[5704,5789],"source":" The properties can be set in any order with comma-separated *propName*=*value* pairs."},{"content":"Some of the properties require types that don't have a type conversion, so these require markup extensions of their own nested within the <bpt id=\"p1\">**</bpt>{Binding}<ept id=\"p1\">**</ept>.","pos":[5790,5942],"source":" Some of the properties require types that don't have a type conversion, so these require markup extensions of their own nested within the **{Binding}**."},{"content":"Property","pos":[5946,5954]},{"content":"Description","pos":[5957,5968]},{"content":"Path","pos":[6003,6007]},{"pos":[6071,6125],"content":"See the <bpt id=\"p1\">[</bpt>Property path<ept id=\"p1\">](#property-path)</ept> section above.","source":"See the [Property path](#property-path) section above."},{"content":"Converter","pos":[6133,6142]},{"content":"Specifies the converter object that is called by the binding engine.","pos":[6206,6274]},{"content":"The converter can be set in XAML, but only if you refer to an object instance that you've assigned in a <bpt id=\"p1\">[</bpt>{StaticResource} markup extension<ept id=\"p1\">](staticresource-markup-extension.md)</ept> reference to that object in the resource dictionary.","pos":[6275,6503],"source":" The converter can be set in XAML, but only if you refer to an object instance that you've assigned in a [{StaticResource} markup extension](staticresource-markup-extension.md) reference to that object in the resource dictionary."},{"content":"ConverterLanguage","pos":[6511,6528]},{"content":"Specifies the culture to be used by the converter.","pos":[6592,6642]},{"content":"(If you're setting <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>Converter<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br209826)</ept>.) The culture is set as a standards-based identifier.","pos":[6643,6789],"source":" (If you're setting [**Converter**](https://msdn.microsoft.com/library/windows/apps/br209826).) The culture is set as a standards-based identifier."},{"content":"For more info, see <bpt id=\"p1\">**</bpt>ConverterLanguage<ept id=\"p1\">**</ept>","pos":[6790,6830],"source":" For more info, see **ConverterLanguage**"},{"content":"ConverterParameter","pos":[6839,6857]},{"content":"Specifies the converter parameter that can be used in converter logic.","pos":[6921,6991]},{"content":"(If you're setting <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>Converter<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br209826)</ept>.) Most converters use simple logic that get all the info they need from the passed value to convert, and don't need a <bpt id=\"p3\">**</bpt>ConverterParameter<ept id=\"p3\">**</ept> value.","pos":[6992,7232],"source":" (If you're setting [**Converter**](https://msdn.microsoft.com/library/windows/apps/br209826).) Most converters use simple logic that get all the info they need from the passed value to convert, and don't need a **ConverterParameter** value."},{"content":"The <bpt id=\"p1\">**</bpt>ConverterParameter<ept id=\"p1\">**</ept> parameter is for moderately advanced converter implementations that have more than one logic that keys off what's passed in <bpt id=\"p2\">**</bpt>ConverterParameter<ept id=\"p2\">**</ept>.","pos":[7233,7407],"source":" The **ConverterParameter** parameter is for moderately advanced converter implementations that have more than one logic that keys off what's passed in **ConverterParameter**."},{"content":"You can write a converter that uses values other than strings but this is uncommon, see Remarks in <bpt id=\"p1\">**</bpt>ConverterParameter<ept id=\"p1\">**</ept> for more info.","pos":[7408,7544],"source":" You can write a converter that uses values other than strings but this is uncommon, see Remarks in **ConverterParameter** for more info."},{"content":"ElementName","pos":[7552,7563]},{"content":"Specifies a data source by referencing another element in the same XAML construct that has a <bpt id=\"p1\">**</bpt>Name<ept id=\"p1\">**</ept> property or <bpt id=\"p2\">[</bpt>x:Name attribute<ept id=\"p2\">](x-name-attribute.md)</ept>.","pos":[7627,7781],"source":"Specifies a data source by referencing another element in the same XAML construct that has a **Name** property or [x:Name attribute](x-name-attribute.md)."},{"content":"This is often use to share related values or use sub-properties of one UI element to provide a specific value for another element, for example in a XAML control template.","pos":[7782,7952]},{"content":"FallbackValue","pos":[7960,7973]},{"content":"Specifies a value to display when the source or path cannot be resolved.","pos":[8037,8109]},{"content":"Mode","pos":[8118,8122]},{"content":"Specifies the binding mode, as one of these strings: \"OneTime\", \"OneWay\", or \"TwoWay\".","pos":[8186,8272]},{"content":"These correspond to the constant names of the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>BindingMode<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br209822)</ept> enumeration.","pos":[8273,8407],"source":" These correspond to the constant names of the [**BindingMode**](https://msdn.microsoft.com/library/windows/apps/br209822) enumeration."},{"content":"The default depends on the binding target but in most cases it is \"OneWay\".","pos":[8408,8483]},{"content":"Note that this differs from the default for <bpt id=\"p1\">**</bpt>{x:Bind}<ept id=\"p1\">**</ept>, which is \"OneTime\".","pos":[8484,8561],"source":" Note that this differs from the default for **{x:Bind}**, which is \"OneTime\"."},{"content":"RelativeSource","pos":[8570,8584]},{"content":"Specifies a data source by describing the position of the binding source relative to the position of the binding target.","pos":[8648,8768]},{"content":"This is expressed in terms of the run-time object graph, for example specifying the object's parent.","pos":[8769,8869]},{"content":"Setting the <bpt id=\"p1\">[</bpt>{RelativeSource} markup extension<ept id=\"p1\">](relativesource-markup-extension.md)</ept>.","pos":[8870,8954],"source":" Setting the [{RelativeSource} markup extension](relativesource-markup-extension.md)."},{"content":"Source","pos":[8962,8968]},{"content":"Specifies the object data source.","pos":[9032,9065]},{"content":"Within the <bpt id=\"p1\">**</bpt>Binding<ept id=\"p1\">**</ept> markup extension, the <bpt id=\"p2\">[</bpt>Data binding in depth<ept id=\"p2\">](https://msdn.microsoft.com/library/windows/apps/mt210946)</ept>.","pos":[9066,9193],"source":" Within the **Binding** markup extension, the [Data binding in depth](https://msdn.microsoft.com/library/windows/apps/mt210946)."},{"content":"TargetNullValue","pos":[9201,9216]},{"pos":[9280,9367],"content":"Specifies a value to display when the source value resolves but is explicitly <bpt id=\"p1\">**</bpt>null<ept id=\"p1\">**</ept>.","source":"Specifies a value to display when the source value resolves but is explicitly **null**."},{"content":"UpdateSourceTrigger","pos":[9375,9394]},{"content":"Specifies the timing of binding source updates.","pos":[9458,9505]},{"content":"If unspecified, the default is <bpt id=\"p1\">**</bpt>Default<ept id=\"p1\">**</ept>.","pos":[9506,9549],"source":" If unspecified, the default is **Default**."},{"pos":[9553,9704],"content":"<bpt id=\"p1\">**</bpt>Note<ept id=\"p1\">**</ept>  If you're converting markup from <bpt id=\"p2\">**</bpt>{x:Bind}<ept id=\"p2\">**</ept> to <bpt id=\"p3\">**</bpt>{Binding}<ept id=\"p3\">**</ept>, then be aware of the differences in default values for the <bpt id=\"p4\">**</bpt>Mode<ept id=\"p4\">**</ept> property.","source":"**Note**  If you're converting markup from **{x:Bind}** to **{Binding}**, then be aware of the differences in default values for the **Mode** property."},{"content":"<bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>Converter<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br209826)</ept>, <bpt id=\"p3\">[</bpt><bpt id=\"p4\">**</bpt>ConverterLanguage<ept id=\"p4\">**</ept><ept id=\"p3\">](https://msdn.microsoft.com/library/windows/apps/hh701880)</ept> and <bpt id=\"p5\">**</bpt>ConverterLanguage<ept id=\"p5\">**</ept> are all related to the scenario of converting a value or type from the binding source into a type or value that is compatible with the binding target property.","pos":[9706,10048],"source":"[**Converter**](https://msdn.microsoft.com/library/windows/apps/br209826), [**ConverterLanguage**](https://msdn.microsoft.com/library/windows/apps/hh701880) and **ConverterLanguage** are all related to the scenario of converting a value or type from the binding source into a type or value that is compatible with the binding target property."},{"content":"For more info and examples, see the \"Data conversions\" section of <bpt id=\"p1\">[</bpt>Data binding in depth<ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/mt210946)</ept>.","pos":[10049,10197],"source":" For more info and examples, see the \"Data conversions\" section of [Data binding in depth](https://msdn.microsoft.com/library/windows/apps/mt210946)."},{"pos":[10199,10488],"content":"<bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>Source<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br209832)</ept>, <bpt id=\"p3\">[</bpt><bpt id=\"p4\">**</bpt>RelativeSource<ept id=\"p4\">**</ept><ept id=\"p3\">](https://msdn.microsoft.com/library/windows/apps/br209831)</ept>, and <bpt id=\"p5\">[</bpt><bpt id=\"p6\">**</bpt>ElementName<ept id=\"p6\">**</ept><ept id=\"p5\">](https://msdn.microsoft.com/library/windows/apps/br209828)</ept> specify a binding source, so they are mutually exclusive.","source":"[**Source**](https://msdn.microsoft.com/library/windows/apps/br209832), [**RelativeSource**](https://msdn.microsoft.com/library/windows/apps/br209831), and [**ElementName**](https://msdn.microsoft.com/library/windows/apps/br209828) specify a binding source, so they are mutually exclusive."},{"content":"<bpt id=\"p1\">**</bpt>Tip<ept id=\"p1\">**</ept>  If you need to specify a single curly brace for a value, such as in <bpt id=\"p2\">[</bpt><bpt id=\"p3\">**</bpt>Path<ept id=\"p3\">**</ept><ept id=\"p2\">](https://msdn.microsoft.com/library/windows/apps/br209830)</ept> or <bpt id=\"p4\">[</bpt><bpt id=\"p5\">**</bpt>ConverterParameter<ept id=\"p5\">**</ept><ept id=\"p4\">](https://msdn.microsoft.com/library/windows/apps/br209827)</ept>, then precede it with a backslash: <ph id=\"ph1\">`\\{`</ph>.","pos":[10490,10762],"source":"**Tip**  If you need to specify a single curly brace for a value, such as in [**Path**](https://msdn.microsoft.com/library/windows/apps/br209830) or [**ConverterParameter**](https://msdn.microsoft.com/library/windows/apps/br209827), then precede it with a backslash: `\\{`."},{"content":"Alternatively, enclose the entire string that contains the braces that need escaping in a secondary quotation set, for example <ph id=\"ph1\">`ConverterParameter='{Mix}'`</ph>.","pos":[10763,10919],"source":" Alternatively, enclose the entire string that contains the braces that need escaping in a secondary quotation set, for example `ConverterParameter='{Mix}'`."},{"content":"Examples","pos":[10924,10932]},{"content":"The second example sets four different <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>Binding<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br209820)</ept> properties: <bpt id=\"p3\">[</bpt><bpt id=\"p4\">**</bpt>ElementName<ept id=\"p4\">**</ept><ept id=\"p3\">](https://msdn.microsoft.com/library/windows/apps/br209828)</ept>, <bpt id=\"p5\">[</bpt><bpt id=\"p6\">**</bpt>Path<ept id=\"p6\">**</ept><ept id=\"p5\">](https://msdn.microsoft.com/library/windows/apps/br209830)</ept>, <bpt id=\"p7\">[</bpt><bpt id=\"p8\">**</bpt>Mode<ept id=\"p8\">**</ept><ept id=\"p7\">](https://msdn.microsoft.com/library/windows/apps/br209829)</ept> and <bpt id=\"p9\">[</bpt><bpt id=\"p10\">**</bpt>Converter<ept id=\"p10\">**</ept><ept id=\"p9\">](https://msdn.microsoft.com/library/windows/apps/br209826)</ept>.","pos":[11589,12006],"source":"The second example sets four different [**Binding**](https://msdn.microsoft.com/library/windows/apps/br209820) properties: [**ElementName**](https://msdn.microsoft.com/library/windows/apps/br209828), [**Path**](https://msdn.microsoft.com/library/windows/apps/br209830), [**Mode**](https://msdn.microsoft.com/library/windows/apps/br209829) and [**Converter**](https://msdn.microsoft.com/library/windows/apps/br209826)."},{"content":"<bpt id=\"p1\">**</bpt>Path<ept id=\"p1\">**</ept> in this case is shown explicitly named as a <bpt id=\"p2\">**</bpt>Binding<ept id=\"p2\">**</ept> property.","pos":[12007,12081],"source":"**Path** in this case is shown explicitly named as a **Binding** property."},{"content":"The <bpt id=\"p1\">**</bpt>Path<ept id=\"p1\">**</ept> is evaluated to a data binding source that is another object in the same run-time object tree, a <bpt id=\"p2\">[</bpt><bpt id=\"p3\">**</bpt>Slider<ept id=\"p3\">**</ept><ept id=\"p2\">](https://msdn.microsoft.com/library/windows/apps/br209614)</ept> named <ph id=\"ph1\">`sliderValueConverter`</ph>.","pos":[12082,12292],"source":" The **Path** is evaluated to a data binding source that is another object in the same run-time object tree, a [**Slider**](https://msdn.microsoft.com/library/windows/apps/br209614) named `sliderValueConverter`."},{"content":"Note how the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>Converter<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br209826)</ept> property value uses another markup extension, <bpt id=\"p3\">[</bpt>{StaticResource} markup extension<ept id=\"p3\">](staticresource-markup-extension.md)</ept>, so there are two nested markup extension usages here.","pos":[12294,12553],"source":"Note how the [**Converter**](https://msdn.microsoft.com/library/windows/apps/br209826) property value uses another markup extension, [{StaticResource} markup extension](staticresource-markup-extension.md), so there are two nested markup extension usages here."},{"content":"The inner one is evaluated first, so that once the resource is obtained there's a practical <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>IValueConverter<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br209903)</ept> (a custom class that's instantiated by the <ph id=\"ph1\">`local:S2Formatter`</ph> element in resources) that the binding can use.","pos":[12554,12836],"source":" The inner one is evaluated first, so that once the resource is obtained there's a practical [**IValueConverter**](https://msdn.microsoft.com/library/windows/apps/br209903) (a custom class that's instantiated by the `local:S2Formatter` element in resources) that the binding can use."},{"content":"Tools support","pos":[12841,12854]},{"content":"Microsoft IntelliSense in Microsoft Visual Studio displays the properties of the data context while authoring <bpt id=\"p1\">**</bpt>{Binding}<ept id=\"p1\">**</ept> in the XAML markup editor.","pos":[12856,13006],"source":"Microsoft IntelliSense in Microsoft Visual Studio displays the properties of the data context while authoring **{Binding}** in the XAML markup editor."},{"content":"As soon as you type \"{Binding\", data context properties appropriate for <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>Path<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br209830)</ept> are displayed in the dropdown.","pos":[13007,13178],"source":" As soon as you type \"{Binding\", data context properties appropriate for [**Path**](https://msdn.microsoft.com/library/windows/apps/br209830) are displayed in the dropdown."},{"content":"IntelliSense also helps with the other properties of <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>Binding<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br209820)</ept>.","pos":[13179,13304],"source":" IntelliSense also helps with the other properties of [**Binding**](https://msdn.microsoft.com/library/windows/apps/br209820)."},{"content":"For this to work, you must have either the data context or the design-time data context set in the markup page.","pos":[13305,13416]},{"content":"<bpt id=\"p1\">**</bpt>Go To Definition<ept id=\"p1\">**</ept> (F12) also works with <bpt id=\"p2\">**</bpt>{Binding}<ept id=\"p2\">**</ept>.","pos":[13417,13474],"source":"**Go To Definition** (F12) also works with **{Binding}**."},{"content":"Alternatively, you can use the data binding dialog.","pos":[13475,13526]}],"content":"---\ndescription: The {Binding} markup extension is converted at XAML load time into an instance of the Binding class.\ntitle: '{Binding} markup extension'\nms.assetid: 3BAFE7B5-AF33-487F-9AD5-BEAFD65D04C3\n---\n\n# {Binding} markup extension\n\n\\[ Updated for UWP apps on Windows 10. For Windows 8.x articles, see the [archive](http://go.microsoft.com/fwlink/p/?linkid=619132) \\]\n\n**Note**  A new binding mechanism is available for Windows 10, which is optimized for performance and developer productivity. See [{x:Bind} markup extension](x-bind-markup-extension.md).\n\n**Note**  For general info about using data binding in your app with **{Binding}** (and for an all-up comparison between **{x:Bind}** and **{Binding}**), see [Data binding in depth](https://msdn.microsoft.com/library/windows/apps/mt210946).\n\nThe **{Binding}** markup extension is converted at XAML load time into an instance of the [**Binding**](https://msdn.microsoft.com/library/windows/apps/br209820) class. This binding object gets a value from a property on a data source. The binding object can optionally be configured to observe changes in the value of the data source property and refresh itself based on those changes. It can also optionally be configured to push changes in its own value back to the source property. The property that is the target of a data binding must be a dependency property. For more info, see [Dependency properties overview](dependency-properties-overview.md).\n\n**{Binding}** has the same dependency property precedence as a local value, and setting a local value in imperative code removes the effect of any **{Binding}** set in markup.\n\n**Sample apps that demonstrate {Binding}**\n\n-   Download the [Bookstore1](http://go.microsoft.com/fwlink/?linkid=532950) app.\n-   Download the [Bookstore2](http://go.microsoft.com/fwlink/?linkid=532952) app.\n\n## XAML attribute usage\n\n\n``` syntax\n<object property=\"{Binding}\" .../>\n-or-\n<object property=\"{Binding propertyPath}\" .../>\n-or-\n<object property=\"{Binding bindingProperties}\" .../>\n-or-\n<object property=\"{Binding propertyPath, bindingProperties}\" .../>\n```\n\n| Term | Description |\n|------|-------------|\n| *propertyPath* | A string that specifies the property path for the binding. More info is in the [Property path](#property-path) section below. |\n| *bindingProperties* | *propName*=*value*\\[, *propName*=*value*\\]*<br/>One or more binding properties that are specified using a name/value pair syntax. |\n| *propName* | The string name of the property to set on the [**Binding**](https://msdn.microsoft.com/library/windows/apps/br209820) object. For example, \"Converter\". | \n| *value* | The value to set the property to. The syntax of the argument depends on the property of [Properties of the Binding class that can be set with {Binding}](#properties-of-binding) section below. |\n\n## Property path\n\n*PropertyPath* sets the value of [**Path**](https://msdn.microsoft.com/library/windows/apps/br209830), which is the property that you're binding to (the source property). You can mention the property name explicitly: `{Binding Path=...}`. Or you can omit it: `{Binding ...}`.\n\nThe type of [**Path**](https://msdn.microsoft.com/library/windows/apps/br209830) is a property path, which is a string that evaluates to a property or sub-property of either your custom type or a framework type. The type can be, but does not need to be, a [**DependencyObject**](https://msdn.microsoft.com/library/windows/apps/br242356). Steps in a property path are delimited by dots (.), and you can include multiple delimiters to traverse successive sub-properties. Use the dot delimiter regardless of the programming language used to implement the object being bound to.\n\nFor example, to bind UI to an employee object's first name property, your property path might be \"Employee.FirstName\". If you are binding an items control to a property that contains an employee's dependents, your property path might be \"Employee.Dependents\", and the item template of the items control would take care of displaying the items in \"Dependents\".\n\nIf the data source is a collection, then a property path can specify items in the collection by their position or index. For example, \"Teams\\[0\\].Players\", where the literal \"\\[\\]\" encloses the \"0\" that specifies the first item in a collection.\n\nWhen using an [**ElementName**](https://msdn.microsoft.com/library/windows/apps/br209828) binding to an existing [**DependencyObject**](https://msdn.microsoft.com/library/windows/apps/br242356), you can use attached properties as part of the property path. To disambiguate an attached property so that the intermediate dot in the attached property name is not considered a step into a property path, put parentheses around the owner-qualified attached property name; for example, `(AutomationProperties.Name)`.\n\nA property path intermediate object is stored as a [**PropertyPath**](https://msdn.microsoft.com/library/windows/apps/br244259) object in a run-time representation, but most scenarios won't need to interact with a **PropertyPath** object in code. You can usually specify the binding info you need using XAML.\n\nFor more info about the string syntax for a property path, property paths in animation feature areas, and constructing a [**PropertyPath**](https://msdn.microsoft.com/library/windows/apps/br244259) object, see [Property-path syntax](property-path-syntax.md).\n\n## Properties of the Binding class that can be set with {Binding}\n\n\n**{Binding}** is illustrated with the *bindingProperties* placeholder syntax because there are multiple read/write properties of a [**Binding**](https://msdn.microsoft.com/library/windows/apps/br209820) that can be set in the markup extension. The properties can be set in any order with comma-separated *propName*=*value* pairs. Some of the properties require types that don't have a type conversion, so these require markup extensions of their own nested within the **{Binding}**.\n\n| Property | Description |\n|----------|-------------|\n| [**Path**](https://msdn.microsoft.com/library/windows/apps/br209830) | See the [Property path](#property-path) section above. |\n| [**Converter**](https://msdn.microsoft.com/library/windows/apps/br209826) | Specifies the converter object that is called by the binding engine. The converter can be set in XAML, but only if you refer to an object instance that you've assigned in a [{StaticResource} markup extension](staticresource-markup-extension.md) reference to that object in the resource dictionary. |\n| [**ConverterLanguage**](https://msdn.microsoft.com/library/windows/apps/hh701880) | Specifies the culture to be used by the converter. (If you're setting [**Converter**](https://msdn.microsoft.com/library/windows/apps/br209826).) The culture is set as a standards-based identifier. For more info, see **ConverterLanguage** | \n| [**ConverterParameter**](https://msdn.microsoft.com/library/windows/apps/br209827) | Specifies the converter parameter that can be used in converter logic. (If you're setting [**Converter**](https://msdn.microsoft.com/library/windows/apps/br209826).) Most converters use simple logic that get all the info they need from the passed value to convert, and don't need a **ConverterParameter** value. The **ConverterParameter** parameter is for moderately advanced converter implementations that have more than one logic that keys off what's passed in **ConverterParameter**. You can write a converter that uses values other than strings but this is uncommon, see Remarks in **ConverterParameter** for more info. |\n| [**ElementName**](https://msdn.microsoft.com/library/windows/apps/br209828) | Specifies a data source by referencing another element in the same XAML construct that has a **Name** property or [x:Name attribute](x-name-attribute.md). This is often use to share related values or use sub-properties of one UI element to provide a specific value for another element, for example in a XAML control template. |\n| [**FallbackValue**](https://msdn.microsoft.com/library/windows/apps/dn279345) | Specifies a value to display when the source or path cannot be resolved. | \n| [**Mode**](https://msdn.microsoft.com/library/windows/apps/br209829) | Specifies the binding mode, as one of these strings: \"OneTime\", \"OneWay\", or \"TwoWay\". These correspond to the constant names of the [**BindingMode**](https://msdn.microsoft.com/library/windows/apps/br209822) enumeration. The default depends on the binding target but in most cases it is \"OneWay\". Note that this differs from the default for **{x:Bind}**, which is \"OneTime\". | \n| [**RelativeSource**](https://msdn.microsoft.com/library/windows/apps/br209831) | Specifies a data source by describing the position of the binding source relative to the position of the binding target. This is expressed in terms of the run-time object graph, for example specifying the object's parent. Setting the [{RelativeSource} markup extension](relativesource-markup-extension.md). |\n| [**Source**](https://msdn.microsoft.com/library/windows/apps/br209832) | Specifies the object data source. Within the **Binding** markup extension, the [Data binding in depth](https://msdn.microsoft.com/library/windows/apps/mt210946). |\n| [**TargetNullValue**](https://msdn.microsoft.com/library/windows/apps/dn279347) | Specifies a value to display when the source value resolves but is explicitly **null**. |\n| [**UpdateSourceTrigger**](https://msdn.microsoft.com/library/windows/apps/dn279350) | Specifies the timing of binding source updates. If unspecified, the default is **Default**. |\n\n**Note**  If you're converting markup from **{x:Bind}** to **{Binding}**, then be aware of the differences in default values for the **Mode** property.\n\n[**Converter**](https://msdn.microsoft.com/library/windows/apps/br209826), [**ConverterLanguage**](https://msdn.microsoft.com/library/windows/apps/hh701880) and **ConverterLanguage** are all related to the scenario of converting a value or type from the binding source into a type or value that is compatible with the binding target property. For more info and examples, see the \"Data conversions\" section of [Data binding in depth](https://msdn.microsoft.com/library/windows/apps/mt210946).\n\n[**Source**](https://msdn.microsoft.com/library/windows/apps/br209832), [**RelativeSource**](https://msdn.microsoft.com/library/windows/apps/br209831), and [**ElementName**](https://msdn.microsoft.com/library/windows/apps/br209828) specify a binding source, so they are mutually exclusive.\n\n**Tip**  If you need to specify a single curly brace for a value, such as in [**Path**](https://msdn.microsoft.com/library/windows/apps/br209830) or [**ConverterParameter**](https://msdn.microsoft.com/library/windows/apps/br209827), then precede it with a backslash: `\\{`. Alternatively, enclose the entire string that contains the braces that need escaping in a secondary quotation set, for example `ConverterParameter='{Mix}'`.\n\n## Examples\n\n```XAML\n<!-- binding a UI element to a view model -->    \n<Page ... >\n    <Page.DataContext>\n        <local:BookstoreViewModel/>\n    </Page.DataContext>\n\n    <GridView ItemsSource=\"{Binding BookSkus}\" SelectedItem=\"{Binding SelectedBookSku, Mode=TwoWay}\" ... />\n</Page>\n```\n\n```XAML\n<!-- binding a UI element to another UI element -->\n<Page ... >\n    <Page.Resources>\n        <local:S2Formatter x:Key=\"GradeConverter\"/>\n    </Page.Resources>\n\n    <Slider x:Name=\"sliderValueConverter\" ... />\n    <TextBox Text=\"{Binding Path=Value, ElementName=sliderValueConverter,\n        Mode=OneWay,\n        Converter={StaticResource GradeConverter}}\"/> \n</Page>\n```\n\nThe second example sets four different [**Binding**](https://msdn.microsoft.com/library/windows/apps/br209820) properties: [**ElementName**](https://msdn.microsoft.com/library/windows/apps/br209828), [**Path**](https://msdn.microsoft.com/library/windows/apps/br209830), [**Mode**](https://msdn.microsoft.com/library/windows/apps/br209829) and [**Converter**](https://msdn.microsoft.com/library/windows/apps/br209826). **Path** in this case is shown explicitly named as a **Binding** property. The **Path** is evaluated to a data binding source that is another object in the same run-time object tree, a [**Slider**](https://msdn.microsoft.com/library/windows/apps/br209614) named `sliderValueConverter`.\n\nNote how the [**Converter**](https://msdn.microsoft.com/library/windows/apps/br209826) property value uses another markup extension, [{StaticResource} markup extension](staticresource-markup-extension.md), so there are two nested markup extension usages here. The inner one is evaluated first, so that once the resource is obtained there's a practical [**IValueConverter**](https://msdn.microsoft.com/library/windows/apps/br209903) (a custom class that's instantiated by the `local:S2Formatter` element in resources) that the binding can use.\n\n## Tools support\n\nMicrosoft IntelliSense in Microsoft Visual Studio displays the properties of the data context while authoring **{Binding}** in the XAML markup editor. As soon as you type \"{Binding\", data context properties appropriate for [**Path**](https://msdn.microsoft.com/library/windows/apps/br209830) are displayed in the dropdown. IntelliSense also helps with the other properties of [**Binding**](https://msdn.microsoft.com/library/windows/apps/br209820). For this to work, you must have either the data context or the design-time data context set in the markup page. **Go To Definition** (F12) also works with **{Binding}**. Alternatively, you can use the data binding dialog.\n\n \n\n"}