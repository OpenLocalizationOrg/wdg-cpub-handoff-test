<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="ja-jp" version="2.0" xml:space="preserve" xmlns="urn:oasis:names:tc:xliff:document:2.0">
	<file id="1">
		<mda:metadata>
			<mda:metaGroup>
				<mda:meta type="tool-id">mdxliff</mda:meta>
				<mda:meta type="tool-name">mdxliff</mda:meta>
				<mda:meta type="tool-version">1.0-00ddeee</mda:meta>
				<mda:meta type="tool-company">Microsoft</mda:meta>
			</mda:metaGroup>
		<mda:metaGroup><mda:meta type="olfilehash">a447cb93cfba0156012f968c7aac99a72b82de0f</mda:meta><mda:meta type="olfilepath">wdg-cpub-test\ndolci1\app-to-app\copy-and-paste.md</mda:meta><mda:meta type="oltranslationpriority"></mda:meta><mda:meta type="oltranslationtype">Human Translation</mda:meta><mda:meta type="olskeletonhash">f0199ad81ea088acd1e2add4e644a02e110124e1</mda:meta><mda:meta type="olxliffhash">e7c786a1408c96d1b77a0df089edc3ef9e8074a8</mda:meta></mda:metaGroup></mda:metadata>
		<group id="content">
			<unit id="101" translate="yes">
				<segment state="initial">
					<source>This article explains how to support copy and paste in Universal Windows Platform (UWP) apps using the clipboard.</source>
					<target>This article explains how to support copy and paste in Universal Windows Platform (UWP) apps using the clipboard.</target>
				</segment>
			</unit>
			<unit id="102" translate="yes">
				<segment state="initial">
					<source>Copy and paste</source>
					<target>Copy and paste</target>
				</segment>
			</unit>
			<unit id="103" translate="yes">
				<segment state="initial">
					<source>Copy and paste</source>
					<target>Copy and paste</target>
				</segment>
			</unit>
			<unit id="104" translate="yes">
				<segment state="initial">
					<source>\[ Updated for UWP apps on Windows 10.</source>
					<target>\[ Updated for UWP apps on Windows 10.</target>
				</segment>
			</unit>
			<unit id="105" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](http://go.microsoft.com/fwlink/p/?linkid=619132)</data>
				</originalData>
				<segment state="initial">
					<source>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</source>
					<target>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</target>
				</segment>
			</unit>
			<unit id="106" translate="yes">
				<segment state="initial">
					<source>This article explains how to support copy and paste in Universal Windows Platform (UWP) apps using the clipboard.</source>
					<target>This article explains how to support copy and paste in Universal Windows Platform (UWP) apps using the clipboard.</target>
				</segment>
			</unit>
			<unit id="107" translate="yes">
				<segment state="initial">
					<source>Copy and paste is the classic way to exchange data either between apps, or within an app, and almost every app can support clipboard operations to some degree.</source>
					<target>Copy and paste is the classic way to exchange data either between apps, or within an app, and almost every app can support clipboard operations to some degree.</target>
				</segment>
			</unit>
			<unit id="108" translate="yes">
				<segment state="initial">
					<source>Check for built-in clipboard support</source>
					<target>Check for built-in clipboard support</target>
				</segment>
			</unit>
			<unit id="109" translate="yes">
				<segment state="initial">
					<source>In many cases, you do not need to write code to support clipboard operations.</source>
					<target>In many cases, you do not need to write code to support clipboard operations.</target>
				</segment>
			</unit>
			<unit id="110" translate="yes">
				<segment state="initial">
					<source>Many of the default XAML controls you can use to create apps already support clipboard operations.</source>
					<target>Many of the default XAML controls you can use to create apps already support clipboard operations.</target>
				</segment>
			</unit>
			<unit id="111" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">]</data>
					<data id="id3">[</data>
					<data id="id4">]</data>
				</originalData>
				<segment state="initial">
					<source>For more information about which controls are available, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">controls list</pc><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ControlsList</pc>.</source>
					<target>For more information about which controls are available, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">controls list</pc><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ControlsList</pc>.</target>
				</segment>
			</unit>
			<unit id="112" translate="yes">
				<segment state="initial">
					<source>Get set up</source>
					<target>Get set up</target>
				</segment>
			</unit>
			<unit id="113" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">]</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">]</data>
				</originalData>
				<segment state="initial">
					<source>First, include the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.ApplicationModel.DataTransfer</pc></pc><pc dataRefEnd="id6" dataRefStart="id5" id="p3">DataTransfer</pc> namespace in your app.</source>
					<target>First, include the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.ApplicationModel.DataTransfer</pc></pc><pc dataRefEnd="id6" dataRefStart="id5" id="p3">DataTransfer</pc> namespace in your app.</target>
				</segment>
			</unit>
			<unit id="114" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">]</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">]</data>
				</originalData>
				<segment state="initial">
					<source>Then, add an instance of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">DataPackage</pc></pc><pc dataRefEnd="id6" dataRefStart="id5" id="p3">DataPackage</pc> object.</source>
					<target>Then, add an instance of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">DataPackage</pc></pc><pc dataRefEnd="id6" dataRefStart="id5" id="p3">DataPackage</pc> object.</target>
				</segment>
			</unit>
			<unit id="115" translate="yes">
				<segment state="initial">
					<source>This object contains both the data the user wants to copy and any properties (such as a description) that you want to include.</source>
					<target>This object contains both the data the user wants to copy and any properties (such as a description) that you want to include.</target>
				</segment>
			</unit>
			<unit id="116" translate="yes">
				<segment state="initial">
					<source>Copy and cut</source>
					<target>Copy and cut</target>
				</segment>
			</unit>
			<unit id="117" translate="yes">
				<segment state="initial">
					<source>Copy and cut (also referred to as move) work almost exactly the same.</source>
					<target>Copy and cut (also referred to as move) work almost exactly the same.</target>
				</segment>
			</unit>
			<unit id="118" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">]</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">]</data>
				</originalData>
				<segment state="initial">
					<source>Choose which operation you want using the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">DataPackage.RequestedOperation</pc></pc><pc dataRefEnd="id6" dataRefStart="id5" id="p3">RequestedOperation</pc> property.</source>
					<target>Choose which operation you want using the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">DataPackage.RequestedOperation</pc></pc><pc dataRefEnd="id6" dataRefStart="id5" id="p3">RequestedOperation</pc> property.</target>
				</segment>
			</unit>
			<unit id="119" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">]</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">]</data>
				</originalData>
				<segment state="initial">
					<source>Next, you can add the data that a user has selected to the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">DataPackage</pc></pc><pc dataRefEnd="id6" dataRefStart="id5" id="p3">DataPackage</pc> object.</source>
					<target>Next, you can add the data that a user has selected to the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">DataPackage</pc></pc><pc dataRefEnd="id6" dataRefStart="id5" id="p3">DataPackage</pc> object.</target>
				</segment>
			</unit>
			<unit id="120" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>If this data is supported by the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">DataPackage</pc> class, you can use one of the corresponding methods in the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">DataPackage</pc> object.</source>
					<target>If this data is supported by the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">DataPackage</pc> class, you can use one of the corresponding methods in the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">DataPackage</pc> object.</target>
				</segment>
			</unit>
			<unit id="121" translate="yes">
				<segment state="initial">
					<source>Here's how to add text:</source>
					<target>Here's how to add text:</target>
				</segment>
			</unit>
			<unit id="122" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">]</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">]</data>
					<data id="id7">[</data>
					<data id="id8">]</data>
					<data id="id9">**</data>
					<data id="id10">**</data>
					<data id="id11">[</data>
					<data id="id12">]</data>
				</originalData>
				<segment state="initial">
					<source>The last step is to add the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">DataPackage</pc></pc><pc dataRefEnd="id6" dataRefStart="id5" id="p3">DataPackage</pc> to the clipboard by calling the static <pc dataRefEnd="id8" dataRefStart="id7" id="p4"><pc dataRefEnd="id10" dataRefStart="id9" id="p5">Clipboard.SetContent</pc></pc><pc dataRefEnd="id12" dataRefStart="id11" id="p6">SetContent</pc> method.</source>
					<target>The last step is to add the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">DataPackage</pc></pc><pc dataRefEnd="id6" dataRefStart="id5" id="p3">DataPackage</pc> to the clipboard by calling the static <pc dataRefEnd="id8" dataRefStart="id7" id="p4"><pc dataRefEnd="id10" dataRefStart="id9" id="p5">Clipboard.SetContent</pc></pc><pc dataRefEnd="id12" dataRefStart="id11" id="p6">SetContent</pc> method.</target>
				</segment>
			</unit>
			<unit id="123" translate="yes">
				<segment state="initial">
					<source>Paste</source>
					<target>Paste</target>
				</segment>
			</unit>
			<unit id="124" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">[</data>
					<data id="id4">]</data>
				</originalData>
				<segment state="initial">
					<source>To get the contents of the clipboard, call the static [<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Clipboard.GetContent</pc><pc dataRefEnd="id4" dataRefStart="id3" id="p2">GetContent</pc> method.</source>
					<target>To get the contents of the clipboard, call the static [<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Clipboard.GetContent</pc><pc dataRefEnd="id4" dataRefStart="id3" id="p2">GetContent</pc> method.</target>
				</segment>
			</unit>
			<unit id="125" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">]</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">]</data>
				</originalData>
				<segment state="initial">
					<source>This method returns a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">DataPackageView</pc></pc><pc dataRefEnd="id6" dataRefStart="id5" id="p3">DataPackageView</pc> that contains the content.</source>
					<target>This method returns a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">DataPackageView</pc></pc><pc dataRefEnd="id6" dataRefStart="id5" id="p3">DataPackageView</pc> that contains the content.</target>
				</segment>
			</unit>
			<unit id="126" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">]</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">]</data>
				</originalData>
				<segment state="initial">
					<source>This object is almost identical to a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">DataPackage</pc></pc><pc dataRefEnd="id6" dataRefStart="id5" id="p3">DataPackage</pc> object, except that its contents are read-only.</source>
					<target>This object is almost identical to a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">DataPackage</pc></pc><pc dataRefEnd="id6" dataRefStart="id5" id="p3">DataPackage</pc> object, except that its contents are read-only.</target>
				</segment>
			</unit>
			<unit id="127" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">]</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">]</data>
					<data id="id7">[</data>
					<data id="id8">]</data>
					<data id="id9">**</data>
					<data id="id10">**</data>
					<data id="id11">[</data>
					<data id="id12">]</data>
				</originalData>
				<segment state="initial">
					<source>With that object, you can use either the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">AvailableFormats</pc></pc><pc dataRefEnd="id6" dataRefStart="id5" id="p3">AvailableFormats</pc> or the <pc dataRefEnd="id8" dataRefStart="id7" id="p4"><pc dataRefEnd="id10" dataRefStart="id9" id="p5">Contains</pc></pc><pc dataRefEnd="id12" dataRefStart="id11" id="p6">Contains</pc> method to identify what formats are available.</source>
					<target>With that object, you can use either the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">AvailableFormats</pc></pc><pc dataRefEnd="id6" dataRefStart="id5" id="p3">AvailableFormats</pc> or the <pc dataRefEnd="id8" dataRefStart="id7" id="p4"><pc dataRefEnd="id10" dataRefStart="id9" id="p5">Contains</pc></pc><pc dataRefEnd="id12" dataRefStart="id11" id="p6">Contains</pc> method to identify what formats are available.</target>
				</segment>
			</unit>
			<unit id="128" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>Then, you can call the corresponding <pc dataRefEnd="id2" dataRefStart="id1" id="p1">DataPackageView</pc> method to get the data.</source>
					<target>Then, you can call the corresponding <pc dataRefEnd="id2" dataRefStart="id1" id="p1">DataPackageView</pc> method to get the data.</target>
				</segment>
			</unit>
			<unit id="129" translate="yes">
				<segment state="initial">
					<source>Track changes to the clipboard</source>
					<target>Track changes to the clipboard</target>
				</segment>
			</unit>
			<unit id="130" translate="yes">
				<segment state="initial">
					<source>In addition to copy and paste commands, you may also want to track clipboard changes.</source>
					<target>In addition to copy and paste commands, you may also want to track clipboard changes.</target>
				</segment>
			</unit>
			<unit id="131" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">]</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">]</data>
				</originalData>
				<segment state="initial">
					<source>Do this by handling the clipboard's <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Clipboard.ContentChanged</pc></pc><pc dataRefEnd="id6" dataRefStart="id5" id="p3">ContentChanged</pc> event.</source>
					<target>Do this by handling the clipboard's <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Clipboard.ContentChanged</pc></pc><pc dataRefEnd="id6" dataRefStart="id5" id="p3">ContentChanged</pc> event.</target>
				</segment>
			</unit>
			<unit id="132" translate="yes">
				<segment state="initial">
					<source>DataTransfer</source>
					<target>DataTransfer</target>
				</segment>
			</unit>
			<unit id="133" translate="yes">
				<segment state="initial">
					<source>DataPackage</source>
					<target>DataPackage</target>
				</segment>
			</unit>
			<unit id="134" translate="yes">
				<segment state="initial">
					<source>DataPackageView</source>
					<target>DataPackageView</target>
				</segment>
			</unit>
			<unit id="135" translate="yes">
				<segment state="initial">
					<source>DataPackagePropertySet</source>
					<target>DataPackagePropertySet</target>
				</segment>
			</unit>
			<unit id="136" translate="yes">
				<segment state="initial">
					<source>DataRequest</source>
					<target>DataRequest</target>
				</segment>
			</unit>
			<unit id="137" translate="yes">
				<segment state="initial">
					<source>DataRequested</source>
					<target>DataRequested</target>
				</segment>
			</unit>
			<unit id="138" translate="yes">
				<segment state="initial">
					<source>FailWithDisplayText</source>
					<target>FailWithDisplayText</target>
				</segment>
			</unit>
			<unit id="139" translate="yes">
				<segment state="initial">
					<source>ShowShareUi</source>
					<target>ShowShareUi</target>
				</segment>
			</unit>
			<unit id="140" translate="yes">
				<segment state="initial">
					<source>RequestedOperation</source>
					<target>RequestedOperation</target>
				</segment>
			</unit>
			<unit id="141" translate="yes">
				<segment state="initial">
					<source>ControlsList</source>
					<target>ControlsList</target>
				</segment>
			</unit>
			<unit id="142" translate="yes">
				<segment state="initial">
					<source>SetContent</source>
					<target>SetContent</target>
				</segment>
			</unit>
			<unit id="143" translate="yes">
				<segment state="initial">
					<source>GetContent</source>
					<target>GetContent</target>
				</segment>
			</unit>
			<unit id="144" translate="yes">
				<segment state="initial">
					<source>AvailableFormats</source>
					<target>AvailableFormats</target>
				</segment>
			</unit>
			<unit id="145" translate="yes">
				<segment state="initial">
					<source>Contains</source>
					<target>Contains</target>
				</segment>
			</unit>
			<unit id="146" translate="yes">
				<segment state="initial">
					<source>ContentChanged</source>
					<target>ContentChanged</target>
				</segment>
			</unit>
		</group>
	</file>
</xliff>