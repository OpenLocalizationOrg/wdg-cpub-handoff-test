<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="ja-jp" version="2.0" xml:space="preserve" xmlns="urn:oasis:names:tc:xliff:document:2.0">
	<file id="1">
		<mda:metadata>
			<mda:metaGroup>
				<mda:meta type="tool-id">mdxliff</mda:meta>
				<mda:meta type="tool-name">mdxliff</mda:meta>
				<mda:meta type="tool-version">1.0-00ddeee</mda:meta>
				<mda:meta type="tool-company">Microsoft</mda:meta>
			</mda:metaGroup>
		<mda:metaGroup><mda:meta type="olfilehash">61f3499955996bbbc392bf643e3c8fcecce190bb</mda:meta><mda:meta type="olfilepath">wdg-cpub-test\ndolci1\devices-sensors\gatt-scenarios.md</mda:meta><mda:meta type="oltranslationpriority"></mda:meta><mda:meta type="oltranslationtype">Human Translation</mda:meta><mda:meta type="olskeletonhash">c98b6babe9ddd9ac3c63523748a2053deaa7f074</mda:meta><mda:meta type="olxliffhash">9ff0b502c130b8279672d95187d239dd80fc7b82</mda:meta></mda:metaGroup></mda:metadata>
		<group id="content">
			<unit id="101" translate="yes">
				<segment state="initial">
					<source>Bluetooth GATT</source>
					<target>Bluetooth GATT</target>
				</segment>
			</unit>
			<unit id="102" translate="yes">
				<segment state="initial">
					<source>This article provides an overview of Bluetooth Generic Attribute Profile (GATT) for Universal Windows Platform (UWP) apps, along with sample code for three common GATT scenarios: retrieving Bluetooth data, controlling a Bluetooth LE thermometer device, and controlling the presentation of Bluetooth LE device data.</source>
					<target>This article provides an overview of Bluetooth Generic Attribute Profile (GATT) for Universal Windows Platform (UWP) apps, along with sample code for three common GATT scenarios: retrieving Bluetooth data, controlling a Bluetooth LE thermometer device, and controlling the presentation of Bluetooth LE device data.</target>
				</segment>
			</unit>
			<unit id="103" translate="yes">
				<segment state="initial">
					<source>Bluetooth GATT</source>
					<target>Bluetooth GATT</target>
				</segment>
			</unit>
			<unit id="104" translate="yes">
				<segment state="initial">
					<source>\[ Updated for UWP apps on Windows 10.</source>
					<target>\[ Updated for UWP apps on Windows 10.</target>
				</segment>
			</unit>
			<unit id="105" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](http://go.microsoft.com/fwlink/p/?linkid=619132)</data>
				</originalData>
				<segment state="initial">
					<source>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</source>
					<target>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</target>
				</segment>
			</unit>
			<unit id="106" translate="yes">
				<segment state="initial">
					<source>** Important APIs</source>
					<target>** Important APIs</target>
				</segment>
			</unit>
			<unit id="107" translate="yes">
				<segment state="initial">
					<source>Windows.Devices.Bluetooth</source>
					<target>Windows.Devices.Bluetooth</target>
				</segment>
			</unit>
			<unit id="108" translate="yes">
				<segment state="initial">
					<source>Windows.Devices.Bluetooth.GenericAttributeProfile</source>
					<target>Windows.Devices.Bluetooth.GenericAttributeProfile</target>
				</segment>
			</unit>
			<unit id="109" translate="yes">
				<segment state="initial">
					<source>This article provides an overview of Bluetooth Generic Attribute Profile (GATT) for Universal Windows Platform (UWP) apps, along with sample code for three common GATT scenarios: retrieving Bluetooth data, controlling a Bluetooth LE thermometer device, and controlling the presentation of Bluetooth LE device data.</source>
					<target>This article provides an overview of Bluetooth Generic Attribute Profile (GATT) for Universal Windows Platform (UWP) apps, along with sample code for three common GATT scenarios: retrieving Bluetooth data, controlling a Bluetooth LE thermometer device, and controlling the presentation of Bluetooth LE device data.</target>
				</segment>
			</unit>
			<unit id="110" translate="yes">
				<segment state="initial">
					<source>Overview</source>
					<target>Overview</target>
				</segment>
			</unit>
			<unit id="111" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/Dn297685)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Developers can use the APIs in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.Devices.Bluetooth.GenericAttributeProfile</pc></pc> namespace to access Bluetooth LE services, descriptors, and characteristics.</source>
					<target>Developers can use the APIs in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.Devices.Bluetooth.GenericAttributeProfile</pc></pc> namespace to access Bluetooth LE services, descriptors, and characteristics.</target>
				</segment>
			</unit>
			<unit id="112" translate="yes">
				<segment state="initial">
					<source>Bluetooth LE devices expose their functionality through a collection of:</source>
					<target>Bluetooth LE devices expose their functionality through a collection of:</target>
				</segment>
			</unit>
			<unit id="113" translate="yes">
				<segment state="initial">
					<source>Primary Services</source>
					<target>Primary Services</target>
				</segment>
			</unit>
			<unit id="114" translate="yes">
				<segment state="initial">
					<source>Included Services</source>
					<target>Included Services</target>
				</segment>
			</unit>
			<unit id="115" translate="yes">
				<segment state="initial">
					<source>Characteristics</source>
					<target>Characteristics</target>
				</segment>
			</unit>
			<unit id="116" translate="yes">
				<segment state="initial">
					<source>Descriptors</source>
					<target>Descriptors</target>
				</segment>
			</unit>
			<unit id="117" translate="yes">
				<segment state="initial">
					<source>Primary services define the functional contract of the LE device and contain a collection of characteristics that define the service.</source>
					<target>Primary services define the functional contract of the LE device and contain a collection of characteristics that define the service.</target>
				</segment>
			</unit>
			<unit id="118" translate="yes">
				<segment state="initial">
					<source>Those characteristics, in turn, contain descriptors that describe the characteristics.</source>
					<target>Those characteristics, in turn, contain descriptors that describe the characteristics.</target>
				</segment>
			</unit>
			<unit id="119" translate="yes">
				<segment state="initial">
					<source>The Bluetooth GATT APIs expose objects and functions, rather than access to the raw transport.</source>
					<target>The Bluetooth GATT APIs expose objects and functions, rather than access to the raw transport.</target>
				</segment>
			</unit>
			<unit id="120" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/BR225459)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>At the driver level primary services are enumerated as Child Device Nodes of the Bluetooth LE device using the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.Devices.Enumeration</pc></pc> APIs.</source>
					<target>At the driver level primary services are enumerated as Child Device Nodes of the Bluetooth LE device using the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.Devices.Enumeration</pc></pc> APIs.</target>
				</segment>
			</unit>
			<unit id="121" translate="yes">
				<segment state="initial">
					<source>The Bluetooth GATT APIs also enable developers to work with Bluetooth LE devices with the ability to perform the following tasks:</source>
					<target>The Bluetooth GATT APIs also enable developers to work with Bluetooth LE devices with the ability to perform the following tasks:</target>
				</segment>
			</unit>
			<unit id="122" translate="yes">
				<segment state="initial">
					<source>Perform Service / Characteristic / Descriptor discovery</source>
					<target>Perform Service / Characteristic / Descriptor discovery</target>
				</segment>
			</unit>
			<unit id="123" translate="yes">
				<segment state="initial">
					<source>Read and Write Characteristic / Descriptor values</source>
					<target>Read and Write Characteristic / Descriptor values</target>
				</segment>
			</unit>
			<unit id="124" translate="yes">
				<segment state="initial">
					<source>Register a callback for the Characteristic ValueChanged event</source>
					<target>Register a callback for the Characteristic ValueChanged event</target>
				</segment>
			</unit>
			<unit id="125" translate="yes">
				<segment state="initial">
					<source>The Bluetooth GATT APIs simplify development by dealing with common properties and providing reasonable defaults to aid in device management and configuration.</source>
					<target>The Bluetooth GATT APIs simplify development by dealing with common properties and providing reasonable defaults to aid in device management and configuration.</target>
				</segment>
			</unit>
			<unit id="126" translate="yes">
				<segment state="initial">
					<source>They provide a means for developers to access functionality of a Bluetooth LE device from an app.</source>
					<target>They provide a means for developers to access functionality of a Bluetooth LE device from an app.</target>
				</segment>
			</unit>
			<unit id="127" translate="yes">
				<segment state="initial">
					<source>To create a useful implementation a developer has to have prior knowledge of the GATT services and characteristics the application intends to consume, and to process the specific characteristic values such that the binary data provided by the API is transformed into useful data before being presented to the user.</source>
					<target>To create a useful implementation a developer has to have prior knowledge of the GATT services and characteristics the application intends to consume, and to process the specific characteristic values such that the binary data provided by the API is transformed into useful data before being presented to the user.</target>
				</segment>
			</unit>
			<unit id="128" translate="yes">
				<segment state="initial">
					<source>The Bluetooth GATT APIs expose only the basic primitives required to communicate with a Bluetooth LE device.</source>
					<target>The Bluetooth GATT APIs expose only the basic primitives required to communicate with a Bluetooth LE device.</target>
				</segment>
			</unit>
			<unit id="129" translate="yes">
				<segment state="initial">
					<source>To interpret the data, an application profile must be defined, either by a Bluetooth SIG standard profile, or a custom profile implemented by a device vendor.</source>
					<target>To interpret the data, an application profile must be defined, either by a Bluetooth SIG standard profile, or a custom profile implemented by a device vendor.</target>
				</segment>
			</unit>
			<unit id="130" translate="yes">
				<segment state="initial">
					<source>A profile creates a binding contract between the application and the device, as to what the exchanged data represents and how to interpret it.</source>
					<target>A profile creates a binding contract between the application and the device, as to what the exchanged data represents and how to interpret it.</target>
				</segment>
			</unit>
			<unit id="131" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](http://go.microsoft.com/fwlink/p/?LinkID=317977)</data>
				</originalData>
				<segment state="initial">
					<source>For convenience the Bluetooth SIG maintains a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">list of public profiles</pc> available.</source>
					<target>For convenience the Bluetooth SIG maintains a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">list of public profiles</pc> available.</target>
				</segment>
			</unit>
			<unit id="132" translate="yes">
				<segment state="initial">
					<source>Retrieve Bluetooth data</source>
					<target>Retrieve Bluetooth data</target>
				</segment>
			</unit>
			<unit id="133" translate="yes">
				<segment state="initial">
					<source>In this example, the app consumes temperature measurements from a Bluetooth device that implements the Bluetooth LE Health Thermometer Service.</source>
					<target>In this example, the app consumes temperature measurements from a Bluetooth device that implements the Bluetooth LE Health Thermometer Service.</target>
				</segment>
			</unit>
			<unit id="134" translate="yes">
				<segment state="initial">
					<source>The app specifies that it wants to be notified when a new temperature measurement is available.</source>
					<target>The app specifies that it wants to be notified when a new temperature measurement is available.</target>
				</segment>
			</unit>
			<unit id="135" translate="yes">
				<segment state="initial">
					<source>By registering an event handler for the "Thermometer Characteristic Value Changed" event, the app will receive characteristic value changed event notifications while it is running in the foreground.</source>
					<target>By registering an event handler for the "Thermometer Characteristic Value Changed" event, the app will receive characteristic value changed event notifications while it is running in the foreground.</target>
				</segment>
			</unit>
			<unit id="136" translate="yes">
				<segment state="initial">
					<source>Note that when the app is suspended, it must release all device resources and when it resumes, it must perform device enumeration and initialization once again.</source>
					<target>Note that when the app is suspended, it must release all device resources and when it resumes, it must perform device enumeration and initialization once again.</target>
				</segment>
			</unit>
			<unit id="137" translate="yes">
				<segment state="initial">
					<source>Control a Bluetooth LE thermometer device</source>
					<target>Control a Bluetooth LE thermometer device</target>
				</segment>
			</unit>
			<unit id="138" translate="yes">
				<segment state="initial">
					<source>In this example, an UWP app acts as a controller for a fictitious Bluetooth LE Thermometer device.</source>
					<target>In this example, an UWP app acts as a controller for a fictitious Bluetooth LE Thermometer device.</target>
				</segment>
			</unit>
			<unit id="139" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/Dn297603)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>The device also declares a format characteristic which allows users to retrieve the value reading in either Celsius or Fahrenheit degrees, in addition to the standard characteristics of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">HealthThermometer</pc></pc> profile.</source>
					<target>The device also declares a format characteristic which allows users to retrieve the value reading in either Celsius or Fahrenheit degrees, in addition to the standard characteristics of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">HealthThermometer</pc></pc> profile.</target>
				</segment>
			</unit>
			<unit id="140" translate="yes">
				<segment state="initial">
					<source>The app uses reliable write transactions to make sure that the format and measurement interval are set as a single value.</source>
					<target>The app uses reliable write transactions to make sure that the format and measurement interval are set as a single value.</target>
				</segment>
			</unit>
			<unit id="141" translate="yes">
				<segment state="initial">
					<source>Control the presentation of Bluetooth LE device data</source>
					<target>Control the presentation of Bluetooth LE device data</target>
				</segment>
			</unit>
			<unit id="142" translate="yes">
				<segment state="initial">
					<source>A Bluetooth LE devices may expose a battery service that provides the current battery level to the user.</source>
					<target>A Bluetooth LE devices may expose a battery service that provides the current battery level to the user.</target>
				</segment>
			</unit>
			<unit id="143" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/Dn263742)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>The battery service includes an optional <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">PresentationFormats</pc></pc> descriptor which allows some flexibility in interpretation of the battery level data.</source>
					<target>The battery service includes an optional <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">PresentationFormats</pc></pc> descriptor which allows some flexibility in interpretation of the battery level data.</target>
				</segment>
			</unit>
			<unit id="144" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>This scenario provides example of an app that works with such a device and uses the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">PresentationFormats</pc> property to format a characteristic value, before presenting it to the user.</source>
					<target>This scenario provides example of an app that works with such a device and uses the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">PresentationFormats</pc> property to format a characteristic value, before presenting it to the user.</target>
				</segment>
			</unit>
		</group>
	</file>
</xliff>