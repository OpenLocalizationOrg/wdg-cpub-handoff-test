<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="ja-jp" version="2.0" xml:space="preserve" xmlns="urn:oasis:names:tc:xliff:document:2.0">
	<file id="1">
		<mda:metadata>
			<mda:metaGroup>
				<mda:meta type="tool-id">mdxliff</mda:meta>
				<mda:meta type="tool-name">mdxliff</mda:meta>
				<mda:meta type="tool-version">1.0-00ddeee</mda:meta>
				<mda:meta type="tool-company">Microsoft</mda:meta>
			</mda:metaGroup>
		<mda:metaGroup><mda:meta type="olfilehash">32372bdef6cf58479527e149c2917e6dec556009</mda:meta><mda:meta type="olfilepath">wdg-cpub-test\ndolci2\data-binding\index.md</mda:meta><mda:meta type="oltranslationpriority"></mda:meta><mda:meta type="oltranslationtype">Human Translation</mda:meta><mda:meta type="olskeletonhash">77c9a8102934c21a0127ef8db0e39547b84d3ac2</mda:meta><mda:meta type="olxliffhash">76d51e25dadb15c98de7898a3bf5bd6a649d3934</mda:meta></mda:metaGroup></mda:metadata>
		<group id="content">
			<unit id="101" translate="yes">
				<segment state="initial">
					<source>Data binding</source>
					<target>Data binding</target>
				</segment>
			</unit>
			<unit id="102" translate="yes">
				<segment state="initial">
					<source>Data binding is a way for your app's UI to display data, and optionally to stay in sync with that data.</source>
					<target>Data binding is a way for your app's UI to display data, and optionally to stay in sync with that data.</target>
				</segment>
			</unit>
			<unit id="103" translate="yes">
				<segment state="initial">
					<source>Data binding</source>
					<target>Data binding</target>
				</segment>
			</unit>
			<unit id="104" translate="yes">
				<segment state="initial">
					<source>\[ Updated for UWP apps on Windows 10.</source>
					<target>\[ Updated for UWP apps on Windows 10.</target>
				</segment>
			</unit>
			<unit id="105" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](http://go.microsoft.com/fwlink/p/?linkid=619132)</data>
				</originalData>
				<segment state="initial">
					<source>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</source>
					<target>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</target>
				</segment>
			</unit>
			<unit id="106" translate="yes">
				<segment state="initial">
					<source>Data binding is a way for your app's UI to display data, and optionally to stay in sync with that data.</source>
					<target>Data binding is a way for your app's UI to display data, and optionally to stay in sync with that data.</target>
				</segment>
			</unit>
			<unit id="107" translate="yes">
				<segment state="initial">
					<source>Data binding allows you to separate the concern of data from the concern of UI, and that results in a simpler conceptual model as well as better readability, testability, and maintainability of your app.</source>
					<target>Data binding allows you to separate the concern of data from the concern of UI, and that results in a simpler conceptual model as well as better readability, testability, and maintainability of your app.</target>
				</segment>
			</unit>
			<unit id="108" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/Mt204783)</data>
					<data id="id3">[</data>
					<data id="id4">](https://msdn.microsoft.com/library/windows/apps/Mt204782)</data>
				</originalData>
				<segment state="initial">
					<source>In markup, you can choose to use either the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">{x:Bind} markup extension</pc> or the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">{Binding} markup extension</pc>.</source>
					<target>In markup, you can choose to use either the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">{x:Bind} markup extension</pc> or the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">{Binding} markup extension</pc>.</target>
				</segment>
			</unit>
			<unit id="109" translate="yes">
				<segment state="initial">
					<source>And you can even use a mixture of the two in the same app—even on the same UI element.</source>
					<target>And you can even use a mixture of the two in the same app—even on the same UI element.</target>
				</segment>
			</unit>
			<unit id="110" translate="yes">
				<segment state="initial">
					<source>{x:Bind} is new for Windows 10 and it has better performance.</source>
					<target>{x:Bind} is new for Windows 10 and it has better performance.</target>
				</segment>
			</unit>
			<unit id="111" translate="yes">
				<segment state="initial">
					<source>{Binding} has more features.</source>
					<target>{Binding} has more features.</target>
				</segment>
			</unit>
			<unit id="112" translate="yes">
				<segment state="initial">
					<source>Topic</source>
					<target>Topic</target>
				</segment>
			</unit>
			<unit id="113" translate="yes">
				<segment state="initial">
					<source>Description</source>
					<target>Description</target>
				</segment>
			</unit>
			<unit id="114" translate="yes">
				<segment state="initial">
					<source>Data binding overview</source>
					<target>Data binding overview</target>
				</segment>
			</unit>
			<unit id="115" translate="yes">
				<segment state="initial">
					<source>This topic shows you how to bind a control (or other UI element) to a single item or bind an items control to a collection of items in a Universal Windows Platform (UWP) app.</source>
					<target>This topic shows you how to bind a control (or other UI element) to a single item or bind an items control to a collection of items in a Universal Windows Platform (UWP) app.</target>
				</segment>
			</unit>
			<unit id="116" translate="yes">
				<segment state="initial">
					<source>In addition, we show how to control the rendering of items, implement a details view based on a selection, and convert data for display.</source>
					<target>In addition, we show how to control the rendering of items, implement a details view based on a selection, and convert data for display.</target>
				</segment>
			</unit>
			<unit id="117" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](data-binding-in-depth.md)</data>
				</originalData>
				<segment state="initial">
					<source>For more detailed info, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Data binding in depth</pc>.</source>
					<target>For more detailed info, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Data binding in depth</pc>.</target>
				</segment>
			</unit>
			<unit id="118" translate="yes">
				<segment state="initial">
					<source>Data binding in depth</source>
					<target>Data binding in depth</target>
				</segment>
			</unit>
			<unit id="119" translate="yes">
				<segment state="initial">
					<source>Data binding is a way for your app's UI to display data, and optionally to stay in sync with that data.</source>
					<target>Data binding is a way for your app's UI to display data, and optionally to stay in sync with that data.</target>
				</segment>
			</unit>
			<unit id="120" translate="yes">
				<segment state="initial">
					<source>Data binding allows you to separate the concern of data from the concern of UI, and that results in a simpler conceptual model as well as better readability, testability, and maintainability of your app.</source>
					<target>Data binding allows you to separate the concern of data from the concern of UI, and that results in a simpler conceptual model as well as better readability, testability, and maintainability of your app.</target>
				</segment>
			</unit>
			<unit id="121" translate="yes">
				<segment state="initial">
					<source>Sample data on the design surface, and for prototyping</source>
					<target>Sample data on the design surface, and for prototyping</target>
				</segment>
			</unit>
			<unit id="122" translate="yes">
				<segment state="initial">
					<source>It may be impossible or undesirable (perhaps for reasons of privacy or performance) for your app to display live data on the design surface in Microsoft Visual Studio or Blend for Visual Studio.</source>
					<target>It may be impossible or undesirable (perhaps for reasons of privacy or performance) for your app to display live data on the design surface in Microsoft Visual Studio or Blend for Visual Studio.</target>
				</segment>
			</unit>
			<unit id="123" translate="yes">
				<segment state="initial">
					<source>In order to have your controls populated with data (so that you can work on your app's layout, templates, and other visual properties), there are various ways in which you can use design-time sample data.</source>
					<target>In order to have your controls populated with data (so that you can work on your app's layout, templates, and other visual properties), there are various ways in which you can use design-time sample data.</target>
				</segment>
			</unit>
			<unit id="124" translate="yes">
				<segment state="initial">
					<source>Sample data can also be really useful and time-saving if you're building a sketch (or prototype) app.</source>
					<target>Sample data can also be really useful and time-saving if you're building a sketch (or prototype) app.</target>
				</segment>
			</unit>
			<unit id="125" translate="yes">
				<segment state="initial">
					<source>You can use sample data in your sketch or prototype at run-time to illustrate your ideas without going as far as connecting to real, live data.</source>
					<target>You can use sample data in your sketch or prototype at run-time to illustrate your ideas without going as far as connecting to real, live data.</target>
				</segment>
			</unit>
			<unit id="126" translate="yes">
				<segment state="initial">
					<source>Bind hierarchical data and create a master/details view</source>
					<target>Bind hierarchical data and create a master/details view</target>
				</segment>
			</unit>
			<unit id="127" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/BR209833)</data>
					<data id="id3">&lt;strong&gt;</data>
					<data id="id4">&lt;/strong&gt;</data>
				</originalData>
				<segment state="initial">
					<source>You can make a multi-level master/details (also known as list-details) view of hierarchical data by binding items controls to <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><ph dataRef="id3" id="ph1" />CollectionViewSource<ph dataRef="id4" id="ph2" /></pc> instances that are bound together in a chain.</source>
					<target>You can make a multi-level master/details (also known as list-details) view of hierarchical data by binding items controls to <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><ph dataRef="id3" id="ph1" />CollectionViewSource<ph dataRef="id4" id="ph2" /></pc> instances that are bound together in a chain.</target>
				</segment>
			</unit>
		</group>
	</file>
</xliff>