<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="ja-jp" version="2.0" xml:space="preserve" xmlns="urn:oasis:names:tc:xliff:document:2.0">
	<file id="1">
		<mda:metadata>
			<mda:metaGroup>
				<mda:meta type="tool-id">mdxliff</mda:meta>
				<mda:meta type="tool-name">mdxliff</mda:meta>
				<mda:meta type="tool-version">1.0-00ddeee</mda:meta>
				<mda:meta type="tool-company">Microsoft</mda:meta>
			</mda:metaGroup>
		<mda:metaGroup><mda:meta type="olfilehash">8903c832f313ca522e07331a028d370aee039f58</mda:meta><mda:meta type="olfilepath">wdg-cpub-test\ndolci1\xaml-platform\x-phase-attribute.md</mda:meta><mda:meta type="oltranslationpriority"></mda:meta><mda:meta type="oltranslationtype">Human Translation</mda:meta><mda:meta type="olskeletonhash">4bce53e033d9ce1f2d14a36164f1f23665921fc0</mda:meta><mda:meta type="olxliffhash">eff2436837f581a4f173ac60766f6ba76a62d076</mda:meta></mda:metaGroup></mda:metadata>
		<group id="content">
			<unit id="101" translate="yes">
				<segment state="initial">
					<source>Use x:Phase with the {x:Bind} markup extension to render ListView and GridView items incrementally and improve the panning experience.</source>
					<target>Use x:Phase with the {x:Bind} markup extension to render ListView and GridView items incrementally and improve the panning experience.</target>
				</segment>
			</unit>
			<unit id="102" translate="yes">
				<segment state="initial">
					<source>x:Phase attribute'</source>
					<target>x:Phase attribute'</target>
				</segment>
			</unit>
			<unit id="103" translate="yes">
				<segment state="initial">
					<source>x:Phase attribute</source>
					<target>x:Phase attribute</target>
				</segment>
			</unit>
			<unit id="104" translate="yes">
				<segment state="initial">
					<source>\[ Updated for UWP apps on Windows 10.</source>
					<target>\[ Updated for UWP apps on Windows 10.</target>
				</segment>
			</unit>
			<unit id="105" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](http://go.microsoft.com/fwlink/p/?linkid=619132)</data>
				</originalData>
				<segment state="initial">
					<source>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</source>
					<target>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</target>
				</segment>
			</unit>
			<unit id="106" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">[</data>
					<data id="id4">](x-bind-markup-extension.md)</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/br242878)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
					<data id="id9">[</data>
					<data id="id10">](https://msdn.microsoft.com/library/windows/apps/br242705)</data>
					<data id="id11">**</data>
					<data id="id12">**</data>
				</originalData>
				<segment state="initial">
					<source>Use <pc dataRefEnd="id2" dataRefStart="id1" id="p1">x:Phase</pc> with the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">{x:Bind} markup extension</pc> to render <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">ListView</pc></pc> and <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">GridView</pc></pc> items incrementally and improve the panning experience.</source>
					<target>Use <pc dataRefEnd="id2" dataRefStart="id1" id="p1">x:Phase</pc> with the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">{x:Bind} markup extension</pc> to render <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">ListView</pc></pc> and <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">GridView</pc></pc> items incrementally and improve the panning experience.</target>
				</segment>
			</unit>
			<unit id="107" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">[</data>
					<data id="id4">](https://msdn.microsoft.com/library/windows/apps/dn298914)</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">x:Phase</pc> provides a declarative way of achieving the same effect as using the <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">ContainerContentChanging</pc></pc> event to manually control the rendering of list items.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">x:Phase</pc> provides a declarative way of achieving the same effect as using the <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">ContainerContentChanging</pc></pc> event to manually control the rendering of list items.</target>
				</segment>
			</unit>
			<unit id="108" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](../debug-test-perf/optimize-gridview-and-listview.md#update-items-incrementally)</data>
				</originalData>
				<segment state="initial">
					<source>Also see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Update ListView and GridView items incrementally</pc>.</source>
					<target>Also see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Update ListView and GridView items incrementally</pc>.</target>
				</segment>
			</unit>
			<unit id="109" translate="yes">
				<segment state="initial">
					<source>XAML attribute usage</source>
					<target>XAML attribute usage</target>
				</segment>
			</unit>
			<unit id="110" translate="yes">
				<segment state="initial">
					<source>XAML values</source>
					<target>XAML values</target>
				</segment>
			</unit>
			<unit id="111" translate="yes">
				<segment state="initial">
					<source>Term</source>
					<target>Term</target>
				</segment>
			</unit>
			<unit id="112" translate="yes">
				<segment state="initial">
					<source>Description</source>
					<target>Description</target>
				</segment>
			</unit>
			<unit id="113" translate="yes">
				<segment state="initial">
					<source>PhaseValue</source>
					<target>PhaseValue</target>
				</segment>
			</unit>
			<unit id="114" translate="yes">
				<segment state="initial">
					<source>A number that indicates the phase in which the element will be processed.</source>
					<target>A number that indicates the phase in which the element will be processed.</target>
				</segment>
			</unit>
			<unit id="115" translate="yes">
				<segment state="initial">
					<source>The default is 0.</source>
					<target>The default is 0.</target>
				</segment>
			</unit>
			<unit id="116" translate="yes">
				<segment state="initial">
					<source>Remarks</source>
					<target>Remarks</target>
				</segment>
			</unit>
			<unit id="117" translate="yes">
				<segment state="initial">
					<source>If a list is panned fast with touch, or using the mouse wheel, then depending on the complexity of the data template, the list may not be able to render items fast enough to keep up with the speed of scrolling.</source>
					<target>If a list is panned fast with touch, or using the mouse wheel, then depending on the complexity of the data template, the list may not be able to render items fast enough to keep up with the speed of scrolling.</target>
				</segment>
			</unit>
			<unit id="118" translate="yes">
				<segment state="initial">
					<source>This is particularly true for a portable device with a power-efficient CPU such as a phone or a tablet.</source>
					<target>This is particularly true for a portable device with a power-efficient CPU such as a phone or a tablet.</target>
				</segment>
			</unit>
			<unit id="119" translate="yes">
				<segment state="initial">
					<source>Phasing enables incremental rendering of the data template so that the contents can be prioritized, and the most important elements rendered first.</source>
					<target>Phasing enables incremental rendering of the data template so that the contents can be prioritized, and the most important elements rendered first.</target>
				</segment>
			</unit>
			<unit id="120" translate="yes">
				<segment state="initial">
					<source>This enables the list to show some content for each item if panning fast, and will render more elements of each template as time permits.</source>
					<target>This enables the list to show some content for each item if panning fast, and will render more elements of each template as time permits.</target>
				</segment>
			</unit>
			<unit id="121" translate="yes">
				<segment state="initial">
					<source>Example</source>
					<target>Example</target>
				</segment>
			</unit>
			<unit id="122" translate="yes">
				<segment state="initial">
					<source>The data template describes 4 phases:</source>
					<target>The data template describes 4 phases:</target>
				</segment>
			</unit>
			<unit id="123" translate="yes">
				<segment state="initial">
					<source>Presents the DisplayName text block.</source>
					<target>Presents the DisplayName text block.</target>
				</segment>
			</unit>
			<unit id="124" translate="yes">
				<segment state="initial">
					<source>All controls without a phase specified will be implicitly considered to be part of phase 0.</source>
					<target>All controls without a phase specified will be implicitly considered to be part of phase 0.</target>
				</segment>
			</unit>
			<unit id="125" translate="yes">
				<segment state="initial">
					<source>Shows the prettyDate text block.</source>
					<target>Shows the prettyDate text block.</target>
				</segment>
			</unit>
			<unit id="126" translate="yes">
				<segment state="initial">
					<source>Shows the prettyFileSize and prettyImageSize text blocks.</source>
					<target>Shows the prettyFileSize and prettyImageSize text blocks.</target>
				</segment>
			</unit>
			<unit id="127" translate="yes">
				<segment state="initial">
					<source>Shows the image.</source>
					<target>Shows the image.</target>
				</segment>
			</unit>
			<unit id="128" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](x-bind-markup-extension.md)</data>
					<data id="id3">[</data>
					<data id="id4">](https://msdn.microsoft.com/library/windows/apps/br242879)</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source>Phasing is a feature of <pc dataRefEnd="id2" dataRefStart="id1" id="p1">{x:Bind}</pc> that works with controls derived from <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">ListViewBase</pc></pc> and that incrementally processes the item template for data binding.</source>
					<target>Phasing is a feature of <pc dataRefEnd="id2" dataRefStart="id1" id="p1">{x:Bind}</pc> that works with controls derived from <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">ListViewBase</pc></pc> and that incrementally processes the item template for data binding.</target>
				</segment>
			</unit>
			<unit id="129" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>When rendering list items, <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ListViewBase</pc> renders a single phase for all items in the view before moving onto the next phase.</source>
					<target>When rendering list items, <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ListViewBase</pc> renders a single phase for all items in the view before moving onto the next phase.</target>
				</segment>
			</unit>
			<unit id="130" translate="yes">
				<segment state="initial">
					<source>The rendering work is performed in time-sliced batches so that as the list is scrolled, the work required can be re-assessed, and not performed for items that are no longer visible.</source>
					<target>The rendering work is performed in time-sliced batches so that as the list is scrolled, the work required can be re-assessed, and not performed for items that are no longer visible.</target>
				</segment>
			</unit>
			<unit id="131" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">[</data>
					<data id="id4">](x-bind-markup-extension.md)</data>
				</originalData>
				<segment state="initial">
					<source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">x:Phase</pc> attribute can be specified on any element in a data template that uses <pc dataRefEnd="id4" dataRefStart="id3" id="p2">{x:Bind}</pc>.</source>
					<target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">x:Phase</pc> attribute can be specified on any element in a data template that uses <pc dataRefEnd="id4" dataRefStart="id3" id="p2">{x:Bind}</pc>.</target>
				</segment>
			</unit>
			<unit id="132" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>When an element has a phase other than 0, the element will be hidden from view (via <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Opacity</pc>, not <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Visibility</pc>) until that phase is processed and bindings are updated.</source>
					<target>When an element has a phase other than 0, the element will be hidden from view (via <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Opacity</pc>, not <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Visibility</pc>) until that phase is processed and bindings are updated.</target>
				</segment>
			</unit>
			<unit id="133" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br242879)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>When a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ListViewBase</pc></pc>-derived control is scrolled, it will recycle the item templates from items that are no longer on screen to render the newly visible items.</source>
					<target>When a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ListViewBase</pc></pc>-derived control is scrolled, it will recycle the item templates from items that are no longer on screen to render the newly visible items.</target>
				</segment>
			</unit>
			<unit id="134" translate="yes">
				<segment state="initial">
					<source>UI elements within the template will retain their old values until they are data-bound again.</source>
					<target>UI elements within the template will retain their old values until they are data-bound again.</target>
				</segment>
			</unit>
			<unit id="135" translate="yes">
				<segment state="initial">
					<source>Phasing causes that data-binding step to be delayed, and therefore phasing needs to hide the UI elements in case they are stale.</source>
					<target>Phasing causes that data-binding step to be delayed, and therefore phasing needs to hide the UI elements in case they are stale.</target>
				</segment>
			</unit>
			<unit id="136" translate="yes">
				<segment state="initial">
					<source>Each UI element may have only one phase specified.</source>
					<target>Each UI element may have only one phase specified.</target>
				</segment>
			</unit>
			<unit id="137" translate="yes">
				<segment state="initial">
					<source>If so, that will apply to all bindings on the element.</source>
					<target>If so, that will apply to all bindings on the element.</target>
				</segment>
			</unit>
			<unit id="138" translate="yes">
				<segment state="initial">
					<source>If a phase is not specified, phase 0 is assumed.</source>
					<target>If a phase is not specified, phase 0 is assumed.</target>
				</segment>
			</unit>
			<unit id="139" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn298493)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Phase numbers do not need to be contiguous and are the same as the value of <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ContainerContentChangingEventArgs.Phase</pc></pc>.</source>
					<target>Phase numbers do not need to be contiguous and are the same as the value of <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ContainerContentChangingEventArgs.Phase</pc></pc>.</target>
				</segment>
			</unit>
			<unit id="140" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn298914)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ContainerContentChanging</pc></pc> event will be raised for each phase before the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">x:Phase</pc> bindings are processed.</source>
					<target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ContainerContentChanging</pc></pc> event will be raised for each phase before the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">x:Phase</pc> bindings are processed.</target>
				</segment>
			</unit>
			<unit id="141" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](x-bind-markup-extension.md)</data>
					<data id="id3">[</data>
					<data id="id4">](binding-markup-extension.md)</data>
				</originalData>
				<segment state="initial">
					<source>Phasing only affects <pc dataRefEnd="id2" dataRefStart="id1" id="p1">{x:Bind}</pc> bindings, not <pc dataRefEnd="id4" dataRefStart="id3" id="p2">{Binding}</pc> bindings.</source>
					<target>Phasing only affects <pc dataRefEnd="id2" dataRefStart="id1" id="p1">{x:Bind}</pc> bindings, not <pc dataRefEnd="id4" dataRefStart="id3" id="p2">{Binding}</pc> bindings.</target>
				</segment>
			</unit>
			<unit id="142" translate="yes">
				<segment state="initial">
					<source>Phasing will only apply when the item template is rendered using a control that is aware of phasing.</source>
					<target>Phasing will only apply when the item template is rendered using a control that is aware of phasing.</target>
				</segment>
			</unit>
			<unit id="143" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br242878)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/br242705)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>For Windows 10, that means <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ListView</pc></pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">GridView</pc></pc>.</source>
					<target>For Windows 10, that means <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ListView</pc></pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">GridView</pc></pc>.</target>
				</segment>
			</unit>
			<unit id="144" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br209369)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/dn251843)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>Phasing will not apply to data templates used in other item controls, or for other scenarios such as <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ContentTemplate</pc></pc> or <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Hub</pc></pc> sections—in those cases, all the UI elements will be data bound at once.</source>
					<target>Phasing will not apply to data templates used in other item controls, or for other scenarios such as <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ContentTemplate</pc></pc> or <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Hub</pc></pc> sections—in those cases, all the UI elements will be data bound at once.</target>
				</segment>
			</unit>
		</group>
	</file>
</xliff>