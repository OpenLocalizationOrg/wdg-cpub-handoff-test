<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="ja-jp" version="2.0" xml:space="preserve" xmlns="urn:oasis:names:tc:xliff:document:2.0">
	<file id="1">
		<mda:metadata>
			<mda:metaGroup>
				<mda:meta type="tool-id">mdxliff</mda:meta>
				<mda:meta type="tool-name">mdxliff</mda:meta>
				<mda:meta type="tool-version">1.0-00ddeee</mda:meta>
				<mda:meta type="tool-company">Microsoft</mda:meta>
			</mda:metaGroup>
		<mda:metaGroup><mda:meta type="olfilehash">57a6b3462bc1cbdc06486d7150b67171fd900fb4</mda:meta><mda:meta type="olfilepath">wdg-cpub-test\ndolci1\usability\accessibility\accessibility-testing.md</mda:meta><mda:meta type="oltranslationpriority"></mda:meta><mda:meta type="oltranslationtype">Human Translation</mda:meta><mda:meta type="olskeletonhash">f0e435002f7ce63fa0a9f3a5e68daa284e1dfab3</mda:meta><mda:meta type="olxliffhash">d0ce1f7b9bd3fc1bb1d0038f3f8586574942a60a</mda:meta></mda:metaGroup></mda:metadata>
		<group id="content">
			<unit id="101" translate="yes">
				<segment state="initial">
					<source>Testing procedures to follow to ensure that your Universal Windows Platform (UWP) app is accessible.</source>
					<target>Testing procedures to follow to ensure that your Universal Windows Platform (UWP) app is accessible.</target>
				</segment>
			</unit>
			<unit id="102" translate="yes">
				<segment state="initial">
					<source>Accessibility testing</source>
					<target>Accessibility testing</target>
				</segment>
			</unit>
			<unit id="103" translate="yes">
				<segment state="initial">
					<source>Accessibility testing</source>
					<target>Accessibility testing</target>
				</segment>
			</unit>
			<unit id="104" translate="yes">
				<segment state="initial">
					<source>\[ Updated for UWP apps on Windows 10.</source>
					<target>\[ Updated for UWP apps on Windows 10.</target>
				</segment>
			</unit>
			<unit id="105" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](http://go.microsoft.com/fwlink/p/?linkid=619132)</data>
				</originalData>
				<segment state="initial">
					<source>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</source>
					<target>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</target>
				</segment>
			</unit>
			<unit id="106" translate="yes">
				<segment state="initial">
					<source>Testing procedures to follow to ensure that your Universal Windows Platform (UWP) app is accessible.</source>
					<target>Testing procedures to follow to ensure that your Universal Windows Platform (UWP) app is accessible.</target>
				</segment>
			</unit>
			<unit id="107" translate="yes">
				<segment state="initial">
					<source>Run accessibility testing tools</source>
					<target>Run accessibility testing tools</target>
				</segment>
			</unit>
			<unit id="108" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/desktop/Dn433239)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/desktop/Dd318521)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
					<data id="id9">[</data>
					<data id="id10">](https://msdn.microsoft.com/library/windows/desktop/Hh920985)</data>
					<data id="id11">**</data>
					<data id="id12">**</data>
				</originalData>
				<segment state="initial">
					<source>The Windows Software Development Kit (SDK) includes several accessibility testing tools such as <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">AccScope</pc></pc>, <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Inspect</pc></pc> and <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">UI Accessibility Checker</pc></pc>.</source>
					<target>The Windows Software Development Kit (SDK) includes several accessibility testing tools such as <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">AccScope</pc></pc>, <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Inspect</pc></pc> and <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">UI Accessibility Checker</pc></pc>.</target>
				</segment>
			</unit>
			<unit id="109" translate="yes">
				<segment state="initial">
					<source>These tools can help you verify the accessibility of your app.</source>
					<target>These tools can help you verify the accessibility of your app.</target>
				</segment>
			</unit>
			<unit id="110" translate="yes">
				<segment state="initial">
					<source>Be sure to verify all app scenarios and UI elements.</source>
					<target>Be sure to verify all app scenarios and UI elements.</target>
				</segment>
			</unit>
			<unit id="111" translate="yes">
				<segment state="initial">
					<source>You can launch the accessibility testing tools either from a Microsoft Visual Studio command prompt or from the Windows SDK tools folder (the bin subdirectory of where the Windows SDK is installed on your development machine).</source>
					<target>You can launch the accessibility testing tools either from a Microsoft Visual Studio command prompt or from the Windows SDK tools folder (the bin subdirectory of where the Windows SDK is installed on your development machine).</target>
				</segment>
			</unit>
			<unit id="112" translate="yes">
				<segment state="initial">
					<source>AccScope</source>
					<target>AccScope</target>
				</segment>
			</unit>
			<unit id="113" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/desktop/Dn433239)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">AccScope</pc></pc> tool enables developers and testers to evaluate the accessibility of their app during the app's development and design, potentially in earlier prototype phases, rather than in the late testing phases of an app's development cycle.</source>
					<target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">AccScope</pc></pc> tool enables developers and testers to evaluate the accessibility of their app during the app's development and design, potentially in earlier prototype phases, rather than in the late testing phases of an app's development cycle.</target>
				</segment>
			</unit>
			<unit id="114" translate="yes">
				<segment state="initial">
					<source>It's particularly intended for testing Narrator accessibility scenarios with your app.</source>
					<target>It's particularly intended for testing Narrator accessibility scenarios with your app.</target>
				</segment>
			</unit>
			<unit id="115" translate="yes">
				<segment state="initial">
					<source>Inspect</source>
					<target>Inspect</target>
				</segment>
			</unit>
			<unit id="116" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/desktop/Dd318521)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Inspect</pc></pc> enables you to select any UI element and view its accessibility data.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Inspect</pc></pc> enables you to select any UI element and view its accessibility data.</target>
				</segment>
			</unit>
			<unit id="117" translate="yes">
				<segment state="initial">
					<source>You can view Microsoft UI Automation properties and control patterns and test the navigational structure of the automation elements in the UI Automation tree.</source>
					<target>You can view Microsoft UI Automation properties and control patterns and test the navigational structure of the automation elements in the UI Automation tree.</target>
				</segment>
			</unit>
			<unit id="118" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>Use <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Inspect</pc> as you develop the UI to verify how accessibility attributes are exposed in UI Automation.</source>
					<target>Use <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Inspect</pc> as you develop the UI to verify how accessibility attributes are exposed in UI Automation.</target>
				</segment>
			</unit>
			<unit id="119" translate="yes">
				<segment state="initial">
					<source>In some cases the attributes come from the UI Automation support that is already implemented for default XAML controls.</source>
					<target>In some cases the attributes come from the UI Automation support that is already implemented for default XAML controls.</target>
				</segment>
			</unit>
			<unit id="120" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/BR209081)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>In other cases the attributes come from specific values that you have set in your XAML markup, as <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">AutomationProperties</pc></pc> attached properties.</source>
					<target>In other cases the attributes come from specific values that you have set in your XAML markup, as <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">AutomationProperties</pc></pc> attached properties.</target>
				</segment>
			</unit>
			<unit id="121" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/desktop/Dd318521)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source>The following image shows the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Inspect</pc></pc> tool querying the UI Automation properties of the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Edit</pc> menu element in Notepad.</source>
					<target>The following image shows the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Inspect</pc></pc> tool querying the UI Automation properties of the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Edit</pc> menu element in Notepad.</target>
				</segment>
			</unit>
			<unit id="122" translate="yes">
				<segment state="initial">
					<source>Screen shot of the Inspect tool.</source>
					<target>Screen shot of the Inspect tool.</target>
				</segment>
			</unit>
			<unit id="123" translate="yes">
				<segment state="initial">
					<source>UI Accessibility Checker</source>
					<target>UI Accessibility Checker</target>
				</segment>
			</unit>
			<unit id="124" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">UI Accessibility Checker (AccChecker)</pc> helps you discover accessibility problems at run time.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">UI Accessibility Checker (AccChecker)</pc> helps you discover accessibility problems at run time.</target>
				</segment>
			</unit>
			<unit id="125" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>When your UI is complete and functional, use <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AccChecker</pc> to test different scenarios, verify the correctness of runtime accessibility information, and discover runtime issues.</source>
					<target>When your UI is complete and functional, use <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AccChecker</pc> to test different scenarios, verify the correctness of runtime accessibility information, and discover runtime issues.</target>
				</segment>
			</unit>
			<unit id="126" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>You can run <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AccChecker</pc> in UI or command line mode.</source>
					<target>You can run <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AccChecker</pc> in UI or command line mode.</target>
				</segment>
			</unit>
			<unit id="127" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>To run the UI mode tool, open the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AccChecker</pc> directory in the Windows SDK bin directory, run acccheckui.exe, and click the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Help</pc> menu.</source>
					<target>To run the UI mode tool, open the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AccChecker</pc> directory in the Windows SDK bin directory, run acccheckui.exe, and click the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Help</pc> menu.</target>
				</segment>
			</unit>
			<unit id="128" translate="yes">
				<segment state="initial">
					<source>UI Automation Verify</source>
					<target>UI Automation Verify</target>
				</segment>
			</unit>
			<unit id="129" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">UI Automation Verify (UIA Verify)</pc> is an automated testing and verification framework for UI Automation implementations.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">UI Automation Verify (UIA Verify)</pc> is an automated testing and verification framework for UI Automation implementations.</target>
				</segment>
			</unit>
			<unit id="130" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">UIA Verify</pc> can integrate into the test code and conduct regular, automated testing or spot checks of UI Automation scenarios.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">UIA Verify</pc> can integrate into the test code and conduct regular, automated testing or spot checks of UI Automation scenarios.</target>
				</segment>
			</unit>
			<unit id="131" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>To run <pc dataRefEnd="id2" dataRefStart="id1" id="p1">UIA Verify</pc>, run VisualUIAVerifyNative.exe from the UIAVerify subdirectory.</source>
					<target>To run <pc dataRefEnd="id2" dataRefStart="id1" id="p1">UIA Verify</pc>, run VisualUIAVerifyNative.exe from the UIAVerify subdirectory.</target>
				</segment>
			</unit>
			<unit id="132" translate="yes">
				<segment state="initial">
					<source>Accessible Event Watcher</source>
					<target>Accessible Event Watcher</target>
				</segment>
			</unit>
			<unit id="133" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/desktop/Dd317979)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Accessible Event Watcher (AccEvent)</pc></pc> tests whether an app's UI elements fire proper UI Automation and Microsoft Active Accessibility events when UI changes occur.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Accessible Event Watcher (AccEvent)</pc></pc> tests whether an app's UI elements fire proper UI Automation and Microsoft Active Accessibility events when UI changes occur.</target>
				</segment>
			</unit>
			<unit id="134" translate="yes">
				<segment state="initial">
					<source>Changes in the UI can occur when the focus changes, or when a UI element is invoked, selected, or has a state or property change.</source>
					<target>Changes in the UI can occur when the focus changes, or when a UI element is invoked, selected, or has a state or property change.</target>
				</segment>
			</unit>
			<unit id="135" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  Most accessibility testing tools mentioned in the documentation run on a PC, not on a phone.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  Most accessibility testing tools mentioned in the documentation run on a PC, not on a phone.</target>
				</segment>
			</unit>
			<unit id="136" translate="yes">
				<segment state="initial">
					<source>You can run some of the tools while developing and using an emulator, but most of these tools can't expose the UI Automation tree within the emulator.</source>
					<target>You can run some of the tools while developing and using an emulator, but most of these tools can't expose the UI Automation tree within the emulator.</target>
				</segment>
			</unit>
			<unit id="137" translate="yes">
				<segment state="initial">
					<source>Test keyboard accessibility</source>
					<target>Test keyboard accessibility</target>
				</segment>
			</unit>
			<unit id="138" translate="yes">
				<segment state="initial">
					<source>The best way to test your keyboard accessibility is to unplug your mouse or use the On-Screen Keyboard if you are using a tablet device.</source>
					<target>The best way to test your keyboard accessibility is to unplug your mouse or use the On-Screen Keyboard if you are using a tablet device.</target>
				</segment>
			</unit>
			<unit id="139" translate="yes">
				<segment state="initial">
					<source>Test keyboard accessibility navigation by using the Tab key.</source>
					<target>Test keyboard accessibility navigation by using the Tab key.</target>
				</segment>
			</unit>
			<unit id="140" translate="yes">
				<segment state="initial">
					<source>You should be able to cycle through all interactive UI elements by using Tab key.</source>
					<target>You should be able to cycle through all interactive UI elements by using Tab key.</target>
				</segment>
			</unit>
			<unit id="141" translate="yes">
				<segment state="initial">
					<source>For composite UI elements, verify that you can navigate among the parts of elements by using the arrow keys.</source>
					<target>For composite UI elements, verify that you can navigate among the parts of elements by using the arrow keys.</target>
				</segment>
			</unit>
			<unit id="142" translate="yes">
				<segment state="initial">
					<source>For example, you should be able to navigate lists of items using keyboard keys.</source>
					<target>For example, you should be able to navigate lists of items using keyboard keys.</target>
				</segment>
			</unit>
			<unit id="143" translate="yes">
				<segment state="initial">
					<source>Finally, make sure that you can invoke all interactive UI elements with the keyboard once those elements have focus, typically by using the Enter or Spacebar key.</source>
					<target>Finally, make sure that you can invoke all interactive UI elements with the keyboard once those elements have focus, typically by using the Enter or Spacebar key.</target>
				</segment>
			</unit>
			<unit id="144" translate="yes">
				<segment state="initial">
					<source>Verify the contrast ratio of visible text</source>
					<target>Verify the contrast ratio of visible text</target>
				</segment>
			</unit>
			<unit id="145" translate="yes">
				<segment state="initial">
					<source>Use color contrast tools to verify that the visible text contrast ratio is acceptable.</source>
					<target>Use color contrast tools to verify that the visible text contrast ratio is acceptable.</target>
				</segment>
			</unit>
			<unit id="146" translate="yes">
				<segment state="initial">
					<source>The exceptions include inactive UI elements, and logos or decorative text that doesn’t convey any information and can be rearranged without changing the meaning.</source>
					<target>The exceptions include inactive UI elements, and logos or decorative text that doesn’t convey any information and can be rearranged without changing the meaning.</target>
				</segment>
			</unit>
			<unit id="147" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](accessible-text-requirements.md)</data>
				</originalData>
				<segment state="initial">
					<source>See <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Accessible text requirements</pc> for more information on contrast ratio and exceptions.</source>
					<target>See <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Accessible text requirements</pc> for more information on contrast ratio and exceptions.</target>
				</segment>
			</unit>
			<unit id="148" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](http://www.w3.org/TR/WCAG20-TECHS/G18.html#G18-resources)</data>
				</originalData>
				<segment state="initial">
					<source>See <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Techniques for WCAG 2.0 G18 (Resources section)</pc> for tools that can test contrast ratios.</source>
					<target>See <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Techniques for WCAG 2.0 G18 (Resources section)</pc> for tools that can test contrast ratios.</target>
				</segment>
			</unit>
			<unit id="149" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  Some of the tools listed by Techniques for WCAG 2.0 G18 can't be used interactively with a Windows Store app.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  Some of the tools listed by Techniques for WCAG 2.0 G18 can't be used interactively with a Windows Store app.</target>
				</segment>
			</unit>
			<unit id="150" translate="yes">
				<segment state="initial">
					<source>You may need to enter foreground and background color values manually in the tool, make screen captures of app UI and then run the contrast ratio tool over the screen capture image, or run the tool while opening source bitmap files in an image editing program rather than while that image is loaded by the app.</source>
					<target>You may need to enter foreground and background color values manually in the tool, make screen captures of app UI and then run the contrast ratio tool over the screen capture image, or run the tool while opening source bitmap files in an image editing program rather than while that image is loaded by the app.</target>
				</segment>
			</unit>
			<unit id="151" translate="yes">
				<segment state="initial">
					<source>Verify your app in high contrast</source>
					<target>Verify your app in high contrast</target>
				</segment>
			</unit>
			<unit id="152" translate="yes">
				<segment state="initial">
					<source>Use your app while a high-contrast theme is active to verify that all the UI elements display correctly.</source>
					<target>Use your app while a high-contrast theme is active to verify that all the UI elements display correctly.</target>
				</segment>
			</unit>
			<unit id="153" translate="yes">
				<segment state="initial">
					<source>All text should be readable, and all images should be clear.</source>
					<target>All text should be readable, and all images should be clear.</target>
				</segment>
			</unit>
			<unit id="154" translate="yes">
				<segment state="initial">
					<source>Adjust the XAML theme-dictionary resources or control templates to correct any theme issues that come from controls.</source>
					<target>Adjust the XAML theme-dictionary resources or control templates to correct any theme issues that come from controls.</target>
				</segment>
			</unit>
			<unit id="155" translate="yes">
				<segment state="initial">
					<source>In cases where prominent high-contrast issues are not coming from themes or controls (such as from image files), provide separate versions to use when a high-contrast theme is active.</source>
					<target>In cases where prominent high-contrast issues are not coming from themes or controls (such as from image files), provide separate versions to use when a high-contrast theme is active.</target>
				</segment>
			</unit>
			<unit id="156" translate="yes">
				<segment state="initial">
					<source>Verify your app with display settings</source>
					<target>Verify your app with display settings</target>
				</segment>
			</unit>
			<unit id="157" translate="yes">
				<segment state="initial">
					<source>Use the system display options that adjust the display's dots per inch (dpi) value, and ensure that your app UI scales correctly when the dpi value changes.</source>
					<target>Use the system display options that adjust the display's dots per inch (dpi) value, and ensure that your app UI scales correctly when the dpi value changes.</target>
				</segment>
			</unit>
			<unit id="158" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">[</data>
					<data id="id4">](https://msdn.microsoft.com/library/windows/apps/Dn611863)</data>
				</originalData>
				<segment state="initial">
					<source>(Some users change dpi values as an accessibility option, it's available from <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Ease of Access</pc> as well as display properties.) If you find any issues, follow the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Guidelines for layout scaling</pc> and provide additional resources for different scaling factors.</source>
					<target>(Some users change dpi values as an accessibility option, it's available from <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Ease of Access</pc> as well as display properties.) If you find any issues, follow the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Guidelines for layout scaling</pc> and provide additional resources for different scaling factors.</target>
				</segment>
			</unit>
			<unit id="159" translate="yes">
				<segment state="initial">
					<source>Verify main app scenarios by using Narrator</source>
					<target>Verify main app scenarios by using Narrator</target>
				</segment>
			</unit>
			<unit id="160" translate="yes">
				<segment state="initial">
					<source>Use Narrator to test the screen reading experience for your app by performing the following steps:</source>
					<target>Use Narrator to test the screen reading experience for your app by performing the following steps:</target>
				</segment>
			</unit>
			<unit id="161" translate="yes">
				<segment state="initial">
					<source>Use these steps to test your app using Narrator with a mouse and keyboard:</source>
					<target>Use these steps to test your app using Narrator with a mouse and keyboard:</target>
				</segment>
			</unit>
			<unit id="162" translate="yes">
				<segment state="initial">
					<source>Start Narrator by pressing Windows logo key + Enter.</source>
					<target>Start Narrator by pressing Windows logo key + Enter.</target>
				</segment>
			</unit>
			<unit id="163" translate="yes">
				<segment state="initial">
					<source>Navigate your app with the keyboard by using the Tab key, the arrow keys, and the Caps Lock + arrow keys.</source>
					<target>Navigate your app with the keyboard by using the Tab key, the arrow keys, and the Caps Lock + arrow keys.</target>
				</segment>
			</unit>
			<unit id="164" translate="yes">
				<segment state="initial">
					<source>As you navigate your app, listen as Narrator reads the elements of your UI and verify the following:</source>
					<target>As you navigate your app, listen as Narrator reads the elements of your UI and verify the following:</target>
				</segment>
			</unit>
			<unit id="165" translate="yes">
				<segment state="initial">
					<source>For each control, ensure that Narrator reads all visible content.</source>
					<target>For each control, ensure that Narrator reads all visible content.</target>
				</segment>
			</unit>
			<unit id="166" translate="yes">
				<segment state="initial">
					<source>Also ensure that Narrator reads each control's name, any applicable state (checked, selected, and so on), and the control type (button, check box, list item, and so on).</source>
					<target>Also ensure that Narrator reads each control's name, any applicable state (checked, selected, and so on), and the control type (button, check box, list item, and so on).</target>
				</segment>
			</unit>
			<unit id="167" translate="yes">
				<segment state="initial">
					<source>If the element is interactive, verify that you can use Narrator to invoke its action by pressing Caps Lock + Spacebar.</source>
					<target>If the element is interactive, verify that you can use Narrator to invoke its action by pressing Caps Lock + Spacebar.</target>
				</segment>
			</unit>
			<unit id="168" translate="yes">
				<segment state="initial">
					<source>For each table, ensure that Narrator correctly reads the table name, the table description (if available), and the row and column headings.</source>
					<target>For each table, ensure that Narrator correctly reads the table name, the table description (if available), and the row and column headings.</target>
				</segment>
			</unit>
			<unit id="169" translate="yes">
				<segment state="initial">
					<source>Press Caps Lock + Enter to search your app and verify that all of your controls appear in the search list, and that the control names are localized and readable.</source>
					<target>Press Caps Lock + Enter to search your app and verify that all of your controls appear in the search list, and that the control names are localized and readable.</target>
				</segment>
			</unit>
			<unit id="170" translate="yes">
				<segment state="initial">
					<source>Turn off your monitor and try to accomplish main app scenarios by using only the keyboard and Narrator.</source>
					<target>Turn off your monitor and try to accomplish main app scenarios by using only the keyboard and Narrator.</target>
				</segment>
			</unit>
			<unit id="171" translate="yes">
				<segment state="initial">
					<source>To get the full list of Narrator commands and shortcuts, press Caps Lock + F1.</source>
					<target>To get the full list of Narrator commands and shortcuts, press Caps Lock + F1.</target>
				</segment>
			</unit>
			<unit id="172" translate="yes">
				<segment state="initial">
					<source>Use these steps to test your app using Narrator's touch mode:</source>
					<target>Use these steps to test your app using Narrator's touch mode:</target>
				</segment>
			</unit>
			<unit id="173" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  Narrator automatically enters touch mode on devices that support 4+ contacts.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  Narrator automatically enters touch mode on devices that support 4+ contacts.</target>
				</segment>
			</unit>
			<unit id="174" translate="yes">
				<segment state="initial">
					<source>Narrator doesn't support multi-monitor scenarios or multi-touch digitizers on the primary screen.</source>
					<target>Narrator doesn't support multi-monitor scenarios or multi-touch digitizers on the primary screen.</target>
				</segment>
			</unit>
			<unit id="175" translate="yes">
				<segment state="initial">
					<source>Get familiar with the UI and explore the layout.</source>
					<target>Get familiar with the UI and explore the layout.</target>
				</segment>
			</unit>
			<unit id="176" translate="yes">
				<segment state="initial">
					<source>Navigate through the UI by using single-finger swipe gestures.</source>
					<target>Navigate through the UI by using single-finger swipe gestures.</target>
				</segment>
			</unit>
			<unit id="177" translate="yes">
				<segment state="initial">
					<source>Use left or right swipes to move between items, and up or down swipes to change the category of items being navigated.</source>
					<target>Use left or right swipes to move between items, and up or down swipes to change the category of items being navigated.</target>
				</segment>
			</unit>
			<unit id="178" translate="yes">
				<segment state="initial">
					<source>Categories include all items, links, tables, headers, and so on.</source>
					<target>Categories include all items, links, tables, headers, and so on.</target>
				</segment>
			</unit>
			<unit id="179" translate="yes">
				<segment state="initial">
					<source>Navigating with single-finger swipe gestures is similar to navigating with Caps Lock + Arrow.</source>
					<target>Navigating with single-finger swipe gestures is similar to navigating with Caps Lock + Arrow.</target>
				</segment>
			</unit>
			<unit id="180" translate="yes">
				<segment state="initial">
					<source>Use tab gestures to navigate through focusable elements.</source>
					<target>Use tab gestures to navigate through focusable elements.</target>
				</segment>
			</unit>
			<unit id="181" translate="yes">
				<segment state="initial">
					<source>A three-finger swipe to the right or left is the same as navigating with Tab and Shift + Tab on a keyboard.</source>
					<target>A three-finger swipe to the right or left is the same as navigating with Tab and Shift + Tab on a keyboard.</target>
				</segment>
			</unit>
			<unit id="182" translate="yes">
				<segment state="initial">
					<source>Spatially investigate the UI with a single finger.</source>
					<target>Spatially investigate the UI with a single finger.</target>
				</segment>
			</unit>
			<unit id="183" translate="yes">
				<segment state="initial">
					<source>Drag a single finger up and down, or left and right, to have Narrator read the items under your finger.</source>
					<target>Drag a single finger up and down, or left and right, to have Narrator read the items under your finger.</target>
				</segment>
			</unit>
			<unit id="184" translate="yes">
				<segment state="initial">
					<source>You can use the mouse as an alternative because it uses the same hit-testing logic as dragging a single finger.</source>
					<target>You can use the mouse as an alternative because it uses the same hit-testing logic as dragging a single finger.</target>
				</segment>
			</unit>
			<unit id="185" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Read the entire window and all its contents with a three finger swipe up</pc>.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Read the entire window and all its contents with a three finger swipe up</pc>.</target>
				</segment>
			</unit>
			<unit id="186" translate="yes">
				<segment state="initial">
					<source>This is equivalent to using Caps Lock + W.</source>
					<target>This is equivalent to using Caps Lock + W.</target>
				</segment>
			</unit>
			<unit id="187" translate="yes">
				<segment state="initial">
					<source>If there is important UI that you cannot reach, you may have an accessibility issue.</source>
					<target>If there is important UI that you cannot reach, you may have an accessibility issue.</target>
				</segment>
			</unit>
			<unit id="188" translate="yes">
				<segment state="initial">
					<source>Interact with a control to test its primary and secondary actions, and its scrolling behavior.</source>
					<target>Interact with a control to test its primary and secondary actions, and its scrolling behavior.</target>
				</segment>
			</unit>
			<unit id="189" translate="yes">
				<segment state="initial">
					<source>Primary actions include things like activating a button, placing a text caret, and setting focus to the control.</source>
					<target>Primary actions include things like activating a button, placing a text caret, and setting focus to the control.</target>
				</segment>
			</unit>
			<unit id="190" translate="yes">
				<segment state="initial">
					<source>Secondary actions include actions such as selecting a list item or expanding a button that offers multiple options.</source>
					<target>Secondary actions include actions such as selecting a list item or expanding a button that offers multiple options.</target>
				</segment>
			</unit>
			<unit id="191" translate="yes">
				<segment state="initial">
					<source>To test a primary action: Double tap, or press with one finger and tap with another.</source>
					<target>To test a primary action: Double tap, or press with one finger and tap with another.</target>
				</segment>
			</unit>
			<unit id="192" translate="yes">
				<segment state="initial">
					<source>To test a secondary action: Triple tap, or press with one finger and double tap with another.</source>
					<target>To test a secondary action: Triple tap, or press with one finger and double tap with another.</target>
				</segment>
			</unit>
			<unit id="193" translate="yes">
				<segment state="initial">
					<source>To test scrolling behavior: Use two-finger swipes to scroll in the desired direction.</source>
					<target>To test scrolling behavior: Use two-finger swipes to scroll in the desired direction.</target>
				</segment>
			</unit>
			<unit id="194" translate="yes">
				<segment state="initial">
					<source>Some controls provide additional actions.</source>
					<target>Some controls provide additional actions.</target>
				</segment>
			</unit>
			<unit id="195" translate="yes">
				<segment state="initial">
					<source>To display the full list, enter a single four-finger tap.</source>
					<target>To display the full list, enter a single four-finger tap.</target>
				</segment>
			</unit>
			<unit id="196" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/desktop/Ee684009)</data>
				</originalData>
				<segment state="initial">
					<source>If a control responds to the mouse or keyboard but does not respond to a primary or secondary touch interaction, the control might need to implement additional <pc dataRefEnd="id2" dataRefStart="id1" id="p1">UI Automation</pc> control patterns.</source>
					<target>If a control responds to the mouse or keyboard but does not respond to a primary or secondary touch interaction, the control might need to implement additional <pc dataRefEnd="id2" dataRefStart="id1" id="p1">UI Automation</pc> control patterns.</target>
				</segment>
			</unit>
			<unit id="197" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/desktop/Dn433239)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>You should also consider using the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">AccScope</pc></pc> tool to test Narrator accessibility scenarios with your app.</source>
					<target>You should also consider using the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">AccScope</pc></pc> tool to test Narrator accessibility scenarios with your app.</target>
				</segment>
			</unit>
			<unit id="198" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/desktop/Dn433239)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">AccScope tool topic</pc></pc> describes how to configure <pc dataRefEnd="id6" dataRefStart="id5" id="p3">AccScope</pc> to test Narrator scenarios.</source>
					<target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">AccScope tool topic</pc></pc> describes how to configure <pc dataRefEnd="id6" dataRefStart="id5" id="p3">AccScope</pc> to test Narrator scenarios.</target>
				</segment>
			</unit>
			<unit id="199" translate="yes">
				<segment state="initial">
					<source>Examine the UI Automation representation for your app</source>
					<target>Examine the UI Automation representation for your app</target>
				</segment>
			</unit>
			<unit id="200" translate="yes">
				<segment state="initial">
					<source>Several of the UI Automation testing tools mentioned previously provide a way to view your app in a way that deliberately does not consider what the app looks like, and instead represents the app as a structure of UI Automation elements.</source>
					<target>Several of the UI Automation testing tools mentioned previously provide a way to view your app in a way that deliberately does not consider what the app looks like, and instead represents the app as a structure of UI Automation elements.</target>
				</segment>
			</unit>
			<unit id="201" translate="yes">
				<segment state="initial">
					<source>This is how UI Automation clients, mainly assistive technologies, will be interacting with your app in accessibility scenarios.</source>
					<target>This is how UI Automation clients, mainly assistive technologies, will be interacting with your app in accessibility scenarios.</target>
				</segment>
			</unit>
			<unit id="202" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/desktop/Dn433239)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">AccScope</pc></pc> tool provides a particularly interesting view of your app because you can see the UI Automation elements either as a visual representation or as a list.</source>
					<target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">AccScope</pc></pc> tool provides a particularly interesting view of your app because you can see the UI Automation elements either as a visual representation or as a list.</target>
				</segment>
			</unit>
			<unit id="203" translate="yes">
				<segment state="initial">
					<source>If you use the visualization, you can drill down into the parts in a way that you'll be able to correlate with the visual appearance of your app's UI.</source>
					<target>If you use the visualization, you can drill down into the parts in a way that you'll be able to correlate with the visual appearance of your app's UI.</target>
				</segment>
			</unit>
			<unit id="204" translate="yes">
				<segment state="initial">
					<source>You can even test the accessibility of your earliest UI prototypes before you've assigned all the logic to the UI, making sure that both the visual interaction and accessibility-scenario navigation for your app is in balance.</source>
					<target>You can even test the accessibility of your earliest UI prototypes before you've assigned all the logic to the UI, making sure that both the visual interaction and accessibility-scenario navigation for your app is in balance.</target>
				</segment>
			</unit>
			<unit id="205" translate="yes">
				<segment state="initial">
					<source>One aspect that you can test is whether there are elements appearing in the UI Automation element view that you don't want to appear there.</source>
					<target>One aspect that you can test is whether there are elements appearing in the UI Automation element view that you don't want to appear there.</target>
				</segment>
			</unit>
			<unit id="206" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/BR209081_accessibilityview)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>If you find elements you want to omit from the view, or conversely if there are elements missing, you can use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">AutomationProperties.AccessibilityView</pc></pc> XAML attached property to adjust how XAML controls appear in accessibility views.</source>
					<target>If you find elements you want to omit from the view, or conversely if there are elements missing, you can use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">AutomationProperties.AccessibilityView</pc></pc> XAML attached property to adjust how XAML controls appear in accessibility views.</target>
				</segment>
			</unit>
			<unit id="207" translate="yes">
				<segment state="initial">
					<source>After you've looked at the basic accessibility views, this is also a good opportunity to recheck your tab sequences or spatial navigation as enabled by arrow keys to make sure users can reach each of the parts that are interactive and exposed in the control view.</source>
					<target>After you've looked at the basic accessibility views, this is also a good opportunity to recheck your tab sequences or spatial navigation as enabled by arrow keys to make sure users can reach each of the parts that are interactive and exposed in the control view.</target>
				</segment>
			</unit>
			<unit id="208" translate="yes">
				<segment state="initial">
					<source>Related topics</source>
					<target>Related topics</target>
				</segment>
			</unit>
			<unit id="209" translate="yes">
				<segment state="initial">
					<source>Accessibility</source>
					<target>Accessibility</target>
				</segment>
			</unit>
			<unit id="210" translate="yes">
				<segment state="initial">
					<source>Practices to avoid</source>
					<target>Practices to avoid</target>
				</segment>
			</unit>
			<unit id="211" translate="yes">
				<segment state="initial">
					<source>UI Automation</source>
					<target>UI Automation</target>
				</segment>
			</unit>
			<unit id="212" translate="yes">
				<segment state="initial">
					<source>Accessibility in Windows</source>
					<target>Accessibility in Windows</target>
				</segment>
			</unit>
		</group>
	</file>
</xliff>