<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="de-de" version="2.0" xml:space="preserve" xmlns="urn:oasis:names:tc:xliff:document:2.0">
	<file id="1">
		<mda:metadata>
			<mda:metaGroup>
				<mda:meta type="tool-id">mdxliff</mda:meta>
				<mda:meta type="tool-name">mdxliff</mda:meta>
				<mda:meta type="tool-version">1.0-00ddeee</mda:meta>
				<mda:meta type="tool-company">Microsoft</mda:meta>
			</mda:metaGroup>
		<mda:metaGroup><mda:meta type="olfilehash">944b2b71b2f22ccef1f8601686134d7ce6f5ef96</mda:meta><mda:meta type="olfilepath">wdg-cpub-test\v-paulj\Windows-driver-docs_develop\to_add_test_metadata.md</mda:meta><mda:meta type="oltranslationpriority"></mda:meta><mda:meta type="oltranslationtype">Human Translation</mda:meta><mda:meta type="olskeletonhash">a4b6b0067206c64c4a67a3e60e8e87ec598d265c</mda:meta><mda:meta type="olxliffhash">abb64e4e029c48a765286f63dfb921396266edc0</mda:meta></mda:metaGroup></mda:metadata>
		<group id="content">
			<unit id="101" translate="yes">
				<segment state="initial">
					<source>How to add test metadata</source>
					<target>How to add test metadata</target>
				</segment>
			</unit>
			<unit id="102" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/en-us/Library/Windows/Hardware/Hh439725)</data>
				</originalData>
				<segment state="initial">
					<source>For Windows 8, the Windows Driver Kit (WDK) uses the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Test Authoring and Execution Framework (TAEF)</pc> for creating test content.</source>
					<target>For Windows 8, the Windows Driver Kit (WDK) uses the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Test Authoring and Execution Framework (TAEF)</pc> for creating test content.</target>
				</segment>
			</unit>
			<unit id="103" translate="yes">
				<segment state="initial">
					<source>A TAEF test is an object implemented as a dynamic-link library (DLL) that contains multiple methods, where each method maps to a specific test scenario.</source>
					<target>A TAEF test is an object implemented as a dynamic-link library (DLL) that contains multiple methods, where each method maps to a specific test scenario.</target>
				</segment>
			</unit>
			<unit id="104" translate="yes">
				<segment state="initial">
					<source>The TAEF object combines related methods into a group of tests.</source>
					<target>The TAEF object combines related methods into a group of tests.</target>
				</segment>
			</unit>
			<unit id="105" translate="yes">
				<segment state="initial">
					<source>For each test, there is a set of metadata that describes the test.</source>
					<target>For each test, there is a set of metadata that describes the test.</target>
				</segment>
			</unit>
			<unit id="106" translate="yes">
				<segment state="initial">
					<source>To improve test portability and encapsulation, TAEF stores test metadata within the test object itself.</source>
					<target>To improve test portability and encapsulation, TAEF stores test metadata within the test object itself.</target>
				</segment>
			</unit>
			<unit id="107" translate="yes">
				<segment state="initial">
					<source>When you create your own driver tests using the Driver Test templates, you need to add this metadata so that your driver tests are available and can be deployed using Visual Studio.</source>
					<target>When you create your own driver tests using the Driver Test templates, you need to add this metadata so that your driver tests are available and can be deployed using Visual Studio.</target>
				</segment>
			</unit>
			<unit id="108" translate="yes">
				<segment state="initial">
					<source>Prerequisites</source>
					<target>Prerequisites</target>
				</segment>
			</unit>
			<unit id="109" translate="yes">
				<segment state="initial">
					<source>The source code for a driver test written by using one of the Driver Test templates.</source>
					<target>The source code for a driver test written by using one of the Driver Test templates.</target>
				</segment>
			</unit>
			<unit id="110" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](how_to_write_a_driver_test_.md)</data>
				</originalData>
				<segment state="initial">
					<source>For information, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">How to write a driver test using a Driver Test template</pc>.</source>
					<target>For information, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">How to write a driver test using a Driver Test template</pc>.</target>
				</segment>
			</unit>
			<unit id="111" translate="yes">
				<segment state="initial">
					<source>To add test metadata attributes</source>
					<target>To add test metadata attributes</target>
				</segment>
			</unit>
			<unit id="112" translate="yes">
				<segment state="initial">
					<source>Add the required test property metadata to the source files for your test.</source>
					<target>Add the required test property metadata to the source files for your test.</target>
				</segment>
			</unit>
			<unit id="113" translate="yes">
				<segment state="initial">
					<source>For example, if you use the Driver Test template to create your version of the SurpriseRemove test, the following metadata is added.</source>
					<target>For example, if you use the Driver Test template to create your version of the SurpriseRemove test, the following metadata is added.</target>
				</segment>
			</unit>
			<unit id="114" translate="yes">
				<segment state="initial">
					<source>Edit the test description, display name, category, and results file attributes.</source>
					<target>Edit the test description, display name, category, and results file attributes.</target>
				</segment>
			</unit>
			<unit id="115" translate="yes">
				<segment state="initial">
					<source>C++</source>
					<target>C++</target>
				</segment>
			</unit>
			<unit id="116" translate="yes">
				<segment state="initial">
					<source>C</source>
					<target>C</target>
				</segment>
			</unit>
			<unit id="117" translate="yes">
				<segment state="initial">
					<source>Windows Script Component (.wsc)</source>
					<target>Windows Script Component (.wsc)</target>
				</segment>
			</unit>
			<unit id="118" translate="yes">
				<segment state="initial">
					<source>The following table describes the test property attributes.</source>
					<target>The following table describes the test property attributes.</target>
				</segment>
			</unit>
			<unit id="119" translate="yes">
				<segment state="initial">
					<source>Use the examples for guidance as you edit or add the metadata for your tests.</source>
					<target>Use the examples for guidance as you edit or add the metadata for your tests.</target>
				</segment>
			</unit>
			<unit id="120" translate="yes">
				<segment state="initial">
					<source>Description</source>
					<target>Description</target>
				</segment>
			</unit>
			<unit id="121" translate="yes">
				<segment state="initial">
					<source>A short description of what the test does.</source>
					<target>A short description of what the test does.</target>
				</segment>
			</unit>
			<unit id="122" translate="yes">
				<segment state="initial">
					<source>C++</source>
					<target>C++</target>
				</segment>
			</unit>
			<unit id="123" translate="yes">
				<originalData>
					<data id="id1">&amp;quot;</data>
					<data id="id2">&amp;quot;</data>
					<data id="id3">&amp;quot;</data>
					<data id="id4">&amp;quot;</data>
				</originalData>
				<segment state="initial">
					<source>TEST_METHOD_PROPERTY(L<ph dataRef="id1" id="ph1" />Description<ph dataRef="id2" id="ph2" />, L<ph dataRef="id3" id="ph3" />Plug and Play Surprise Remove Generated Template<ph dataRef="id4" id="ph4" />)</source>
					<target>TEST_METHOD_PROPERTY(L<ph dataRef="id1" id="ph1" />Description<ph dataRef="id2" id="ph2" />, L<ph dataRef="id3" id="ph3" />Plug and Play Surprise Remove Generated Template<ph dataRef="id4" id="ph4" />)</target>
				</segment>
			</unit>
			<unit id="124" translate="yes">
				<segment state="initial">
					<source>DisplayName</source>
					<target>DisplayName</target>
				</segment>
			</unit>
			<unit id="125" translate="yes">
				<segment state="initial">
					<source>The name of the test as it shown in Driver Test.</source>
					<target>The name of the test as it shown in Driver Test.</target>
				</segment>
			</unit>
			<unit id="126" translate="yes">
				<originalData>
					<data id="id1">&amp;quot;</data>
					<data id="id2">&amp;quot;</data>
					<data id="id3">&amp;quot;</data>
				</originalData>
				<segment state="initial">
					<source>TestProperty name=<ph dataRef="id1" id="ph1" />Kits.DisplayName<ph dataRef="id2" id="ph2" /> value=<ph dataRef="id3" id="ph3" />Sleep with IO Before and After</source>
					<target>TestProperty name=<ph dataRef="id1" id="ph1" />Kits.DisplayName<ph dataRef="id2" id="ph2" /> value=<ph dataRef="id3" id="ph3" />Sleep with IO Before and After</target>
				</segment>
			</unit>
			<unit id="127" translate="yes">
				<segment state="initial">
					<source>C++</source>
					<target>C++</target>
				</segment>
			</unit>
			<unit id="128" translate="yes">
				<originalData>
					<data id="id1">&amp;quot;</data>
					<data id="id2">&amp;quot;</data>
					<data id="id3">&amp;quot;</data>
					<data id="id4">&amp;quot;</data>
				</originalData>
				<segment state="initial">
					<source>TEST_METHOD_PROPERTY(L<ph dataRef="id1" id="ph1" />Kits.DisplayName<ph dataRef="id2" id="ph2" />, L<ph dataRef="id3" id="ph3" />My Plug and Play Surprise Remove Test<ph dataRef="id4" id="ph4" />)</source>
					<target>TEST_METHOD_PROPERTY(L<ph dataRef="id1" id="ph1" />Kits.DisplayName<ph dataRef="id2" id="ph2" />, L<ph dataRef="id3" id="ph3" />My Plug and Play Surprise Remove Test<ph dataRef="id4" id="ph4" />)</target>
				</segment>
			</unit>
			<unit id="129" translate="yes">
				<segment state="initial">
					<source>Kits.Parameter</source>
					<target>Kits.Parameter</target>
				</segment>
			</unit>
			<unit id="130" translate="yes">
				<segment state="initial">
					<source>A standard parameter for a method call.</source>
					<target>A standard parameter for a method call.</target>
				</segment>
			</unit>
			<unit id="131" translate="yes">
				<segment state="initial">
					<source>A test can have multiple parameters.</source>
					<target>A test can have multiple parameters.</target>
				</segment>
			</unit>
			<unit id="132" translate="yes">
				<originalData>
					<data id="id1">&amp;quot;</data>
					<data id="id2">&amp;quot;</data>
					<data id="id3">&amp;quot;</data>
				</originalData>
				<segment state="initial">
					<source>ModuleProperty name=<ph dataRef="id1" id="ph1" />Kits.Parameter<ph dataRef="id2" id="ph2" /> value=<ph dataRef="id3" id="ph3" />TM</source>
					<target>ModuleProperty name=<ph dataRef="id1" id="ph1" />Kits.Parameter<ph dataRef="id2" id="ph2" /> value=<ph dataRef="id3" id="ph3" />TM</target>
				</segment>
			</unit>
			<unit id="133" translate="yes">
				<segment state="initial">
					<source>C++</source>
					<target>C++</target>
				</segment>
			</unit>
			<unit id="134" translate="yes">
				<originalData>
					<data id="id1">&amp;quot;</data>
					<data id="id2">&amp;quot;</data>
					<data id="id3">&amp;quot;</data>
					<data id="id4">&amp;quot;</data>
				</originalData>
				<segment state="initial">
					<source>TEST_METHOD_PROPERTY(L<ph dataRef="id1" id="ph1" />Kits.Parameter<ph dataRef="id2" id="ph2" />, L<ph dataRef="id3" id="ph3" />DQ<ph dataRef="id4" id="ph4" />)</source>
					<target>TEST_METHOD_PROPERTY(L<ph dataRef="id1" id="ph1" />Kits.Parameter<ph dataRef="id2" id="ph2" />, L<ph dataRef="id3" id="ph3" />DQ<ph dataRef="id4" id="ph4" />)</target>
				</segment>
			</unit>
			<unit id="135" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">*</data>
					<data id="id4">*</data>
					<data id="id5">&amp;lt;</data>
					<data id="id6">&amp;gt;</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Kits.Parameter.</pc><pc dataRefEnd="id4" dataRefStart="id3" id="p2"><ph dataRef="id5" id="ph1" />ParameterName<ph dataRef="id6" id="ph2" /></pc><pc dataRefEnd="id8" dataRefStart="id7" id="p3">.Description</pc></source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Kits.Parameter.</pc><pc dataRefEnd="id4" dataRefStart="id3" id="p2"><ph dataRef="id5" id="ph1" />ParameterName<ph dataRef="id6" id="ph2" /></pc><pc dataRefEnd="id8" dataRefStart="id7" id="p3">.Description</pc></target>
				</segment>
			</unit>
			<unit id="136" translate="yes">
				<segment state="initial">
					<source>The description for the parameter.</source>
					<target>The description for the parameter.</target>
				</segment>
			</unit>
			<unit id="137" translate="yes">
				<originalData>
					<data id="id1">&amp;quot;</data>
					<data id="id2">&amp;quot;</data>
					<data id="id3">&amp;quot;</data>
				</originalData>
				<segment state="initial">
					<source>TestProperty name=<ph dataRef="id1" id="ph1" />Kits.Parameter.TM.Description<ph dataRef="id2" id="ph2" /> value=<ph dataRef="id3" id="ph3" />Test mode parameter: Logo or Simple</source>
					<target>TestProperty name=<ph dataRef="id1" id="ph1" />Kits.Parameter.TM.Description<ph dataRef="id2" id="ph2" /> value=<ph dataRef="id3" id="ph3" />Test mode parameter: Logo or Simple</target>
				</segment>
			</unit>
			<unit id="138" translate="yes">
				<segment state="initial">
					<source>C++</source>
					<target>C++</target>
				</segment>
			</unit>
			<unit id="139" translate="yes">
				<originalData>
					<data id="id1">&amp;quot;</data>
					<data id="id2">&amp;quot;</data>
					<data id="id3">&amp;quot;</data>
					<data id="id4">&amp;quot;</data>
				</originalData>
				<segment state="initial">
					<source>TEST_METHOD_PROPERTY(L<ph dataRef="id1" id="ph1" />Kits.Parameter.DQ.Description<ph dataRef="id2" id="ph2" />, L<ph dataRef="id3" id="ph3" />A WDTF SDEL query that is used to identify the target device(s)<ph dataRef="id4" id="ph4" />)</source>
					<target>TEST_METHOD_PROPERTY(L<ph dataRef="id1" id="ph1" />Kits.Parameter.DQ.Description<ph dataRef="id2" id="ph2" />, L<ph dataRef="id3" id="ph3" />A WDTF SDEL query that is used to identify the target device(s)<ph dataRef="id4" id="ph4" />)</target>
				</segment>
			</unit>
			<unit id="140" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">*</data>
					<data id="id4">*</data>
					<data id="id5">&amp;lt;</data>
					<data id="id6">&amp;gt;</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Kits.Parameter.</pc><pc dataRefEnd="id4" dataRefStart="id3" id="p2"><ph dataRef="id5" id="ph1" />ParameterName<ph dataRef="id6" id="ph2" /></pc><pc dataRefEnd="id8" dataRefStart="id7" id="p3">.Default</pc></source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Kits.Parameter.</pc><pc dataRefEnd="id4" dataRefStart="id3" id="p2"><ph dataRef="id5" id="ph1" />ParameterName<ph dataRef="id6" id="ph2" /></pc><pc dataRefEnd="id8" dataRefStart="id7" id="p3">.Default</pc></target>
				</segment>
			</unit>
			<unit id="141" translate="yes">
				<segment state="initial">
					<source>The default value for the parameter.</source>
					<target>The default value for the parameter.</target>
				</segment>
			</unit>
			<unit id="142" translate="yes">
				<originalData>
					<data id="id1">&amp;quot;</data>
					<data id="id2">&amp;quot;</data>
					<data id="id3">&amp;quot;</data>
				</originalData>
				<segment state="initial">
					<source>TestProperty name=<ph dataRef="id1" id="ph1" />Kits.Parameter.TM.Default<ph dataRef="id2" id="ph2" /> value=<ph dataRef="id3" id="ph3" />Logo</source>
					<target>TestProperty name=<ph dataRef="id1" id="ph1" />Kits.Parameter.TM.Default<ph dataRef="id2" id="ph2" /> value=<ph dataRef="id3" id="ph3" />Logo</target>
				</segment>
			</unit>
			<unit id="143" translate="yes">
				<segment state="initial">
					<source>C++</source>
					<target>C++</target>
				</segment>
			</unit>
			<unit id="144" translate="yes">
				<originalData>
					<data id="id1">&amp;quot;</data>
					<data id="id2">&amp;quot;</data>
					<data id="id3">&amp;quot;</data>
					<data id="id4">&amp;quot;</data>
				</originalData>
				<segment state="initial">
					<source>TEST_METHOD_PROPERTY(L<ph dataRef="id1" id="ph1" />Kits.Parameter.DQ.Default<ph dataRef="id2" id="ph2" />, L<ph dataRef="id3" id="ph3" />INF::OriginalInfFileName=&amp;#39;%InfFileName%&amp;#39;<ph dataRef="id4" id="ph4" />)</source>
					<target>TEST_METHOD_PROPERTY(L<ph dataRef="id1" id="ph1" />Kits.Parameter.DQ.Default<ph dataRef="id2" id="ph2" />, L<ph dataRef="id3" id="ph3" />INF::OriginalInfFileName=&amp;#39;%InfFileName%&amp;#39;<ph dataRef="id4" id="ph4" />)</target>
				</segment>
			</unit>
			<unit id="145" translate="yes">
				<segment state="initial">
					<source>Kits.Drivers</source>
					<target>Kits.Drivers</target>
				</segment>
			</unit>
			<unit id="146" translate="yes">
				<segment state="initial">
					<source>This attribute marks the test for inclusion in the WDK.</source>
					<target>This attribute marks the test for inclusion in the WDK.</target>
				</segment>
			</unit>
			<unit id="147" translate="yes">
				<originalData>
					<data id="id1">&amp;quot;</data>
					<data id="id2">&amp;quot;</data>
				</originalData>
				<segment state="initial">
					<source>TestProperty name=<ph dataRef="id1" id="ph1" />Kits.Drivers<ph dataRef="id2" id="ph2" /> value=</source>
					<target>TestProperty name=<ph dataRef="id1" id="ph1" />Kits.Drivers<ph dataRef="id2" id="ph2" /> value=</target>
				</segment>
			</unit>
			<unit id="148" translate="yes">
				<segment state="initial">
					<source>C++</source>
					<target>C++</target>
				</segment>
			</unit>
			<unit id="149" translate="yes">
				<originalData>
					<data id="id1">&amp;quot;</data>
					<data id="id2">&amp;quot;</data>
					<data id="id3">&amp;quot;</data>
					<data id="id4">&amp;quot;</data>
				</originalData>
				<segment state="initial">
					<source>TEST_METHOD_PROPERTY(L<ph dataRef="id1" id="ph1" />Kits.Drivers<ph dataRef="id2" id="ph2" />, L<ph dataRef="id3" id="ph3" />TRUE<ph dataRef="id4" id="ph4" />)</source>
					<target>TEST_METHOD_PROPERTY(L<ph dataRef="id1" id="ph1" />Kits.Drivers<ph dataRef="id2" id="ph2" />, L<ph dataRef="id3" id="ph3" />TRUE<ph dataRef="id4" id="ph4" />)</target>
				</segment>
			</unit>
			<unit id="150" translate="yes">
				<segment state="initial">
					<source>Kits.Category</source>
					<target>Kits.Category</target>
				</segment>
			</unit>
			<unit id="151" translate="yes">
				<segment state="initial">
					<source>Describes the category of a test.</source>
					<target>Describes the category of a test.</target>
				</segment>
			</unit>
			<unit id="152" translate="yes">
				<originalData>
					<data id="id1">&amp;quot;</data>
					<data id="id2">&amp;quot;</data>
					<data id="id3">&amp;quot;</data>
				</originalData>
				<segment state="initial">
					<source>TestProperty name=<ph dataRef="id1" id="ph1" />Kits.Category<ph dataRef="id2" id="ph2" /> value=<ph dataRef="id3" id="ph3" />Logo\Device Fundamentals</source>
					<target>TestProperty name=<ph dataRef="id1" id="ph1" />Kits.Category<ph dataRef="id2" id="ph2" /> value=<ph dataRef="id3" id="ph3" />Logo\Device Fundamentals</target>
				</segment>
			</unit>
			<unit id="153" translate="yes">
				<segment state="initial">
					<source>C++</source>
					<target>C++</target>
				</segment>
			</unit>
			<unit id="154" translate="yes">
				<originalData>
					<data id="id1">&amp;quot;</data>
					<data id="id2">&amp;quot;</data>
					<data id="id3">&amp;quot;</data>
					<data id="id4">&amp;quot;</data>
				</originalData>
				<segment state="initial">
					<source>TEST_METHOD_PROPERTY(L<ph dataRef="id1" id="ph1" />Kits.Category<ph dataRef="id2" id="ph2" />, L<ph dataRef="id3" id="ph3" />My Test Category<ph dataRef="id4" id="ph4" />)</source>
					<target>TEST_METHOD_PROPERTY(L<ph dataRef="id1" id="ph1" />Kits.Category<ph dataRef="id2" id="ph2" />, L<ph dataRef="id3" id="ph3" />My Test Category<ph dataRef="id4" id="ph4" />)</target>
				</segment>
			</unit>
			<unit id="155" translate="yes">
				<segment state="initial">
					<source>Deploymentitem</source>
					<target>Deploymentitem</target>
				</segment>
			</unit>
			<unit id="156" translate="yes">
				<segment state="initial">
					<source>Identifies files and/or folders as test dependencies.</source>
					<target>Identifies files and/or folders as test dependencies.</target>
				</segment>
			</unit>
			<unit id="157" translate="yes">
				<segment state="initial">
					<source>These may contain any resources needed to run the tests.</source>
					<target>These may contain any resources needed to run the tests.</target>
				</segment>
			</unit>
			<unit id="158" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/en-us/Library/Windows/Hardware/Hh439604)</data>
				</originalData>
				<segment state="initial">
					<source>For more information about using this metadata, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">DeploymentItem Metadata</pc>.</source>
					<target>For more information about using this metadata, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">DeploymentItem Metadata</pc>.</target>
				</segment>
			</unit>
			<unit id="159" translate="yes">
				<segment state="initial">
					<source>Related topics</source>
					<target>Related topics</target>
				</segment>
			</unit>
			<unit id="160" translate="yes">
				<segment state="initial">
					<source>How to write a driver test using a Driver Test template</source>
					<target>How to write a driver test using a Driver Test template</target>
				</segment>
			</unit>
			<unit id="161" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">]</data>
					<data id="id3">(mailto:wsddocfb@microsoft.com?subject=Documentation%20feedback%20[VsDriver\vsdriver]:%20How%20to%20add%20test%20metadata%20%20RELEASE:%20%289/30/2015%29&amp;body=%0A%0APRIVACY%20STATEMENT%0A%0AWe%20use%20your%20feedback%20to%20improve%20the%20documentation.%20We%20don't%20use%20your%20email%20address%20for%20any%20other%20purpose,%20and%20we'll%20remove%20your%20email%20address%20from%20our%20system%20after%20the%20issue%20that%20you're%20reporting%20is%20fixed.%20While%20we're%20working%20to%20fix%20this%20issue,%20we%20might%20send%20you%20an%20email%20message%20to%20ask%20for%20more%20info.%20Later,%20we%20might%20also%20send%20you%20an%20email%20message%20to%20let%20you%20know%20that%20we've%20addressed%20your%20feedback.%0A%0AFor%20more%20info%20about%20Microsoft's%20privacy%20policy,%20see%20http://privacy.microsoft.com/en-us/default. "</data>
					<data id="id4">")</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Send comments about this topic to Microsoft</pc><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Send comments about this topic to Microsoft</pc></source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Send comments about this topic to Microsoft</pc><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Send comments about this topic to Microsoft</pc></target>
				</segment>
			</unit>
		</group>
	</file>
</xliff>