<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="de-de" version="2.0" xml:space="preserve" xmlns="urn:oasis:names:tc:xliff:document:2.0">
	<file id="1">
		<mda:metadata>
			<mda:metaGroup>
				<mda:meta type="tool-id">mdxliff</mda:meta>
				<mda:meta type="tool-name">mdxliff</mda:meta>
				<mda:meta type="tool-version">1.0-00ddeee</mda:meta>
				<mda:meta type="tool-company">Microsoft</mda:meta>
			</mda:metaGroup>
		<mda:metaGroup><mda:meta type="olfilehash">23cb0dafe7afdbe10fbf31094ed6ba7886f7e67e</mda:meta><mda:meta type="olfilepath">wdg-cpub-test\ndolci1\app-to-app\drag-and-drop.md</mda:meta><mda:meta type="oltranslationpriority"></mda:meta><mda:meta type="oltranslationtype">Human Translation</mda:meta><mda:meta type="olskeletonhash">a6dbed7a953a257807f49a891313bb1ed9a8199a</mda:meta><mda:meta type="olxliffhash">890a3cc6141c5fd8767dc1f69f8510457e3b681f</mda:meta></mda:metaGroup></mda:metadata>
		<group id="content">
			<unit id="101" translate="yes">
				<segment state="initial">
					<source>This article explains how to add dragging and dropping in your Universal Windows Platform (UWP) app.</source>
					<target>This article explains how to add dragging and dropping in your Universal Windows Platform (UWP) app.</target>
				</segment>
			</unit>
			<unit id="102" translate="yes">
				<segment state="initial">
					<source>Drag and drop</source>
					<target>Drag and drop</target>
				</segment>
			</unit>
			<unit id="103" translate="yes">
				<segment state="initial">
					<source>Drag and drop</source>
					<target>Drag and drop</target>
				</segment>
			</unit>
			<unit id="104" translate="yes">
				<segment state="initial">
					<source>\[ Updated for UWP apps on Windows 10.</source>
					<target>\[ Updated for UWP apps on Windows 10.</target>
				</segment>
			</unit>
			<unit id="105" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](http://go.microsoft.com/fwlink/p/?linkid=619132)</data>
				</originalData>
				<segment state="initial">
					<source>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</source>
					<target>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</target>
				</segment>
			</unit>
			<unit id="106" translate="yes">
				<segment state="initial">
					<source>This article explains how to add dragging and dropping in your Universal Windows Platform (UWP) app.</source>
					<target>This article explains how to add dragging and dropping in your Universal Windows Platform (UWP) app.</target>
				</segment>
			</unit>
			<unit id="107" translate="yes">
				<segment state="initial">
					<source>Drag and drop is a classic, natural way of interacting with content such as images and files.</source>
					<target>Drag and drop is a classic, natural way of interacting with content such as images and files.</target>
				</segment>
			</unit>
			<unit id="108" translate="yes">
				<segment state="initial">
					<source>Once implemented, drag and drop works seamlessly in all directions, including app-to-app, app-to-desktop, and desktop-to app.</source>
					<target>Once implemented, drag and drop works seamlessly in all directions, including app-to-app, app-to-desktop, and desktop-to app.</target>
				</segment>
			</unit>
			<unit id="109" translate="yes">
				<segment state="initial">
					<source>Set valid areas</source>
					<target>Set valid areas</target>
				</segment>
			</unit>
			<unit id="110" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">]</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">]</data>
					<data id="id7">[</data>
					<data id="id8">]</data>
					<data id="id9">**</data>
					<data id="id10">**</data>
					<data id="id11">[</data>
					<data id="id12">]</data>
				</originalData>
				<segment state="initial">
					<source>Use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">AllowDrop</pc></pc><pc dataRefEnd="id6" dataRefStart="id5" id="p3">AllowDrop</pc> and <pc dataRefEnd="id8" dataRefStart="id7" id="p4"><pc dataRefEnd="id10" dataRefStart="id9" id="p5">CanDrag</pc></pc><pc dataRefEnd="id12" dataRefStart="id11" id="p6">CanDrag</pc> properties to designate the areas of your app valid for dragging and dropping.</source>
					<target>Use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">AllowDrop</pc></pc><pc dataRefEnd="id6" dataRefStart="id5" id="p3">AllowDrop</pc> and <pc dataRefEnd="id8" dataRefStart="id7" id="p4"><pc dataRefEnd="id10" dataRefStart="id9" id="p5">CanDrag</pc></pc><pc dataRefEnd="id12" dataRefStart="id11" id="p6">CanDrag</pc> properties to designate the areas of your app valid for dragging and dropping.</target>
				</segment>
			</unit>
			<unit id="111" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">]</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">]</data>
				</originalData>
				<segment state="initial">
					<source>The markup below shows how to set a specific area of the app as a valid for dropping using the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">AllowDrop</pc></pc><pc dataRefEnd="id6" dataRefStart="id5" id="p3">AllowDrop</pc> in XAML.</source>
					<target>The markup below shows how to set a specific area of the app as a valid for dropping using the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">AllowDrop</pc></pc><pc dataRefEnd="id6" dataRefStart="id5" id="p3">AllowDrop</pc> in XAML.</target>
				</segment>
			</unit>
			<unit id="112" translate="yes">
				<segment state="initial">
					<source>If a user tries to drop somewhere else, the system won't let them.</source>
					<target>If a user tries to drop somewhere else, the system won't let them.</target>
				</segment>
			</unit>
			<unit id="113" translate="yes">
				<segment state="initial">
					<source>If you want users to be able to drop items anywhere on your app, set the entire background as a drop target.</source>
					<target>If you want users to be able to drop items anywhere on your app, set the entire background as a drop target.</target>
				</segment>
			</unit>
			<unit id="114" translate="yes">
				<segment state="initial">
					<source>Main</source>
					<target>Main</target>
				</segment>
			</unit>
			<unit id="115" translate="yes">
				<segment state="initial">
					<source>With dragging, you'll usually want to be specific about what's draggable.</source>
					<target>With dragging, you'll usually want to be specific about what's draggable.</target>
				</segment>
			</unit>
			<unit id="116" translate="yes">
				<segment state="initial">
					<source>Users will want to drag certain items, like pictures, not everything in your app.</source>
					<target>Users will want to drag certain items, like pictures, not everything in your app.</target>
				</segment>
			</unit>
			<unit id="117" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">]</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">]</data>
				</originalData>
				<segment state="initial">
					<source>Here's how to set <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CanDrag</pc></pc><pc dataRefEnd="id6" dataRefStart="id5" id="p3">CanDrag</pc> using XAML.</source>
					<target>Here's how to set <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CanDrag</pc></pc><pc dataRefEnd="id6" dataRefStart="id5" id="p3">CanDrag</pc> using XAML.</target>
				</segment>
			</unit>
			<unit id="118" translate="yes">
				<segment state="initial">
					<source>Main</source>
					<target>Main</target>
				</segment>
			</unit>
			<unit id="119" translate="yes">
				<segment state="initial">
					<source>You don't need to do any other work to allow dragging, unless you want to customize the UI (which is covered later in this article).</source>
					<target>You don't need to do any other work to allow dragging, unless you want to customize the UI (which is covered later in this article).</target>
				</segment>
			</unit>
			<unit id="120" translate="yes">
				<segment state="initial">
					<source>Dropping requires a few more steps.</source>
					<target>Dropping requires a few more steps.</target>
				</segment>
			</unit>
			<unit id="121" translate="yes">
				<segment state="initial">
					<source>Handle the DragOver event</source>
					<target>Handle the DragOver event</target>
				</segment>
			</unit>
			<unit id="122" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">]</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">]</data>
				</originalData>
				<segment state="initial">
					<source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">DragOver</pc></pc><pc dataRefEnd="id6" dataRefStart="id5" id="p3">DragOver</pc> event fires when a user has dragged an item over your app, but not yet dropped it.</source>
					<target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">DragOver</pc></pc><pc dataRefEnd="id6" dataRefStart="id5" id="p3">DragOver</pc> event fires when a user has dragged an item over your app, but not yet dropped it.</target>
				</segment>
			</unit>
			<unit id="123" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">]</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">]</data>
				</originalData>
				<segment state="initial">
					<source>In this handler, you need to specify what kind of operations your app supports using the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">DragEventArgs.AcceptedOperation</pc></pc><pc dataRefEnd="id6" dataRefStart="id5" id="p3">AcceptedOperation</pc> property.</source>
					<target>In this handler, you need to specify what kind of operations your app supports using the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">DragEventArgs.AcceptedOperation</pc></pc><pc dataRefEnd="id6" dataRefStart="id5" id="p3">AcceptedOperation</pc> property.</target>
				</segment>
			</unit>
			<unit id="124" translate="yes">
				<segment state="initial">
					<source>Copy is the most common.</source>
					<target>Copy is the most common.</target>
				</segment>
			</unit>
			<unit id="125" translate="yes">
				<segment state="initial">
					<source>Main</source>
					<target>Main</target>
				</segment>
			</unit>
			<unit id="126" translate="yes">
				<segment state="initial">
					<source>Process the Drop event</source>
					<target>Process the Drop event</target>
				</segment>
			</unit>
			<unit id="127" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">]</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">]</data>
				</originalData>
				<segment state="initial">
					<source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Drop</pc></pc><pc dataRefEnd="id6" dataRefStart="id5" id="p3">Drop</pc> event occurs when the user releases items in a valid drop area.</source>
					<target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Drop</pc></pc><pc dataRefEnd="id6" dataRefStart="id5" id="p3">Drop</pc> event occurs when the user releases items in a valid drop area.</target>
				</segment>
			</unit>
			<unit id="128" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">]</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">]</data>
				</originalData>
				<segment state="initial">
					<source>Process them using the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">DragEventArgs.DataView</pc></pc><pc dataRefEnd="id6" dataRefStart="id5" id="p3">DataView</pc> property.</source>
					<target>Process them using the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">DragEventArgs.DataView</pc></pc><pc dataRefEnd="id6" dataRefStart="id5" id="p3">DataView</pc> property.</target>
				</segment>
			</unit>
			<unit id="129" translate="yes">
				<segment state="initial">
					<source>For simplicity in the example below, we'll assume the user dropped a single photo and access.</source>
					<target>For simplicity in the example below, we'll assume the user dropped a single photo and access.</target>
				</segment>
			</unit>
			<unit id="130" translate="yes">
				<segment state="initial">
					<source>In reality, users can drop multiple items of varying formats simultaneously.</source>
					<target>In reality, users can drop multiple items of varying formats simultaneously.</target>
				</segment>
			</unit>
			<unit id="131" translate="yes">
				<segment state="initial">
					<source>Your app should handle this possibility by checking what types of files were dropped and processing them accordingly, and notifying the user if they're trying to do something your app don't support.</source>
					<target>Your app should handle this possibility by checking what types of files were dropped and processing them accordingly, and notifying the user if they're trying to do something your app don't support.</target>
				</segment>
			</unit>
			<unit id="132" translate="yes">
				<segment state="initial">
					<source>Main</source>
					<target>Main</target>
				</segment>
			</unit>
			<unit id="133" translate="yes">
				<segment state="initial">
					<source>Customize the UI</source>
					<target>Customize the UI</target>
				</segment>
			</unit>
			<unit id="134" translate="yes">
				<segment state="initial">
					<source>The system provides a default UI for dragging and dropping.</source>
					<target>The system provides a default UI for dragging and dropping.</target>
				</segment>
			</unit>
			<unit id="135" translate="yes">
				<segment state="initial">
					<source>However, you can also choose to customize various parts of the UI by setting custom captions and glyphs, or by opting not to show a UI at all.</source>
					<target>However, you can also choose to customize various parts of the UI by setting custom captions and glyphs, or by opting not to show a UI at all.</target>
				</segment>
			</unit>
			<unit id="136" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">]</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">]</data>
					<data id="id7">[</data>
					<data id="id8">]</data>
					<data id="id9">**</data>
					<data id="id10">**</data>
					<data id="id11">[</data>
					<data id="id12">]</data>
				</originalData>
				<segment state="initial">
					<source>To customize the UI, use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">DragUIOverride</pc></pc><pc dataRefEnd="id6" dataRefStart="id5" id="p3">DragUiOverride</pc> property in the <pc dataRefEnd="id8" dataRefStart="id7" id="p4"><pc dataRefEnd="id10" dataRefStart="id9" id="p5">DragOver</pc></pc><pc dataRefEnd="id12" dataRefStart="id11" id="p6">DragOver</pc> event handler.</source>
					<target>To customize the UI, use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">DragUIOverride</pc></pc><pc dataRefEnd="id6" dataRefStart="id5" id="p3">DragUiOverride</pc> property in the <pc dataRefEnd="id8" dataRefStart="id7" id="p4"><pc dataRefEnd="id10" dataRefStart="id9" id="p5">DragOver</pc></pc><pc dataRefEnd="id12" dataRefStart="id11" id="p6">DragOver</pc> event handler.</target>
				</segment>
			</unit>
			<unit id="137" translate="yes">
				<segment state="initial">
					<source>Main</source>
					<target>Main</target>
				</segment>
			</unit>
			<unit id="138" translate="yes">
				<segment state="initial">
					<source>AllowDrop</source>
					<target>AllowDrop</target>
				</segment>
			</unit>
			<unit id="139" translate="yes">
				<segment state="initial">
					<source>CanDrag</source>
					<target>CanDrag</target>
				</segment>
			</unit>
			<unit id="140" translate="yes">
				<segment state="initial">
					<source>DragOver</source>
					<target>DragOver</target>
				</segment>
			</unit>
			<unit id="141" translate="yes">
				<segment state="initial">
					<source>AcceptedOperation</source>
					<target>AcceptedOperation</target>
				</segment>
			</unit>
			<unit id="142" translate="yes">
				<segment state="initial">
					<source>DataView</source>
					<target>DataView</target>
				</segment>
			</unit>
			<unit id="143" translate="yes">
				<segment state="initial">
					<source>DragUiOverride</source>
					<target>DragUiOverride</target>
				</segment>
			</unit>
			<unit id="144" translate="yes">
				<segment state="initial">
					<source>Drop</source>
					<target>Drop</target>
				</segment>
			</unit>
		</group>
	</file>
</xliff>