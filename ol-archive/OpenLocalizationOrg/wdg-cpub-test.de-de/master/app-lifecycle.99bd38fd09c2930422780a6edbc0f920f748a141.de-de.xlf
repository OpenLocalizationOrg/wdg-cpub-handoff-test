<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="de-de" version="2.0" xml:space="preserve" xmlns="urn:oasis:names:tc:xliff:document:2.0">
	<file id="1">
		<mda:metadata>
			<mda:metaGroup>
				<mda:meta type="tool-id">mdxliff</mda:meta>
				<mda:meta type="tool-name">mdxliff</mda:meta>
				<mda:meta type="tool-version">1.0-00ddeee</mda:meta>
				<mda:meta type="tool-company">Microsoft</mda:meta>
			</mda:metaGroup>
		<mda:metaGroup><mda:meta type="olfilehash">ca5bdfd411b1e072890af1b7b2ac31a4c9bfec3c</mda:meta><mda:meta type="olfilepath">wdg-cpub-test\ndolci2\launch-resume\app-lifecycle.md</mda:meta><mda:meta type="oltranslationpriority"></mda:meta><mda:meta type="oltranslationtype">Human Translation</mda:meta><mda:meta type="olskeletonhash">f668f6ab2dfa73fb4dbf1fdde0e03e33f4b61546</mda:meta><mda:meta type="olxliffhash">bf925c65924ed1e1b23fa77232a4bef9ff46b511</mda:meta></mda:metaGroup></mda:metadata>
		<group id="content">
			<unit id="101" translate="yes">
				<segment state="initial">
					<source>App lifecycle</source>
					<target>App lifecycle</target>
				</segment>
			</unit>
			<unit id="102" translate="yes">
				<segment state="initial">
					<source>This topic describes the lifecycle of a Universal Windows Platform (UWP) app, from the time it is activated until it is closed.</source>
					<target>This topic describes the lifecycle of a Universal Windows Platform (UWP) app, from the time it is activated until it is closed.</target>
				</segment>
			</unit>
			<unit id="103" translate="yes">
				<segment state="initial">
					<source>App lifecycle</source>
					<target>App lifecycle</target>
				</segment>
			</unit>
			<unit id="104" translate="yes">
				<segment state="initial">
					<source>\[ Updated for UWP apps on Windows 10.</source>
					<target>\[ Updated for UWP apps on Windows 10.</target>
				</segment>
			</unit>
			<unit id="105" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](http://go.microsoft.com/fwlink/p/?linkid=619132)</data>
				</originalData>
				<segment state="initial">
					<source>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</source>
					<target>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</target>
				</segment>
			</unit>
			<unit id="106" translate="yes">
				<segment state="initial">
					<source>Important APIs</source>
					<target>Important APIs</target>
				</segment>
			</unit>
			<unit id="107" translate="yes">
				<segment state="initial">
					<source>Windows.UI.Xaml.Application class</source>
					<target>Windows.UI.Xaml.Application class</target>
				</segment>
			</unit>
			<unit id="108" translate="yes">
				<segment state="initial">
					<source>Windows.ApplicationModel.Activation namespace</source>
					<target>Windows.ApplicationModel.Activation namespace</target>
				</segment>
			</unit>
			<unit id="109" translate="yes">
				<segment state="initial">
					<source>This topic describes the lifecycle of a Universal Windows Platform (UWP) app, from the time it is activated until it is closed.</source>
					<target>This topic describes the lifecycle of a Universal Windows Platform (UWP) app, from the time it is activated until it is closed.</target>
				</segment>
			</unit>
			<unit id="110" translate="yes">
				<segment state="initial">
					<source>Many users spread their work and play across multiple devices and apps.</source>
					<target>Many users spread their work and play across multiple devices and apps.</target>
				</segment>
			</unit>
			<unit id="111" translate="yes">
				<segment state="initial">
					<source>Users now expect your app to remember its state as they multitask on their device.</source>
					<target>Users now expect your app to remember its state as they multitask on their device.</target>
				</segment>
			</unit>
			<unit id="112" translate="yes">
				<segment state="initial">
					<source>For example, they expect the page to be scrolled to the same position and all of the controls to be in the same state as before.</source>
					<target>For example, they expect the page to be scrolled to the same position and all of the controls to be in the same state as before.</target>
				</segment>
			</unit>
			<unit id="113" translate="yes">
				<segment state="initial">
					<source>By understanding the application lifecycle of launching, suspending, and resuming, you can provide this kind of seamless behavior.</source>
					<target>By understanding the application lifecycle of launching, suspending, and resuming, you can provide this kind of seamless behavior.</target>
				</segment>
			</unit>
			<unit id="114" translate="yes">
				<segment state="initial">
					<source>App execution state</source>
					<target>App execution state</target>
				</segment>
			</unit>
			<unit id="115" translate="yes">
				<segment state="initial">
					<source>This illustration represents the transitions between app execution states.</source>
					<target>This illustration represents the transitions between app execution states.</target>
				</segment>
			</unit>
			<unit id="116" translate="yes">
				<segment state="initial">
					<source>We describe these states and events in the next several sections.</source>
					<target>We describe these states and events in the next several sections.</target>
				</segment>
			</unit>
			<unit id="117" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br224694)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>For more info about each state transition and what your app should do in response, see the reference for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ApplicationExecutionState</pc></pc> enumeration.</source>
					<target>For more info about each state transition and what your app should do in response, see the reference for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ApplicationExecutionState</pc></pc> enumeration.</target>
				</segment>
			</unit>
			<unit id="118" translate="yes">
				<segment state="initial">
					<source>state diagram showing transitions between app execution states</source>
					<target>state diagram showing transitions between app execution states</target>
				</segment>
			</unit>
			<unit id="119" translate="yes">
				<segment state="initial">
					<source>Deployment</source>
					<target>Deployment</target>
				</segment>
			</unit>
			<unit id="120" translate="yes">
				<segment state="initial">
					<source>In order for an app to be activated it must first be deployed.</source>
					<target>In order for an app to be activated it must first be deployed.</target>
				</segment>
			</unit>
			<unit id="121" translate="yes">
				<segment state="initial">
					<source>You app is deployed when a user installs your app or when you use Visual Studio to build and run your app during development and testing.</source>
					<target>You app is deployed when a user installs your app or when you use Visual Studio to build and run your app during development and testing.</target>
				</segment>
			</unit>
			<unit id="122" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/hh464929)</data>
				</originalData>
				<segment state="initial">
					<source>For more info on this and on advanced deployment scenarios, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">App packages and deployment</pc>.</source>
					<target>For more info on this and on advanced deployment scenarios, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">App packages and deployment</pc>.</target>
				</segment>
			</unit>
			<unit id="123" translate="yes">
				<segment state="initial">
					<source>App launch</source>
					<target>App launch</target>
				</segment>
			</unit>
			<unit id="124" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>An app is launched when it is in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">NotRunning</pc> state and the user taps the app tile on the start screen or on the application list.</source>
					<target>An app is launched when it is in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">NotRunning</pc> state and the user taps the app tile on the start screen or on the application list.</target>
				</segment>
			</unit>
			<unit id="125" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](handle-app-prelaunch.md)</data>
				</originalData>
				<segment state="initial">
					<source>Frequently used apps may also be prelaunched to optimize responsiveness (see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Handle app prelaunch</pc>).</source>
					<target>Frequently used apps may also be prelaunched to optimize responsiveness (see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Handle app prelaunch</pc>).</target>
				</segment>
			</unit>
			<unit id="126" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>An app could be in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">NotRunning</pc> state because it has never been launched, because it was running but then crashed, or because it was suspended but then couldn't be kept in memory and was terminated by the system.</source>
					<target>An app could be in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">NotRunning</pc> state because it has never been launched, because it was running but then crashed, or because it was suspended but then couldn't be kept in memory and was terminated by the system.</target>
				</segment>
			</unit>
			<unit id="127" translate="yes">
				<segment state="initial">
					<source>Launching is different then activation.</source>
					<target>Launching is different then activation.</target>
				</segment>
			</unit>
			<unit id="128" translate="yes">
				<segment state="initial">
					<source>Activation is when your app is activated via a contract or extension such as the Search contract.</source>
					<target>Activation is when your app is activated via a contract or extension such as the Search contract.</target>
				</segment>
			</unit>
			<unit id="129" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br242335)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">OnLaunched</pc></pc> method is called when an app is launched— including when the app is currently suspended in memory.</source>
					<target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">OnLaunched</pc></pc> method is called when an app is launched— including when the app is currently suspended in memory.</target>
				</segment>
			</unit>
			<unit id="130" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br224731)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">LaunchActivatedEventArgs</pc></pc> parameter contains the previous state of your app and the activation arguments.</source>
					<target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">LaunchActivatedEventArgs</pc></pc> parameter contains the previous state of your app and the activation arguments.</target>
				</segment>
			</unit>
			<unit id="131" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br224731)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/br224728)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
					<data id="id9">**</data>
					<data id="id10">**</data>
					<data id="id11">[</data>
					<data id="id12">](https://msdn.microsoft.com/library/windows/apps/br224729)</data>
					<data id="id13">**</data>
					<data id="id14">**</data>
					<data id="id15">**</data>
					<data id="id16">**</data>
					<data id="id17">**</data>
					<data id="id18">**</data>
				</originalData>
				<segment state="initial">
					<source>When the user switches to your terminated app, the system sends the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">LaunchActivatedEventArgs</pc></pc> args with <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Kind</pc></pc> set to <pc dataRefEnd="id10" dataRefStart="id9" id="p5">Launch</pc> and <pc dataRefEnd="id12" dataRefStart="id11" id="p6"><pc dataRefEnd="id14" dataRefStart="id13" id="p7">PreviousExecutionState</pc></pc> set to <pc dataRefEnd="id16" dataRefStart="id15" id="p8">Terminated</pc> or <pc dataRefEnd="id18" dataRefStart="id17" id="p9">ClosedByUser</pc>.</source>
					<target>When the user switches to your terminated app, the system sends the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">LaunchActivatedEventArgs</pc></pc> args with <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Kind</pc></pc> set to <pc dataRefEnd="id10" dataRefStart="id9" id="p5">Launch</pc> and <pc dataRefEnd="id12" dataRefStart="id11" id="p6"><pc dataRefEnd="id14" dataRefStart="id13" id="p7">PreviousExecutionState</pc></pc> set to <pc dataRefEnd="id16" dataRefStart="id15" id="p8">Terminated</pc> or <pc dataRefEnd="id18" dataRefStart="id17" id="p9">ClosedByUser</pc>.</target>
				</segment>
			</unit>
			<unit id="132" translate="yes">
				<segment state="initial">
					<source>The app should load its saved application data and refresh its displayed content.</source>
					<target>The app should load its saved application data and refresh its displayed content.</target>
				</segment>
			</unit>
			<unit id="133" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br224729)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source>If the value of <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">PreviousExecutionState</pc></pc> is <pc dataRefEnd="id6" dataRefStart="id5" id="p3">NotRunning</pc>, the app should start over as if it were being initially launched.</source>
					<target>If the value of <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">PreviousExecutionState</pc></pc> is <pc dataRefEnd="id6" dataRefStart="id5" id="p3">NotRunning</pc>, the app should start over as if it were being initially launched.</target>
				</segment>
			</unit>
			<unit id="134" translate="yes">
				<segment state="initial">
					<source>When an app is launched, Windows displays a splash screen for the app.</source>
					<target>When an app is launched, Windows displays a splash screen for the app.</target>
				</segment>
			</unit>
			<unit id="135" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/xaml/hh465331)</data>
				</originalData>
				<segment state="initial">
					<source>To configure the splash screen, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Adding a splash screen</pc>.</source>
					<target>To configure the splash screen, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Adding a splash screen</pc>.</target>
				</segment>
			</unit>
			<unit id="136" translate="yes">
				<segment state="initial">
					<source>While the splash screen is displayed, your app should ready its user interface.</source>
					<target>While the splash screen is displayed, your app should ready its user interface.</target>
				</segment>
			</unit>
			<unit id="137" translate="yes">
				<segment state="initial">
					<source>The primary tasks for the app are to register event handlers and set up any custom UI it needs for loading the initial page.</source>
					<target>The primary tasks for the app are to register event handlers and set up any custom UI it needs for loading the initial page.</target>
				</segment>
			</unit>
			<unit id="138" translate="yes">
				<segment state="initial">
					<source>These tasks should only take a few seconds.</source>
					<target>These tasks should only take a few seconds.</target>
				</segment>
			</unit>
			<unit id="139" translate="yes">
				<segment state="initial">
					<source>If an app needs to request data from the network or needs to retrieve large amounts of data from disk, these activities should be completed outside of activation.</source>
					<target>If an app needs to request data from the network or needs to retrieve large amounts of data from disk, these activities should be completed outside of activation.</target>
				</segment>
			</unit>
			<unit id="140" translate="yes">
				<segment state="initial">
					<source>An app can use its own custom loading UI or an extended splash screen while it waits for these long running operations to finish.</source>
					<target>An app can use its own custom loading UI or an extended splash screen while it waits for these long running operations to finish.</target>
				</segment>
			</unit>
			<unit id="141" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](create-a-customized-splash-screen.md)</data>
					<data id="id3">[</data>
					<data id="id4">](http://go.microsoft.com/fwlink/p/?linkid=234889)</data>
				</originalData>
				<segment state="initial">
					<source>See <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Display a splash screen for more time</pc> and the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Splash screen sample</pc> for more info.</source>
					<target>See <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Display a splash screen for more time</pc> and the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Splash screen sample</pc> for more info.</target>
				</segment>
			</unit>
			<unit id="142" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>After the app completes activation, it enters the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Running</pc> state and the splash screen disappears (and all its resources and objects are cleared).</source>
					<target>After the app completes activation, it enters the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Running</pc> state and the splash screen disappears (and all its resources and objects are cleared).</target>
				</segment>
			</unit>
			<unit id="143" translate="yes">
				<segment state="initial">
					<source>App activation</source>
					<target>App activation</target>
				</segment>
			</unit>
			<unit id="144" translate="yes">
				<segment state="initial">
					<source>An app can be activated by the user through a variety of extensions and contracts such as the Share contract.</source>
					<target>An app can be activated by the user through a variety of extensions and contracts such as the Share contract.</target>
				</segment>
			</unit>
			<unit id="145" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br224693)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>For a list of ways your app can be activated, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ActivationKind</pc></pc>.</source>
					<target>For a list of ways your app can be activated, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ActivationKind</pc></pc>.</target>
				</segment>
			</unit>
			<unit id="146" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br242324)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.UI.Xaml.Application</pc></pc> class defines methods you can override to handle the various activation types.</source>
					<target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.UI.Xaml.Application</pc></pc> class defines methods you can override to handle the various activation types.</target>
				</segment>
			</unit>
			<unit id="147" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br242331)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/br242336)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
					<data id="id9">[</data>
					<data id="id10">](https://msdn.microsoft.com/library/windows/apps/br242330)</data>
					<data id="id11">**</data>
					<data id="id12">**</data>
				</originalData>
				<segment state="initial">
					<source>Several of the activation types have a specific method that you can override such as such as <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">OnFileActivated</pc></pc>, <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">OnSearchActivated</pc></pc>, etc. For the other activation types, override the <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">OnActivated</pc></pc> method.</source>
					<target>Several of the activation types have a specific method that you can override such as such as <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">OnFileActivated</pc></pc>, <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">OnSearchActivated</pc></pc>, etc. For the other activation types, override the <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">OnActivated</pc></pc> method.</target>
				</segment>
			</unit>
			<unit id="148" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>Your app's activation code can test to see why it was activated and whether it was already in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Running</pc> state.</source>
					<target>Your app's activation code can test to see why it was activated and whether it was already in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Running</pc> state.</target>
				</segment>
			</unit>
			<unit id="149" translate="yes">
				<segment state="initial">
					<source>Your app can restore previously saved data during activation in the event that the operating system terminated your app, and the user subsequently re-launched it.</source>
					<target>Your app can restore previously saved data during activation in the event that the operating system terminated your app, and the user subsequently re-launched it.</target>
				</segment>
			</unit>
			<unit id="150" translate="yes">
				<segment state="initial">
					<source>Windows may terminate your app after it has been suspended for a number of reasons.</source>
					<target>Windows may terminate your app after it has been suspended for a number of reasons.</target>
				</segment>
			</unit>
			<unit id="151" translate="yes">
				<segment state="initial">
					<source>The user may manually close your app, or sign out, or the system may be running low on resources.</source>
					<target>The user may manually close your app, or sign out, or the system may be running low on resources.</target>
				</segment>
			</unit>
			<unit id="152" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br242330)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>If the user launches your app after Windows has terminated it, the app receives an <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Application.OnActivated</pc></pc> callback and the user sees your app's splash screen until the app is activated.</source>
					<target>If the user launches your app after Windows has terminated it, the app receives an <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Application.OnActivated</pc></pc> callback and the user sees your app's splash screen until the app is activated.</target>
				</segment>
			</unit>
			<unit id="153" translate="yes">
				<segment state="initial">
					<source>You can use this event to determine whether your app needs to restore the data which it had saved when it was last suspended, or whether you must load your app’s default data.</source>
					<target>You can use this event to determine whether your app needs to restore the data which it had saved when it was last suspended, or whether you must load your app’s default data.</target>
				</segment>
			</unit>
			<unit id="154" translate="yes">
				<segment state="initial">
					<source>Because the splash screen is up, your app code can invest some processing time to get this done without there being any apparent delay to the user although previously-mentioned concerns about long-running operations also apply if you're restarting or continuing.</source>
					<target>Because the splash screen is up, your app code can invest some processing time to get this done without there being any apparent delay to the user although previously-mentioned concerns about long-running operations also apply if you're restarting or continuing.</target>
				</segment>
			</unit>
			<unit id="155" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br242330)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/br224729)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">OnActivated</pc></pc> event data includes a <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">PreviousExecutionState</pc></pc> property that tells you which state your app was in before it was activated.</source>
					<target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">OnActivated</pc></pc> event data includes a <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">PreviousExecutionState</pc></pc> property that tells you which state your app was in before it was activated.</target>
				</segment>
			</unit>
			<unit id="156" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br224694)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>This property is one of the values from the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ApplicationExecutionState</pc></pc> enumeration:</source>
					<target>This property is one of the values from the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ApplicationExecutionState</pc></pc> enumeration:</target>
				</segment>
			</unit>
			<unit id="157" translate="yes">
				<segment state="initial">
					<source>Reason for termination</source>
					<target>Reason for termination</target>
				</segment>
			</unit>
			<unit id="158" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br224729)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Value of <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">PreviousExecutionState</pc></pc> property</source>
					<target>Value of <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">PreviousExecutionState</pc></pc> property</target>
				</segment>
			</unit>
			<unit id="159" translate="yes">
				<segment state="initial">
					<source>Action to take</source>
					<target>Action to take</target>
				</segment>
			</unit>
			<unit id="160" translate="yes">
				<segment state="initial">
					<source>Terminated by the system (for example, because of resource constraints)</source>
					<target>Terminated by the system (for example, because of resource constraints)</target>
				</segment>
			</unit>
			<unit id="161" translate="yes">
				<segment state="initial">
					<source>Terminated</source>
					<target>Terminated</target>
				</segment>
			</unit>
			<unit id="162" translate="yes">
				<segment state="initial">
					<source>Restore session data</source>
					<target>Restore session data</target>
				</segment>
			</unit>
			<unit id="163" translate="yes">
				<segment state="initial">
					<source>Closed by the user, or process-terminated by user</source>
					<target>Closed by the user, or process-terminated by user</target>
				</segment>
			</unit>
			<unit id="164" translate="yes">
				<segment state="initial">
					<source>ClosedByUser</source>
					<target>ClosedByUser</target>
				</segment>
			</unit>
			<unit id="165" translate="yes">
				<segment state="initial">
					<source>Start with default data</source>
					<target>Start with default data</target>
				</segment>
			</unit>
			<unit id="166" translate="yes">
				<originalData>
					<data id="id1">*</data>
					<data id="id2">*</data>
				</originalData>
				<segment state="initial">
					<source>Unexpectedly terminated, or app has not run during the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">current user session</pc></source>
					<target>Unexpectedly terminated, or app has not run during the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">current user session</pc></target>
				</segment>
			</unit>
			<unit id="167" translate="yes">
				<segment state="initial">
					<source>NotRunning</source>
					<target>NotRunning</target>
				</segment>
			</unit>
			<unit id="168" translate="yes">
				<segment state="initial">
					<source>Start with default data</source>
					<target>Start with default data</target>
				</segment>
			</unit>
			<unit id="169" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">*</data>
					<data id="id4">*</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Current user session</pc> is based on Windows logon.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Current user session</pc> is based on Windows logon.</target>
				</segment>
			</unit>
			<unit id="170" translate="yes">
				<segment state="initial">
					<source>So long as the current user hasn't explicitly logged off, shut down, or Windows hasn't restarted for other reasons, the current user session persists across events such as lock screen authentication, switch-user and so on.</source>
					<target>So long as the current user hasn't explicitly logged off, shut down, or Windows hasn't restarted for other reasons, the current user session persists across events such as lock screen authentication, switch-user and so on.</target>
				</segment>
			</unit>
			<unit id="171" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br224729)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">PreviousExecutionState</pc></pc> could also have a value of <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Running</pc> or <pc dataRefEnd="id8" dataRefStart="id7" id="p4">Suspended</pc>, but in these cases your app was not previously terminated and therefore you don’t have to restore any data because everything is already in memory.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">PreviousExecutionState</pc></pc> could also have a value of <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Running</pc> or <pc dataRefEnd="id8" dataRefStart="id7" id="p4">Suspended</pc>, but in these cases your app was not previously terminated and therefore you don’t have to restore any data because everything is already in memory.</target>
				</segment>
			</unit>
			<unit id="172" translate="yes">
				<segment state="initial">
					<source>Note</source>
					<target>Note</target>
				</segment>
			</unit>
			<unit id="173" translate="yes">
				<segment state="initial">
					<source>If you log on using the computer's Administrator account, you can't activate any UWP apps.</source>
					<target>If you log on using the computer's Administrator account, you can't activate any UWP apps.</target>
				</segment>
			</unit>
			<unit id="174" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/hh464906)</data>
				</originalData>
				<segment state="initial">
					<source>For more info, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">App extensions</pc>.</source>
					<target>For more info, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">App extensions</pc>.</target>
				</segment>
			</unit>
			<unit id="175" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">OnActivated</pc> versus specific activations</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">OnActivated</pc> versus specific activations</target>
				</segment>
			</unit>
			<unit id="176" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br242330)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">OnActivated</pc></pc> method is the means to handle all possible activation types.</source>
					<target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">OnActivated</pc></pc> method is the means to handle all possible activation types.</target>
				</segment>
			</unit>
			<unit id="177" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>However, it's more common to use different methods to handle the most common activation types, and use <pc dataRefEnd="id2" dataRefStart="id1" id="p1">OnActivated</pc> only as the fallback method for the less common activation types.</source>
					<target>However, it's more common to use different methods to handle the most common activation types, and use <pc dataRefEnd="id2" dataRefStart="id1" id="p1">OnActivated</pc> only as the fallback method for the less common activation types.</target>
				</segment>
			</unit>
			<unit id="178" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br242324)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/br242335)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
					<data id="id9">[</data>
					<data id="id10">](https://msdn.microsoft.com/library/windows/apps/br224693)</data>
					<data id="id11">**</data>
					<data id="id12">**</data>
					<data id="id13">**</data>
					<data id="id14">**</data>
				</originalData>
				<segment state="initial">
					<source>For example, <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Application</pc></pc> has an <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">OnLaunched</pc></pc> method that's invoked as a callback whenever <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">ActivationKind</pc></pc> is <pc dataRefEnd="id14" dataRefStart="id13" id="p7">Launch</pc>, and this is the typical activation for most apps.</source>
					<target>For example, <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Application</pc></pc> has an <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">OnLaunched</pc></pc> method that's invoked as a callback whenever <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">ActivationKind</pc></pc> is <pc dataRefEnd="id14" dataRefStart="id13" id="p7">Launch</pc>, and this is the typical activation for most apps.</target>
				</segment>
			</unit>
			<unit id="179" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">[</data>
					<data id="id4">](https://msdn.microsoft.com/library/windows/apps/hh701797)</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
					<data id="id7">[</data>
					<data id="id8">](https://msdn.microsoft.com/library/windows/apps/br242331)</data>
					<data id="id9">**</data>
					<data id="id10">**</data>
					<data id="id11">[</data>
					<data id="id12">](https://msdn.microsoft.com/library/windows/apps/hh701799)</data>
					<data id="id13">**</data>
					<data id="id14">**</data>
					<data id="id15">[</data>
					<data id="id16">](https://msdn.microsoft.com/library/windows/apps/hh701801)</data>
					<data id="id17">**</data>
					<data id="id18">**</data>
					<data id="id19">[</data>
					<data id="id20">](https://msdn.microsoft.com/library/windows/apps/br242336)</data>
					<data id="id21">**</data>
					<data id="id22">**</data>
					<data id="id23">[</data>
					<data id="id24">](https://msdn.microsoft.com/library/windows/apps/hh701806)</data>
					<data id="id25">**</data>
					<data id="id26">**</data>
				</originalData>
				<segment state="initial">
					<source>There are 6 more <pc dataRefEnd="id2" dataRefStart="id1" id="p1">On\*</pc> methods for specific activations: <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">OnCachedFileUpdaterActivated</pc></pc>, <pc dataRefEnd="id8" dataRefStart="id7" id="p4"><pc dataRefEnd="id10" dataRefStart="id9" id="p5">OnFileActivated</pc></pc>, <pc dataRefEnd="id12" dataRefStart="id11" id="p6"><pc dataRefEnd="id14" dataRefStart="id13" id="p7">OnFileOpenPickerActivated</pc></pc>, <pc dataRefEnd="id16" dataRefStart="id15" id="p8"><pc dataRefEnd="id18" dataRefStart="id17" id="p9">OnFileSavePickerActivated</pc></pc>, <pc dataRefEnd="id20" dataRefStart="id19" id="p10"><pc dataRefEnd="id22" dataRefStart="id21" id="p11">OnSearchActivated</pc></pc>, <pc dataRefEnd="id24" dataRefStart="id23" id="p12"><pc dataRefEnd="id26" dataRefStart="id25" id="p13">OnShareTargetActivated</pc></pc>.</source>
					<target>There are 6 more <pc dataRefEnd="id2" dataRefStart="id1" id="p1">On\*</pc> methods for specific activations: <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">OnCachedFileUpdaterActivated</pc></pc>, <pc dataRefEnd="id8" dataRefStart="id7" id="p4"><pc dataRefEnd="id10" dataRefStart="id9" id="p5">OnFileActivated</pc></pc>, <pc dataRefEnd="id12" dataRefStart="id11" id="p6"><pc dataRefEnd="id14" dataRefStart="id13" id="p7">OnFileOpenPickerActivated</pc></pc>, <pc dataRefEnd="id16" dataRefStart="id15" id="p8"><pc dataRefEnd="id18" dataRefStart="id17" id="p9">OnFileSavePickerActivated</pc></pc>, <pc dataRefEnd="id20" dataRefStart="id19" id="p10"><pc dataRefEnd="id22" dataRefStart="id21" id="p11">OnSearchActivated</pc></pc>, <pc dataRefEnd="id24" dataRefStart="id23" id="p12"><pc dataRefEnd="id26" dataRefStart="id25" id="p13">OnShareTargetActivated</pc></pc>.</target>
				</segment>
			</unit>
			<unit id="180" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">[</data>
					<data id="id4">](https://msdn.microsoft.com/library/windows/apps/br242341)</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source>Starting templates for a XAML app have an implementation for <pc dataRefEnd="id2" dataRefStart="id1" id="p1">OnLaunched</pc> and a handler for <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">Suspending</pc></pc>.</source>
					<target>Starting templates for a XAML app have an implementation for <pc dataRefEnd="id2" dataRefStart="id1" id="p1">OnLaunched</pc> and a handler for <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">Suspending</pc></pc>.</target>
				</segment>
			</unit>
			<unit id="181" translate="yes">
				<segment state="initial">
					<source>App suspend</source>
					<target>App suspend</target>
				</segment>
			</unit>
			<unit id="182" translate="yes">
				<segment state="initial">
					<source>The system suspends your app whenever the user switches to another app or to the desktop or Start screen.</source>
					<target>The system suspends your app whenever the user switches to another app or to the desktop or Start screen.</target>
				</segment>
			</unit>
			<unit id="183" translate="yes">
				<segment state="initial">
					<source>You app may also be suspended when the device enters a low power state.</source>
					<target>You app may also be suspended when the device enters a low power state.</target>
				</segment>
			</unit>
			<unit id="184" translate="yes">
				<segment state="initial">
					<source>The system resumes your app whenever the user switches back to it.</source>
					<target>The system resumes your app whenever the user switches back to it.</target>
				</segment>
			</unit>
			<unit id="185" translate="yes">
				<segment state="initial">
					<source>When the system resumes your app, the content of your variables and data structures is the same as it was before the system suspended the app.</source>
					<target>When the system resumes your app, the content of your variables and data structures is the same as it was before the system suspended the app.</target>
				</segment>
			</unit>
			<unit id="186" translate="yes">
				<segment state="initial">
					<source>The system restores the app exactly where it left off, so that it appears to the user as if it's been running in the background.</source>
					<target>The system restores the app exactly where it left off, so that it appears to the user as if it's been running in the background.</target>
				</segment>
			</unit>
			<unit id="187" translate="yes">
				<segment state="initial">
					<source>When the user moves an app to the background, Windows waits a few seconds to see whether the user will immediately switch back to the app so that the transition will be fast if they do.</source>
					<target>When the user moves an app to the background, Windows waits a few seconds to see whether the user will immediately switch back to the app so that the transition will be fast if they do.</target>
				</segment>
			</unit>
			<unit id="188" translate="yes">
				<segment state="initial">
					<source>If the user does not switch back within this time window, Windows suspends the app.</source>
					<target>If the user does not switch back within this time window, Windows suspends the app.</target>
				</segment>
			</unit>
			<unit id="189" translate="yes">
				<segment state="initial">
					<source>If you need to do asynchronous work when your app is being suspended you will need to defer completion of suspend until after your work completes.</source>
					<target>If you need to do asynchronous work when your app is being suspended you will need to defer completion of suspend until after your work completes.</target>
				</segment>
			</unit>
			<unit id="190" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br224690)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/br224688)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
					<data id="id9">[</data>
					<data id="id10">](https://msdn.microsoft.com/library/windows/apps/br224685)</data>
					<data id="id11">**</data>
					<data id="id12">**</data>
					<data id="id13">[</data>
					<data id="id14">](https://msdn.microsoft.com/library/windows/apps/br224684)</data>
					<data id="id15">**</data>
					<data id="id16">**</data>
				</originalData>
				<segment state="initial">
					<source>You can use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">GetDeferral</pc></pc> method on the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">SuspendingOperation</pc></pc> object (available via the event args) to delay completion of suspend until after you call the <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">Complete</pc></pc> method on the returned <pc dataRefEnd="id14" dataRefStart="id13" id="p7"><pc dataRefEnd="id16" dataRefStart="id15" id="p8">SuspendingDeferral</pc></pc> object.</source>
					<target>You can use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">GetDeferral</pc></pc> method on the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">SuspendingOperation</pc></pc> object (available via the event args) to delay completion of suspend until after you call the <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">Complete</pc></pc> method on the returned <pc dataRefEnd="id14" dataRefStart="id13" id="p7"><pc dataRefEnd="id16" dataRefStart="id15" id="p8">SuspendingDeferral</pc></pc> object.</target>
				</segment>
			</unit>
			<unit id="191" translate="yes">
				<segment state="initial">
					<source>The system attempts to keep your app and its data in memory while it's suspended.</source>
					<target>The system attempts to keep your app and its data in memory while it's suspended.</target>
				</segment>
			</unit>
			<unit id="192" translate="yes">
				<segment state="initial">
					<source>However, if the system does not have the resources to keep your app in memory, the system will terminate your app.</source>
					<target>However, if the system does not have the resources to keep your app in memory, the system will terminate your app.</target>
				</segment>
			</unit>
			<unit id="193" translate="yes">
				<segment state="initial">
					<source>Apps don't receive a notification that they are being terminated, so the only opportunity you have to save your app's data is during suspension.</source>
					<target>Apps don't receive a notification that they are being terminated, so the only opportunity you have to save your app's data is during suspension.</target>
				</segment>
			</unit>
			<unit id="194" translate="yes">
				<segment state="initial">
					<source>When an app determines that it has been activated after being terminated, it should load the application data that it saved during suspend so that the app is in the same state as if was before it was suspended.</source>
					<target>When an app determines that it has been activated after being terminated, it should load the application data that it saved during suspend so that the app is in the same state as if was before it was suspended.</target>
				</segment>
			</unit>
			<unit id="195" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br242335)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>When the user switches back to a suspended app that has been terminated, the app should restore its application data in its <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">OnLaunched</pc></pc> method.</source>
					<target>When the user switches back to a suspended app that has been terminated, the app should restore its application data in its <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">OnLaunched</pc></pc> method.</target>
				</segment>
			</unit>
			<unit id="196" translate="yes">
				<segment state="initial">
					<source>The system doesn't notify an app when it's terminated, so your app must save its application data and release exclusive resources and file handles when it's suspended, and restore them when the app is activated after termination.</source>
					<target>The system doesn't notify an app when it's terminated, so your app must save its application data and release exclusive resources and file handles when it's suspended, and restore them when the app is activated after termination.</target>
				</segment>
			</unit>
			<unit id="197" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br242341)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>If an app has registered an event handler for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Application.Suspending</pc></pc> event, this code is called immediately before the app is suspended.</source>
					<target>If an app has registered an event handler for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Application.Suspending</pc></pc> event, this code is called immediately before the app is suspended.</target>
				</segment>
			</unit>
			<unit id="198" translate="yes">
				<segment state="initial">
					<source>You can use the event handler to save app and user data.</source>
					<target>You can use the event handler to save app and user data.</target>
				</segment>
			</unit>
			<unit id="199" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>We recommended that you use the application data APIs for this purpose because they are guaranteed to complete before the app enters the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Suspended</pc> state.</source>
					<target>We recommended that you use the application data APIs for this purpose because they are guaranteed to complete before the app enters the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Suspended</pc> state.</target>
				</segment>
			</unit>
			<unit id="200" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/mt299098)</data>
				</originalData>
				<segment state="initial">
					<source>For more info, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Store and retrieve settings and other app data</pc>.</source>
					<target>For more info, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Store and retrieve settings and other app data</pc>.</target>
				</segment>
			</unit>
			<unit id="201" translate="yes">
				<segment state="initial">
					<source>You should also release exclusive resources and file handles so that other apps can access them while your app isn't using them.</source>
					<target>You should also release exclusive resources and file handles so that other apps can access them while your app isn't using them.</target>
				</segment>
			</unit>
			<unit id="202" translate="yes">
				<segment state="initial">
					<source>Examples of exclusive resources include cameras, I/O devices, external devices, and network resources.</source>
					<target>Examples of exclusive resources include cameras, I/O devices, external devices, and network resources.</target>
				</segment>
			</unit>
			<unit id="203" translate="yes">
				<segment state="initial">
					<source>Explicitly releasing exclusive resources and file handles helps to ensure that other apps can access them while your app isn't using them.</source>
					<target>Explicitly releasing exclusive resources and file handles helps to ensure that other apps can access them while your app isn't using them.</target>
				</segment>
			</unit>
			<unit id="204" translate="yes">
				<segment state="initial">
					<source>When the app is activated after termination, it should reopen its exclusive resources and file handles.</source>
					<target>When the app is activated after termination, it should reopen its exclusive resources and file handles.</target>
				</segment>
			</unit>
			<unit id="205" translate="yes">
				<segment state="initial">
					<source>Generally, your app should save its state and release its resources and file handles immediately when handling the suspending event, and the code should not take more than a second to complete.</source>
					<target>Generally, your app should save its state and release its resources and file handles immediately when handling the suspending event, and the code should not take more than a second to complete.</target>
				</segment>
			</unit>
			<unit id="206" translate="yes">
				<segment state="initial">
					<source>If an app does not return from the suspending event within a few seconds, Windows assumes that the app has stopped responding and terminates it.</source>
					<target>If an app does not return from the suspending event within a few seconds, Windows assumes that the app has stopped responding and terminates it.</target>
				</segment>
			</unit>
			<unit id="207" translate="yes">
				<segment state="initial">
					<source>There are some app scenarios where the app must continue to run to complete background tasks.</source>
					<target>There are some app scenarios where the app must continue to run to complete background tasks.</target>
				</segment>
			</unit>
			<unit id="208" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/mt282140)</data>
				</originalData>
				<segment state="initial">
					<source>For example, your app can continue to play audio in the background; for more info, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Background Audio</pc>).</source>
					<target>For example, your app can continue to play audio in the background; for more info, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Background Audio</pc>).</target>
				</segment>
			</unit>
			<unit id="209" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/en-us/library/windows/apps/xaml/jj152726.aspx#downloading_a_file_using_background_transfer)</data>
				</originalData>
				<segment state="initial">
					<source>Also, background transfer operations continue even if your app is suspended or even terminated; for more info, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">How to download a file</pc>).</source>
					<target>Also, background transfer operations continue even if your app is suspended or even terminated; for more info, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">How to download a file</pc>).</target>
				</segment>
			</unit>
			<unit id="210" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/hh465088)</data>
				</originalData>
				<segment state="initial">
					<source>For guidelines, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Guidelines for app suspend and resume</pc>.</source>
					<target>For guidelines, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Guidelines for app suspend and resume</pc>.</target>
				</segment>
			</unit>
			<unit id="211" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">A note about debugging using Visual Studio:  </pc>Visual Studio prevents Windows from suspending an app that is attached to the debugger.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">A note about debugging using Visual Studio:  </pc>Visual Studio prevents Windows from suspending an app that is attached to the debugger.</target>
				</segment>
			</unit>
			<unit id="212" translate="yes">
				<segment state="initial">
					<source>This is to allow the user to view the Visual Studio debug UI while the app is running.</source>
					<target>This is to allow the user to view the Visual Studio debug UI while the app is running.</target>
				</segment>
			</unit>
			<unit id="213" translate="yes">
				<segment state="initial">
					<source>When you're debugging an app, you can send it a suspend event using Visual Studio.</source>
					<target>When you're debugging an app, you can send it a suspend event using Visual Studio.</target>
				</segment>
			</unit>
			<unit id="214" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Make sure the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Debug Location</pc> toolbar is being shown, then click the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Suspend</pc> icon.</source>
					<target>Make sure the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Debug Location</pc> toolbar is being shown, then click the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Suspend</pc> icon.</target>
				</segment>
			</unit>
			<unit id="215" translate="yes">
				<segment state="initial">
					<source>App visibility</source>
					<target>App visibility</target>
				</segment>
			</unit>
			<unit id="216" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>When the user switches from your app to another app, your app is no longer visible but remains in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Running</pc> state until Windows suspends it.</source>
					<target>When the user switches from your app to another app, your app is no longer visible but remains in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Running</pc> state until Windows suspends it.</target>
				</segment>
			</unit>
			<unit id="217" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>If the user switches away from your app but activates or switches back to it before it can suspended, the app remains in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Running</pc> state.</source>
					<target>If the user switches away from your app but activates or switches back to it before it can suspended, the app remains in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Running</pc> state.</target>
				</segment>
			</unit>
			<unit id="218" translate="yes">
				<segment state="initial">
					<source>Your app doesn't receive an activation event when its visibility changes because the app is still running.</source>
					<target>Your app doesn't receive an activation event when its visibility changes because the app is still running.</target>
				</segment>
			</unit>
			<unit id="219" translate="yes">
				<segment state="initial">
					<source>Windows simply switches to and from the app as necessary.</source>
					<target>Windows simply switches to and from the app as necessary.</target>
				</segment>
			</unit>
			<unit id="220" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/hh702458)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>If your app needs to do something when the user switches away and back, handle the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Window.VisibilityChanged</pc></pc> event.</source>
					<target>If your app needs to do something when the user switches away and back, handle the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Window.VisibilityChanged</pc></pc> event.</target>
				</segment>
			</unit>
			<unit id="221" translate="yes">
				<segment state="initial">
					<source>Do not rely on a specific ordering of these events.</source>
					<target>Do not rely on a specific ordering of these events.</target>
				</segment>
			</unit>
			<unit id="222" translate="yes">
				<segment state="initial">
					<source>App resume</source>
					<target>App resume</target>
				</segment>
			</unit>
			<unit id="223" translate="yes">
				<segment state="initial">
					<source>A suspended app is resumed when the user switches to it or when it is the active app when the device comes out of a low power state.</source>
					<target>A suspended app is resumed when the user switches to it or when it is the active app when the device comes out of a low power state.</target>
				</segment>
			</unit>
			<unit id="224" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br224694)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>For an enumeration of the states that your app can be in when your app is resumed, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ApplicationExecutionState</pc></pc>.</source>
					<target>For an enumeration of the states that your app can be in when your app is resumed, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ApplicationExecutionState</pc></pc>.</target>
				</segment>
			</unit>
			<unit id="225" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>When an app is resumed from the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Suspended</pc> state, it enters the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Running</pc> state and continues from where it was when it was suspended.</source>
					<target>When an app is resumed from the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Suspended</pc> state, it enters the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Running</pc> state and continues from where it was when it was suspended.</target>
				</segment>
			</unit>
			<unit id="226" translate="yes">
				<segment state="initial">
					<source>No app data stored in memory is lost.</source>
					<target>No app data stored in memory is lost.</target>
				</segment>
			</unit>
			<unit id="227" translate="yes">
				<segment state="initial">
					<source>Therefore, most apps don't need to do anything when they are resumed.</source>
					<target>Therefore, most apps don't need to do anything when they are resumed.</target>
				</segment>
			</unit>
			<unit id="228" translate="yes">
				<segment state="initial">
					<source>However, the app could have been suspended for hours or even days.</source>
					<target>However, the app could have been suspended for hours or even days.</target>
				</segment>
			</unit>
			<unit id="229" translate="yes">
				<segment state="initial">
					<source>If your app has content or network connections that may have gone stale, these should be refreshed when the app resumes.</source>
					<target>If your app has content or network connections that may have gone stale, these should be refreshed when the app resumes.</target>
				</segment>
			</unit>
			<unit id="230" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br242339)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source>If an app registered an event handler for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Application.Resuming</pc></pc> event, it is called when the app is resumed from the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Suspended</pc> state.</source>
					<target>If an app registered an event handler for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Application.Resuming</pc></pc> event, it is called when the app is resumed from the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Suspended</pc> state.</target>
				</segment>
			</unit>
			<unit id="231" translate="yes">
				<segment state="initial">
					<source>You can refresh your app content and data using this event handler.</source>
					<target>You can refresh your app content and data using this event handler.</target>
				</segment>
			</unit>
			<unit id="232" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>If a suspended app is activated to participate in an app contract or extension, it receives the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Resuming</pc> event first, then the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Activated</pc> event.</source>
					<target>If a suspended app is activated to participate in an app contract or extension, it receives the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Resuming</pc> event first, then the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Activated</pc> event.</target>
				</segment>
			</unit>
			<unit id="233" translate="yes">
				<segment state="initial">
					<source>While en an app is suspended, it does not receive any of the network events that it registered to receive.</source>
					<target>While en an app is suspended, it does not receive any of the network events that it registered to receive.</target>
				</segment>
			</unit>
			<unit id="234" translate="yes">
				<segment state="initial">
					<source>These network events are not queued, they are simply missed.</source>
					<target>These network events are not queued, they are simply missed.</target>
				</segment>
			</unit>
			<unit id="235" translate="yes">
				<segment state="initial">
					<source>Therefore, your app should test the network status when it is resumed.</source>
					<target>Therefore, your app should test the network status when it is resumed.</target>
				</segment>
			</unit>
			<unit id="236" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">[</data>
					<data id="id4">](https://msdn.microsoft.com/library/windows/apps/br242339)</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  Because the <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">Resuming</pc></pc> event is not raised from the UI thread, a dispatcher must be used if the code in your resume handler communicates with your UI.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  Because the <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">Resuming</pc></pc> event is not raised from the UI thread, a dispatcher must be used if the code in your resume handler communicates with your UI.</target>
				</segment>
			</unit>
			<unit id="237" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/hh465088)</data>
				</originalData>
				<segment state="initial">
					<source>For guidelines, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Guidelines for app suspend and resume</pc>.</source>
					<target>For guidelines, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Guidelines for app suspend and resume</pc>.</target>
				</segment>
			</unit>
			<unit id="238" translate="yes">
				<segment state="initial">
					<source>App close</source>
					<target>App close</target>
				</segment>
			</unit>
			<unit id="239" translate="yes">
				<segment state="initial">
					<source>Generally, users don't need to close apps, they can let Windows manage them.</source>
					<target>Generally, users don't need to close apps, they can let Windows manage them.</target>
				</segment>
			</unit>
			<unit id="240" translate="yes">
				<segment state="initial">
					<source>However, users can choose to close an app using the close gesture or by pressing Alt+F4 on Windows or by using the task switcher on Windows Phone.</source>
					<target>However, users can choose to close an app using the close gesture or by pressing Alt+F4 on Windows or by using the task switcher on Windows Phone.</target>
				</segment>
			</unit>
			<unit id="241" translate="yes">
				<segment state="initial">
					<source>There's no special event to indicate that the user closed the app.</source>
					<target>There's no special event to indicate that the user closed the app.</target>
				</segment>
			</unit>
			<unit id="242" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>After an app has been closed by the user, it's first suspended and then terminated, and enters the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">NotRunning</pc> state.</source>
					<target>After an app has been closed by the user, it's first suspended and then terminated, and enters the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">NotRunning</pc> state.</target>
				</segment>
			</unit>
			<unit id="243" translate="yes">
				<segment state="initial">
					<source>In Windows 8.1 and later, after an app has been closed by the user, the app is removed from the screen and switch list but not explicitly terminated.</source>
					<target>In Windows 8.1 and later, after an app has been closed by the user, the app is removed from the screen and switch list but not explicitly terminated.</target>
				</segment>
			</unit>
			<unit id="244" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>If an app has registered an event handler for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Suspending</pc> event, it is called when the app is suspended.</source>
					<target>If an app has registered an event handler for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Suspending</pc> event, it is called when the app is suspended.</target>
				</segment>
			</unit>
			<unit id="245" translate="yes">
				<segment state="initial">
					<source>You can use this event handler to save relevant application and user data to persistent storage.</source>
					<target>You can use this event handler to save relevant application and user data to persistent storage.</target>
				</segment>
			</unit>
			<unit id="246" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Closed-by-user behavior:  </pc>If your app needs to do something different when it is closed by the user than when it is closed by Windows, you can use the activation event handler to determine whether the app was terminated by the user or by Windows.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Closed-by-user behavior:  </pc>If your app needs to do something different when it is closed by the user than when it is closed by Windows, you can use the activation event handler to determine whether the app was terminated by the user or by Windows.</target>
				</segment>
			</unit>
			<unit id="247" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/br224694)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>See the descriptions of <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ClosedByUser</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Terminated</pc> states in the reference for the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">ApplicationExecutionState</pc></pc> enumeration.</source>
					<target>See the descriptions of <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ClosedByUser</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Terminated</pc> states in the reference for the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">ApplicationExecutionState</pc></pc> enumeration.</target>
				</segment>
			</unit>
			<unit id="248" translate="yes">
				<segment state="initial">
					<source>We recommend that apps not close themselves programmatically unless absolutely necessary.</source>
					<target>We recommend that apps not close themselves programmatically unless absolutely necessary.</target>
				</segment>
			</unit>
			<unit id="249" translate="yes">
				<segment state="initial">
					<source>For example, if an app detects a memory leak, it can close itself to ensure the security of the user's personal data.</source>
					<target>For example, if an app detects a memory leak, it can close itself to ensure the security of the user's personal data.</target>
				</segment>
			</unit>
			<unit id="250" translate="yes">
				<segment state="initial">
					<source>When you close an app programmatically, the system treats it as an app crash.</source>
					<target>When you close an app programmatically, the system treats it as an app crash.</target>
				</segment>
			</unit>
			<unit id="251" translate="yes">
				<segment state="initial">
					<source>App crash</source>
					<target>App crash</target>
				</segment>
			</unit>
			<unit id="252" translate="yes">
				<segment state="initial">
					<source>The system crash experience is designed to get users back to what they were doing as quickly as possible.</source>
					<target>The system crash experience is designed to get users back to what they were doing as quickly as possible.</target>
				</segment>
			</unit>
			<unit id="253" translate="yes">
				<segment state="initial">
					<source>You shouldn't provide a warning dialog or other notification because that will delay the user.</source>
					<target>You shouldn't provide a warning dialog or other notification because that will delay the user.</target>
				</segment>
			</unit>
			<unit id="254" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](http://go.microsoft.com/fwlink/p/?LinkID=614828)</data>
				</originalData>
				<segment state="initial">
					<source>If your app crashes, stops responding, or generates an exception, a problem report is sent to Microsoft per the user's <pc dataRefEnd="id2" dataRefStart="id1" id="p1">feedback and diagnostics settings</pc>.</source>
					<target>If your app crashes, stops responding, or generates an exception, a problem report is sent to Microsoft per the user's <pc dataRefEnd="id2" dataRefStart="id1" id="p1">feedback and diagnostics settings</pc>.</target>
				</segment>
			</unit>
			<unit id="255" translate="yes">
				<segment state="initial">
					<source>Microsoft provides a subset of the error data in the problem report to you so that you can use it to improve your app.</source>
					<target>Microsoft provides a subset of the error data in the problem report to you so that you can use it to improve your app.</target>
				</segment>
			</unit>
			<unit id="256" translate="yes">
				<segment state="initial">
					<source>You'll be able to see this data in your app's Quality page in your Dashboard.</source>
					<target>You'll be able to see this data in your app's Quality page in your Dashboard.</target>
				</segment>
			</unit>
			<unit id="257" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br224694)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source>When the user activates an app after it crashes, its activation event handler receives an <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ApplicationExecutionState</pc></pc> value of <pc dataRefEnd="id6" dataRefStart="id5" id="p3">NotRunning</pc>, and should display its initial UI and data.</source>
					<target>When the user activates an app after it crashes, its activation event handler receives an <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ApplicationExecutionState</pc></pc> value of <pc dataRefEnd="id6" dataRefStart="id5" id="p3">NotRunning</pc>, and should display its initial UI and data.</target>
				</segment>
			</unit>
			<unit id="258" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/hh465088)</data>
				</originalData>
				<segment state="initial">
					<source>After a crash, don't routinely use the app data you would have used for <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Resuming</pc> with <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Suspended</pc> because that data could be corrupt; see <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Guidelines for app suspend and resume</pc>.</source>
					<target>After a crash, don't routinely use the app data you would have used for <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Resuming</pc> with <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Suspended</pc> because that data could be corrupt; see <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Guidelines for app suspend and resume</pc>.</target>
				</segment>
			</unit>
			<unit id="259" translate="yes">
				<segment state="initial">
					<source>App removal</source>
					<target>App removal</target>
				</segment>
			</unit>
			<unit id="260" translate="yes">
				<segment state="initial">
					<source>When a user deletes your app, the app is removed, along with all its local data.</source>
					<target>When a user deletes your app, the app is removed, along with all its local data.</target>
				</segment>
			</unit>
			<unit id="261" translate="yes">
				<segment state="initial">
					<source>Removing an app doesn't affect the user's data that was stored in common locations such as the Documents or Pictures libraries.</source>
					<target>Removing an app doesn't affect the user's data that was stored in common locations such as the Documents or Pictures libraries.</target>
				</segment>
			</unit>
			<unit id="262" translate="yes">
				<segment state="initial">
					<source>App lifecycle and the Visual Studio project templates</source>
					<target>App lifecycle and the Visual Studio project templates</target>
				</segment>
			</unit>
			<unit id="263" translate="yes">
				<segment state="initial">
					<source>The basic code that is relevant to the app lifecycle is provided in the starting Visual Studio project templates.</source>
					<target>The basic code that is relevant to the app lifecycle is provided in the starting Visual Studio project templates.</target>
				</segment>
			</unit>
			<unit id="264" translate="yes">
				<segment state="initial">
					<source>The basic app handles launch activation, provides a place for you to restore your app data, and displays the primary UI even before you've added any of your own code.</source>
					<target>The basic app handles launch activation, provides a place for you to restore your app data, and displays the primary UI even before you've added any of your own code.</target>
				</segment>
			</unit>
			<unit id="265" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/hh768232)</data>
				</originalData>
				<segment state="initial">
					<source>For more info, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">C#, VB, and C++ project templates for apps</pc>.</source>
					<target>For more info, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">C#, VB, and C++ project templates for apps</pc>.</target>
				</segment>
			</unit>
			<unit id="266" translate="yes">
				<segment state="initial">
					<source>Application lifecycle key APIs</source>
					<target>Application lifecycle key APIs</target>
				</segment>
			</unit>
			<unit id="267" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br224691)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.ApplicationModel</pc></pc> namespace</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.ApplicationModel</pc></pc> namespace</target>
				</segment>
			</unit>
			<unit id="268" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br224766)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.ApplicationModel.Activation</pc></pc> namespace</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.ApplicationModel.Activation</pc></pc> namespace</target>
				</segment>
			</unit>
			<unit id="269" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br205865)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.ApplicationModel.Core</pc></pc> namespace</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.ApplicationModel.Core</pc></pc> namespace</target>
				</segment>
			</unit>
			<unit id="270" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br242324)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.UI.Xaml.Application</pc></pc> class (XAML)</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.UI.Xaml.Application</pc></pc> class (XAML)</target>
				</segment>
			</unit>
			<unit id="271" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br209041)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.UI.Xaml.Window</pc></pc> class (XAML)</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.UI.Xaml.Window</pc></pc> class (XAML)</target>
				</segment>
			</unit>
			<unit id="272" translate="yes">
				<segment state="initial">
					<source>Note</source>
					<target>Note</target>
				</segment>
			</unit>
			<unit id="273" translate="yes">
				<segment state="initial">
					<source>This article is for Windows 10 developers writing Universal Windows Platform (UWP) apps.</source>
					<target>This article is for Windows 10 developers writing Universal Windows Platform (UWP) apps.</target>
				</segment>
			</unit>
			<unit id="274" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](http://go.microsoft.com/fwlink/p/?linkid=619132)</data>
				</originalData>
				<segment state="initial">
					<source>If you’re developing for Windows 8.x or Windows Phone 8.x, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archived documentation</pc>.</source>
					<target>If you’re developing for Windows 8.x or Windows Phone 8.x, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archived documentation</pc>.</target>
				</segment>
			</unit>
			<unit id="275" translate="yes">
				<segment state="initial">
					<source>Related topics</source>
					<target>Related topics</target>
				</segment>
			</unit>
			<unit id="276" translate="yes">
				<segment state="initial">
					<source>Guidelines for app suspend and resume</source>
					<target>Guidelines for app suspend and resume</target>
				</segment>
			</unit>
			<unit id="277" translate="yes">
				<segment state="initial">
					<source>Handle app prelaunch</source>
					<target>Handle app prelaunch</target>
				</segment>
			</unit>
			<unit id="278" translate="yes">
				<segment state="initial">
					<source>Handle app activation</source>
					<target>Handle app activation</target>
				</segment>
			</unit>
			<unit id="279" translate="yes">
				<segment state="initial">
					<source>Handle app suspend</source>
					<target>Handle app suspend</target>
				</segment>
			</unit>
			<unit id="280" translate="yes">
				<segment state="initial">
					<source>Handle app resume</source>
					<target>Handle app resume</target>
				</segment>
			</unit>
		</group>
	</file>
</xliff>