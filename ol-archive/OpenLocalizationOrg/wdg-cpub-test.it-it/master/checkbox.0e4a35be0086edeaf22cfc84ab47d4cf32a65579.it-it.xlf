<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="it-it" version="2.0" xml:space="preserve" xmlns="urn:oasis:names:tc:xliff:document:2.0">
	<file id="1">
		<mda:metadata>
			<mda:metaGroup>
				<mda:meta type="tool-id">mdxliff</mda:meta>
				<mda:meta type="tool-name">mdxliff</mda:meta>
				<mda:meta type="tool-version">1.0-00ddeee</mda:meta>
				<mda:meta type="tool-company">Microsoft</mda:meta>
			</mda:metaGroup>
		<mda:metaGroup><mda:meta type="olfilehash">1e3ac5a102a744603ac6c76b3d4caa45c82ba9d8</mda:meta><mda:meta type="olfilepath">wdg-cpub-test\ndolci2\controls-and-patterns\checkbox.md</mda:meta><mda:meta type="oltranslationpriority"></mda:meta><mda:meta type="oltranslationtype">Human Translation</mda:meta><mda:meta type="olskeletonhash">a0380ee71f3e81b2647899bc3deaa5923ffa5587</mda:meta><mda:meta type="olxliffhash">fe29ad5ba3e4990c3836d1095803a02da70f54db</mda:meta></mda:metaGroup></mda:metadata>
		<group id="content">
			<unit id="101" translate="yes">
				<segment state="initial">
					<source>Used to select or deselect action items.</source>
					<target>Used to select or deselect action items.</target>
				</segment>
			</unit>
			<unit id="102" translate="yes">
				<segment state="initial">
					<source>Can be used for a single list item or for multiple list items.</source>
					<target>Can be used for a single list item or for multiple list items.</target>
				</segment>
			</unit>
			<unit id="103" translate="yes">
				<segment state="initial">
					<source>Check boxes</source>
					<target>Check boxes</target>
				</segment>
			</unit>
			<unit id="104" translate="yes">
				<segment state="initial">
					<source>Check boxes</source>
					<target>Check boxes</target>
				</segment>
			</unit>
			<unit id="105" translate="yes">
				<segment state="initial">
					<source>A check box is used to select or deselect action items.</source>
					<target>A check box is used to select or deselect action items.</target>
				</segment>
			</unit>
			<unit id="106" translate="yes">
				<segment state="initial">
					<source>It can be used for a single item or for a list of multiple items that a user can choose from.</source>
					<target>It can be used for a single item or for a list of multiple items that a user can choose from.</target>
				</segment>
			</unit>
			<unit id="107" translate="yes">
				<segment state="initial">
					<source>The control has three selection states: unselected, selected, and indeterminate.</source>
					<target>The control has three selection states: unselected, selected, and indeterminate.</target>
				</segment>
			</unit>
			<unit id="108" translate="yes">
				<segment state="initial">
					<source>Use the indeterminate state when a collection of sub-choices have both unselected and selected states.</source>
					<target>Use the indeterminate state when a collection of sub-choices have both unselected and selected states.</target>
				</segment>
			</unit>
			<unit id="109" translate="yes">
				<segment state="initial">
					<source>Example of check box states</source>
					<target>Example of check box states</target>
				</segment>
			</unit>
			<unit id="110" translate="yes">
				<segment state="initial">
					<source>Important APIs</source>
					<target>Important APIs</target>
				</segment>
			</unit>
			<unit id="111" translate="yes">
				<segment state="initial">
					<source>CheckBox class</source>
					<target>CheckBox class</target>
				</segment>
			</unit>
			<unit id="112" translate="yes">
				<segment state="initial">
					<source>Checked event</source>
					<target>Checked event</target>
				</segment>
			</unit>
			<unit id="113" translate="yes">
				<segment state="initial">
					<source>IsChecked property</source>
					<target>IsChecked property</target>
				</segment>
			</unit>
			<unit id="114" translate="yes">
				<segment state="initial">
					<source>Is this the right control?</source>
					<target>Is this the right control?</target>
				</segment>
			</unit>
			<unit id="115" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>Use a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">single check box</pc> for a binary yes/no choice, such as with a "Remember me?"</source>
					<target>Use a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">single check box</pc> for a binary yes/no choice, such as with a "Remember me?"</target>
				</segment>
			</unit>
			<unit id="116" translate="yes">
				<segment state="initial">
					<source>login scenario or with a terms of service agreement.</source>
					<target>login scenario or with a terms of service agreement.</target>
				</segment>
			</unit>
			<unit id="117" translate="yes">
				<segment state="initial">
					<source>A single check box used for an individual choice</source>
					<target>A single check box used for an individual choice</target>
				</segment>
			</unit>
			<unit id="118" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>For a binary choice, the main difference between a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">check box</pc> and a <pc dataRefEnd="id4" dataRefStart="id3" id="p2">toggle switch</pc> is that the check box is for status and the toggle switch is for action.</source>
					<target>For a binary choice, the main difference between a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">check box</pc> and a <pc dataRefEnd="id4" dataRefStart="id3" id="p2">toggle switch</pc> is that the check box is for status and the toggle switch is for action.</target>
				</segment>
			</unit>
			<unit id="119" translate="yes">
				<segment state="initial">
					<source>You can delay committing a check box interaction (as part of a form submit, for example), while you should immediately commit a toggle switch interaction.</source>
					<target>You can delay committing a check box interaction (as part of a form submit, for example), while you should immediately commit a toggle switch interaction.</target>
				</segment>
			</unit>
			<unit id="120" translate="yes">
				<segment state="initial">
					<source>Also, only check boxes allow for multi-selection.</source>
					<target>Also, only check boxes allow for multi-selection.</target>
				</segment>
			</unit>
			<unit id="121" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>Use <pc dataRefEnd="id2" dataRefStart="id1" id="p1">multiple check boxes</pc> for multi-select scenarios in which a user chooses one or more items from a group of choices that are not mutually exclusive.</source>
					<target>Use <pc dataRefEnd="id2" dataRefStart="id1" id="p1">multiple check boxes</pc> for multi-select scenarios in which a user chooses one or more items from a group of choices that are not mutually exclusive.</target>
				</segment>
			</unit>
			<unit id="122" translate="yes">
				<segment state="initial">
					<source>Create a group of check boxes when users can select any combination of options.</source>
					<target>Create a group of check boxes when users can select any combination of options.</target>
				</segment>
			</unit>
			<unit id="123" translate="yes">
				<segment state="initial">
					<source>Selecting multiple options with check boxes</source>
					<target>Selecting multiple options with check boxes</target>
				</segment>
			</unit>
			<unit id="124" translate="yes">
				<segment state="initial">
					<source>When options can be grouped, you can use an indeterminate check box to represent the whole group.</source>
					<target>When options can be grouped, you can use an indeterminate check box to represent the whole group.</target>
				</segment>
			</unit>
			<unit id="125" translate="yes">
				<segment state="initial">
					<source>Use the check box's indeterminate state when a user selects some, but not all, sub-items in the group.</source>
					<target>Use the check box's indeterminate state when a user selects some, but not all, sub-items in the group.</target>
				</segment>
			</unit>
			<unit id="126" translate="yes">
				<segment state="initial">
					<source>Check boxes used to show a mixed choice</source>
					<target>Check boxes used to show a mixed choice</target>
				</segment>
			</unit>
			<unit id="127" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Both <pc dataRefEnd="id2" dataRefStart="id1" id="p1">check box</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">radio button</pc> controls let the user select from a list of options.</source>
					<target>Both <pc dataRefEnd="id2" dataRefStart="id1" id="p1">check box</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">radio button</pc> controls let the user select from a list of options.</target>
				</segment>
			</unit>
			<unit id="128" translate="yes">
				<segment state="initial">
					<source>Check boxes let the user select a combination of options.</source>
					<target>Check boxes let the user select a combination of options.</target>
				</segment>
			</unit>
			<unit id="129" translate="yes">
				<segment state="initial">
					<source>In contrast, radio buttons let the user make a single choice from mutually exclusive options.</source>
					<target>In contrast, radio buttons let the user make a single choice from mutually exclusive options.</target>
				</segment>
			</unit>
			<unit id="130" translate="yes">
				<segment state="initial">
					<source>When there is more than one option but only one can be selected, use a radio button instead.</source>
					<target>When there is more than one option but only one can be selected, use a radio button instead.</target>
				</segment>
			</unit>
			<unit id="131" translate="yes">
				<segment state="initial">
					<source>Examples</source>
					<target>Examples</target>
				</segment>
			</unit>
			<unit id="132" translate="yes">
				<segment state="initial">
					<source>A check box in a dialog in the Microsoft Edge browser.</source>
					<target>A check box in a dialog in the Microsoft Edge browser.</target>
				</segment>
			</unit>
			<unit id="133" translate="yes">
				<segment state="initial">
					<source>A check box in a dialog in the Microsoft Edge browser</source>
					<target>A check box in a dialog in the Microsoft Edge browser</target>
				</segment>
			</unit>
			<unit id="134" translate="yes">
				<segment state="initial">
					<source>Check boxes in the Alarms &amp; Clock app in Windows.</source>
					<target>Check boxes in the Alarms &amp; Clock app in Windows.</target>
				</segment>
			</unit>
			<unit id="135" translate="yes">
				<segment state="initial">
					<source>Check boxes in the Alarms &amp; Clock app in Windows</source>
					<target>Check boxes in the Alarms &amp; Clock app in Windows</target>
				</segment>
			</unit>
			<unit id="136" translate="yes">
				<segment state="initial">
					<source>Create a checkbox</source>
					<target>Create a checkbox</target>
				</segment>
			</unit>
			<unit id="137" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.contentcontrol.content.aspx)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>To assign a label to the checkbox, set the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Content</pc></pc> property.</source>
					<target>To assign a label to the checkbox, set the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Content</pc></pc> property.</target>
				</segment>
			</unit>
			<unit id="138" translate="yes">
				<segment state="initial">
					<source>The label displays next to the checkbox.</source>
					<target>The label displays next to the checkbox.</target>
				</segment>
			</unit>
			<unit id="139" translate="yes">
				<segment state="initial">
					<source>This XAML creates a single check box that is used to agree to terms of service before a form can be submitted.</source>
					<target>This XAML creates a single check box that is used to agree to terms of service before a form can be submitted.</target>
				</segment>
			</unit>
			<unit id="140" translate="yes">
				<segment state="initial">
					<source>Here's the same check box created in code.</source>
					<target>Here's the same check box created in code.</target>
				</segment>
			</unit>
			<unit id="141" translate="yes">
				<segment state="initial">
					<source>Bind to IsChecked</source>
					<target>Bind to IsChecked</target>
				</segment>
			</unit>
			<unit id="142" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.primitives.togglebutton.ischecked.aspx)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">IsChecked</pc></pc> property to determine whether the check box is checked or cleared.</source>
					<target>Use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">IsChecked</pc></pc> property to determine whether the check box is checked or cleared.</target>
				</segment>
			</unit>
			<unit id="143" translate="yes">
				<segment state="initial">
					<source>You can bind the value of the IsChecked property to another binary value.</source>
					<target>You can bind the value of the IsChecked property to another binary value.</target>
				</segment>
			</unit>
			<unit id="144" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/b3h38hb0.aspx)</data>
				</originalData>
				<segment state="initial">
					<source>However, because IsChecked is a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">nullable</pc> boolean value, you must use a value converter to bind it to a boolean value.</source>
					<target>However, because IsChecked is a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">nullable</pc> boolean value, you must use a value converter to bind it to a boolean value.</target>
				</segment>
			</unit>
			<unit id="145" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">[</data>
					<data id="id4">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.control.isenabled.aspx)</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source>In this example, the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">IsChecked</pc> property of the check box to agree to terms of service is bound to the <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">IsEnabled</pc></pc> property of a Submit button.</source>
					<target>In this example, the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">IsChecked</pc> property of the check box to agree to terms of service is bound to the <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">IsEnabled</pc></pc> property of a Submit button.</target>
				</segment>
			</unit>
			<unit id="146" translate="yes">
				<segment state="initial">
					<source>The Submit button is enabled only if the terms of service are agreed to.</source>
					<target>The Submit button is enabled only if the terms of service are agreed to.</target>
				</segment>
			</unit>
			<unit id="147" translate="yes">
				<originalData>
					<data id="id1">&amp;nbsp;&amp;nbsp;</data>
				</originalData>
				<segment state="initial">
					<source>Note<ph dataRef="id1" id="ph1" />We only show the relevant code here.</source>
					<target>Note<ph dataRef="id1" id="ph1" />We only show the relevant code here.</target>
				</segment>
			</unit>
			<unit id="148" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](../data-binding/data-binding-quickstart.md)</data>
				</originalData>
				<segment state="initial">
					<source>For more info about data binding and value converters, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Data binding overview</pc>.</source>
					<target>For more info about data binding and value converters, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Data binding overview</pc>.</target>
				</segment>
			</unit>
			<unit id="149" translate="yes">
				<segment state="initial">
					<source>Handle Click and Checked events</source>
					<target>Handle Click and Checked events</target>
				</segment>
			</unit>
			<unit id="150" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.primitives.buttonbase.click.aspx)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.primitives.togglebutton.checked.aspx)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
					<data id="id9">[</data>
					<data id="id10">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.primitives.togglebutton.unchecked.aspx)</data>
					<data id="id11">**</data>
					<data id="id12">**</data>
				</originalData>
				<segment state="initial">
					<source>To perform an action when the check box state changes, you can handle either the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Click</pc></pc> event, or the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Checked</pc></pc> and <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">Unchecked</pc></pc> events.</source>
					<target>To perform an action when the check box state changes, you can handle either the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Click</pc></pc> event, or the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Checked</pc></pc> and <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">Unchecked</pc></pc> events.</target>
				</segment>
			</unit>
			<unit id="151" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Click</pc> event occurs whenever the checked state changes.</source>
					<target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Click</pc> event occurs whenever the checked state changes.</target>
				</segment>
			</unit>
			<unit id="152" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>If you handle the Click event, use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">IsChecked</pc> property to determine the state of the check box.</source>
					<target>If you handle the Click event, use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">IsChecked</pc> property to determine the state of the check box.</target>
				</segment>
			</unit>
			<unit id="153" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Checked</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Unchecked</pc> events occur independently.</source>
					<target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Checked</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Unchecked</pc> events occur independently.</target>
				</segment>
			</unit>
			<unit id="154" translate="yes">
				<segment state="initial">
					<source>If you handle these events, you should handle both of them to repsond to state changes in the check box.</source>
					<target>If you handle these events, you should handle both of them to repsond to state changes in the check box.</target>
				</segment>
			</unit>
			<unit id="155" translate="yes">
				<segment state="initial">
					<source>In the following examples, we show handling the Click event, and the Checked and Unchecked events.</source>
					<target>In the following examples, we show handling the Click event, and the Checked and Unchecked events.</target>
				</segment>
			</unit>
			<unit id="156" translate="yes">
				<segment state="initial">
					<source>Multiple checkboxes can share the same event handler.</source>
					<target>Multiple checkboxes can share the same event handler.</target>
				</segment>
			</unit>
			<unit id="157" translate="yes">
				<segment state="initial">
					<source>This example creates four checkboxes for selecting pizza toppings.</source>
					<target>This example creates four checkboxes for selecting pizza toppings.</target>
				</segment>
			</unit>
			<unit id="158" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>The four checkboxes share the same <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Click</pc> event handler to update the list of selected toppings.</source>
					<target>The four checkboxes share the same <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Click</pc> event handler to update the list of selected toppings.</target>
				</segment>
			</unit>
			<unit id="159" translate="yes">
				<segment state="initial">
					<source>Here's the event handler for the Click event.</source>
					<target>Here's the event handler for the Click event.</target>
				</segment>
			</unit>
			<unit id="160" translate="yes">
				<segment state="initial">
					<source>Every time a checkbox is clicked, it examines the checkboxes to see which ones are checked and update list of selected toppings.</source>
					<target>Every time a checkbox is clicked, it examines the checkboxes to see which ones are checked and update list of selected toppings.</target>
				</segment>
			</unit>
			<unit id="161" translate="yes">
				<segment state="initial">
					<source>Use the indeterminate state</source>
					<target>Use the indeterminate state</target>
				</segment>
			</unit>
			<unit id="162" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.primitives.togglebutton.aspx)</data>
				</originalData>
				<segment state="initial">
					<source>The CheckBox control inherits from <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ToggleButton</pc> and can have three states:</source>
					<target>The CheckBox control inherits from <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ToggleButton</pc> and can have three states:</target>
				</segment>
			</unit>
			<unit id="163" translate="yes">
				<segment state="initial">
					<source>State</source>
					<target>State</target>
				</segment>
			</unit>
			<unit id="164" translate="yes">
				<segment state="initial">
					<source>Property</source>
					<target>Property</target>
				</segment>
			</unit>
			<unit id="165" translate="yes">
				<segment state="initial">
					<source>Value</source>
					<target>Value</target>
				</segment>
			</unit>
			<unit id="166" translate="yes">
				<segment state="initial">
					<source>checked</source>
					<target>checked</target>
				</segment>
			</unit>
			<unit id="167" translate="yes">
				<segment state="initial">
					<source>IsChecked</source>
					<target>IsChecked</target>
				</segment>
			</unit>
			<unit id="168" translate="yes">
				<segment state="initial">
					<source>true</source>
					<target>true</target>
				</segment>
			</unit>
			<unit id="169" translate="yes">
				<segment state="initial">
					<source>unchecked</source>
					<target>unchecked</target>
				</segment>
			</unit>
			<unit id="170" translate="yes">
				<segment state="initial">
					<source>IsChecked</source>
					<target>IsChecked</target>
				</segment>
			</unit>
			<unit id="171" translate="yes">
				<segment state="initial">
					<source>false</source>
					<target>false</target>
				</segment>
			</unit>
			<unit id="172" translate="yes">
				<segment state="initial">
					<source>indeterminate</source>
					<target>indeterminate</target>
				</segment>
			</unit>
			<unit id="173" translate="yes">
				<segment state="initial">
					<source>IsChecked</source>
					<target>IsChecked</target>
				</segment>
			</unit>
			<unit id="174" translate="yes">
				<segment state="initial">
					<source>null</source>
					<target>null</target>
				</segment>
			</unit>
			<unit id="175" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.primitives.togglebutton.isthreestate.aspx)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source>For the check box to report the indeterminate state, you must set the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">IsThreeState</pc></pc> property to <pc dataRefEnd="id6" dataRefStart="id5" id="p3">true</pc>.</source>
					<target>For the check box to report the indeterminate state, you must set the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">IsThreeState</pc></pc> property to <pc dataRefEnd="id6" dataRefStart="id5" id="p3">true</pc>.</target>
				</segment>
			</unit>
			<unit id="176" translate="yes">
				<segment state="initial">
					<source>When options can be grouped, you can use an indeterminate check box to represent the whole group.</source>
					<target>When options can be grouped, you can use an indeterminate check box to represent the whole group.</target>
				</segment>
			</unit>
			<unit id="177" translate="yes">
				<segment state="initial">
					<source>Use the check box's indeterminate state when a user selects some, but not all, sub-items in the group.</source>
					<target>Use the check box's indeterminate state when a user selects some, but not all, sub-items in the group.</target>
				</segment>
			</unit>
			<unit id="178" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>In the following example, the "Select all" checkbox has its IsThreeState property set to <pc dataRefEnd="id2" dataRefStart="id1" id="p1">true</pc>.</source>
					<target>In the following example, the "Select all" checkbox has its IsThreeState property set to <pc dataRefEnd="id2" dataRefStart="id1" id="p1">true</pc>.</target>
				</segment>
			</unit>
			<unit id="179" translate="yes">
				<segment state="initial">
					<source>The "Select all" checkbox is checked if all child elements are checked, unchecked if all child elements are unchecked, and indeterminate otherwise.</source>
					<target>The "Select all" checkbox is checked if all child elements are checked, unchecked if all child elements are unchecked, and indeterminate otherwise.</target>
				</segment>
			</unit>
			<unit id="180" translate="yes">
				<segment state="initial">
					<source>Recommendations</source>
					<target>Recommendations</target>
				</segment>
			</unit>
			<unit id="181" translate="yes">
				<segment state="initial">
					<source>Verify that the purpose and current state of the check box is clear.</source>
					<target>Verify that the purpose and current state of the check box is clear.</target>
				</segment>
			</unit>
			<unit id="182" translate="yes">
				<segment state="initial">
					<source>Limit check box text content to no more than two lines.</source>
					<target>Limit check box text content to no more than two lines.</target>
				</segment>
			</unit>
			<unit id="183" translate="yes">
				<segment state="initial">
					<source>Word the checkbox label as a statement that the check mark makes true and the absence of a check mark makes false.</source>
					<target>Word the checkbox label as a statement that the check mark makes true and the absence of a check mark makes false.</target>
				</segment>
			</unit>
			<unit id="184" translate="yes">
				<segment state="initial">
					<source>Use the default font unless your brand guidelines tell you to use another.</source>
					<target>Use the default font unless your brand guidelines tell you to use another.</target>
				</segment>
			</unit>
			<unit id="185" translate="yes">
				<segment state="initial">
					<source>If the text content is dynamic, consider how the control will resize and what will happen to visuals around it.</source>
					<target>If the text content is dynamic, consider how the control will resize and what will happen to visuals around it.</target>
				</segment>
			</unit>
			<unit id="186" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](radio-button.md)</data>
				</originalData>
				<segment state="initial">
					<source>If there are two or more mutually exclusive options from which to choose, consider using <pc dataRefEnd="id2" dataRefStart="id1" id="p1">radio buttons</pc>.</source>
					<target>If there are two or more mutually exclusive options from which to choose, consider using <pc dataRefEnd="id2" dataRefStart="id1" id="p1">radio buttons</pc>.</target>
				</segment>
			</unit>
			<unit id="187" translate="yes">
				<segment state="initial">
					<source>Don't put two check box groups next to each other.</source>
					<target>Don't put two check box groups next to each other.</target>
				</segment>
			</unit>
			<unit id="188" translate="yes">
				<segment state="initial">
					<source>Use group labels to separate the groups.</source>
					<target>Use group labels to separate the groups.</target>
				</segment>
			</unit>
			<unit id="189" translate="yes">
				<segment state="initial">
					<source>Don't use a check box as an on/off control or to perform a command; instead, use a toggle switch.</source>
					<target>Don't use a check box as an on/off control or to perform a command; instead, use a toggle switch.</target>
				</segment>
			</unit>
			<unit id="190" translate="yes">
				<segment state="initial">
					<source>Don't use a check box to display other controls, such as a dialog box.</source>
					<target>Don't use a check box to display other controls, such as a dialog box.</target>
				</segment>
			</unit>
			<unit id="191" translate="yes">
				<segment state="initial">
					<source>Use the indeterminate state to indicate that an option is set for some, but not all, sub-choices.</source>
					<target>Use the indeterminate state to indicate that an option is set for some, but not all, sub-choices.</target>
				</segment>
			</unit>
			<unit id="192" translate="yes">
				<segment state="initial">
					<source>When using indeterminate state, use subordinate check boxes to show which options are selected and which are not.</source>
					<target>When using indeterminate state, use subordinate check boxes to show which options are selected and which are not.</target>
				</segment>
			</unit>
			<unit id="193" translate="yes">
				<segment state="initial">
					<source>Design the UI so that the user can get see the sub-choices.</source>
					<target>Design the UI so that the user can get see the sub-choices.</target>
				</segment>
			</unit>
			<unit id="194" translate="yes">
				<segment state="initial">
					<source>Don't use the indeterminate state to represent a third state.</source>
					<target>Don't use the indeterminate state to represent a third state.</target>
				</segment>
			</unit>
			<unit id="195" translate="yes">
				<segment state="initial">
					<source>The indeterminate state is used to indicate that an option is set for some, but not all, sub-choices.</source>
					<target>The indeterminate state is used to indicate that an option is set for some, but not all, sub-choices.</target>
				</segment>
			</unit>
			<unit id="196" translate="yes">
				<segment state="initial">
					<source>So, don't allow users to set an indeterminate state directly.</source>
					<target>So, don't allow users to set an indeterminate state directly.</target>
				</segment>
			</unit>
			<unit id="197" translate="yes">
				<segment state="initial">
					<source>For an example of what not to do, this check box uses the indeterminate state to indicate medium spiciness:</source>
					<target>For an example of what not to do, this check box uses the indeterminate state to indicate medium spiciness:</target>
				</segment>
			</unit>
			<unit id="198" translate="yes">
				<segment state="initial">
					<source>An indeterminate check box</source>
					<target>An indeterminate check box</target>
				</segment>
			</unit>
			<unit id="199" translate="yes">
				<segment state="initial">
					<source>Instead, use a radio button group that has three options: Not spicy, Spicy, and Extra spicy.</source>
					<target>Instead, use a radio button group that has three options: Not spicy, Spicy, and Extra spicy.</target>
				</segment>
			</unit>
			<unit id="200" translate="yes">
				<segment state="initial">
					<source>Radio button group with three options: Not spicy, Spicy, and Extra spicy</source>
					<target>Radio button group with three options: Not spicy, Spicy, and Extra spicy</target>
				</segment>
			</unit>
			<unit id="201" translate="yes">
				<segment state="initial">
					<source>Related articles</source>
					<target>Related articles</target>
				</segment>
			</unit>
			<unit id="202" translate="yes">
				<segment state="initial">
					<source>CheckBox class</source>
					<target>CheckBox class</target>
				</segment>
			</unit>
		</group>
	</file>
</xliff>