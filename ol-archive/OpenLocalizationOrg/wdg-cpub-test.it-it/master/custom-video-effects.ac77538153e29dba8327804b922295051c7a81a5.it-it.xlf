<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="it-it" version="2.0" xml:space="preserve" xmlns="urn:oasis:names:tc:xliff:document:2.0">
	<file id="1">
		<mda:metadata>
			<mda:metaGroup>
				<mda:meta type="tool-id">mdxliff</mda:meta>
				<mda:meta type="tool-name">mdxliff</mda:meta>
				<mda:meta type="tool-version">1.0-00ddeee</mda:meta>
				<mda:meta type="tool-company">Microsoft</mda:meta>
			</mda:metaGroup>
		<mda:metaGroup><mda:meta type="olfilehash">d6ad5b2488f79787c07b4057b34fcbfd3a4df3c3</mda:meta><mda:meta type="olfilepath">wdg-cpub-test\ndolciTestTDReach\audio-video-camera\custom-video-effects.md</mda:meta><mda:meta type="oltranslationpriority"></mda:meta><mda:meta type="oltranslationtype">Human Translation</mda:meta><mda:meta type="olskeletonhash">5d539c1ac713a91b5923dbdcaa5a1d3f57a38f89</mda:meta><mda:meta type="olxliffhash">8693162d0cf4653999b7d9662c8e2196d2ed1768</mda:meta></mda:metaGroup></mda:metadata>
		<group id="content">
			<unit id="101" translate="yes">
				<segment state="initial">
					<source>This article describes how to create a Windows Runtime Compontent that implements the IBasicVideoEffect interface to allows you to create custom effects for video streams.</source>
					<target>This article describes how to create a Windows Runtime Compontent that implements the IBasicVideoEffect interface to allows you to create custom effects for video streams.</target>
				</segment>
			</unit>
			<unit id="102" translate="yes">
				<segment state="initial">
					<source>Custom video effects</source>
					<target>Custom video effects</target>
				</segment>
			</unit>
			<unit id="103" translate="yes">
				<segment state="initial">
					<source>Custom video effects</source>
					<target>Custom video effects</target>
				</segment>
			</unit>
			<unit id="104" translate="yes">
				<segment state="initial">
					<source>\[ Updated for UWP apps on Windows 10.</source>
					<target>\[ Updated for UWP apps on Windows 10.</target>
				</segment>
			</unit>
			<unit id="105" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](http://go.microsoft.com/fwlink/p/?linkid=619132)</data>
				</originalData>
				<segment state="initial">
					<source>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</source>
					<target>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</target>
				</segment>
			</unit>
			<unit id="106" translate="yes">
				<segment state="initial">
					<source>\[Some information relates to pre-released product which may be substantially modified before it's commercially released.</source>
					<target>\[Some information relates to pre-released product which may be substantially modified before it's commercially released.</target>
				</segment>
			</unit>
			<unit id="107" translate="yes">
				<segment state="initial">
					<source>Microsoft makes no warranties, express or implied, with respect to the information provided here.\]</source>
					<target>Microsoft makes no warranties, express or implied, with respect to the information provided here.\]</target>
				</segment>
			</unit>
			<unit id="108" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn764788)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>This article describes how to create a Windows Runtime Compontent that implements the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">IBasicVideoEffect</pc></pc> interface to allows you to create custom effects for video streams.</source>
					<target>This article describes how to create a Windows Runtime Compontent that implements the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">IBasicVideoEffect</pc></pc> interface to allows you to create custom effects for video streams.</target>
				</segment>
			</unit>
			<unit id="109" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br241124)</data>
					<data id="id3">[</data>
					<data id="id4">](https://msdn.microsoft.com/library/windows/apps/dn652646)</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source>Custom effects can be used with several different Windows Runtime APIs including <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaCapture</pc>, which provides access to a device's camera, and <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">MediaComposition</pc></pc>, which allows you to create complex compositions out of media clips.</source>
					<target>Custom effects can be used with several different Windows Runtime APIs including <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaCapture</pc>, which provides access to a device's camera, and <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">MediaComposition</pc></pc>, which allows you to create complex compositions out of media clips.</target>
				</segment>
			</unit>
			<unit id="110" translate="yes">
				<segment state="initial">
					<source>Add a custom effect to your app</source>
					<target>Add a custom effect to your app</target>
				</segment>
			</unit>
			<unit id="111" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn764788)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>A custom video effect is defined in a class that implements the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">IBasicVideoEffect</pc></pc> interface.</source>
					<target>A custom video effect is defined in a class that implements the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">IBasicVideoEffect</pc></pc> interface.</target>
				</segment>
			</unit>
			<unit id="112" translate="yes">
				<segment state="initial">
					<source>This class can't be included directly in your app's project.</source>
					<target>This class can't be included directly in your app's project.</target>
				</segment>
			</unit>
			<unit id="113" translate="yes">
				<segment state="initial">
					<source>Instead, you must use a Windows Runtime Component to host your video effect class.</source>
					<target>Instead, you must use a Windows Runtime Component to host your video effect class.</target>
				</segment>
			</unit>
			<unit id="114" translate="yes">
				<segment state="initial">
					<source>Add a Windows Runtime Component for your video effect</source>
					<target>Add a Windows Runtime Component for your video effect</target>
				</segment>
			</unit>
			<unit id="115" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">&amp;gt;</data>
				</originalData>
				<segment state="initial">
					<source>In Microsoft Visual Studio, with your solution open, go to the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">File</pc> menu and select <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Add-<ph dataRef="id5" id="ph1" />New Project....</pc></source>
					<target>In Microsoft Visual Studio, with your solution open, go to the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">File</pc> menu and select <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Add-<ph dataRef="id5" id="ph1" />New Project....</pc></target>
				</segment>
			</unit>
			<unit id="116" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>Select the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Windows Runtime Component (Universal Windows)</pc> project type.</source>
					<target>Select the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Windows Runtime Component (Universal Windows)</pc> project type.</target>
				</segment>
			</unit>
			<unit id="117" translate="yes">
				<segment state="initial">
					<source>For this example, name the project "VideoEffectComponent".</source>
					<target>For this example, name the project "VideoEffectComponent".</target>
				</segment>
			</unit>
			<unit id="118" translate="yes">
				<segment state="initial">
					<source>This name will be referenced in code later.</source>
					<target>This name will be referenced in code later.</target>
				</segment>
			</unit>
			<unit id="119" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>Click <pc dataRefEnd="id2" dataRefStart="id1" id="p1">OK</pc>.</source>
					<target>Click <pc dataRefEnd="id2" dataRefStart="id1" id="p1">OK</pc>.</target>
				</segment>
			</unit>
			<unit id="120" translate="yes">
				<segment state="initial">
					<source>The project template creates a class called Class1.cs.</source>
					<target>The project template creates a class called Class1.cs.</target>
				</segment>
			</unit>
			<unit id="121" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>In <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Solution Explorer</pc>, right-click the icon for Class1.cs and select <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Rename</pc>.</source>
					<target>In <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Solution Explorer</pc>, right-click the icon for Class1.cs and select <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Rename</pc>.</target>
				</segment>
			</unit>
			<unit id="122" translate="yes">
				<segment state="initial">
					<source>Rename the file to "ExampleVideoEffect.cs".</source>
					<target>Rename the file to "ExampleVideoEffect.cs".</target>
				</segment>
			</unit>
			<unit id="123" translate="yes">
				<segment state="initial">
					<source>Visual Studio will show a prompt asking if you want to update all references to the new name.</source>
					<target>Visual Studio will show a prompt asking if you want to update all references to the new name.</target>
				</segment>
			</unit>
			<unit id="124" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>Click <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Yes</pc>.</source>
					<target>Click <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Yes</pc>.</target>
				</segment>
			</unit>
			<unit id="125" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn764788)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Open "ExampleVideoEffect.cs" and update the class definition to implement the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">IBasicVideoEffect</pc></pc> interface.</source>
					<target>Open "ExampleVideoEffect.cs" and update the class definition to implement the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">IBasicVideoEffect</pc></pc> interface.</target>
				</segment>
			</unit>
			<unit id="126" translate="yes">
				<segment state="initial">
					<source>ImplementIBasicVideoEffect</source>
					<target>ImplementIBasicVideoEffect</target>
				</segment>
			</unit>
			<unit id="127" translate="yes">
				<segment state="initial">
					<source>You need to include the following namespaces in your effect class file in order to access all of the types used in the examples in this article.</source>
					<target>You need to include the following namespaces in your effect class file in order to access all of the types used in the examples in this article.</target>
				</segment>
			</unit>
			<unit id="128" translate="yes">
				<segment state="initial">
					<source>EffectUsing</source>
					<target>EffectUsing</target>
				</segment>
			</unit>
			<unit id="129" translate="yes">
				<segment state="initial">
					<source>Implement the IBasicVideoEffect interface using software processing</source>
					<target>Implement the IBasicVideoEffect interface using software processing</target>
				</segment>
			</unit>
			<unit id="130" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn764788)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Your video effect must implement all of the methods and properties of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">IBasicVideoEffect</pc></pc> interface.</source>
					<target>Your video effect must implement all of the methods and properties of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">IBasicVideoEffect</pc></pc> interface.</target>
				</segment>
			</unit>
			<unit id="131" translate="yes">
				<segment state="initial">
					<source>This section walks you through a simple implementation of this interface that uses software processing.</source>
					<target>This section walks you through a simple implementation of this interface that uses software processing.</target>
				</segment>
			</unit>
			<unit id="132" translate="yes">
				<segment state="initial">
					<source>Close method</source>
					<target>Close method</target>
				</segment>
			</unit>
			<unit id="133" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn764789)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>The system will call the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Close</pc></pc> method on your class when the effect should shut down.</source>
					<target>The system will call the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Close</pc></pc> method on your class when the effect should shut down.</target>
				</segment>
			</unit>
			<unit id="134" translate="yes">
				<segment state="initial">
					<source>You should use this method to dispose of any resources you have created.</source>
					<target>You should use this method to dispose of any resources you have created.</target>
				</segment>
			</unit>
			<unit id="135" translate="yes">
				<segment state="initial">
					<source>The argument to the method is a MediaEffectClosedReason that lets you know whether the effect was closed normally, if an error occurred, or if the effect does not support the required encoding format.</source>
					<target>The argument to the method is a MediaEffectClosedReason that lets you know whether the effect was closed normally, if an error occurred, or if the effect does not support the required encoding format.</target>
				</segment>
			</unit>
			<unit id="136" translate="yes">
				<segment state="initial">
					<source>Close</source>
					<target>Close</target>
				</segment>
			</unit>
			<unit id="137" translate="yes">
				<segment state="initial">
					<source>DiscardQueuedFrames method</source>
					<target>DiscardQueuedFrames method</target>
				</segment>
			</unit>
			<unit id="138" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn764790)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">DiscardQueuedFrames</pc></pc> method is called when your effect should reset.</source>
					<target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">DiscardQueuedFrames</pc></pc> method is called when your effect should reset.</target>
				</segment>
			</unit>
			<unit id="139" translate="yes">
				<segment state="initial">
					<source>A typical scenario for this is if your effect stores previously processed frames to use in processing the current frame.</source>
					<target>A typical scenario for this is if your effect stores previously processed frames to use in processing the current frame.</target>
				</segment>
			</unit>
			<unit id="140" translate="yes">
				<segment state="initial">
					<source>When this method is called, you should dispose of the set of previous frames you have saved.</source>
					<target>When this method is called, you should dispose of the set of previous frames you have saved.</target>
				</segment>
			</unit>
			<unit id="141" translate="yes">
				<segment state="initial">
					<source>Although this method can be used to reset any state related to previous frames, not only accumulated video frames.</source>
					<target>Although this method can be used to reset any state related to previous frames, not only accumulated video frames.</target>
				</segment>
			</unit>
			<unit id="142" translate="yes">
				<segment state="initial">
					<source>DiscardQueuedFrames</source>
					<target>DiscardQueuedFrames</target>
				</segment>
			</unit>
			<unit id="143" translate="yes">
				<segment state="initial">
					<source>IsReadOnly property</source>
					<target>IsReadOnly property</target>
				</segment>
			</unit>
			<unit id="144" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn764792)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">IsReadOnly</pc></pc> property lets the system know if your effect will write to the output of the effect.</source>
					<target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">IsReadOnly</pc></pc> property lets the system know if your effect will write to the output of the effect.</target>
				</segment>
			</unit>
			<unit id="145" translate="yes">
				<segment state="initial">
					<source>If your app does not modify the video frames - for example, an effect that only performs analysis of the video frames - then you should set this property to true, which will cause the system to efficiently copy the frame input to the frame output for you.</source>
					<target>If your app does not modify the video frames - for example, an effect that only performs analysis of the video frames - then you should set this property to true, which will cause the system to efficiently copy the frame input to the frame output for you.</target>
				</segment>
			</unit>
			<unit id="146" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">[</data>
					<data id="id4">](https://msdn.microsoft.com/library/windows/apps/dn764792)</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
					<data id="id7">[</data>
					<data id="id8">](https://msdn.microsoft.com/library/windows/apps/dn764794)</data>
					<data id="id9">**</data>
					<data id="id10">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Tip</pc>  When the <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">IsReadOnly</pc></pc> property is set to true, the system copies the input frame to the output frame before <pc dataRefEnd="id8" dataRefStart="id7" id="p4"><pc dataRefEnd="id10" dataRefStart="id9" id="p5">ProcessFrame</pc></pc> is called.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Tip</pc>  When the <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">IsReadOnly</pc></pc> property is set to true, the system copies the input frame to the output frame before <pc dataRefEnd="id8" dataRefStart="id7" id="p4"><pc dataRefEnd="id10" dataRefStart="id9" id="p5">ProcessFrame</pc></pc> is called.</target>
				</segment>
			</unit>
			<unit id="147" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Setting the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">IsReadOnly</pc> property to true does not restrict you from writing to the effect's output frames in <pc dataRefEnd="id4" dataRefStart="id3" id="p2">ProcessFrame</pc>.</source>
					<target>Setting the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">IsReadOnly</pc> property to true does not restrict you from writing to the effect's output frames in <pc dataRefEnd="id4" dataRefStart="id3" id="p2">ProcessFrame</pc>.</target>
				</segment>
			</unit>
			<unit id="148" translate="yes">
				<segment state="initial">
					<source>IsReadOnly</source>
					<target>IsReadOnly</target>
				</segment>
			</unit>
			<unit id="149" translate="yes">
				<segment state="initial">
					<source>SetEncodingProperties method</source>
					<target>SetEncodingProperties method</target>
				</segment>
			</unit>
			<unit id="150" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn919884)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>The system calls <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SetEncodingProperties</pc></pc> on your effect to let you know the encoding properties for the video stream upon which the effect is operating.</source>
					<target>The system calls <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SetEncodingProperties</pc></pc> on your effect to let you know the encoding properties for the video stream upon which the effect is operating.</target>
				</segment>
			</unit>
			<unit id="151" translate="yes">
				<segment state="initial">
					<source>This method also provides a reference to the Direct3D device used for hardware rendering.</source>
					<target>This method also provides a reference to the Direct3D device used for hardware rendering.</target>
				</segment>
			</unit>
			<unit id="152" translate="yes">
				<segment state="initial">
					<source>The usage of this device is shown in the hardware processing example later in this article.</source>
					<target>The usage of this device is shown in the hardware processing example later in this article.</target>
				</segment>
			</unit>
			<unit id="153" translate="yes">
				<segment state="initial">
					<source>SetEncodingProperties</source>
					<target>SetEncodingProperties</target>
				</segment>
			</unit>
			<unit id="154" translate="yes">
				<segment state="initial">
					<source>SupportedEncodingProperties property</source>
					<target>SupportedEncodingProperties property</target>
				</segment>
			</unit>
			<unit id="155" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn764799)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>The system checks the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SupportedEncodingProperties</pc></pc> property to determine which encoding properties are supported by your effect.</source>
					<target>The system checks the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SupportedEncodingProperties</pc></pc> property to determine which encoding properties are supported by your effect.</target>
				</segment>
			</unit>
			<unit id="156" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn764789)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Note that if the consumer of your effect can't encode video using the properties you specify, it will call <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Close</pc></pc> on your effect and will remove your effect from the video pipeline.</source>
					<target>Note that if the consumer of your effect can't encode video using the properties you specify, it will call <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Close</pc></pc> on your effect and will remove your effect from the video pipeline.</target>
				</segment>
			</unit>
			<unit id="157" translate="yes">
				<segment state="initial">
					<source>SupportedEncodingProperties</source>
					<target>SupportedEncodingProperties</target>
				</segment>
			</unit>
			<unit id="158" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">[</data>
					<data id="id4">](https://msdn.microsoft.com/library/windows/apps/hh701217)</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  If you return an empty list of <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">VideoEncodingProperties</pc></pc> objects from <pc dataRefEnd="id8" dataRefStart="id7" id="p4">SupportedEncodingProperties</pc>, the system will default to ARGB32 encoding.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  If you return an empty list of <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">VideoEncodingProperties</pc></pc> objects from <pc dataRefEnd="id8" dataRefStart="id7" id="p4">SupportedEncodingProperties</pc>, the system will default to ARGB32 encoding.</target>
				</segment>
			</unit>
			<unit id="159" translate="yes">
				<segment state="initial">
					<source>SupportedMemoryTypes property</source>
					<target>SupportedMemoryTypes property</target>
				</segment>
			</unit>
			<unit id="160" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn764801)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>The system checks the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SupportedMemoryTypes</pc></pc> property to determine whether your effect will access video frames in software memory or in hardware (GPU) memory.</source>
					<target>The system checks the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SupportedMemoryTypes</pc></pc> property to determine whether your effect will access video frames in software memory or in hardware (GPU) memory.</target>
				</segment>
			</unit>
			<unit id="161" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn764822)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/dn887358)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>If you return <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">MediaMemoryTypes.Cpu</pc></pc>, your effect will be passed input and output frames that contain image data in <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">SoftwareBitmap</pc></pc> objects.</source>
					<target>If you return <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">MediaMemoryTypes.Cpu</pc></pc>, your effect will be passed input and output frames that contain image data in <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">SoftwareBitmap</pc></pc> objects.</target>
				</segment>
			</unit>
			<unit id="162" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">[</data>
					<data id="id4">](https://msdn.microsoft.com/library/windows/apps/dn965505)</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source>If you return <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaMemoryTypes.Gpu</pc>, your effect will be passed input and output frames that contain image data in <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">IDirect3DSurface</pc></pc> objects.</source>
					<target>If you return <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaMemoryTypes.Gpu</pc>, your effect will be passed input and output frames that contain image data in <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">IDirect3DSurface</pc></pc> objects.</target>
				</segment>
			</unit>
			<unit id="163" translate="yes">
				<segment state="initial">
					<source>SupportedMemoryTypes</source>
					<target>SupportedMemoryTypes</target>
				</segment>
			</unit>
			<unit id="164" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">[</data>
					<data id="id4">](https://msdn.microsoft.com/library/windows/apps/dn764822)</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  If you specify <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">MediaMemoryTypes.GpuAndCpu</pc></pc>, the system will use either GPU or system memory, whichever is more efficient for the pipeline.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  If you specify <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">MediaMemoryTypes.GpuAndCpu</pc></pc>, the system will use either GPU or system memory, whichever is more efficient for the pipeline.</target>
				</segment>
			</unit>
			<unit id="165" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn764794)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/dn887358)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
					<data id="id9">[</data>
					<data id="id10">](https://msdn.microsoft.com/library/windows/apps/dn965505)</data>
					<data id="id11">**</data>
					<data id="id12">**</data>
				</originalData>
				<segment state="initial">
					<source>When using this value, you must check in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ProcessFrame</pc></pc> method to see whether the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">SoftwareBitmap</pc></pc> or <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">IDirect3DSurface</pc></pc> passed into the method contains data and then process the frame accordingly.</source>
					<target>When using this value, you must check in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ProcessFrame</pc></pc> method to see whether the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">SoftwareBitmap</pc></pc> or <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">IDirect3DSurface</pc></pc> passed into the method contains data and then process the frame accordingly.</target>
				</segment>
			</unit>
			<unit id="166" translate="yes">
				<segment state="initial">
					<source>TimeIndependent property</source>
					<target>TimeIndependent property</target>
				</segment>
			</unit>
			<unit id="167" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn764803)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">TimeIndependent</pc></pc> property lets the system know whether your effect requires uniform timing.</source>
					<target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">TimeIndependent</pc></pc> property lets the system know whether your effect requires uniform timing.</target>
				</segment>
			</unit>
			<unit id="168" translate="yes">
				<segment state="initial">
					<source>When set to true, the system can use optimizations that enhance effect performance.</source>
					<target>When set to true, the system can use optimizations that enhance effect performance.</target>
				</segment>
			</unit>
			<unit id="169" translate="yes">
				<segment state="initial">
					<source>TimeIndependent</source>
					<target>TimeIndependent</target>
				</segment>
			</unit>
			<unit id="170" translate="yes">
				<segment state="initial">
					<source>SetProperties method</source>
					<target>SetProperties method</target>
				</segment>
			</unit>
			<unit id="171" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br240986)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SetProperties</pc></pc> method allows the app that is using your effect to adjust effect parameters.</source>
					<target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SetProperties</pc></pc> method allows the app that is using your effect to adjust effect parameters.</target>
				</segment>
			</unit>
			<unit id="172" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br226054)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Properties are passed as an <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">IPropertySet</pc></pc> map of property names and values.</source>
					<target>Properties are passed as an <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">IPropertySet</pc></pc> map of property names and values.</target>
				</segment>
			</unit>
			<unit id="173" translate="yes">
				<segment state="initial">
					<source>SetProperties</source>
					<target>SetProperties</target>
				</segment>
			</unit>
			<unit id="174" translate="yes">
				<segment state="initial">
					<source>This simple example will dim the pixels in each video frame according to a specified value.</source>
					<target>This simple example will dim the pixels in each video frame according to a specified value.</target>
				</segment>
			</unit>
			<unit id="175" translate="yes">
				<segment state="initial">
					<source>A property is declared and TryGetValue is used to get the value set by the calling app.</source>
					<target>A property is declared and TryGetValue is used to get the value set by the calling app.</target>
				</segment>
			</unit>
			<unit id="176" translate="yes">
				<segment state="initial">
					<source>If no value was set, a default value of .5 is used.</source>
					<target>If no value was set, a default value of .5 is used.</target>
				</segment>
			</unit>
			<unit id="177" translate="yes">
				<segment state="initial">
					<source>FadeValue</source>
					<target>FadeValue</target>
				</segment>
			</unit>
			<unit id="178" translate="yes">
				<segment state="initial">
					<source>ProcessFrame method</source>
					<target>ProcessFrame method</target>
				</segment>
			</unit>
			<unit id="179" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn764794)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ProcessFrame</pc></pc> method is where your effect modifies the image data of the video.</source>
					<target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ProcessFrame</pc></pc> method is where your effect modifies the image data of the video.</target>
				</segment>
			</unit>
			<unit id="180" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn764826)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>The method is called once per frame and is passed a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ProcessVideoFrameContext</pc></pc> object.</source>
					<target>The method is called once per frame and is passed a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ProcessVideoFrameContext</pc></pc> object.</target>
				</segment>
			</unit>
			<unit id="181" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn930917)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source>This object contains an input <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">VideoFrame</pc></pc> object that contains the incoming frame to be processed and an output <pc dataRefEnd="id6" dataRefStart="id5" id="p3">VideoFrame</pc> object to which you write image data that will be passed on to rest of the video pipeline.</source>
					<target>This object contains an input <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">VideoFrame</pc></pc> object that contains the incoming frame to be processed and an output <pc dataRefEnd="id6" dataRefStart="id5" id="p3">VideoFrame</pc> object to which you write image data that will be passed on to rest of the video pipeline.</target>
				</segment>
			</unit>
			<unit id="182" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">[</data>
					<data id="id4">](https://msdn.microsoft.com/library/windows/apps/dn930926)</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
					<data id="id7">[</data>
					<data id="id8">](https://msdn.microsoft.com/library/windows/apps/dn930920)</data>
					<data id="id9">**</data>
					<data id="id10">**</data>
					<data id="id11">[</data>
					<data id="id12">](https://msdn.microsoft.com/library/windows/apps/dn764801)</data>
					<data id="id13">**</data>
					<data id="id14">**</data>
				</originalData>
				<segment state="initial">
					<source>Each of these <pc dataRefEnd="id2" dataRefStart="id1" id="p1">VideoFrame</pc> objects has a <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">SoftwareBitmap</pc></pc> property and a <pc dataRefEnd="id8" dataRefStart="id7" id="p4"><pc dataRefEnd="id10" dataRefStart="id9" id="p5">Direct3DSurface</pc></pc> property, but which of these can be used is determined by the value you returned from the <pc dataRefEnd="id12" dataRefStart="id11" id="p6"><pc dataRefEnd="id14" dataRefStart="id13" id="p7">SupportedMemoryTypes</pc></pc> property.</source>
					<target>Each of these <pc dataRefEnd="id2" dataRefStart="id1" id="p1">VideoFrame</pc> objects has a <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">SoftwareBitmap</pc></pc> property and a <pc dataRefEnd="id8" dataRefStart="id7" id="p4"><pc dataRefEnd="id10" dataRefStart="id9" id="p5">Direct3DSurface</pc></pc> property, but which of these can be used is determined by the value you returned from the <pc dataRefEnd="id12" dataRefStart="id11" id="p6"><pc dataRefEnd="id14" dataRefStart="id13" id="p7">SupportedMemoryTypes</pc></pc> property.</target>
				</segment>
			</unit>
			<unit id="183" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>This example shows a simple implementation of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ProcessFrame</pc> method using software processing.</source>
					<target>This example shows a simple implementation of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ProcessFrame</pc> method using software processing.</target>
				</segment>
			</unit>
			<unit id="184" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn887358)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](imaging.md)</data>
				</originalData>
				<segment state="initial">
					<source>For more information on working with <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SoftwareBitmap</pc></pc> objects, see <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Imaging</pc>.</source>
					<target>For more information on working with <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SoftwareBitmap</pc></pc> objects, see <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Imaging</pc>.</target>
				</segment>
			</unit>
			<unit id="185" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>An example <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ProcessFrame</pc> implementation using hardware processing is shown later in this article.</source>
					<target>An example <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ProcessFrame</pc> implementation using hardware processing is shown later in this article.</target>
				</segment>
			</unit>
			<unit id="186" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Accessing the data buffer of a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">SoftwareBitmap</pc> requires COM interop, so you should include the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">System.Runtime.InteropServices</pc> namespace in your effect class file.</source>
					<target>Accessing the data buffer of a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">SoftwareBitmap</pc> requires COM interop, so you should include the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">System.Runtime.InteropServices</pc> namespace in your effect class file.</target>
				</segment>
			</unit>
			<unit id="187" translate="yes">
				<segment state="initial">
					<source>COMUsing</source>
					<target>COMUsing</target>
				</segment>
			</unit>
			<unit id="188" translate="yes">
				<segment state="initial">
					<source>Add the following code inside the namespace for your effect to import the interface for accessing the image buffer.</source>
					<target>Add the following code inside the namespace for your effect to import the interface for accessing the image buffer.</target>
				</segment>
			</unit>
			<unit id="189" translate="yes">
				<segment state="initial">
					<source>COMImport</source>
					<target>COMImport</target>
				</segment>
			</unit>
			<unit id="190" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  Because this technique accesses a native, unmanaged image buffer, you will need to configure your project to allow unsafe code.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  Because this technique accesses a native, unmanaged image buffer, you will need to configure your project to allow unsafe code.</target>
				</segment>
			</unit>
			<unit id="191" translate="yes">
				<segment state="initial">
					<source>In Solution Explorer, right-click the VideoEffectComponent project and select Properties....</source>
					<target>In Solution Explorer, right-click the VideoEffectComponent project and select Properties....</target>
				</segment>
			</unit>
			<unit id="192" translate="yes">
				<segment state="initial">
					<source>Select the Build tab.</source>
					<target>Select the Build tab.</target>
				</segment>
			</unit>
			<unit id="193" translate="yes">
				<segment state="initial">
					<source>Check the checkbox for "Allow unsafe code"</source>
					<target>Check the checkbox for "Allow unsafe code"</target>
				</segment>
			</unit>
			<unit id="194" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>Now you can add the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ProcessFrame</pc> method implementation.</source>
					<target>Now you can add the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ProcessFrame</pc> method implementation.</target>
				</segment>
			</unit>
			<unit id="195" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn887325)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>First, this method obtains a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">BitmapBuffer</pc></pc> object from both the input and output software bitmaps.</source>
					<target>First, this method obtains a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">BitmapBuffer</pc></pc> object from both the input and output software bitmaps.</target>
				</segment>
			</unit>
			<unit id="196" translate="yes">
				<segment state="initial">
					<source>Note that the output frame is opened for writing and the input for reading.</source>
					<target>Note that the output frame is opened for writing and the input for reading.</target>
				</segment>
			</unit>
			<unit id="197" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn921671)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/dn949046)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>Next, an <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">IMemoryBufferReference</pc></pc> is obtained for each buffer by calling <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">CreateReference</pc></pc>.</source>
					<target>Next, an <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">IMemoryBufferReference</pc></pc> is obtained for each buffer by calling <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">CreateReference</pc></pc>.</target>
				</segment>
			</unit>
			<unit id="198" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source>Then, the actual data buffer is obtained by casting the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">IMemoryBufferReference</pc> objects as the COM interop interface defined above, <pc dataRefEnd="id4" dataRefStart="id3" id="p2">IMemoryByteAccess</pc>, and then calling <pc dataRefEnd="id6" dataRefStart="id5" id="p3">GetBuffer</pc>.</source>
					<target>Then, the actual data buffer is obtained by casting the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">IMemoryBufferReference</pc> objects as the COM interop interface defined above, <pc dataRefEnd="id4" dataRefStart="id3" id="p2">IMemoryByteAccess</pc>, and then calling <pc dataRefEnd="id6" dataRefStart="id5" id="p3">GetBuffer</pc>.</target>
				</segment>
			</unit>
			<unit id="199" translate="yes">
				<segment state="initial">
					<source>Now that the data buffers have been obtained, you can read from the input buffer and write to the output buffer.</source>
					<target>Now that the data buffers have been obtained, you can read from the input buffer and write to the output buffer.</target>
				</segment>
			</unit>
			<unit id="200" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn887330)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>The layout of the buffer is obtained by calling <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">GetPlaneDescription</pc></pc>, which provides information on the width, stride, and initial offset of the buffer.</source>
					<target>The layout of the buffer is obtained by calling <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">GetPlaneDescription</pc></pc>, which provides information on the width, stride, and initial offset of the buffer.</target>
				</segment>
			</unit>
			<unit id="201" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn919884)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>The bits per pixel is determined by the encoding properties set previously with the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SetEncodingProperties</pc></pc> method.</source>
					<target>The bits per pixel is determined by the encoding properties set previously with the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SetEncodingProperties</pc></pc> method.</target>
				</segment>
			</unit>
			<unit id="202" translate="yes">
				<segment state="initial">
					<source>The buffer format information is used to find the index into the buffer for each pixel.</source>
					<target>The buffer format information is used to find the index into the buffer for each pixel.</target>
				</segment>
			</unit>
			<unit id="203" translate="yes">
				<segment state="initial">
					<source>The pixel value from the source buffer is copied into the target buffer, with the color values being multiplied by the FadeValue property defined for this effect to dim them by the specified amount.</source>
					<target>The pixel value from the source buffer is copied into the target buffer, with the color values being multiplied by the FadeValue property defined for this effect to dim them by the specified amount.</target>
				</segment>
			</unit>
			<unit id="204" translate="yes">
				<segment state="initial">
					<source>ProcessFrameSoftwareBitmap</source>
					<target>ProcessFrameSoftwareBitmap</target>
				</segment>
			</unit>
			<unit id="205" translate="yes">
				<segment state="initial">
					<source>Implement the IBasicVideoEffect interface using hardware processing</source>
					<target>Implement the IBasicVideoEffect interface using hardware processing</target>
				</segment>
			</unit>
			<unit id="206" translate="yes">
				<segment state="initial">
					<source>Creating a custom video effect using hardware (GPU) processing is almost identical to using software processing as described above.</source>
					<target>Creating a custom video effect using hardware (GPU) processing is almost identical to using software processing as described above.</target>
				</segment>
			</unit>
			<unit id="207" translate="yes">
				<segment state="initial">
					<source>This section will show the few differences in an effect that uses hardware processing.</source>
					<target>This section will show the few differences in an effect that uses hardware processing.</target>
				</segment>
			</unit>
			<unit id="208" translate="yes">
				<segment state="initial">
					<source>This example uses the Win2D Windows Runtime API.</source>
					<target>This example uses the Win2D Windows Runtime API.</target>
				</segment>
			</unit>
			<unit id="209" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](http://go.microsoft.com/fwlink/?LinkId=519078)</data>
				</originalData>
				<segment state="initial">
					<source>For more information on using Win2D, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Win2D documentation</pc>.</source>
					<target>For more information on using Win2D, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Win2D documentation</pc>.</target>
				</segment>
			</unit>
			<unit id="210" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](#addacustomeffect)</data>
				</originalData>
				<segment state="initial">
					<source>Use the following steps to add the Win2D NuGet package to the project you created as described in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Add a custom effect to your app</pc> section at the beginning of this article.</source>
					<target>Use the following steps to add the Win2D NuGet package to the project you created as described in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Add a custom effect to your app</pc> section at the beginning of this article.</target>
				</segment>
			</unit>
			<unit id="211" translate="yes">
				<segment state="initial">
					<source>Add the Win2D NuGet package to your effect project</source>
					<target>Add the Win2D NuGet package to your effect project</target>
				</segment>
			</unit>
			<unit id="212" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source>In <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Solution Explorer</pc>, right-click the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">VideoEffectComponent</pc> project and select <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Manage NuGet Packages...</pc></source>
					<target>In <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Solution Explorer</pc>, right-click the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">VideoEffectComponent</pc> project and select <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Manage NuGet Packages...</pc></target>
				</segment>
			</unit>
			<unit id="213" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>At the top of the window, select the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Browse</pc> tab.</source>
					<target>At the top of the window, select the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Browse</pc> tab.</target>
				</segment>
			</unit>
			<unit id="214" translate="yes">
				<segment state="initial">
					<source>In the search box, type "Win2D".</source>
					<target>In the search box, type "Win2D".</target>
				</segment>
			</unit>
			<unit id="215" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>Click on <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Win2D.uwp</pc> and the click Install in the right pane.</source>
					<target>Click on <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Win2D.uwp</pc> and the click Install in the right pane.</target>
				</segment>
			</unit>
			<unit id="216" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Review Changes</pc> dialog shows you the package to be installed.</source>
					<target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Review Changes</pc> dialog shows you the package to be installed.</target>
				</segment>
			</unit>
			<unit id="217" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>Click <pc dataRefEnd="id2" dataRefStart="id1" id="p1">OK</pc>.</source>
					<target>Click <pc dataRefEnd="id2" dataRefStart="id1" id="p1">OK</pc>.</target>
				</segment>
			</unit>
			<unit id="218" translate="yes">
				<segment state="initial">
					<source>Accept the package license.</source>
					<target>Accept the package license.</target>
				</segment>
			</unit>
			<unit id="219" translate="yes">
				<segment state="initial">
					<source>In addition to the namespaces included in the basic project setup, you will need to include the following namespaces provided by Win2D.</source>
					<target>In addition to the namespaces included in the basic project setup, you will need to include the following namespaces provided by Win2D.</target>
				</segment>
			</unit>
			<unit id="220" translate="yes">
				<segment state="initial">
					<source>UsingWin2D</source>
					<target>UsingWin2D</target>
				</segment>
			</unit>
			<unit id="221" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn764822)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/dn764801)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>Because this effect will use GPU memory for operating on the image data, you should return <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">MediaMemoryTypes.Gpu</pc></pc> from the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">SupportedMemoryTypes</pc></pc> property.</source>
					<target>Because this effect will use GPU memory for operating on the image data, you should return <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">MediaMemoryTypes.Gpu</pc></pc> from the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">SupportedMemoryTypes</pc></pc> property.</target>
				</segment>
			</unit>
			<unit id="222" translate="yes">
				<segment state="initial">
					<source>SupportedMemoryTypesWin2D</source>
					<target>SupportedMemoryTypesWin2D</target>
				</segment>
			</unit>
			<unit id="223" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn764799)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Set the encoding properties your effect will support with the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SupportedEncodingProperties</pc></pc> property.</source>
					<target>Set the encoding properties your effect will support with the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SupportedEncodingProperties</pc></pc> property.</target>
				</segment>
			</unit>
			<unit id="224" translate="yes">
				<segment state="initial">
					<source>When working with Win2D, you must use ARGB32 encoding.</source>
					<target>When working with Win2D, you must use ARGB32 encoding.</target>
				</segment>
			</unit>
			<unit id="225" translate="yes">
				<segment state="initial">
					<source>SupportedEncodingPropertiesWin2D</source>
					<target>SupportedEncodingPropertiesWin2D</target>
				</segment>
			</unit>
			<unit id="226" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn919884)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
					<data id="id7">[</data>
					<data id="id8">](https://msdn.microsoft.com/library/windows/apps/dn895092)</data>
					<data id="id9">**</data>
					<data id="id10">**</data>
				</originalData>
				<segment state="initial">
					<source>Use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SetEncodingProperties</pc></pc> method to create a new Win2D <pc dataRefEnd="id6" dataRefStart="id5" id="p3">CanvasDevice</pc> object from the <pc dataRefEnd="id8" dataRefStart="id7" id="p4"><pc dataRefEnd="id10" dataRefStart="id9" id="p5">IDirect3DDevice</pc></pc> passed into the method.</source>
					<target>Use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SetEncodingProperties</pc></pc> method to create a new Win2D <pc dataRefEnd="id6" dataRefStart="id5" id="p3">CanvasDevice</pc> object from the <pc dataRefEnd="id8" dataRefStart="id7" id="p4"><pc dataRefEnd="id10" dataRefStart="id9" id="p5">IDirect3DDevice</pc></pc> passed into the method.</target>
				</segment>
			</unit>
			<unit id="227" translate="yes">
				<segment state="initial">
					<source>SetEncodingPropertiesWin2D</source>
					<target>SetEncodingPropertiesWin2D</target>
				</segment>
			</unit>
			<unit id="228" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br240986)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SetProperties</pc></pc> implementation is identical to the software processing example above.</source>
					<target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SetProperties</pc></pc> implementation is identical to the software processing example above.</target>
				</segment>
			</unit>
			<unit id="229" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>This example uses a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">BlurAmount</pc> property to configure a Win2D blur effect.</source>
					<target>This example uses a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">BlurAmount</pc> property to configure a Win2D blur effect.</target>
				</segment>
			</unit>
			<unit id="230" translate="yes">
				<segment state="initial">
					<source>SetPropertiesWin2D</source>
					<target>SetPropertiesWin2D</target>
				</segment>
			</unit>
			<unit id="231" translate="yes">
				<segment state="initial">
					<source>BlurAmountWin2D</source>
					<target>BlurAmountWin2D</target>
				</segment>
			</unit>
			<unit id="232" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn764794)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>The last step is to implement the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ProcessFrame</pc></pc> method that actually processes the image data.</source>
					<target>The last step is to implement the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ProcessFrame</pc></pc> method that actually processes the image data.</target>
				</segment>
			</unit>
			<unit id="233" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">[</data>
					<data id="id4">](https://msdn.microsoft.com/library/windows/apps/dn930920)</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source>Using Win2D APIs, a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">CanvasBitmap</pc> is created from the input frame's <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">Direct3DSurface</pc></pc> property.</source>
					<target>Using Win2D APIs, a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">CanvasBitmap</pc> is created from the input frame's <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">Direct3DSurface</pc></pc> property.</target>
				</segment>
			</unit>
			<unit id="234" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source>A <pc dataRefEnd="id2" dataRefStart="id1" id="p1">CanvasRenderTarget</pc> is created from the output frame's <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Direct3DSurface</pc> and a <pc dataRefEnd="id6" dataRefStart="id5" id="p3">CanvasDrawingSession</pc> is created from this render target.</source>
					<target>A <pc dataRefEnd="id2" dataRefStart="id1" id="p1">CanvasRenderTarget</pc> is created from the output frame's <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Direct3DSurface</pc> and a <pc dataRefEnd="id6" dataRefStart="id5" id="p3">CanvasDrawingSession</pc> is created from this render target.</target>
				</segment>
			</unit>
			<unit id="235" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/br240986)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>A new Win2D <pc dataRefEnd="id2" dataRefStart="id1" id="p1">GaussianBlurEffect</pc> is initialized, using the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">BlurAmount</pc> property our effect exposes via <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">SetProperties</pc></pc>.</source>
					<target>A new Win2D <pc dataRefEnd="id2" dataRefStart="id1" id="p1">GaussianBlurEffect</pc> is initialized, using the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">BlurAmount</pc> property our effect exposes via <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">SetProperties</pc></pc>.</target>
				</segment>
			</unit>
			<unit id="236" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>Finally, the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">CanvasDrawingSession.DrawImage</pc> method is called to draw the input bitmap to the render target using the blur effect.</source>
					<target>Finally, the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">CanvasDrawingSession.DrawImage</pc> method is called to draw the input bitmap to the render target using the blur effect.</target>
				</segment>
			</unit>
			<unit id="237" translate="yes">
				<segment state="initial">
					<source>ProcessFrameWin2D</source>
					<target>ProcessFrameWin2D</target>
				</segment>
			</unit>
			<unit id="238" translate="yes">
				<segment state="initial">
					<source>Adding your custom effect to your app</source>
					<target>Adding your custom effect to your app</target>
				</segment>
			</unit>
			<unit id="239" translate="yes">
				<segment state="initial">
					<source>In order to use your video effect from your app, you must add a reference to the effect project to your app.</source>
					<target>In order to use your video effect from your app, you must add a reference to the effect project to your app.</target>
				</segment>
			</unit>
			<unit id="240" translate="yes">
				<segment state="initial">
					<source>In Solution Explorer, under your app project, right-click References and select Add reference...</source>
					<target>In Solution Explorer, under your app project, right-click References and select Add reference...</target>
				</segment>
			</unit>
			<unit id="241" translate="yes">
				<segment state="initial">
					<source>Expand the Projects tab, click Solution, and select the checkbox for your effect project name.</source>
					<target>Expand the Projects tab, click Solution, and select the checkbox for your effect project name.</target>
				</segment>
			</unit>
			<unit id="242" translate="yes">
				<segment state="initial">
					<source>For this example, the name is VideoEffectComponent.</source>
					<target>For this example, the name is VideoEffectComponent.</target>
				</segment>
			</unit>
			<unit id="243" translate="yes">
				<segment state="initial">
					<source>Click OK.</source>
					<target>Click OK.</target>
				</segment>
			</unit>
			<unit id="244" translate="yes">
				<segment state="initial">
					<source>Add your custom effect to a camera video stream</source>
					<target>Add your custom effect to a camera video stream</target>
				</segment>
			</unit>
			<unit id="245" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](simple-camera-preview-access.md)</data>
				</originalData>
				<segment state="initial">
					<source>You can set up a simple preview stream from the camera by following the steps in the article <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Simple camera preview access</pc>.</source>
					<target>You can set up a simple preview stream from the camera by following the steps in the article <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Simple camera preview access</pc>.</target>
				</segment>
			</unit>
			<unit id="246" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br241124)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Following those steps will provide you with an initialized <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">MediaCapture</pc></pc> object that is used to access the camera's video stream.</source>
					<target>Following those steps will provide you with an initialized <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">MediaCapture</pc></pc> object that is used to access the camera's video stream.</target>
				</segment>
			</unit>
			<unit id="247" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn608055)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>To add your custom video effect to a camera stream, first create a new <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">VideoEffectDefinition</pc></pc> object, passing in the namespace and class name for your effect.</source>
					<target>To add your custom video effect to a camera stream, first create a new <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">VideoEffectDefinition</pc></pc> object, passing in the namespace and class name for your effect.</target>
				</segment>
			</unit>
			<unit id="248" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">[</data>
					<data id="id4">](https://msdn.microsoft.com/library/windows/apps/dn878035)</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source>Next call the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaCapture</pc> object's <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">AddVideoEffect</pc></pc> method to add your effect to the specified stream.</source>
					<target>Next call the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaCapture</pc> object's <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">AddVideoEffect</pc></pc> method to add your effect to the specified stream.</target>
				</segment>
			</unit>
			<unit id="249" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br226640)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>This example uses the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">MediaStreamType.VideoPreview</pc></pc> value to specify that the effect should be added to the preview stream.</source>
					<target>This example uses the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">MediaStreamType.VideoPreview</pc></pc> value to specify that the effect should be added to the preview stream.</target>
				</segment>
			</unit>
			<unit id="250" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>If your app supports video capture, you could also use <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaStreamType.VideoRecord</pc> to add the effect to the capture stream.</source>
					<target>If your app supports video capture, you could also use <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaStreamType.VideoRecord</pc> to add the effect to the capture stream.</target>
				</segment>
			</unit>
			<unit id="251" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">[</data>
					<data id="id4">](https://msdn.microsoft.com/library/windows/apps/br240985)</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">AddVideoEffect</pc> returns an <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">IMediaExtension</pc></pc> object representing your custom effect.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">AddVideoEffect</pc> returns an <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">IMediaExtension</pc></pc> object representing your custom effect.</target>
				</segment>
			</unit>
			<unit id="252" translate="yes">
				<segment state="initial">
					<source>You can use the SetProperties method to set the configuration for your effect.</source>
					<target>You can use the SetProperties method to set the configuration for your effect.</target>
				</segment>
			</unit>
			<unit id="253" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br226613)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Once the effect has been added, <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">StartPreviewAsync</pc></pc> is called to start the preview stream.</source>
					<target>Once the effect has been added, <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">StartPreviewAsync</pc></pc> is called to start the preview stream.</target>
				</segment>
			</unit>
			<unit id="254" translate="yes">
				<segment state="initial">
					<source>AddVideoEffectAsync</source>
					<target>AddVideoEffectAsync</target>
				</segment>
			</unit>
			<unit id="255" translate="yes">
				<segment state="initial">
					<source>Add your custom effect to a clip in a MediaComposition</source>
					<target>Add your custom effect to a clip in a MediaComposition</target>
				</segment>
			</unit>
			<unit id="256" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](media-compositions-and-editing.md)</data>
				</originalData>
				<segment state="initial">
					<source>For general guidance oncreating media compositions from video clips, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Media compositions and editing</pc>.</source>
					<target>For general guidance oncreating media compositions from video clips, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Media compositions and editing</pc>.</target>
				</segment>
			</unit>
			<unit id="257" translate="yes">
				<segment state="initial">
					<source>The following code snippet shows the creation of a simple media composition with using a custom video effect.</source>
					<target>The following code snippet shows the creation of a simple media composition with using a custom video effect.</target>
				</segment>
			</unit>
			<unit id="258" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn652596)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/dn652607)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
					<data id="id9">[</data>
					<data id="id10">](https://msdn.microsoft.com/library/windows/apps/br207847)</data>
					<data id="id11">**</data>
					<data id="id12">**</data>
					<data id="id13">[</data>
					<data id="id14">](https://msdn.microsoft.com/library/windows/apps/dn652646)</data>
					<data id="id15">**</data>
					<data id="id16">**</data>
				</originalData>
				<segment state="initial">
					<source>A <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">MediaClip</pc></pc> object is created by calling <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">CreateFromFileAsync</pc></pc>, passing in a video file that was selected by the user with a <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">FileOpenPicker</pc></pc> and the clip is added to a new <pc dataRefEnd="id14" dataRefStart="id13" id="p7"><pc dataRefEnd="id16" dataRefStart="id15" id="p8">MediaComposition</pc></pc>.</source>
					<target>A <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">MediaClip</pc></pc> object is created by calling <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">CreateFromFileAsync</pc></pc>, passing in a video file that was selected by the user with a <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">FileOpenPicker</pc></pc> and the clip is added to a new <pc dataRefEnd="id14" dataRefStart="id13" id="p7"><pc dataRefEnd="id16" dataRefStart="id15" id="p8">MediaComposition</pc></pc>.</target>
				</segment>
			</unit>
			<unit id="259" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn608055)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Next a new <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">VideoEffectDefinition</pc></pc> object is created, passing in the namespace and class name for your effect to the constructor.</source>
					<target>Next a new <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">VideoEffectDefinition</pc></pc> object is created, passing in the namespace and class name for your effect to the constructor.</target>
				</segment>
			</unit>
			<unit id="260" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn652643)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source>Finally, the effect definition is added to the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">VideoEffectDefinitions</pc></pc> collection of the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">MediaClip</pc> object.</source>
					<target>Finally, the effect definition is added to the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">VideoEffectDefinitions</pc></pc> collection of the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">MediaClip</pc> object.</target>
				</segment>
			</unit>
			<unit id="261" translate="yes">
				<segment state="initial">
					<source>AddEffectToComposition</source>
					<target>AddEffectToComposition</target>
				</segment>
			</unit>
			<unit id="262" translate="yes">
				<segment state="initial">
					<source>Related topics</source>
					<target>Related topics</target>
				</segment>
			</unit>
			<unit id="263" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](simple-camera-preview-access.md)</data>
					<data id="id3">
</data>
					<data id="id4">[</data>
					<data id="id5">](media-compositions-and-editing.md)</data>
					<data id="id6">
</data>
					<data id="id7">[</data>
					<data id="id8">](http://go.microsoft.com/fwlink/?LinkId=519078)</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Simple camera preview access</pc><ph dataRef="id3" id="ph1" /><pc dataRefEnd="id5" dataRefStart="id4" id="p2">Media compositions and editing</pc><ph dataRef="id6" id="ph2" /><pc dataRefEnd="id8" dataRefStart="id7" id="p3">Win2D documentation</pc></source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Simple camera preview access</pc><ph dataRef="id3" id="ph1" /><pc dataRefEnd="id5" dataRefStart="id4" id="p2">Media compositions and editing</pc><ph dataRef="id6" id="ph2" /><pc dataRefEnd="id8" dataRefStart="id7" id="p3">Win2D documentation</pc></target>
				</segment>
			</unit>
		</group>
	</file>
</xliff>