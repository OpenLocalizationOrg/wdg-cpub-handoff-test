<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="it-it" version="2.0" xml:space="preserve" xmlns="urn:oasis:names:tc:xliff:document:2.0">
	<file id="1">
		<mda:metadata>
			<mda:metaGroup>
				<mda:meta type="tool-id">mdxliff</mda:meta>
				<mda:meta type="tool-name">mdxliff</mda:meta>
				<mda:meta type="tool-version">1.0-00ddeee</mda:meta>
				<mda:meta type="tool-company">Microsoft</mda:meta>
			</mda:metaGroup>
		<mda:metaGroup><mda:meta type="olfilehash">d18aeb8841db433d476b4673d539c08d50c9ec68</mda:meta><mda:meta type="olfilepath">wdg-cpub-test\ndolci2\launch-resume\handle-uri-activation.md</mda:meta><mda:meta type="oltranslationpriority"></mda:meta><mda:meta type="oltranslationtype">Human Translation</mda:meta><mda:meta type="olskeletonhash">40d92fc25da7042ffda9baaba6158ebda8c604c6</mda:meta><mda:meta type="olxliffhash">4bc3fde2c893234888860773b9be58763dfcea3a</mda:meta></mda:metaGroup></mda:metadata>
		<group id="content">
			<unit id="101" translate="yes">
				<segment state="initial">
					<source>Handle URI activation</source>
					<target>Handle URI activation</target>
				</segment>
			</unit>
			<unit id="102" translate="yes">
				<segment state="initial">
					<source>Learn how to register an app to become the default handler for a Uniform Resource Identifier (URI) scheme name.</source>
					<target>Learn how to register an app to become the default handler for a Uniform Resource Identifier (URI) scheme name.</target>
				</segment>
			</unit>
			<unit id="103" translate="yes">
				<segment state="initial">
					<source>Handle URI activation</source>
					<target>Handle URI activation</target>
				</segment>
			</unit>
			<unit id="104" translate="yes">
				<segment state="initial">
					<source>\[ Updated for UWP apps on Windows 10.</source>
					<target>\[ Updated for UWP apps on Windows 10.</target>
				</segment>
			</unit>
			<unit id="105" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](http://go.microsoft.com/fwlink/p/?linkid=619132)</data>
				</originalData>
				<segment state="initial">
					<source>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</source>
					<target>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</target>
				</segment>
			</unit>
			<unit id="106" translate="yes">
				<segment state="initial">
					<source>Important APIs</source>
					<target>Important APIs</target>
				</segment>
			</unit>
			<unit id="107" translate="yes">
				<segment state="initial">
					<source>Windows.ApplicationModel.Activation.ProtocolActivatedEventArgs</source>
					<target>Windows.ApplicationModel.Activation.ProtocolActivatedEventArgs</target>
				</segment>
			</unit>
			<unit id="108" translate="yes">
				<segment state="initial">
					<source>Windows.UI.Xaml.Application.OnActivated</source>
					<target>Windows.UI.Xaml.Application.OnActivated</target>
				</segment>
			</unit>
			<unit id="109" translate="yes">
				<segment state="initial">
					<source>Learn how to register an app to become the default handler for a Uniform Resource Identifier (URI) scheme name.</source>
					<target>Learn how to register an app to become the default handler for a Uniform Resource Identifier (URI) scheme name.</target>
				</segment>
			</unit>
			<unit id="110" translate="yes">
				<segment state="initial">
					<source>Both Classic Windows Platform (CWP) apps and Universal Windows Platform (UWP) apps can register to be a default handler for a URI scheme name.</source>
					<target>Both Classic Windows Platform (CWP) apps and Universal Windows Platform (UWP) apps can register to be a default handler for a URI scheme name.</target>
				</segment>
			</unit>
			<unit id="111" translate="yes">
				<segment state="initial">
					<source>If the user chooses your app as the default handler for a URI scheme name, your app will be activated every time that type of URI is launched.</source>
					<target>If the user chooses your app as the default handler for a URI scheme name, your app will be activated every time that type of URI is launched.</target>
				</segment>
			</unit>
			<unit id="112" translate="yes">
				<segment state="initial">
					<source>We recommend that you only register for a URI scheme name if you expect to handle all URI launches for that type of URI scheme.</source>
					<target>We recommend that you only register for a URI scheme name if you expect to handle all URI launches for that type of URI scheme.</target>
				</segment>
			</unit>
			<unit id="113" translate="yes">
				<segment state="initial">
					<source>If you do choose to register for a URI scheme name, you must provide the end user with the functionality that is expected when your app is activated for that URI scheme.</source>
					<target>If you do choose to register for a URI scheme name, you must provide the end user with the functionality that is expected when your app is activated for that URI scheme.</target>
				</segment>
			</unit>
			<unit id="114" translate="yes">
				<segment state="initial">
					<source>For example, an app that registers for the mailto: URI scheme name should open to a new e-mail message so that the user can compose a new e-mail.</source>
					<target>For example, an app that registers for the mailto: URI scheme name should open to a new e-mail message so that the user can compose a new e-mail.</target>
				</segment>
			</unit>
			<unit id="115" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/hh700321)</data>
				</originalData>
				<segment state="initial">
					<source>For more info on URI associations, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Guidelines and checklist for file types and URIs</pc>.</source>
					<target>For more info on URI associations, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Guidelines and checklist for file types and URIs</pc>.</target>
				</segment>
			</unit>
			<unit id="116" translate="yes">
				<segment state="initial">
					<source>These steps show how to register for a custom URI scheme name, alsdk://, and how to activate your app when the user launches a alsdk:// URI.</source>
					<target>These steps show how to register for a custom URI scheme name, alsdk://, and how to activate your app when the user launches a alsdk:// URI.</target>
				</segment>
			</unit>
			<unit id="117" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  In UWP apps, certain URIs and file extensions are reserved for use by built-in apps and the operating system.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  In UWP apps, certain URIs and file extensions are reserved for use by built-in apps and the operating system.</target>
				</segment>
			</unit>
			<unit id="118" translate="yes">
				<segment state="initial">
					<source>Attempts to register your app with a reserved URI or file extension will be ignored.</source>
					<target>Attempts to register your app with a reserved URI or file extension will be ignored.</target>
				</segment>
			</unit>
			<unit id="119" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](reserved-uri-scheme-names.md)</data>
				</originalData>
				<segment state="initial">
					<source>See <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Reserved URI scheme names and file types</pc> for an alphabetic list of Uri schemes that you can't register for your UWP apps because they are either reserved or forbidden.</source>
					<target>See <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Reserved URI scheme names and file types</pc> for an alphabetic list of Uri schemes that you can't register for your UWP apps because they are either reserved or forbidden.</target>
				</segment>
			</unit>
			<unit id="120" translate="yes">
				<segment state="initial">
					<source>Step 1: Specify the extension point in the package manifest</source>
					<target>Step 1: Specify the extension point in the package manifest</target>
				</segment>
			</unit>
			<unit id="121" translate="yes">
				<segment state="initial">
					<source>The app receives activation events only for the URI scheme names listed in the package manifest.</source>
					<target>The app receives activation events only for the URI scheme names listed in the package manifest.</target>
				</segment>
			</unit>
			<unit id="122" translate="yes">
				<originalData>
					<data id="id1">`alsdk`</data>
				</originalData>
				<segment state="initial">
					<source>Here's how you indicate that your app handles the <ph dataRef="id1" id="ph1" />URI scheme name.</source>
					<target>Here's how you indicate that your app handles the <ph dataRef="id1" id="ph1" />URI scheme name.</target>
				</segment>
			</unit>
			<unit id="123" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>In the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Solution Explorer</pc>, double-click package.appxmanifest to open the manifest designer.</source>
					<target>In the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Solution Explorer</pc>, double-click package.appxmanifest to open the manifest designer.</target>
				</segment>
			</unit>
			<unit id="124" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>Select the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Declarations</pc> tab and in the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Available Declarations</pc> drop-down, select <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Protocol</pc> and then click <pc dataRefEnd="id8" dataRefStart="id7" id="p4">Add</pc>.</source>
					<target>Select the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Declarations</pc> tab and in the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Available Declarations</pc> drop-down, select <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Protocol</pc> and then click <pc dataRefEnd="id8" dataRefStart="id7" id="p4">Add</pc>.</target>
				</segment>
			</unit>
			<unit id="125" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn934791)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Here is a brief description of each of the fields that you may fill in the manifest designer for the Protocol (see <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">AppX Package Manifest</pc></pc> for details):</source>
					<target>Here is a brief description of each of the fields that you may fill in the manifest designer for the Protocol (see <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">AppX Package Manifest</pc></pc> for details):</target>
				</segment>
			</unit>
			<unit id="126" translate="yes">
				<segment state="initial">
					<source>Field</source>
					<target>Field</target>
				</segment>
			</unit>
			<unit id="127" translate="yes">
				<segment state="initial">
					<source>Description</source>
					<target>Description</target>
				</segment>
			</unit>
			<unit id="128" translate="yes">
				<segment state="initial">
					<source>Logo</source>
					<target>Logo</target>
				</segment>
			</unit>
			<unit id="129" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/desktop/cc144154)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Specify the logo that is used to identify the URI scheme name in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Set Default Programs</pc> on the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Control Panel</pc>.</source>
					<target>Specify the logo that is used to identify the URI scheme name in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Set Default Programs</pc> on the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Control Panel</pc>.</target>
				</segment>
			</unit>
			<unit id="130" translate="yes">
				<segment state="initial">
					<source>If no Logo is specified, the small logo for the app is used.</source>
					<target>If no Logo is specified, the small logo for the app is used.</target>
				</segment>
			</unit>
			<unit id="131" translate="yes">
				<segment state="initial">
					<source>Display Name</source>
					<target>Display Name</target>
				</segment>
			</unit>
			<unit id="132" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/desktop/cc144154)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Specify the display name to identify the URI scheme name in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Set Default Programs</pc> on the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Control Panel</pc>.</source>
					<target>Specify the display name to identify the URI scheme name in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Set Default Programs</pc> on the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Control Panel</pc>.</target>
				</segment>
			</unit>
			<unit id="133" translate="yes">
				<segment state="initial">
					<source>Name</source>
					<target>Name</target>
				</segment>
			</unit>
			<unit id="134" translate="yes">
				<segment state="initial">
					<source>Choose a name for the Uri scheme.</source>
					<target>Choose a name for the Uri scheme.</target>
				</segment>
			</unit>
			<unit id="135" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  The Name must be in all lower case letters.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  The Name must be in all lower case letters.</target>
				</segment>
			</unit>
			<unit id="136" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">[</data>
					<data id="id4">](reserved-uri-scheme-names.md)</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Reserved and forbidden file types</pc> See <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Reserved URI scheme names and file types</pc> for an alphabetic list of Uri schemes that you can't register for your UWP apps because they are either reserved or forbidden.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Reserved and forbidden file types</pc> See <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Reserved URI scheme names and file types</pc> for an alphabetic list of Uri schemes that you can't register for your UWP apps because they are either reserved or forbidden.</target>
				</segment>
			</unit>
			<unit id="137" translate="yes">
				<segment state="initial">
					<source>Executable</source>
					<target>Executable</target>
				</segment>
			</unit>
			<unit id="138" translate="yes">
				<segment state="initial">
					<source>Specifies the default launch executable for the protocol.</source>
					<target>Specifies the default launch executable for the protocol.</target>
				</segment>
			</unit>
			<unit id="139" translate="yes">
				<segment state="initial">
					<source>If not specified, the app's executable is used.</source>
					<target>If not specified, the app's executable is used.</target>
				</segment>
			</unit>
			<unit id="140" translate="yes">
				<originalData>
					<data id="id1">&amp;gt;</data>
					<data id="id2">&amp;lt;</data>
				</originalData>
				<segment state="initial">
					<source>If specified, the string must be between 1 and 256 characters in length, must end with ".exe", and cannot contain these characters: <ph dataRef="id1" id="ph1" />, <ph dataRef="id2" id="ph2" />, :, ", &amp;#124;, ?, or \*.</source>
					<target>If specified, the string must be between 1 and 256 characters in length, must end with ".exe", and cannot contain these characters: <ph dataRef="id1" id="ph1" />, <ph dataRef="id2" id="ph2" />, :, ", &amp;#124;, ?, or \*.</target>
				</segment>
			</unit>
			<unit id="141" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>If specified, the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Entry point</pc> is also used.</source>
					<target>If specified, the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Entry point</pc> is also used.</target>
				</segment>
			</unit>
			<unit id="142" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>If the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Entry point</pc> isn't specified, the entry point defined for the app is used.</source>
					<target>If the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Entry point</pc> isn't specified, the entry point defined for the app is used.</target>
				</segment>
			</unit>
			<unit id="143" translate="yes">
				<segment state="initial">
					<source>Term</source>
					<target>Term</target>
				</segment>
			</unit>
			<unit id="144" translate="yes">
				<segment state="initial">
					<source>Description</source>
					<target>Description</target>
				</segment>
			</unit>
			<unit id="145" translate="yes">
				<segment state="initial">
					<source>Entry point</source>
					<target>Entry point</target>
				</segment>
			</unit>
			<unit id="146" translate="yes">
				<segment state="initial">
					<source>Specifies the task that handles the protocol extension.</source>
					<target>Specifies the task that handles the protocol extension.</target>
				</segment>
			</unit>
			<unit id="147" translate="yes">
				<segment state="initial">
					<source>This is normally the fully namespace-qualified name of a Windows Runtime type.</source>
					<target>This is normally the fully namespace-qualified name of a Windows Runtime type.</target>
				</segment>
			</unit>
			<unit id="148" translate="yes">
				<segment state="initial">
					<source>If not specified, the entry point for the app is used.</source>
					<target>If not specified, the entry point for the app is used.</target>
				</segment>
			</unit>
			<unit id="149" translate="yes">
				<segment state="initial">
					<source>Start page</source>
					<target>Start page</target>
				</segment>
			</unit>
			<unit id="150" translate="yes">
				<segment state="initial">
					<source>The web page that handles the extensibility point.</source>
					<target>The web page that handles the extensibility point.</target>
				</segment>
			</unit>
			<unit id="151" translate="yes">
				<segment state="initial">
					<source>Resource group</source>
					<target>Resource group</target>
				</segment>
			</unit>
			<unit id="152" translate="yes">
				<segment state="initial">
					<source>A tag that you can use to group extension activations together for resource management purposes.</source>
					<target>A tag that you can use to group extension activations together for resource management purposes.</target>
				</segment>
			</unit>
			<unit id="153" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Desired View</pc> (Windows-only)</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Desired View</pc> (Windows-only)</target>
				</segment>
			</unit>
			<unit id="154" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>Specify the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Desired View</pc> field to indicate the amount of space the app's window needs when it is launched for the URI scheme name.</source>
					<target>Specify the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Desired View</pc> field to indicate the amount of space the app's window needs when it is launched for the URI scheme name.</target>
				</segment>
			</unit>
			<unit id="155" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
					<data id="id9">**</data>
					<data id="id10">**</data>
					<data id="id11">**</data>
					<data id="id12">**</data>
				</originalData>
				<segment state="initial">
					<source>The possible values for <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Desired View</pc> are <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Default</pc>, <pc dataRefEnd="id6" dataRefStart="id5" id="p3">UseLess</pc>, <pc dataRefEnd="id8" dataRefStart="id7" id="p4">UseHalf</pc>, <pc dataRefEnd="id10" dataRefStart="id9" id="p5">UseMore</pc>, or <pc dataRefEnd="id12" dataRefStart="id11" id="p6">UseMinimum</pc>.</source>
					<target>The possible values for <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Desired View</pc> are <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Default</pc>, <pc dataRefEnd="id6" dataRefStart="id5" id="p3">UseLess</pc>, <pc dataRefEnd="id8" dataRefStart="id7" id="p4">UseHalf</pc>, <pc dataRefEnd="id10" dataRefStart="id9" id="p5">UseMore</pc>, or <pc dataRefEnd="id12" dataRefStart="id11" id="p6">UseMinimum</pc>.</target>
				</segment>
			</unit>
			<unit id="156" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  Windows takes into account multiple different factors when determining the target app's final window size, for example, the preference of the source app, the number of apps on screen, the screen orientation, and so on.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  Windows takes into account multiple different factors when determining the target app's final window size, for example, the preference of the source app, the number of apps on screen, the screen orientation, and so on.</target>
				</segment>
			</unit>
			<unit id="157" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>Setting <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Desired View</pc> doesn't guarantee a specific windowing behavior for the target app.</source>
					<target>Setting <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Desired View</pc> doesn't guarantee a specific windowing behavior for the target app.</target>
				</segment>
			</unit>
			<unit id="158" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Mobile device family:  Desired View</pc> isn't supported on the mobile device family.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Mobile device family:  Desired View</pc> isn't supported on the mobile device family.</target>
				</segment>
			</unit>
			<unit id="159" translate="yes">
				<originalData>
					<data id="id1">`images\Icon.png`</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
				</originalData>
				<segment state="initial">
					<source>Enter <ph dataRef="id1" id="ph1" /> as the <pc dataRefEnd="id3" dataRefStart="id2" id="p1">Logo</pc>.</source>
					<target>Enter <ph dataRef="id1" id="ph1" /> as the <pc dataRefEnd="id3" dataRefStart="id2" id="p1">Logo</pc>.</target>
				</segment>
			</unit>
			<unit id="160" translate="yes">
				<originalData>
					<data id="id1">`SDK Sample URI Scheme`</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
				</originalData>
				<segment state="initial">
					<source>Enter <ph dataRef="id1" id="ph1" /> as the <pc dataRefEnd="id3" dataRefStart="id2" id="p1">Display name</pc></source>
					<target>Enter <ph dataRef="id1" id="ph1" /> as the <pc dataRefEnd="id3" dataRefStart="id2" id="p1">Display name</pc></target>
				</segment>
			</unit>
			<unit id="161" translate="yes">
				<originalData>
					<data id="id1">`alsdk`</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
				</originalData>
				<segment state="initial">
					<source>Enter <ph dataRef="id1" id="ph1" /> as the <pc dataRefEnd="id3" dataRefStart="id2" id="p1">Name</pc>.</source>
					<target>Enter <ph dataRef="id1" id="ph1" /> as the <pc dataRefEnd="id3" dataRefStart="id2" id="p1">Name</pc>.</target>
				</segment>
			</unit>
			<unit id="162" translate="yes">
				<segment state="initial">
					<source>Press Ctrl+S to save the change to package.appxmanifest.</source>
					<target>Press Ctrl+S to save the change to package.appxmanifest.</target>
				</segment>
			</unit>
			<unit id="163" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br211400)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>This adds an <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Extension</pc></pc> element like this one to the package manifest.</source>
					<target>This adds an <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Extension</pc></pc> element like this one to the package manifest.</target>
				</segment>
			</unit>
			<unit id="164" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">`alsdk`</data>
				</originalData>
				<segment state="initial">
					<source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">windows.protocol</pc> category indicates that the app handles the <ph dataRef="id3" id="ph1" /> URI scheme name.</source>
					<target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">windows.protocol</pc> category indicates that the app handles the <ph dataRef="id3" id="ph1" /> URI scheme name.</target>
				</segment>
			</unit>
			<unit id="165" translate="yes">
				<segment state="initial">
					<source>Step 2: Add the proper icons</source>
					<target>Step 2: Add the proper icons</target>
				</segment>
			</unit>
			<unit id="166" translate="yes">
				<segment state="initial">
					<source>Apps that become the default for a URI scheme name have their icons displayed in various places throughout the system, for example, in the Default programs control panel.</source>
					<target>Apps that become the default for a URI scheme name have their icons displayed in various places throughout the system, for example, in the Default programs control panel.</target>
				</segment>
			</unit>
			<unit id="167" translate="yes">
				<segment state="initial">
					<source>We recommend that you include the proper icons with your project so that your logo looks great in all of these places.</source>
					<target>We recommend that you include the proper icons with your project so that your logo looks great in all of these places.</target>
				</segment>
			</unit>
			<unit id="168" translate="yes">
				<segment state="initial">
					<source>Match the look of the app tile logo and use your app's background color rather than making the icon transparent.</source>
					<target>Match the look of the app tile logo and use your app's background color rather than making the icon transparent.</target>
				</segment>
			</unit>
			<unit id="169" translate="yes">
				<segment state="initial">
					<source>Have the logo extend to the edge without padding it.</source>
					<target>Have the logo extend to the edge without padding it.</target>
				</segment>
			</unit>
			<unit id="170" translate="yes">
				<segment state="initial">
					<source>Test your icons on white backgrounds.</source>
					<target>Test your icons on white backgrounds.</target>
				</segment>
			</unit>
			<unit id="171" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](http://go.microsoft.com/fwlink/p/?LinkID=620490)</data>
				</originalData>
				<segment state="initial">
					<source>For example icons, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Association launching sample</pc>.</source>
					<target>For example icons, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Association launching sample</pc>.</target>
				</segment>
			</unit>
			<unit id="172" translate="yes">
				<segment state="initial">
					<source>the solution explorer with a view of the files in the images folder.</source>
					<target>the solution explorer with a view of the files in the images folder.</target>
				</segment>
			</unit>
			<unit id="173" translate="yes">
				<segment state="initial">
					<source>there are 16, 32, 48, and 256 pixel versions of both 'icon.targetsize' and 'smalltile-sdk'</source>
					<target>there are 16, 32, 48, and 256 pixel versions of both 'icon.targetsize' and 'smalltile-sdk'</target>
				</segment>
			</unit>
			<unit id="174" translate="yes">
				<segment state="initial">
					<source>Step 3: Handle the activated event</source>
					<target>Step 3: Handle the activated event</target>
				</segment>
			</unit>
			<unit id="175" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br242330)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">OnActivated</pc></pc> event handler receives all activation events.</source>
					<target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">OnActivated</pc></pc> event handler receives all activation events.</target>
				</segment>
			</unit>
			<unit id="176" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Kind</pc> property indicates the type of activation event.</source>
					<target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Kind</pc> property indicates the type of activation event.</target>
				</segment>
			</unit>
			<unit id="177" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.applicationmodel.activation.activationkind.aspx#Protocol)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>This example is set up to handle <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Protocol</pc></pc> activation events.</source>
					<target>This example is set up to handle <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Protocol</pc></pc> activation events.</target>
				</segment>
			</unit>
			<unit id="178" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  When launched via Protocol Contract, make sure that Back button takes the user back to the screen that launched the app and not to the app's previous content.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  When launched via Protocol Contract, make sure that Back button takes the user back to the screen that launched the app and not to the app's previous content.</target>
				</segment>
			</unit>
			<unit id="179" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br242682)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>It is recommended that apps create a new XAML <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Frame</pc></pc> for each activation event that opens a new page.</source>
					<target>It is recommended that apps create a new XAML <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Frame</pc></pc> for each activation event that opens a new page.</target>
				</segment>
			</unit>
			<unit id="180" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>This way, the navigation backstack for the new XAML <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Frame</pc> will not contain any previous content that the app might have on the current window when suspended.</source>
					<target>This way, the navigation backstack for the new XAML <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Frame</pc> will not contain any previous content that the app might have on the current window when suspended.</target>
				</segment>
			</unit>
			<unit id="181" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Apps that decide to use a single XAML <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Frame</pc> for Launch and File Contracts should clear the pages on the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Frame</pc> navigation journal before navigating to a new page.</source>
					<target>Apps that decide to use a single XAML <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Frame</pc> for Launch and File Contracts should clear the pages on the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Frame</pc> navigation journal before navigating to a new page.</target>
				</segment>
			</unit>
			<unit id="182" translate="yes">
				<segment state="initial">
					<source>When launched via Protocol activation, apps should consider including UI that allows the user to go back to the top page of the app.</source>
					<target>When launched via Protocol activation, apps should consider including UI that allows the user to go back to the top page of the app.</target>
				</segment>
			</unit>
			<unit id="183" translate="yes">
				<segment state="initial">
					<source>Remarks</source>
					<target>Remarks</target>
				</segment>
			</unit>
			<unit id="184" translate="yes">
				<segment state="initial">
					<source>Any app or website can use your URI scheme name, including malicious ones.</source>
					<target>Any app or website can use your URI scheme name, including malicious ones.</target>
				</segment>
			</unit>
			<unit id="185" translate="yes">
				<segment state="initial">
					<source>So any data that you get in the URI could come from an untrusted source.</source>
					<target>So any data that you get in the URI could come from an untrusted source.</target>
				</segment>
			</unit>
			<unit id="186" translate="yes">
				<segment state="initial">
					<source>We recommend that you never perform a permanent action based on the parameters that you receive in the URI.</source>
					<target>We recommend that you never perform a permanent action based on the parameters that you receive in the URI.</target>
				</segment>
			</unit>
			<unit id="187" translate="yes">
				<segment state="initial">
					<source>For example, URI parameters could be used to launch the app to a user's account page, but we recommend that you never use them to directly modify the user's account.</source>
					<target>For example, URI parameters could be used to launch the app to a user's account page, but we recommend that you never use them to directly modify the user's account.</target>
				</segment>
			</unit>
			<unit id="188" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">[</data>
					<data id="id4">](http://go.microsoft.com/fwlink/p/?LinkID=266550)</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  If you are creating a new URI scheme name for your app, be sure to follow the guidance in <pc dataRefEnd="id4" dataRefStart="id3" id="p2">RFC 4395</pc>.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  If you are creating a new URI scheme name for your app, be sure to follow the guidance in <pc dataRefEnd="id4" dataRefStart="id3" id="p2">RFC 4395</pc>.</target>
				</segment>
			</unit>
			<unit id="189" translate="yes">
				<segment state="initial">
					<source>This ensures that your name meets the standards for URI schemes.</source>
					<target>This ensures that your name meets the standards for URI schemes.</target>
				</segment>
			</unit>
			<unit id="190" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  When launched via Protocol Contract, make sure that Back button takes the user back to the screen that launched the app and not to the app's previous content.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  When launched via Protocol Contract, make sure that Back button takes the user back to the screen that launched the app and not to the app's previous content.</target>
				</segment>
			</unit>
			<unit id="191" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br242682)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>We recommend that apps create a new XAML <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Frame</pc></pc> for each activation event that opens a new Uri target.</source>
					<target>We recommend that apps create a new XAML <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Frame</pc></pc> for each activation event that opens a new Uri target.</target>
				</segment>
			</unit>
			<unit id="192" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>This way, the navigation backstack for the new XAML <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Frame</pc> will not contain any previous content that the app might have on the current window when suspended.</source>
					<target>This way, the navigation backstack for the new XAML <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Frame</pc> will not contain any previous content that the app might have on the current window when suspended.</target>
				</segment>
			</unit>
			<unit id="193" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br242682)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source>If you decide that you want your apps to use a single XAML <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Frame</pc></pc> for Launch and Protocol Contracts, clear the pages on the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Frame</pc> navigation journal before navigating to a new page.</source>
					<target>If you decide that you want your apps to use a single XAML <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Frame</pc></pc> for Launch and Protocol Contracts, clear the pages on the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Frame</pc> navigation journal before navigating to a new page.</target>
				</segment>
			</unit>
			<unit id="194" translate="yes">
				<segment state="initial">
					<source>When launched via Protocol Contract, consider including UI into your apps that allows the user to go back to the top of the app.</source>
					<target>When launched via Protocol Contract, consider including UI into your apps that allows the user to go back to the top of the app.</target>
				</segment>
			</unit>
			<unit id="195" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  This article is for Windows 10 developers writing Universal Windows Platform (UWP) apps.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  This article is for Windows 10 developers writing Universal Windows Platform (UWP) apps.</target>
				</segment>
			</unit>
			<unit id="196" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](http://go.microsoft.com/fwlink/p/?linkid=619132)</data>
				</originalData>
				<segment state="initial">
					<source>If you're developing for Windows 8.x or Windows Phone 8.x, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archived documentation</pc>.</source>
					<target>If you're developing for Windows 8.x or Windows Phone 8.x, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archived documentation</pc>.</target>
				</segment>
			</unit>
			<unit id="197" translate="yes">
				<segment state="initial">
					<source>Related topics</source>
					<target>Related topics</target>
				</segment>
			</unit>
			<unit id="198" translate="yes">
				<segment state="initial">
					<source>Complete example</source>
					<target>Complete example</target>
				</segment>
			</unit>
			<unit id="199" translate="yes">
				<segment state="initial">
					<source>Association launching sample</source>
					<target>Association launching sample</target>
				</segment>
			</unit>
			<unit id="200" translate="yes">
				<segment state="initial">
					<source>Concepts</source>
					<target>Concepts</target>
				</segment>
			</unit>
			<unit id="201" translate="yes">
				<segment state="initial">
					<source>Default Programs</source>
					<target>Default Programs</target>
				</segment>
			</unit>
			<unit id="202" translate="yes">
				<segment state="initial">
					<source>File Type and URI Associations Model</source>
					<target>File Type and URI Associations Model</target>
				</segment>
			</unit>
			<unit id="203" translate="yes">
				<segment state="initial">
					<source>Tasks</source>
					<target>Tasks</target>
				</segment>
			</unit>
			<unit id="204" translate="yes">
				<segment state="initial">
					<source>Launch the default app for a URI</source>
					<target>Launch the default app for a URI</target>
				</segment>
			</unit>
			<unit id="205" translate="yes">
				<segment state="initial">
					<source>Handle file activation</source>
					<target>Handle file activation</target>
				</segment>
			</unit>
			<unit id="206" translate="yes">
				<segment state="initial">
					<source>Guidelines</source>
					<target>Guidelines</target>
				</segment>
			</unit>
			<unit id="207" translate="yes">
				<segment state="initial">
					<source>Guidelines for file types and URIs</source>
					<target>Guidelines for file types and URIs</target>
				</segment>
			</unit>
			<unit id="208" translate="yes">
				<segment state="initial">
					<source>Reference</source>
					<target>Reference</target>
				</segment>
			</unit>
			<unit id="209" translate="yes">
				<segment state="initial">
					<source>AppX Package Manifest</source>
					<target>AppX Package Manifest</target>
				</segment>
			</unit>
			<unit id="210" translate="yes">
				<segment state="initial">
					<source>Windows.ApplicationModel.Activation.ProtocolActivatedEventArgs</source>
					<target>Windows.ApplicationModel.Activation.ProtocolActivatedEventArgs</target>
				</segment>
			</unit>
			<unit id="211" translate="yes">
				<segment state="initial">
					<source>Windows.UI.Xaml.Application.OnActivated</source>
					<target>Windows.UI.Xaml.Application.OnActivated</target>
				</segment>
			</unit>
		</group>
	</file>
</xliff>