<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="it-it" version="2.0" xml:space="preserve" xmlns="urn:oasis:names:tc:xliff:document:2.0">
	<file id="1">
		<mda:metadata>
			<mda:metaGroup>
				<mda:meta type="tool-id">mdxliff</mda:meta>
				<mda:meta type="tool-name">mdxliff</mda:meta>
				<mda:meta type="tool-version">1.0-00ddeee</mda:meta>
				<mda:meta type="tool-company">Microsoft</mda:meta>
			</mda:metaGroup>
		<mda:metaGroup><mda:meta type="olfilehash">7eddb8333419d19e490df1e6eb8650de9609c38e</mda:meta><mda:meta type="olfilepath">wdg-cpub-test\ndolci1\files\quickstart-accessing-homegroup-content.md</mda:meta><mda:meta type="oltranslationpriority"></mda:meta><mda:meta type="oltranslationtype">Human Translation</mda:meta><mda:meta type="olskeletonhash">70cc14bf14183b5493dbd44a689df811398b1ee8</mda:meta><mda:meta type="olxliffhash">8f0e775b81543b5289497414eb5d7bee5e865c84</mda:meta></mda:metaGroup></mda:metadata>
		<group id="content">
			<unit id="101" translate="yes">
				<segment state="initial">
					<source>Accessing HomeGroup content</source>
					<target>Accessing HomeGroup content</target>
				</segment>
			</unit>
			<unit id="102" translate="yes">
				<segment state="initial">
					<source>Access content stored in the user's HomeGroup folder, including pictures, music, and videos.</source>
					<target>Access content stored in the user's HomeGroup folder, including pictures, music, and videos.</target>
				</segment>
			</unit>
			<unit id="103" translate="yes">
				<segment state="initial">
					<source>Accessing HomeGroup content</source>
					<target>Accessing HomeGroup content</target>
				</segment>
			</unit>
			<unit id="104" translate="yes">
				<segment state="initial">
					<source>\[ Updated for UWP apps on Windows 10.</source>
					<target>\[ Updated for UWP apps on Windows 10.</target>
				</segment>
			</unit>
			<unit id="105" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](http://go.microsoft.com/fwlink/p/?linkid=619132)</data>
				</originalData>
				<segment state="initial">
					<source>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</source>
					<target>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</target>
				</segment>
			</unit>
			<unit id="106" translate="yes">
				<segment state="initial">
					<source>Important APIs</source>
					<target>Important APIs</target>
				</segment>
			</unit>
			<unit id="107" translate="yes">
				<segment state="initial">
					<source>Windows.Storage.KnownFolders class</source>
					<target>Windows.Storage.KnownFolders class</target>
				</segment>
			</unit>
			<unit id="108" translate="yes">
				<segment state="initial">
					<source>Access content stored in the user's HomeGroup folder, including pictures, music, and videos.</source>
					<target>Access content stored in the user's HomeGroup folder, including pictures, music, and videos.</target>
				</segment>
			</unit>
			<unit id="109" translate="yes">
				<segment state="initial">
					<source>Prerequisites</source>
					<target>Prerequisites</target>
				</segment>
			</unit>
			<unit id="110" translate="yes">
				<segment state="initial">
					<source>Understand async programming for Universal Windows Platform (UWP) apps</source>
					<target>Understand async programming for Universal Windows Platform (UWP) apps</target>
				</segment>
			</unit>
			<unit id="111" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/mt187337)</data>
				</originalData>
				<segment state="initial">
					<source>You can learn how to write asynchronous apps in C# or Visual Basic, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Call asynchronous APIs in C# or Visual Basic</pc>.</source>
					<target>You can learn how to write asynchronous apps in C# or Visual Basic, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Call asynchronous APIs in C# or Visual Basic</pc>.</target>
				</segment>
			</unit>
			<unit id="112" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/mt187334)</data>
				</originalData>
				<segment state="initial">
					<source>To learn how to write asynchronous apps in C++, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Asynchronous programming in C++</pc>.</source>
					<target>To learn how to write asynchronous apps in C++, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Asynchronous programming in C++</pc>.</target>
				</segment>
			</unit>
			<unit id="113" translate="yes">
				<segment state="initial">
					<source>App capabilty declarations</source>
					<target>App capabilty declarations</target>
				</segment>
			</unit>
			<unit id="114" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source>To access HomeGroup content, the user's machine must have a HomeGroup set up and your app must have at least one of the following capabilities: <pc dataRefEnd="id2" dataRefStart="id1" id="p1">picturesLibrary</pc>, <pc dataRefEnd="id4" dataRefStart="id3" id="p2">musicLibrary</pc>, or <pc dataRefEnd="id6" dataRefStart="id5" id="p3">videosLibrary</pc>.</source>
					<target>To access HomeGroup content, the user's machine must have a HomeGroup set up and your app must have at least one of the following capabilities: <pc dataRefEnd="id2" dataRefStart="id1" id="p1">picturesLibrary</pc>, <pc dataRefEnd="id4" dataRefStart="id3" id="p2">musicLibrary</pc>, or <pc dataRefEnd="id6" dataRefStart="id5" id="p3">videosLibrary</pc>.</target>
				</segment>
			</unit>
			<unit id="115" translate="yes">
				<segment state="initial">
					<source>When your app accesses the HomeGroup folder, it will see only the libraries that correspond to the capabilities declared in your app's manifest.</source>
					<target>When your app accesses the HomeGroup folder, it will see only the libraries that correspond to the capabilities declared in your app's manifest.</target>
				</segment>
			</unit>
			<unit id="116" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](file-access-permissions.md)</data>
				</originalData>
				<segment state="initial">
					<source>To learn more, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">File access permissions</pc>.</source>
					<target>To learn more, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">File access permissions</pc>.</target>
				</segment>
			</unit>
			<unit id="117" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  Content in the Documents library of a HomeGroup isn't visible to your app regardless of the capabilities declared in your app's manifest and regardless of the user's sharing settings.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  Content in the Documents library of a HomeGroup isn't visible to your app regardless of the capabilities declared in your app's manifest and regardless of the user's sharing settings.</target>
				</segment>
			</unit>
			<unit id="118" translate="yes">
				<segment state="initial">
					<source>Understand how to use file pickers</source>
					<target>Understand how to use file pickers</target>
				</segment>
			</unit>
			<unit id="119" translate="yes">
				<segment state="initial">
					<source>You typically use the file picker to access files and folders in the HomeGroup.</source>
					<target>You typically use the file picker to access files and folders in the HomeGroup.</target>
				</segment>
			</unit>
			<unit id="120" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](quickstart-using-file-and-folder-pickers.md)</data>
				</originalData>
				<segment state="initial">
					<source>To learn how to use the file picker, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Open files and folders with a picker</pc>.</source>
					<target>To learn how to use the file picker, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Open files and folders with a picker</pc>.</target>
				</segment>
			</unit>
			<unit id="121" translate="yes">
				<segment state="initial">
					<source>Understand file and folder queries</source>
					<target>Understand file and folder queries</target>
				</segment>
			</unit>
			<unit id="122" translate="yes">
				<segment state="initial">
					<source>You can use queries to enumerate files and folders in the HomeGroup.</source>
					<target>You can use queries to enumerate files and folders in the HomeGroup.</target>
				</segment>
			</unit>
			<unit id="123" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](quickstart-listing-files-and-folders.md)</data>
				</originalData>
				<segment state="initial">
					<source>To learn about file and folder queries, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Enumerating and querying files and folders</pc>.</source>
					<target>To learn about file and folder queries, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Enumerating and querying files and folders</pc>.</target>
				</segment>
			</unit>
			<unit id="124" translate="yes">
				<segment state="initial">
					<source>Open the file picker at the HomeGroup</source>
					<target>Open the file picker at the HomeGroup</target>
				</segment>
			</unit>
			<unit id="125" translate="yes">
				<segment state="initial">
					<source>Follow these steps to open an instance of the file picker that lets the user pick files and folders from the HomeGroup:</source>
					<target>Follow these steps to open an instance of the file picker that lets the user pick files and folders from the HomeGroup:</target>
				</segment>
			</unit>
			<unit id="126" translate="yes">
				<segment state="initial">
					<source>Create and customize the file picker</source>
					<target>Create and customize the file picker</target>
				</segment>
			</unit>
			<unit id="127" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br207847)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/br207854)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
					<data id="id9">[</data>
					<data id="id10">](https://msdn.microsoft.com/library/windows/apps/br207890)</data>
					<data id="id11">**</data>
					<data id="id12">**</data>
				</originalData>
				<segment state="initial">
					<source>Use <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">FileOpenPicker</pc></pc> to create the file picker, and then set the picker's <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">SuggestedStartLocation</pc></pc> to <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">PickerLocationId.HomeGroup</pc></pc>.</source>
					<target>Use <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">FileOpenPicker</pc></pc> to create the file picker, and then set the picker's <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">SuggestedStartLocation</pc></pc> to <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">PickerLocationId.HomeGroup</pc></pc>.</target>
				</segment>
			</unit>
			<unit id="128" translate="yes">
				<segment state="initial">
					<source>Or, set other properties that are relevant to your users and your app.</source>
					<target>Or, set other properties that are relevant to your users and your app.</target>
				</segment>
			</unit>
			<unit id="129" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/hh465182)</data>
				</originalData>
				<segment state="initial">
					<source>For guidelines to help you decide how to customize the file picker, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Guidelines and checklist for file pickers</pc></source>
					<target>For guidelines to help you decide how to customize the file picker, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Guidelines and checklist for file pickers</pc></target>
				</segment>
			</unit>
			<unit id="130" translate="yes">
				<segment state="initial">
					<source>This example creates a file picker that opens at the HomeGroup, includes files of any type, and displays the files as thumbnail images:</source>
					<target>This example creates a file picker that opens at the HomeGroup, includes files of any type, and displays the files as thumbnail images:</target>
				</segment>
			</unit>
			<unit id="131" translate="yes">
				<segment state="initial">
					<source>Show the file picker and process the picked file.</source>
					<target>Show the file picker and process the picked file.</target>
				</segment>
			</unit>
			<unit id="132" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/jj635275)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/br207851)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>After you create and customize the file picker, let the user pick one file by calling <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">FileOpenPicker.PickSingleFileAsync</pc></pc>, or multiple files by calling <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">FileOpenPicker.PickMultipleFilesAsync</pc></pc>.</source>
					<target>After you create and customize the file picker, let the user pick one file by calling <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">FileOpenPicker.PickSingleFileAsync</pc></pc>, or multiple files by calling <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">FileOpenPicker.PickMultipleFilesAsync</pc></pc>.</target>
				</segment>
			</unit>
			<unit id="133" translate="yes">
				<segment state="initial">
					<source>This example displays the file picker to let the user pick one file:</source>
					<target>This example displays the file picker to let the user pick one file:</target>
				</segment>
			</unit>
			<unit id="134" translate="yes">
				<segment state="initial">
					<source>Search the HomeGroup for files</source>
					<target>Search the HomeGroup for files</target>
				</segment>
			</unit>
			<unit id="135" translate="yes">
				<segment state="initial">
					<source>This section shows how to find HomeGroup items that match a query term provided by the user.</source>
					<target>This section shows how to find HomeGroup items that match a query term provided by the user.</target>
				</segment>
			</unit>
			<unit id="136" translate="yes">
				<segment state="initial">
					<source>Get the query term from the user.</source>
					<target>Get the query term from the user.</target>
				</segment>
			</unit>
			<unit id="137" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br209683)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">`searchQueryTextBox`</data>
				</originalData>
				<segment state="initial">
					<source>Here we get a query term that the user has entered into a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">TextBox</pc></pc> control called <ph dataRef="id5" id="ph1" />:</source>
					<target>Here we get a query term that the user has entered into a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">TextBox</pc></pc> control called <ph dataRef="id5" id="ph1" />:</target>
				</segment>
			</unit>
			<unit id="138" translate="yes">
				<segment state="initial">
					<source>Set the query options and search filter.</source>
					<target>Set the query options and search filter.</target>
				</segment>
			</unit>
			<unit id="139" translate="yes">
				<segment state="initial">
					<source>Query options determine how the search results are sorted, while the search filter determines which items are included in the search results.</source>
					<target>Query options determine how the search results are sorted, while the search filter determines which items are included in the search results.</target>
				</segment>
			</unit>
			<unit id="140" translate="yes">
				<segment state="initial">
					<source>This example sets query options that sort the search results by relevance and then the date modified.</source>
					<target>This example sets query options that sort the search results by relevance and then the date modified.</target>
				</segment>
			</unit>
			<unit id="141" translate="yes">
				<segment state="initial">
					<source>The search filter is the query term that the user entered in the previous step:</source>
					<target>The search filter is the query term that the user entered in the previous step:</target>
				</segment>
			</unit>
			<unit id="142" translate="yes">
				<segment state="initial">
					<source>Run the query and process the results.</source>
					<target>Run the query and process the results.</target>
				</segment>
			</unit>
			<unit id="143" translate="yes">
				<segment state="initial">
					<source>The following example runs the search query in the HomeGroup and saves the names of any matching files as a list of strings.</source>
					<target>The following example runs the search query in the HomeGroup and saves the names of any matching files as a list of strings.</target>
				</segment>
			</unit>
			<unit id="144" translate="yes">
				<segment state="initial">
					<source>Search the HomeGroup for a particular user's shared files</source>
					<target>Search the HomeGroup for a particular user's shared files</target>
				</segment>
			</unit>
			<unit id="145" translate="yes">
				<segment state="initial">
					<source>This section shows you how to find HomeGroup files that are shared by a particular user.</source>
					<target>This section shows you how to find HomeGroup files that are shared by a particular user.</target>
				</segment>
			</unit>
			<unit id="146" translate="yes">
				<segment state="initial">
					<source>Get a collection of HomeGroup users.</source>
					<target>Get a collection of HomeGroup users.</target>
				</segment>
			</unit>
			<unit id="147" translate="yes">
				<segment state="initial">
					<source>Each of the first-level folders in the HomeGroup represents an individual HomeGroup user.</source>
					<target>Each of the first-level folders in the HomeGroup represents an individual HomeGroup user.</target>
				</segment>
			</unit>
			<unit id="148" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br227279)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>So, to get the collection of HomeGroup users, call <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">GetFoldersAsync</pc></pc> retrieve the top-level HomeGroup folders.</source>
					<target>So, to get the collection of HomeGroup users, call <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">GetFoldersAsync</pc></pc> retrieve the top-level HomeGroup folders.</target>
				</segment>
			</unit>
			<unit id="149" translate="yes">
				<segment state="initial">
					<source>Find the target user's folder, and then create a file query scoped to that user's folder.</source>
					<target>Find the target user's folder, and then create a file query scoped to that user's folder.</target>
				</segment>
			</unit>
			<unit id="150" translate="yes">
				<segment state="initial">
					<source>The following example iterates through the retrieved folders to find the target user's folder.</source>
					<target>The following example iterates through the retrieved folders to find the target user's folder.</target>
				</segment>
			</unit>
			<unit id="151" translate="yes">
				<segment state="initial">
					<source>Then, it sets query options to find all files in the folder, sorted first by relevance and then by the date modified.</source>
					<target>Then, it sets query options to find all files in the folder, sorted first by relevance and then by the date modified.</target>
				</segment>
			</unit>
			<unit id="152" translate="yes">
				<segment state="initial">
					<source>The example builds a string that reports the number of files found, along with the names of the files.</source>
					<target>The example builds a string that reports the number of files found, along with the names of the files.</target>
				</segment>
			</unit>
			<unit id="153" translate="yes">
				<segment state="initial">
					<source>Stream video from the HomeGroup</source>
					<target>Stream video from the HomeGroup</target>
				</segment>
			</unit>
			<unit id="154" translate="yes">
				<segment state="initial">
					<source>Follow these steps to stream video content from the HomeGroup:</source>
					<target>Follow these steps to stream video content from the HomeGroup:</target>
				</segment>
			</unit>
			<unit id="155" translate="yes">
				<segment state="initial">
					<source>Include a MediaElement in your app.</source>
					<target>Include a MediaElement in your app.</target>
				</segment>
			</unit>
			<unit id="156" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br242926)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>A <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">MediaElement</pc></pc> lets you play back audio and video content in your app.</source>
					<target>A <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">MediaElement</pc></pc> lets you play back audio and video content in your app.</target>
				</segment>
			</unit>
			<unit id="157" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/mt187271)</data>
					<data id="id3">[</data>
					<data id="id4">](https://msdn.microsoft.com/library/windows/apps/mt203788)</data>
				</originalData>
				<segment state="initial">
					<source>For more information on audio and video playback, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Create custom transport controls</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Audio, video, and camera</pc>.</source>
					<target>For more information on audio and video playback, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Create custom transport controls</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Audio, video, and camera</pc>.</target>
				</segment>
			</unit>
			<unit id="158" translate="yes">
				<segment state="initial">
					<source>Open a file picker at the HomeGroup and apply a filter that includes video files in the formats that your app supports.</source>
					<target>Open a file picker at the HomeGroup and apply a filter that includes video files in the formats that your app supports.</target>
				</segment>
			</unit>
			<unit id="159" translate="yes">
				<segment state="initial">
					<source>This example includes .mp4 and .wmv files in the file open picker.</source>
					<target>This example includes .mp4 and .wmv files in the file open picker.</target>
				</segment>
			</unit>
			<unit id="160" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">[</data>
					<data id="id4">](https://msdn.microsoft.com/library/windows/apps/br242926)</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Open the the user's file selection for read access, and set the file stream as the source for the</pc> <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">MediaElement</pc></pc>, and then play the file.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Open the the user's file selection for read access, and set the file stream as the source for the</pc> <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">MediaElement</pc></pc>, and then play the file.</target>
				</segment>
			</unit>
		</group>
	</file>
</xliff>