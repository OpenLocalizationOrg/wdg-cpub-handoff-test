<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="it-it" version="2.0" xml:space="preserve" xmlns="urn:oasis:names:tc:xliff:document:2.0">
	<file id="1">
		<mda:metadata>
			<mda:metaGroup>
				<mda:meta type="tool-id">mdxliff</mda:meta>
				<mda:meta type="tool-name">mdxliff</mda:meta>
				<mda:meta type="tool-version">1.0-00ddeee</mda:meta>
				<mda:meta type="tool-company">Microsoft</mda:meta>
			</mda:metaGroup>
		<mda:metaGroup><mda:meta type="olfilehash">19c247090f5679d84bf52a08b53ea7753f2acc2f</mda:meta><mda:meta type="olfilepath">wdg-cpub-test\ndolci2\controls-and-patterns\control-templates.md</mda:meta><mda:meta type="oltranslationpriority"></mda:meta><mda:meta type="oltranslationtype">Human Translation</mda:meta><mda:meta type="olskeletonhash">690468ffa1aeefc8f4b2da4a36951c4ea728a9b0</mda:meta><mda:meta type="olxliffhash">59d2f4b95ded79f95ee2784f0324242b72ce9b0b</mda:meta></mda:metaGroup></mda:metadata>
		<group id="content">
			<unit id="101" translate="yes">
				<segment state="initial">
					<source>You can customize a control's visual structure and visual behavior by creating a control template in the XAML framework.</source>
					<target>You can customize a control's visual structure and visual behavior by creating a control template in the XAML framework.</target>
				</segment>
			</unit>
			<unit id="102" translate="yes">
				<segment state="initial">
					<source>Control templates</source>
					<target>Control templates</target>
				</segment>
			</unit>
			<unit id="103" translate="yes">
				<segment state="initial">
					<source>Control templates</source>
					<target>Control templates</target>
				</segment>
			</unit>
			<unit id="104" translate="yes">
				<segment state="initial">
					<source>\[ Updated for UWP apps on Windows 10.</source>
					<target>\[ Updated for UWP apps on Windows 10.</target>
				</segment>
			</unit>
			<unit id="105" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](http://go.microsoft.com/fwlink/p/?linkid=619132)</data>
				</originalData>
				<segment state="initial">
					<source>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</source>
					<target>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</target>
				</segment>
			</unit>
			<unit id="106" translate="yes">
				<segment state="initial">
					<source>Important APIs</source>
					<target>Important APIs</target>
				</segment>
			</unit>
			<unit id="107" translate="yes">
				<segment state="initial">
					<source>ControlTemplate class</source>
					<target>ControlTemplate class</target>
				</segment>
			</unit>
			<unit id="108" translate="yes">
				<segment state="initial">
					<source>Control.Template property</source>
					<target>Control.Template property</target>
				</segment>
			</unit>
			<unit id="109" translate="yes">
				<segment state="initial">
					<source>You can customize a control's visual structure and visual behavior by creating a control template in the XAML framework.</source>
					<target>You can customize a control's visual structure and visual behavior by creating a control template in the XAML framework.</target>
				</segment>
			</unit>
			<unit id="110" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br209395)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/br209414)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
					<data id="id9">[</data>
					<data id="id10">](https://msdn.microsoft.com/library/windows/apps/br209404)</data>
					<data id="id11">**</data>
					<data id="id12">**</data>
				</originalData>
				<segment state="initial">
					<source>Controls have many properties, such as <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Background</pc></pc>, <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Foreground</pc></pc>, and <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">FontFamily</pc></pc>, that you can set to specify different aspects of the control's appearance.</source>
					<target>Controls have many properties, such as <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Background</pc></pc>, <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Foreground</pc></pc>, and <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">FontFamily</pc></pc>, that you can set to specify different aspects of the control's appearance.</target>
				</segment>
			</unit>
			<unit id="111" translate="yes">
				<segment state="initial">
					<source>But the changes that you can make by setting these properties are limited.</source>
					<target>But the changes that you can make by setting these properties are limited.</target>
				</segment>
			</unit>
			<unit id="112" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br209391)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>You can specify additional customizations by creating a template using the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ControlTemplate</pc></pc> class.</source>
					<target>You can specify additional customizations by creating a template using the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ControlTemplate</pc></pc> class.</target>
				</segment>
			</unit>
			<unit id="113" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">[</data>
					<data id="id4">](https://msdn.microsoft.com/library/windows/apps/br209316)</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source>Here, we show you how to create a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ControlTemplate</pc> to customize the appearance of a <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">CheckBox</pc></pc> control.</source>
					<target>Here, we show you how to create a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ControlTemplate</pc> to customize the appearance of a <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">CheckBox</pc></pc> control.</target>
				</segment>
			</unit>
			<unit id="114" translate="yes">
				<segment state="initial">
					<source>Custom control template example</source>
					<target>Custom control template example</target>
				</segment>
			</unit>
			<unit id="115" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br209316)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>By default, a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CheckBox</pc></pc> control puts its content (the string or object next to the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">CheckBox</pc>) to the right of the selection box, and a check mark indicates that a user selected the <pc dataRefEnd="id8" dataRefStart="id7" id="p4">CheckBox</pc>.</source>
					<target>By default, a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CheckBox</pc></pc> control puts its content (the string or object next to the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">CheckBox</pc>) to the right of the selection box, and a check mark indicates that a user selected the <pc dataRefEnd="id8" dataRefStart="id7" id="p4">CheckBox</pc>.</target>
				</segment>
			</unit>
			<unit id="116" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>These characteristics represent the visual structure and visual behavior of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">CheckBox</pc>.</source>
					<target>These characteristics represent the visual structure and visual behavior of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">CheckBox</pc>.</target>
				</segment>
			</unit>
			<unit id="117" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br209316)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/br209391)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
					<data id="id9">`Unchecked`</data>
					<data id="id10">`Checked`</data>
					<data id="id11">`Indeterminate`</data>
				</originalData>
				<segment state="initial">
					<source>Here's a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CheckBox</pc></pc> using the default <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">ControlTemplate</pc></pc> shown in the <ph dataRef="id9" id="ph1" />, <ph dataRef="id10" id="ph2" />, and <ph dataRef="id11" id="ph3" /> states.</source>
					<target>Here's a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CheckBox</pc></pc> using the default <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">ControlTemplate</pc></pc> shown in the <ph dataRef="id9" id="ph1" />, <ph dataRef="id10" id="ph2" />, and <ph dataRef="id11" id="ph3" /> states.</target>
				</segment>
			</unit>
			<unit id="118" translate="yes">
				<segment state="initial">
					<source>default checkbox template</source>
					<target>default checkbox template</target>
				</segment>
			</unit>
			<unit id="119" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br209391)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/br209316)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>You can change these characteristics by creating a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ControlTemplate</pc></pc> for the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">CheckBox</pc></pc>.</source>
					<target>You can change these characteristics by creating a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ControlTemplate</pc></pc> for the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">CheckBox</pc></pc>.</target>
				</segment>
			</unit>
			<unit id="120" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>For example, if you want the content of the check box to be below the selection box, and you want to use an <pc dataRefEnd="id2" dataRefStart="id1" id="p1">X</pc> to indicate that a user selected the check box.</source>
					<target>For example, if you want the content of the check box to be below the selection box, and you want to use an <pc dataRefEnd="id2" dataRefStart="id1" id="p1">X</pc> to indicate that a user selected the check box.</target>
				</segment>
			</unit>
			<unit id="121" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>You specify these characteristics in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ControlTemplate</pc> of the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">CheckBox</pc>.</source>
					<target>You specify these characteristics in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ControlTemplate</pc> of the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">CheckBox</pc>.</target>
				</segment>
			</unit>
			<unit id="122" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br209391)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/br209465)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>To use a custom template with a control, assign the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ControlTemplate</pc></pc> to the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Template</pc></pc> property of the control.</source>
					<target>To use a custom template with a control, assign the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ControlTemplate</pc></pc> to the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Template</pc></pc> property of the control.</target>
				</segment>
			</unit>
			<unit id="123" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br209316)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
					<data id="id7">`CheckBoxTemplate1`</data>
				</originalData>
				<segment state="initial">
					<source>Here's a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CheckBox</pc></pc> using a <pc dataRefEnd="id6" dataRefStart="id5" id="p3">ControlTemplate</pc> called <ph dataRef="id7" id="ph1" />.</source>
					<target>Here's a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CheckBox</pc></pc> using a <pc dataRefEnd="id6" dataRefStart="id5" id="p3">ControlTemplate</pc> called <ph dataRef="id7" id="ph1" />.</target>
				</segment>
			</unit>
			<unit id="124" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>We show the Extensible Application Markup Language (XAML) for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ControlTemplate</pc> in the next section.</source>
					<target>We show the Extensible Application Markup Language (XAML) for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ControlTemplate</pc> in the next section.</target>
				</segment>
			</unit>
			<unit id="125" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br209316)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">`Unchecked`</data>
					<data id="id6">`Checked`</data>
					<data id="id7">`Indeterminate`</data>
				</originalData>
				<segment state="initial">
					<source>Here's how this <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CheckBox</pc></pc> looks in the <ph dataRef="id5" id="ph1" />, <ph dataRef="id6" id="ph2" />, and <ph dataRef="id7" id="ph3" /> states after we apply our template.</source>
					<target>Here's how this <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CheckBox</pc></pc> looks in the <ph dataRef="id5" id="ph1" />, <ph dataRef="id6" id="ph2" />, and <ph dataRef="id7" id="ph3" /> states after we apply our template.</target>
				</segment>
			</unit>
			<unit id="126" translate="yes">
				<segment state="initial">
					<source>custom checkbox template</source>
					<target>custom checkbox template</target>
				</segment>
			</unit>
			<unit id="127" translate="yes">
				<segment state="initial">
					<source>Specify the visual structure of a control</source>
					<target>Specify the visual structure of a control</target>
				</segment>
			</unit>
			<unit id="128" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br209391)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/br208706)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>When you create a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ControlTemplate</pc></pc>, you combine <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">FrameworkElement</pc></pc> objects to build a single control.</source>
					<target>When you create a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ControlTemplate</pc></pc>, you combine <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">FrameworkElement</pc></pc> objects to build a single control.</target>
				</segment>
			</unit>
			<unit id="129" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>A <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ControlTemplate</pc> must have only one <pc dataRefEnd="id4" dataRefStart="id3" id="p2">FrameworkElement</pc> as its root element.</source>
					<target>A <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ControlTemplate</pc> must have only one <pc dataRefEnd="id4" dataRefStart="id3" id="p2">FrameworkElement</pc> as its root element.</target>
				</segment>
			</unit>
			<unit id="130" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>The root element usually contains other <pc dataRefEnd="id2" dataRefStart="id1" id="p1">FrameworkElement</pc> objects.</source>
					<target>The root element usually contains other <pc dataRefEnd="id2" dataRefStart="id1" id="p1">FrameworkElement</pc> objects.</target>
				</segment>
			</unit>
			<unit id="131" translate="yes">
				<segment state="initial">
					<source>The combination of objects makes up the control's visual structure.</source>
					<target>The combination of objects makes up the control's visual structure.</target>
				</segment>
			</unit>
			<unit id="132" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br209391)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/br209316)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>This XAML creates a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ControlTemplate</pc></pc> for a <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">CheckBox</pc></pc> that specifies that the content of the control is below the selection box.</source>
					<target>This XAML creates a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ControlTemplate</pc></pc> for a <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">CheckBox</pc></pc> that specifies that the content of the control is below the selection box.</target>
				</segment>
			</unit>
			<unit id="133" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br209250)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>The root element is a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Border</pc></pc>.</source>
					<target>The root element is a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Border</pc></pc>.</target>
				</segment>
			</unit>
			<unit id="134" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br243355)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
					<data id="id9">[</data>
					<data id="id10">](https://msdn.microsoft.com/library/windows/apps/br243343)</data>
					<data id="id11">**</data>
					<data id="id12">**</data>
				</originalData>
				<segment state="initial">
					<source>The example specifies a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Path</pc></pc> to create an <pc dataRefEnd="id6" dataRefStart="id5" id="p3">X</pc> that indicates that a user selected the <pc dataRefEnd="id8" dataRefStart="id7" id="p4">CheckBox</pc>, and an <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">Ellipse</pc></pc> that indicates an indeterminate state.</source>
					<target>The example specifies a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Path</pc></pc> to create an <pc dataRefEnd="id6" dataRefStart="id5" id="p3">X</pc> that indicates that a user selected the <pc dataRefEnd="id8" dataRefStart="id7" id="p4">CheckBox</pc>, and an <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">Ellipse</pc></pc> that indicates an indeterminate state.</target>
				</segment>
			</unit>
			<unit id="135" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br208962)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>Note that the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Opacity</pc></pc> is set to 0 on the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Path</pc> and the <pc dataRefEnd="id8" dataRefStart="id7" id="p4">Ellipse</pc> so that by default, neither appear.</source>
					<target>Note that the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Opacity</pc></pc> is set to 0 on the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Path</pc> and the <pc dataRefEnd="id8" dataRefStart="id7" id="p4">Ellipse</pc> so that by default, neither appear.</target>
				</segment>
			</unit>
			<unit id="136" translate="yes">
				<segment state="initial">
					<source>Specify the visual behavior of a control</source>
					<target>Specify the visual behavior of a control</target>
				</segment>
			</unit>
			<unit id="137" translate="yes">
				<segment state="initial">
					<source>A visual behavior specifies the appearance of a control when it is in a certain state.</source>
					<target>A visual behavior specifies the appearance of a control when it is in a certain state.</target>
				</segment>
			</unit>
			<unit id="138" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br209316)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">`Checked`</data>
					<data id="id6">`Unchecked`</data>
					<data id="id7">`Indeterminate`</data>
				</originalData>
				<segment state="initial">
					<source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CheckBox</pc></pc> control has 3 check states: <ph dataRef="id5" id="ph1" />, <ph dataRef="id6" id="ph2" />, and <ph dataRef="id7" id="ph3" />.</source>
					<target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CheckBox</pc></pc> control has 3 check states: <ph dataRef="id5" id="ph1" />, <ph dataRef="id6" id="ph2" />, and <ph dataRef="id7" id="ph3" />.</target>
				</segment>
			</unit>
			<unit id="139" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br209798)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source>The value of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">IsChecked</pc></pc> property determines the state of the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">CheckBox</pc>, and its state determines what appears in the box.</source>
					<target>The value of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">IsChecked</pc></pc> property determines the state of the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">CheckBox</pc>, and its state determines what appears in the box.</target>
				</segment>
			</unit>
			<unit id="140" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br209798)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/br209316)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
					<data id="id9">**</data>
					<data id="id10">**</data>
				</originalData>
				<segment state="initial">
					<source>This table lists the possible values of <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">IsChecked</pc></pc>, the corresponding states of the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">CheckBox</pc></pc>, and the appearance of the <pc dataRefEnd="id10" dataRefStart="id9" id="p5">CheckBox</pc>.</source>
					<target>This table lists the possible values of <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">IsChecked</pc></pc>, the corresponding states of the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">CheckBox</pc></pc>, and the appearance of the <pc dataRefEnd="id10" dataRefStart="id9" id="p5">CheckBox</pc>.</target>
				</segment>
			</unit>
			<unit id="141" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">IsChecked</pc> value</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">IsChecked</pc> value</target>
				</segment>
			</unit>
			<unit id="142" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">CheckBox</pc> state</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">CheckBox</pc> state</target>
				</segment>
			</unit>
			<unit id="143" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">CheckBox</pc> appearance</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">CheckBox</pc> appearance</target>
				</segment>
			</unit>
			<unit id="144" translate="yes">
				<segment state="initial">
					<source>true</source>
					<target>true</target>
				</segment>
			</unit>
			<unit id="145" translate="yes">
				<segment state="initial">
					<source>Contains an "X".</source>
					<target>Contains an "X".</target>
				</segment>
			</unit>
			<unit id="146" translate="yes">
				<segment state="initial">
					<source>false</source>
					<target>false</target>
				</segment>
			</unit>
			<unit id="147" translate="yes">
				<segment state="initial">
					<source>Empty.</source>
					<target>Empty.</target>
				</segment>
			</unit>
			<unit id="148" translate="yes">
				<segment state="initial">
					<source>null</source>
					<target>null</target>
				</segment>
			</unit>
			<unit id="149" translate="yes">
				<segment state="initial">
					<source>Contains a circle.</source>
					<target>Contains a circle.</target>
				</segment>
			</unit>
			<unit id="150" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br209007)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>You specify the appearance of a control when it is in a certain state by using <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">VisualState</pc></pc> objects.</source>
					<target>You specify the appearance of a control when it is in a certain state by using <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">VisualState</pc></pc> objects.</target>
				</segment>
			</unit>
			<unit id="151" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">[</data>
					<data id="id4">](https://msdn.microsoft.com/library/windows/apps/br208817)</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
					<data id="id7">[</data>
					<data id="id8">](https://msdn.microsoft.com/library/windows/apps/br243053)</data>
					<data id="id9">**</data>
					<data id="id10">**</data>
					<data id="id11">[</data>
					<data id="id12">](https://msdn.microsoft.com/library/windows/apps/br209391)</data>
					<data id="id13">**</data>
					<data id="id14">**</data>
				</originalData>
				<segment state="initial">
					<source>A <pc dataRefEnd="id2" dataRefStart="id1" id="p1">VisualState</pc> contains a <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">Setter</pc></pc> or <pc dataRefEnd="id8" dataRefStart="id7" id="p4"><pc dataRefEnd="id10" dataRefStart="id9" id="p5">Storyboard</pc></pc> that changes the appearance of the elements in the <pc dataRefEnd="id12" dataRefStart="id11" id="p6"><pc dataRefEnd="id14" dataRefStart="id13" id="p7">ControlTemplate</pc></pc>.</source>
					<target>A <pc dataRefEnd="id2" dataRefStart="id1" id="p1">VisualState</pc> contains a <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">Setter</pc></pc> or <pc dataRefEnd="id8" dataRefStart="id7" id="p4"><pc dataRefEnd="id10" dataRefStart="id9" id="p5">Storyboard</pc></pc> that changes the appearance of the elements in the <pc dataRefEnd="id12" dataRefStart="id11" id="p6"><pc dataRefEnd="id14" dataRefStart="id13" id="p7">ControlTemplate</pc></pc>.</target>
				</segment>
			</unit>
			<unit id="152" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br209031)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
					<data id="id7">[</data>
					<data id="id8">](https://msdn.microsoft.com/library/windows/apps/br210490)</data>
					<data id="id9">**</data>
					<data id="id10">**</data>
				</originalData>
				<segment state="initial">
					<source>When the control enters the state that the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">VisualState.Name</pc></pc> property specifies, the property changes in the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Setter</pc> or <pc dataRefEnd="id8" dataRefStart="id7" id="p4"><pc dataRefEnd="id10" dataRefStart="id9" id="p5">Storyboard</pc></pc> are applied.</source>
					<target>When the control enters the state that the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">VisualState.Name</pc></pc> property specifies, the property changes in the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Setter</pc> or <pc dataRefEnd="id8" dataRefStart="id7" id="p4"><pc dataRefEnd="id10" dataRefStart="id9" id="p5">Storyboard</pc></pc> are applied.</target>
				</segment>
			</unit>
			<unit id="153" translate="yes">
				<segment state="initial">
					<source>When the control exits the state, the changes are removed.</source>
					<target>When the control exits the state, the changes are removed.</target>
				</segment>
			</unit>
			<unit id="154" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">[</data>
					<data id="id4">](https://msdn.microsoft.com/library/windows/apps/br209014)</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source>You add <pc dataRefEnd="id2" dataRefStart="id1" id="p1">VisualState</pc> objects to <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">VisualStateGroup</pc></pc> objects.</source>
					<target>You add <pc dataRefEnd="id2" dataRefStart="id1" id="p1">VisualState</pc> objects to <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">VisualStateGroup</pc></pc> objects.</target>
				</segment>
			</unit>
			<unit id="155" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">[</data>
					<data id="id4">](https://msdn.microsoft.com/library/windows/apps/hh738505)</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
					<data id="id7">[</data>
					<data id="id8">](https://msdn.microsoft.com/library/windows/apps/br208706)</data>
					<data id="id9">**</data>
					<data id="id10">**</data>
					<data id="id11">**</data>
					<data id="id12">**</data>
				</originalData>
				<segment state="initial">
					<source>You add <pc dataRefEnd="id2" dataRefStart="id1" id="p1">VisualStateGroup</pc> objects to the <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">VisualStateManager.VisualStateGroups</pc></pc> attached property, which you set on the root <pc dataRefEnd="id8" dataRefStart="id7" id="p4"><pc dataRefEnd="id10" dataRefStart="id9" id="p5">FrameworkElement</pc></pc> of the <pc dataRefEnd="id12" dataRefStart="id11" id="p6">ControlTemplate</pc>.</source>
					<target>You add <pc dataRefEnd="id2" dataRefStart="id1" id="p1">VisualStateGroup</pc> objects to the <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">VisualStateManager.VisualStateGroups</pc></pc> attached property, which you set on the root <pc dataRefEnd="id8" dataRefStart="id7" id="p4"><pc dataRefEnd="id10" dataRefStart="id9" id="p5">FrameworkElement</pc></pc> of the <pc dataRefEnd="id12" dataRefStart="id11" id="p6">ControlTemplate</pc>.</target>
				</segment>
			</unit>
			<unit id="156" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br209007)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">`Checked`</data>
					<data id="id6">`Unchecked`</data>
					<data id="id7">`Indeterminate`</data>
				</originalData>
				<segment state="initial">
					<source>This XAML shows the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">VisualState</pc></pc> objects for the <ph dataRef="id5" id="ph1" />, <ph dataRef="id6" id="ph2" />, and <ph dataRef="id7" id="ph3" /> states.</source>
					<target>This XAML shows the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">VisualState</pc></pc> objects for the <ph dataRef="id5" id="ph1" />, <ph dataRef="id6" id="ph2" />, and <ph dataRef="id7" id="ph3" /> states.</target>
				</segment>
			</unit>
			<unit id="157" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/hh738505)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/br209250)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
					<data id="id9">[</data>
					<data id="id10">](https://msdn.microsoft.com/library/windows/apps/br209391)</data>
					<data id="id11">**</data>
					<data id="id12">**</data>
				</originalData>
				<segment state="initial">
					<source>The example sets the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">VisualStateManager.VisualStateGroups</pc></pc> attached property on the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Border</pc></pc>, which is the root element of the <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">ControlTemplate</pc></pc>.</source>
					<target>The example sets the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">VisualStateManager.VisualStateGroups</pc></pc> attached property on the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Border</pc></pc>, which is the root element of the <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">ControlTemplate</pc></pc>.</target>
				</segment>
			</unit>
			<unit id="158" translate="yes">
				<originalData>
					<data id="id1">`Checked`</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">[</data>
					<data id="id5">](https://msdn.microsoft.com/library/windows/apps/br208962)</data>
					<data id="id6">**</data>
					<data id="id7">**</data>
					<data id="id8">[</data>
					<data id="id9">](https://msdn.microsoft.com/library/windows/apps/br243355)</data>
					<data id="id10">**</data>
					<data id="id11">**</data>
					<data id="id12">`CheckGlyph`</data>
				</originalData>
				<segment state="initial">
					<source>The <ph dataRef="id1" id="ph1" /> <pc dataRefEnd="id3" dataRefStart="id2" id="p1">VisualState</pc> specifies that the <pc dataRefEnd="id5" dataRefStart="id4" id="p2"><pc dataRefEnd="id7" dataRefStart="id6" id="p3">Opacity</pc></pc> of the <pc dataRefEnd="id9" dataRefStart="id8" id="p4"><pc dataRefEnd="id11" dataRefStart="id10" id="p5">Path</pc></pc> named <ph dataRef="id12" id="ph2" /> (which we show in the previous example) is 1.</source>
					<target>The <ph dataRef="id1" id="ph1" /> <pc dataRefEnd="id3" dataRefStart="id2" id="p1">VisualState</pc> specifies that the <pc dataRefEnd="id5" dataRefStart="id4" id="p2"><pc dataRefEnd="id7" dataRefStart="id6" id="p3">Opacity</pc></pc> of the <pc dataRefEnd="id9" dataRefStart="id8" id="p4"><pc dataRefEnd="id11" dataRefStart="id10" id="p5">Path</pc></pc> named <ph dataRef="id12" id="ph2" /> (which we show in the previous example) is 1.</target>
				</segment>
			</unit>
			<unit id="159" translate="yes">
				<originalData>
					<data id="id1">`Indeterminate`</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">[</data>
					<data id="id7">](https://msdn.microsoft.com/library/windows/apps/br243343)</data>
					<data id="id8">**</data>
					<data id="id9">**</data>
					<data id="id10">`IndeterminateGlyph`</data>
				</originalData>
				<segment state="initial">
					<source>The <ph dataRef="id1" id="ph1" /> <pc dataRefEnd="id3" dataRefStart="id2" id="p1">VisualState</pc> specifies that the <pc dataRefEnd="id5" dataRefStart="id4" id="p2">Opacity</pc> of the <pc dataRefEnd="id7" dataRefStart="id6" id="p3"><pc dataRefEnd="id9" dataRefStart="id8" id="p4">Ellipse</pc></pc> named <ph dataRef="id10" id="ph2" /> is 1.</source>
					<target>The <ph dataRef="id1" id="ph1" /> <pc dataRefEnd="id3" dataRefStart="id2" id="p1">VisualState</pc> specifies that the <pc dataRefEnd="id5" dataRefStart="id4" id="p2">Opacity</pc> of the <pc dataRefEnd="id7" dataRefStart="id6" id="p3"><pc dataRefEnd="id9" dataRefStart="id8" id="p4">Ellipse</pc></pc> named <ph dataRef="id10" id="ph2" /> is 1.</target>
				</segment>
			</unit>
			<unit id="160" translate="yes">
				<originalData>
					<data id="id1">`Unchecked`</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">[</data>
					<data id="id5">](https://msdn.microsoft.com/library/windows/apps/br208817)</data>
					<data id="id6">**</data>
					<data id="id7">**</data>
					<data id="id8">[</data>
					<data id="id9">](https://msdn.microsoft.com/library/windows/apps/br210490)</data>
					<data id="id10">**</data>
					<data id="id11">**</data>
					<data id="id12">[</data>
					<data id="id13">](https://msdn.microsoft.com/library/windows/apps/br209316)</data>
					<data id="id14">**</data>
					<data id="id15">**</data>
				</originalData>
				<segment state="initial">
					<source>The <ph dataRef="id1" id="ph1" /> <pc dataRefEnd="id3" dataRefStart="id2" id="p1">VisualState</pc> has no <pc dataRefEnd="id5" dataRefStart="id4" id="p2"><pc dataRefEnd="id7" dataRefStart="id6" id="p3">Setter</pc></pc> or <pc dataRefEnd="id9" dataRefStart="id8" id="p4"><pc dataRefEnd="id11" dataRefStart="id10" id="p5">Storyboard</pc></pc>, so the <pc dataRefEnd="id13" dataRefStart="id12" id="p6"><pc dataRefEnd="id15" dataRefStart="id14" id="p7">CheckBox</pc></pc> returns to its default appearance.</source>
					<target>The <ph dataRef="id1" id="ph1" /> <pc dataRefEnd="id3" dataRefStart="id2" id="p1">VisualState</pc> has no <pc dataRefEnd="id5" dataRefStart="id4" id="p2"><pc dataRefEnd="id7" dataRefStart="id6" id="p3">Setter</pc></pc> or <pc dataRefEnd="id9" dataRefStart="id8" id="p4"><pc dataRefEnd="id11" dataRefStart="id10" id="p5">Storyboard</pc></pc>, so the <pc dataRefEnd="id13" dataRefStart="id12" id="p6"><pc dataRefEnd="id15" dataRefStart="id14" id="p7">CheckBox</pc></pc> returns to its default appearance.</target>
				</segment>
			</unit>
			<unit id="161" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br209007)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/br209316)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
					<data id="id9">`Unchecked`</data>
					<data id="id10">`Checked`</data>
					<data id="id11">`Indeterminate`</data>
					<data id="id12">`Unchecked`</data>
				</originalData>
				<segment state="initial">
					<source>To better understand how <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">VisualState</pc></pc> objects work, consider what happens when the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">CheckBox</pc></pc> goes from the <ph dataRef="id9" id="ph1" /> state to the <ph dataRef="id10" id="ph2" /> state, then to the <ph dataRef="id11" id="ph3" /> state, and then back to the <ph dataRef="id12" id="ph4" /> state.</source>
					<target>To better understand how <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">VisualState</pc></pc> objects work, consider what happens when the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">CheckBox</pc></pc> goes from the <ph dataRef="id9" id="ph1" /> state to the <ph dataRef="id10" id="ph2" /> state, then to the <ph dataRef="id11" id="ph3" /> state, and then back to the <ph dataRef="id12" id="ph4" /> state.</target>
				</segment>
			</unit>
			<unit id="162" translate="yes">
				<segment state="initial">
					<source>Here are the transitions.</source>
					<target>Here are the transitions.</target>
				</segment>
			</unit>
			<unit id="163" translate="yes">
				<segment state="initial">
					<source>State transition</source>
					<target>State transition</target>
				</segment>
			</unit>
			<unit id="164" translate="yes">
				<segment state="initial">
					<source>What happens</source>
					<target>What happens</target>
				</segment>
			</unit>
			<unit id="165" translate="yes">
				<segment state="initial">
					<source>CheckBox appearance when the transition completes</source>
					<target>CheckBox appearance when the transition completes</target>
				</segment>
			</unit>
			<unit id="166" translate="yes">
				<originalData>
					<data id="id1">`Unchecked`</data>
					<data id="id2">`Checked`</data>
				</originalData>
				<segment state="initial">
					<source>From <ph dataRef="id1" id="ph1" /> to <ph dataRef="id2" id="ph2" />.</source>
					<target>From <ph dataRef="id1" id="ph1" /> to <ph dataRef="id2" id="ph2" />.</target>
				</segment>
			</unit>
			<unit id="167" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br208817)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">`Checked`</data>
					<data id="id6">[</data>
					<data id="id7">](https://msdn.microsoft.com/library/windows/apps/br209007)</data>
					<data id="id8">**</data>
					<data id="id9">**</data>
					<data id="id10">[</data>
					<data id="id11">](https://msdn.microsoft.com/library/windows/apps/br208962)</data>
					<data id="id12">**</data>
					<data id="id13">**</data>
					<data id="id14">`CheckGlyph`</data>
				</originalData>
				<segment state="initial">
					<source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Setter</pc></pc> value of the <ph dataRef="id5" id="ph1" /> <pc dataRefEnd="id7" dataRefStart="id6" id="p3"><pc dataRefEnd="id9" dataRefStart="id8" id="p4">VisualState</pc></pc> is applied, so the <pc dataRefEnd="id11" dataRefStart="id10" id="p5"><pc dataRefEnd="id13" dataRefStart="id12" id="p6">Opacity</pc></pc> of <ph dataRef="id14" id="ph2" /> is 1.</source>
					<target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Setter</pc></pc> value of the <ph dataRef="id5" id="ph1" /> <pc dataRefEnd="id7" dataRefStart="id6" id="p3"><pc dataRefEnd="id9" dataRefStart="id8" id="p4">VisualState</pc></pc> is applied, so the <pc dataRefEnd="id11" dataRefStart="id10" id="p5"><pc dataRefEnd="id13" dataRefStart="id12" id="p6">Opacity</pc></pc> of <ph dataRef="id14" id="ph2" /> is 1.</target>
				</segment>
			</unit>
			<unit id="168" translate="yes">
				<segment state="initial">
					<source>An X is displayed.</source>
					<target>An X is displayed.</target>
				</segment>
			</unit>
			<unit id="169" translate="yes">
				<originalData>
					<data id="id1">`Checked`</data>
					<data id="id2">`Indeterminate`</data>
				</originalData>
				<segment state="initial">
					<source>From <ph dataRef="id1" id="ph1" /> to <ph dataRef="id2" id="ph2" />.</source>
					<target>From <ph dataRef="id1" id="ph1" /> to <ph dataRef="id2" id="ph2" />.</target>
				</segment>
			</unit>
			<unit id="170" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br208817)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">`Indeterminate`</data>
					<data id="id6">[</data>
					<data id="id7">](https://msdn.microsoft.com/library/windows/apps/br209007)</data>
					<data id="id8">**</data>
					<data id="id9">**</data>
					<data id="id10">[</data>
					<data id="id11">](https://msdn.microsoft.com/library/windows/apps/br208962)</data>
					<data id="id12">**</data>
					<data id="id13">**</data>
					<data id="id14">`IndeterminateGlyph`</data>
				</originalData>
				<segment state="initial">
					<source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Setter</pc></pc> value of the <ph dataRef="id5" id="ph1" /> <pc dataRefEnd="id7" dataRefStart="id6" id="p3"><pc dataRefEnd="id9" dataRefStart="id8" id="p4">VisualState</pc></pc> is applied, so the <pc dataRefEnd="id11" dataRefStart="id10" id="p5"><pc dataRefEnd="id13" dataRefStart="id12" id="p6">Opacity</pc></pc> of <ph dataRef="id14" id="ph2" /> is 1.</source>
					<target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Setter</pc></pc> value of the <ph dataRef="id5" id="ph1" /> <pc dataRefEnd="id7" dataRefStart="id6" id="p3"><pc dataRefEnd="id9" dataRefStart="id8" id="p4">VisualState</pc></pc> is applied, so the <pc dataRefEnd="id11" dataRefStart="id10" id="p5"><pc dataRefEnd="id13" dataRefStart="id12" id="p6">Opacity</pc></pc> of <ph dataRef="id14" id="ph2" /> is 1.</target>
				</segment>
			</unit>
			<unit id="171" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">`Checked`</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">[</data>
					<data id="id7">](https://msdn.microsoft.com/library/windows/apps/br228078)</data>
					<data id="id8">**</data>
					<data id="id9">**</data>
					<data id="id10">`CheckGlyph`</data>
				</originalData>
				<segment state="initial">
					<source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Setter</pc> value of the <ph dataRef="id3" id="ph1" /> <pc dataRefEnd="id5" dataRefStart="id4" id="p2">VisualState</pc> is removed, so the <pc dataRefEnd="id7" dataRefStart="id6" id="p3"><pc dataRefEnd="id9" dataRefStart="id8" id="p4">Opacity</pc></pc> of <ph dataRef="id10" id="ph2" /> is 0.</source>
					<target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Setter</pc> value of the <ph dataRef="id3" id="ph1" /> <pc dataRefEnd="id5" dataRefStart="id4" id="p2">VisualState</pc> is removed, so the <pc dataRefEnd="id7" dataRefStart="id6" id="p3"><pc dataRefEnd="id9" dataRefStart="id8" id="p4">Opacity</pc></pc> of <ph dataRef="id10" id="ph2" /> is 0.</target>
				</segment>
			</unit>
			<unit id="172" translate="yes">
				<segment state="initial">
					<source>A circle is displayed.</source>
					<target>A circle is displayed.</target>
				</segment>
			</unit>
			<unit id="173" translate="yes">
				<originalData>
					<data id="id1">`Indeterminate`</data>
					<data id="id2">`Unchecked`</data>
				</originalData>
				<segment state="initial">
					<source>From <ph dataRef="id1" id="ph1" /> to <ph dataRef="id2" id="ph2" />.</source>
					<target>From <ph dataRef="id1" id="ph1" /> to <ph dataRef="id2" id="ph2" />.</target>
				</segment>
			</unit>
			<unit id="174" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br208817)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">`Indeterminate`</data>
					<data id="id6">[</data>
					<data id="id7">](https://msdn.microsoft.com/library/windows/apps/br209007)</data>
					<data id="id8">**</data>
					<data id="id9">**</data>
					<data id="id10">[</data>
					<data id="id11">](https://msdn.microsoft.com/library/windows/apps/br208962)</data>
					<data id="id12">**</data>
					<data id="id13">**</data>
					<data id="id14">`IndeterminateGlyph`</data>
				</originalData>
				<segment state="initial">
					<source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Setter</pc></pc> value of the <ph dataRef="id5" id="ph1" /> <pc dataRefEnd="id7" dataRefStart="id6" id="p3"><pc dataRefEnd="id9" dataRefStart="id8" id="p4">VisualState</pc></pc> is removed, so the <pc dataRefEnd="id11" dataRefStart="id10" id="p5"><pc dataRefEnd="id13" dataRefStart="id12" id="p6">Opacity</pc></pc> of <ph dataRef="id14" id="ph2" /> is 0.</source>
					<target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Setter</pc></pc> value of the <ph dataRef="id5" id="ph1" /> <pc dataRefEnd="id7" dataRefStart="id6" id="p3"><pc dataRefEnd="id9" dataRefStart="id8" id="p4">VisualState</pc></pc> is removed, so the <pc dataRefEnd="id11" dataRefStart="id10" id="p5"><pc dataRefEnd="id13" dataRefStart="id12" id="p6">Opacity</pc></pc> of <ph dataRef="id14" id="ph2" /> is 0.</target>
				</segment>
			</unit>
			<unit id="175" translate="yes">
				<segment state="initial">
					<source>Nothing is displayed.</source>
					<target>Nothing is displayed.</target>
				</segment>
			</unit>
			<unit id="176" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br210490)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/xaml/jj819808)</data>
				</originalData>
				<segment state="initial">
					<source>For more info about how to create visual states for controls, and in particular how to use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Storyboard</pc></pc> class and the animation types, see <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Storyboarded animations for visual states</pc>.</source>
					<target>For more info about how to create visual states for controls, and in particular how to use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Storyboard</pc></pc> class and the animation types, see <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Storyboarded animations for visual states</pc>.</target>
				</segment>
			</unit>
			<unit id="177" translate="yes">
				<segment state="initial">
					<source>Use tools to work with themes easily</source>
					<target>Use tools to work with themes easily</target>
				</segment>
			</unit>
			<unit id="178" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source>A fast way to apply themes to your controls is to right-click on a control on the Microsoft Visual Studio <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Document Outline</pc> and select <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Edit Theme</pc> or <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Edit Style</pc> (depending on the control you are right-clicking on).</source>
					<target>A fast way to apply themes to your controls is to right-click on a control on the Microsoft Visual Studio <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Document Outline</pc> and select <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Edit Theme</pc> or <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Edit Style</pc> (depending on the control you are right-clicking on).</target>
				</segment>
			</unit>
			<unit id="179" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>You can then apply an existing theme by selecting <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Apply Resource</pc> or define a new one by selecting <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Create Empty</pc>.</source>
					<target>You can then apply an existing theme by selecting <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Apply Resource</pc> or define a new one by selecting <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Create Empty</pc>.</target>
				</segment>
			</unit>
			<unit id="180" translate="yes">
				<segment state="initial">
					<source>Controls and accessibility</source>
					<target>Controls and accessibility</target>
				</segment>
			</unit>
			<unit id="181" translate="yes">
				<segment state="initial">
					<source>When you create a new template for a control, in addition to possibly changing the control's behavior and visual appearance, you might also be changing how the control represents itself to accessibility frameworks.</source>
					<target>When you create a new template for a control, in addition to possibly changing the control's behavior and visual appearance, you might also be changing how the control represents itself to accessibility frameworks.</target>
				</segment>
			</unit>
			<unit id="182" translate="yes">
				<segment state="initial">
					<source>The Universal Windows Platform (UWP) supports the Microsoft UI Automation framework for accessibility.</source>
					<target>The Universal Windows Platform (UWP) supports the Microsoft UI Automation framework for accessibility.</target>
				</segment>
			</unit>
			<unit id="183" translate="yes">
				<segment state="initial">
					<source>All of the default controls and their templates have support for common UI Automation control types and patterns that are appropriate for the control's purpose and function.</source>
					<target>All of the default controls and their templates have support for common UI Automation control types and patterns that are appropriate for the control's purpose and function.</target>
				</segment>
			</unit>
			<unit id="184" translate="yes">
				<segment state="initial">
					<source>These control types and patterns are interpreted by UI Automation clients such as assistive technologies, and this enables a control to be accessible as a part of a larger accessible app UI.</source>
					<target>These control types and patterns are interpreted by UI Automation clients such as assistive technologies, and this enables a control to be accessible as a part of a larger accessible app UI.</target>
				</segment>
			</unit>
			<unit id="185" translate="yes">
				<segment state="initial">
					<source>To separate the basic control logic and also to satisfy some of the architectural requirements of UI Automation, control classes include their accessibility support in a separate class, an automation peer.</source>
					<target>To separate the basic control logic and also to satisfy some of the architectural requirements of UI Automation, control classes include their accessibility support in a separate class, an automation peer.</target>
				</segment>
			</unit>
			<unit id="186" translate="yes">
				<segment state="initial">
					<source>The automation peers sometimes have interactions with the control templates because the peers expect certain named parts to exist in the templates, so that functionality such as enabling assistive technologies to invoke actions of buttons is possible.</source>
					<target>The automation peers sometimes have interactions with the control templates because the peers expect certain named parts to exist in the templates, so that functionality such as enabling assistive technologies to invoke actions of buttons is possible.</target>
				</segment>
			</unit>
			<unit id="187" translate="yes">
				<segment state="initial">
					<source>When you create a completely new custom control, you sometimes also will want to create a new automation peer to go along with it.</source>
					<target>When you create a completely new custom control, you sometimes also will want to create a new automation peer to go along with it.</target>
				</segment>
			</unit>
			<unit id="188" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](../accessibility/custom-automation-peers.md)</data>
				</originalData>
				<segment state="initial">
					<source>For more info, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Custom automation peers</pc>.</source>
					<target>For more info, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Custom automation peers</pc>.</target>
				</segment>
			</unit>
			<unit id="189" translate="yes">
				<segment state="initial">
					<source>Learn more about a control's default template</source>
					<target>Learn more about a control's default template</target>
				</segment>
			</unit>
			<unit id="190" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>The topics that document the styles and templates for XAML controls show you excerpts of the same starting XAML you'd see if you used the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Edit Theme</pc> or <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Edit Style</pc> techniques explained previously.</source>
					<target>The topics that document the styles and templates for XAML controls show you excerpts of the same starting XAML you'd see if you used the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Edit Theme</pc> or <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Edit Style</pc> techniques explained previously.</target>
				</segment>
			</unit>
			<unit id="191" translate="yes">
				<segment state="initial">
					<source>Each topic lists the names of the visual states, the theme resources used, and the full XAML for the style that contains the template.</source>
					<target>Each topic lists the names of the visual states, the theme resources used, and the full XAML for the style that contains the template.</target>
				</segment>
			</unit>
			<unit id="192" translate="yes">
				<segment state="initial">
					<source>The topics can be useful guidance if you've already started modifying a template and want to see what the original template looked like, or to verify that your new template has all of the required named visual states.</source>
					<target>The topics can be useful guidance if you've already started modifying a template and want to see what the original template looked like, or to verify that your new template has all of the required named visual states.</target>
				</segment>
			</unit>
			<unit id="193" translate="yes">
				<segment state="initial">
					<source>Theme resources in control templates</source>
					<target>Theme resources in control templates</target>
				</segment>
			</unit>
			<unit id="194" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](../xaml-platform/themeresource-markup-extension.md)</data>
				</originalData>
				<segment state="initial">
					<source>For some of the attributes in the XAML examples, you may have noticed resource references that use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">{ThemeResource} markup extension</pc>.</source>
					<target>For some of the attributes in the XAML examples, you may have noticed resource references that use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">{ThemeResource} markup extension</pc>.</target>
				</segment>
			</unit>
			<unit id="195" translate="yes">
				<segment state="initial">
					<source>This is a technique that enables a single control template to use resources that can be different values depending on which theme is currently active.</source>
					<target>This is a technique that enables a single control template to use resources that can be different values depending on which theme is currently active.</target>
				</segment>
			</unit>
			<unit id="196" translate="yes">
				<segment state="initial">
					<source>This is particularly important for brushes and colors, because the main purpose of the themes is to enable users to choose whether they want a dark, light, or high contrast theme applied to the system overall.</source>
					<target>This is particularly important for brushes and colors, because the main purpose of the themes is to enable users to choose whether they want a dark, light, or high contrast theme applied to the system overall.</target>
				</segment>
			</unit>
			<unit id="197" translate="yes">
				<segment state="initial">
					<source>Apps that use the XAML resource system can use a resource set that's appropriate for that theme, so that the theme choices in an app's UI are reflective of the user's systemwide theme choice.</source>
					<target>Apps that use the XAML resource system can use a resource set that's appropriate for that theme, so that the theme choices in an app's UI are reflective of the user's systemwide theme choice.</target>
				</segment>
			</unit>
			<unit id="198" translate="yes">
				<segment state="initial">
					<source>Note</source>
					<target>Note</target>
				</segment>
			</unit>
			<unit id="199" translate="yes">
				<segment state="initial">
					<source>This article is for Windows 10 developers writing UWP apps.</source>
					<target>This article is for Windows 10 developers writing UWP apps.</target>
				</segment>
			</unit>
			<unit id="200" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](http://go.microsoft.com/fwlink/p/?linkid=619132)</data>
				</originalData>
				<segment state="initial">
					<source>If you’re developing for Windows 8.x or Windows Phone 8.x, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archived documentation</pc>.</source>
					<target>If you’re developing for Windows 8.x or Windows Phone 8.x, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archived documentation</pc>.</target>
				</segment>
			</unit>
		</group>
	</file>
</xliff>