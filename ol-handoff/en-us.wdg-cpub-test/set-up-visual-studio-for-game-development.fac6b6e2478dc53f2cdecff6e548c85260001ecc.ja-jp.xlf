<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="ja-jp" version="2.0" xml:space="preserve" xmlns="urn:oasis:names:tc:xliff:document:2.0">
	<file id="1">
		<mda:metadata>
			<mda:metaGroup>
				<mda:meta type="tool-id">mdxliff</mda:meta>
				<mda:meta type="tool-name">mdxliff</mda:meta>
				<mda:meta type="tool-version">1.0-2eb3c86</mda:meta>
				<mda:meta type="tool-company">Microsoft</mda:meta>
			</mda:metaGroup>
		<mda:metaGroup><mda:meta type="olfilehash">451c2d57c9e962686ec2503041d20f43329a10e2</mda:meta><mda:meta type="olfilepath">wdg-cpub-test\ndolci2\gaming\set-up-visual-studio-for-game-development.md</mda:meta><mda:meta type="oltranslationpriority"></mda:meta><mda:meta type="oltranslationtype">Human Translation</mda:meta><mda:meta type="olskeletonhash">fc27bb7665bdf91c27626b8c2ed5a9605d40d6dd</mda:meta><mda:meta type="olxliffhash">7e01f9b132c0bab6bbab4efdc91e2edfe1ead454</mda:meta></mda:metaGroup></mda:metadata>
		<group id="content">
			<unit id="101" translate="yes">
				<segment state="initial">
					<source>Visual Studio tools for game programming</source>
					<target>Visual Studio tools for game programming</target>
				</segment>
			</unit>
			<unit id="102" translate="yes">
				<segment state="initial">
					<source>An overview of DirectX specific tools available in Visual Studio.</source>
					<target>An overview of DirectX specific tools available in Visual Studio.</target>
				</segment>
			</unit>
			<unit id="103" translate="yes">
				<segment state="initial">
					<source>Visual Studio tools for game programming</source>
					<target>Visual Studio tools for game programming</target>
				</segment>
			</unit>
			<unit id="104" translate="yes">
				<segment state="initial">
					<source>\[ Updated for UWP apps on Windows 10.</source>
					<target>\[ Updated for UWP apps on Windows 10.</target>
				</segment>
			</unit>
			<unit id="105" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](http://go.microsoft.com/fwlink/p/?linkid=619132)</data>
				</originalData>
				<segment state="initial">
					<source>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</source>
					<target>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</target>
				</segment>
			</unit>
			<unit id="106" translate="yes">
				<segment state="initial">
					<source>Summary</source>
					<target>Summary</target>
				</segment>
			</unit>
			<unit id="107" translate="yes">
				<segment state="initial">
					<source>Create a DirectX game project from a template</source>
					<target>Create a DirectX game project from a template</target>
				</segment>
			</unit>
			<unit id="108" translate="yes">
				<segment state="initial">
					<source>Visual Studio tools for DirectX game programming</source>
					<target>Visual Studio tools for DirectX game programming</target>
				</segment>
			</unit>
			<unit id="109" translate="yes">
				<segment state="initial">
					<source>If you use Visual Studio Ultimate to develop DirectX apps, there are additional tools available for creating, editing, previewing, and exporting image, model, and shader resources.</source>
					<target>If you use Visual Studio Ultimate to develop DirectX apps, there are additional tools available for creating, editing, previewing, and exporting image, model, and shader resources.</target>
				</segment>
			</unit>
			<unit id="110" translate="yes">
				<segment state="initial">
					<source>There are also tools that you can use to convert resources at build time and debug DirectX graphics code.</source>
					<target>There are also tools that you can use to convert resources at build time and debug DirectX graphics code.</target>
				</segment>
			</unit>
			<unit id="111" translate="yes">
				<segment state="initial">
					<source>This topic gives an overview of these graphics tools.</source>
					<target>This topic gives an overview of these graphics tools.</target>
				</segment>
			</unit>
			<unit id="112" translate="yes">
				<segment state="initial">
					<source>Image Editor</source>
					<target>Image Editor</target>
				</segment>
			</unit>
			<unit id="113" translate="yes">
				<segment state="initial">
					<source>Use the Image Editor to work with the kinds of rich texture and image formats that DirectX uses.</source>
					<target>Use the Image Editor to work with the kinds of rich texture and image formats that DirectX uses.</target>
				</segment>
			</unit>
			<unit id="114" translate="yes">
				<segment state="initial">
					<source>The Image Editor supports the following formats.</source>
					<target>The Image Editor supports the following formats.</target>
				</segment>
			</unit>
			<unit id="115" translate="yes">
				<segment state="initial">
					<source>.png</source>
					<target>.png</target>
				</segment>
			</unit>
			<unit id="116" translate="yes">
				<segment state="initial">
					<source>.jpg, .jpeg, .jpe, .jfif</source>
					<target>.jpg, .jpeg, .jpe, .jfif</target>
				</segment>
			</unit>
			<unit id="117" translate="yes">
				<segment state="initial">
					<source>.dds</source>
					<target>.dds</target>
				</segment>
			</unit>
			<unit id="118" translate="yes">
				<segment state="initial">
					<source>.gif</source>
					<target>.gif</target>
				</segment>
			</unit>
			<unit id="119" translate="yes">
				<segment state="initial">
					<source>.bmp</source>
					<target>.bmp</target>
				</segment>
			</unit>
			<unit id="120" translate="yes">
				<segment state="initial">
					<source>.dib</source>
					<target>.dib</target>
				</segment>
			</unit>
			<unit id="121" translate="yes">
				<segment state="initial">
					<source>.tif, .tiff</source>
					<target>.tif, .tiff</target>
				</segment>
			</unit>
			<unit id="122" translate="yes">
				<segment state="initial">
					<source>.tga</source>
					<target>.tga</target>
				</segment>
			</unit>
			<unit id="123" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](#custom)</data>
				</originalData>
				<segment state="initial">
					<source>Create <pc dataRefEnd="id2" dataRefStart="id1" id="p1">build customization files</pc> to convert these to .dds files at build time.</source>
					<target>Create <pc dataRefEnd="id2" dataRefStart="id1" id="p1">build customization files</pc> to convert these to .dds files at build time.</target>
				</segment>
			</unit>
			<unit id="124" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/hh873119.aspx)</data>
				</originalData>
				<segment state="initial">
					<source>For more information, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Working with Textures and Images</pc>.</source>
					<target>For more information, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Working with Textures and Images</pc>.</target>
				</segment>
			</unit>
			<unit id="125" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  The Image Editor is not intended to be a replacement for a full feature image editing app, but is appropriate for many simple viewing and editing scenarios.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  The Image Editor is not intended to be a replacement for a full feature image editing app, but is appropriate for many simple viewing and editing scenarios.</target>
				</segment>
			</unit>
			<unit id="126" translate="yes">
				<segment state="initial">
					<source>Model Editor</source>
					<target>Model Editor</target>
				</segment>
			</unit>
			<unit id="127" translate="yes">
				<segment state="initial">
					<source>You can use the Model Editor to create basic 3D models from scratch, or to view and modify more-complex 3D models from full-featured 3D modeling tools.</source>
					<target>You can use the Model Editor to create basic 3D models from scratch, or to view and modify more-complex 3D models from full-featured 3D modeling tools.</target>
				</segment>
			</unit>
			<unit id="128" translate="yes">
				<segment state="initial">
					<source>The Model Editor supports several 3D model formats that are used in DirectX app development.</source>
					<target>The Model Editor supports several 3D model formats that are used in DirectX app development.</target>
				</segment>
			</unit>
			<unit id="129" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](#custom)</data>
				</originalData>
				<segment state="initial">
					<source>You can create <pc dataRefEnd="id2" dataRefStart="id1" id="p1">build customization files</pc> to convert these to .cmo files at build time.</source>
					<target>You can create <pc dataRefEnd="id2" dataRefStart="id1" id="p1">build customization files</pc> to convert these to .cmo files at build time.</target>
				</segment>
			</unit>
			<unit id="130" translate="yes">
				<segment state="initial">
					<source>.fbx</source>
					<target>.fbx</target>
				</segment>
			</unit>
			<unit id="131" translate="yes">
				<segment state="initial">
					<source>.dae</source>
					<target>.dae</target>
				</segment>
			</unit>
			<unit id="132" translate="yes">
				<segment state="initial">
					<source>.obj</source>
					<target>.obj</target>
				</segment>
			</unit>
			<unit id="133" translate="yes">
				<segment state="initial">
					<source>Here's a screenshot of a model in the editor with lighting applied.</source>
					<target>Here's a screenshot of a model in the editor with lighting applied.</target>
				</segment>
			</unit>
			<unit id="134" translate="yes">
				<segment state="initial">
					<source>teapot</source>
					<target>teapot</target>
				</segment>
			</unit>
			<unit id="135" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/hh873114.aspx)</data>
				</originalData>
				<segment state="initial">
					<source>For more information, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Working with 3-D Models</pc>.</source>
					<target>For more information, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Working with 3-D Models</pc>.</target>
				</segment>
			</unit>
			<unit id="136" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  The Model Editor is not intended to be a replacement for a full feature model editing app, but is appropriate for many simple viewing and editing scenarios.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  The Model Editor is not intended to be a replacement for a full feature model editing app, but is appropriate for many simple viewing and editing scenarios.</target>
				</segment>
			</unit>
			<unit id="137" translate="yes">
				<segment state="initial">
					<source>Shader Designer</source>
					<target>Shader Designer</target>
				</segment>
			</unit>
			<unit id="138" translate="yes">
				<segment state="initial">
					<source>Use the Shader Designer to create custom visual effects for your game or app even if you don't know HLSL programming.</source>
					<target>Use the Shader Designer to create custom visual effects for your game or app even if you don't know HLSL programming.</target>
				</segment>
			</unit>
			<unit id="139" translate="yes">
				<segment state="initial">
					<source>You create a shader visually as a graph.</source>
					<target>You create a shader visually as a graph.</target>
				</segment>
			</unit>
			<unit id="140" translate="yes">
				<segment state="initial">
					<source>Each node displays a preview of the output up to that operation.</source>
					<target>Each node displays a preview of the output up to that operation.</target>
				</segment>
			</unit>
			<unit id="141" translate="yes">
				<segment state="initial">
					<source>Here's an example that applies Lambert lighting with a sphere preview.</source>
					<target>Here's an example that applies Lambert lighting with a sphere preview.</target>
				</segment>
			</unit>
			<unit id="142" translate="yes">
				<segment state="initial">
					<source>visual shader graph</source>
					<target>visual shader graph</target>
				</segment>
			</unit>
			<unit id="143" translate="yes">
				<segment state="initial">
					<source>Use the Shader Editor to design, edit, and save shaders in the .dgsl format.</source>
					<target>Use the Shader Editor to design, edit, and save shaders in the .dgsl format.</target>
				</segment>
			</unit>
			<unit id="144" translate="yes">
				<segment state="initial">
					<source>It also exports the following formats.</source>
					<target>It also exports the following formats.</target>
				</segment>
			</unit>
			<unit id="145" translate="yes">
				<segment state="initial">
					<source>.hlsl (source code)</source>
					<target>.hlsl (source code)</target>
				</segment>
			</unit>
			<unit id="146" translate="yes">
				<segment state="initial">
					<source>.cso (bytecode)</source>
					<target>.cso (bytecode)</target>
				</segment>
			</unit>
			<unit id="147" translate="yes">
				<segment state="initial">
					<source>.h (HLSL bytecode array)</source>
					<target>.h (HLSL bytecode array)</target>
				</segment>
			</unit>
			<unit id="148" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](#custom)</data>
				</originalData>
				<segment state="initial">
					<source>Create <pc dataRefEnd="id2" dataRefStart="id1" id="p1">build customization files</pc> to convert any of these formats to .cso files at build time.</source>
					<target>Create <pc dataRefEnd="id2" dataRefStart="id1" id="p1">build customization files</pc> to convert any of these formats to .cso files at build time.</target>
				</segment>
			</unit>
			<unit id="149" translate="yes">
				<segment state="initial">
					<source>Here is a portion of HLSL code that is exported by the Shader Editor.</source>
					<target>Here is a portion of HLSL code that is exported by the Shader Editor.</target>
				</segment>
			</unit>
			<unit id="150" translate="yes">
				<segment state="initial">
					<source>This is only the code for the Lambert lighting node.</source>
					<target>This is only the code for the Lambert lighting node.</target>
				</segment>
			</unit>
			<unit id="151" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/hh873117.aspx)</data>
				</originalData>
				<segment state="initial">
					<source>For more information, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Working with Shaders</pc>.</source>
					<target>For more information, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Working with Shaders</pc>.</target>
				</segment>
			</unit>
			<unit id="152" translate="yes">
				<segment state="initial">
					<source>Build customizations for 3D assets</source>
					<target>Build customizations for 3D assets</target>
				</segment>
			</unit>
			<unit id="153" translate="yes">
				<segment state="initial">
					<source>You can add build customizations to your project so that Visual Studio converts resources to usable formats.</source>
					<target>You can add build customizations to your project so that Visual Studio converts resources to usable formats.</target>
				</segment>
			</unit>
			<unit id="154" translate="yes">
				<segment state="initial">
					<source>After that, you can load the assets into your app and use them by creating and filling DirectX resources just like you would in any other DirectX app.</source>
					<target>After that, you can load the assets into your app and use them by creating and filling DirectX resources just like you would in any other DirectX app.</target>
				</segment>
			</unit>
			<unit id="155" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>To add a build customization, you right-click on the project in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Solution Explorer</pc> and select <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Build Customizations...</pc>.</source>
					<target>To add a build customization, you right-click on the project in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Solution Explorer</pc> and select <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Build Customizations...</pc>.</target>
				</segment>
			</unit>
			<unit id="156" translate="yes">
				<segment state="initial">
					<source>You can add the following types of build customizations to your project.</source>
					<target>You can add the following types of build customizations to your project.</target>
				</segment>
			</unit>
			<unit id="157" translate="yes">
				<segment state="initial">
					<source>Image Content Pipeline takes image files as input and outputs DirectDraw Surface (.dds) files.</source>
					<target>Image Content Pipeline takes image files as input and outputs DirectDraw Surface (.dds) files.</target>
				</segment>
			</unit>
			<unit id="158" translate="yes">
				<segment state="initial">
					<source>Mesh Content Pipeline takes mesh files (such as .fbx) and outputs .cmo mesh files.</source>
					<target>Mesh Content Pipeline takes mesh files (such as .fbx) and outputs .cmo mesh files.</target>
				</segment>
			</unit>
			<unit id="159" translate="yes">
				<segment state="initial">
					<source>Shader Content Pipeline takes Visual Shader Graph (.dgsl) from the Visual Studio Shader Editor and outputs a Compiled Shader Output (.cso) file.</source>
					<target>Shader Content Pipeline takes Visual Shader Graph (.dgsl) from the Visual Studio Shader Editor and outputs a Compiled Shader Output (.cso) file.</target>
				</segment>
			</unit>
			<unit id="160" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/hh972446.aspx)</data>
				</originalData>
				<segment state="initial">
					<source>For more information, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Using 3-D Assets in Your Game or App</pc>.</source>
					<target>For more information, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Using 3-D Assets in Your Game or App</pc>.</target>
				</segment>
			</unit>
			<unit id="161" translate="yes">
				<segment state="initial">
					<source>Debugging DirectX graphics</source>
					<target>Debugging DirectX graphics</target>
				</segment>
			</unit>
			<unit id="162" translate="yes">
				<segment state="initial">
					<source>Visual Studio provides graphics-specific debugging tools.</source>
					<target>Visual Studio provides graphics-specific debugging tools.</target>
				</segment>
			</unit>
			<unit id="163" translate="yes">
				<segment state="initial">
					<source>Use these tools to debug things like:</source>
					<target>Use these tools to debug things like:</target>
				</segment>
			</unit>
			<unit id="164" translate="yes">
				<segment state="initial">
					<source>The graphics pipeline.</source>
					<target>The graphics pipeline.</target>
				</segment>
			</unit>
			<unit id="165" translate="yes">
				<segment state="initial">
					<source>The event call stack.</source>
					<target>The event call stack.</target>
				</segment>
			</unit>
			<unit id="166" translate="yes">
				<segment state="initial">
					<source>The object table.</source>
					<target>The object table.</target>
				</segment>
			</unit>
			<unit id="167" translate="yes">
				<segment state="initial">
					<source>The device state.</source>
					<target>The device state.</target>
				</segment>
			</unit>
			<unit id="168" translate="yes">
				<segment state="initial">
					<source>Shader bugs.</source>
					<target>Shader bugs.</target>
				</segment>
			</unit>
			<unit id="169" translate="yes">
				<segment state="initial">
					<source>Uninitialized or incorrect constant buffers and parameters.</source>
					<target>Uninitialized or incorrect constant buffers and parameters.</target>
				</segment>
			</unit>
			<unit id="170" translate="yes">
				<segment state="initial">
					<source>DirectX version compatibility.</source>
					<target>DirectX version compatibility.</target>
				</segment>
			</unit>
			<unit id="171" translate="yes">
				<segment state="initial">
					<source>Limited Direct2D support.</source>
					<target>Limited Direct2D support.</target>
				</segment>
			</unit>
			<unit id="172" translate="yes">
				<segment state="initial">
					<source>Operating system and SDK requirements.</source>
					<target>Operating system and SDK requirements.</target>
				</segment>
			</unit>
			<unit id="173" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/hh315751.aspx)</data>
				</originalData>
				<segment state="initial">
					<source>For more information, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Debugging DirectX Graphics</pc>.</source>
					<target>For more information, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Debugging DirectX Graphics</pc>.</target>
				</segment>
			</unit>
			<unit id="174" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  This article is for Windows 10 developers writing Universal Windows Platform (UWP) apps.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  This article is for Windows 10 developers writing Universal Windows Platform (UWP) apps.</target>
				</segment>
			</unit>
			<unit id="175" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](http://go.microsoft.com/fwlink/p/?linkid=619132)</data>
				</originalData>
				<segment state="initial">
					<source>If you’re developing for Windows 8.x or Windows Phone 8.x, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archived documentation</pc>.</source>
					<target>If you’re developing for Windows 8.x or Windows Phone 8.x, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archived documentation</pc>.</target>
				</segment>
			</unit>
		</group>
	</file>
</xliff>