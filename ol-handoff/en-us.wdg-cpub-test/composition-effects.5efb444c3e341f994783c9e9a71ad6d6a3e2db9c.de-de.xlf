<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="de-de" version="2.0" xml:space="preserve" xmlns="urn:oasis:names:tc:xliff:document:2.0">
	<file id="1">
		<mda:metadata>
			<mda:metaGroup>
				<mda:meta type="tool-id">mdxliff</mda:meta>
				<mda:meta type="tool-name">mdxliff</mda:meta>
				<mda:meta type="tool-version">1.0-2eb3c86</mda:meta>
				<mda:meta type="tool-company">Microsoft</mda:meta>
			</mda:metaGroup>
		<mda:metaGroup><mda:meta type="olfilehash">c7ceaf4d2d016619c2a3d1e6ac4cd148352305f6</mda:meta><mda:meta type="olfilepath">wdg-cpub-test\ndolci1\graphics\composition-effects.md</mda:meta><mda:meta type="oltranslationpriority"></mda:meta><mda:meta type="oltranslationtype">Human Translation</mda:meta><mda:meta type="olskeletonhash">4088418f613d92be338c61c2b2831f4476b469be</mda:meta><mda:meta type="olxliffhash">563725d6cba1a31fc9d6e937763c08b1628fa1e3</mda:meta></mda:metaGroup></mda:metadata>
		<group id="content">
			<unit id="101" translate="yes">
				<segment state="initial">
					<source>Composition effects</source>
					<target>Composition effects</target>
				</segment>
			</unit>
			<unit id="102" translate="yes">
				<segment state="initial">
					<source>The effect APIs enable developers to customize how their UI is rendered.</source>
					<target>The effect APIs enable developers to customize how their UI is rendered.</target>
				</segment>
			</unit>
			<unit id="103" translate="yes">
				<segment state="initial">
					<source>Composition effects</source>
					<target>Composition effects</target>
				</segment>
			</unit>
			<unit id="104" translate="yes">
				<segment state="initial">
					<source>\[ Updated for UWP apps on Windows 10.</source>
					<target>\[ Updated for UWP apps on Windows 10.</target>
				</segment>
			</unit>
			<unit id="105" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](http://go.microsoft.com/fwlink/p/?linkid=619132)</data>
				</originalData>
				<segment state="initial">
					<source>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</source>
					<target>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</target>
				</segment>
			</unit>
			<unit id="106" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/Dn706878)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.UI.Composition</pc></pc> WinRT API allows Real-time effects to be applied to images and UI with animatable effect properties.</source>
					<target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.UI.Composition</pc></pc> WinRT API allows Real-time effects to be applied to images and UI with animatable effect properties.</target>
				</segment>
			</unit>
			<unit id="107" translate="yes">
				<segment state="initial">
					<source>In this overview, we’ll run through the functionality available that allows effects to be applied to a composition visual.</source>
					<target>In this overview, we’ll run through the functionality available that allows effects to be applied to a composition visual.</target>
				</segment>
			</unit>
			<unit id="108" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn726767.aspx)</data>
					<data id="id3">[</data>
					<data id="id4">](http://microsoft.github.io/Win2D/html/N_Microsoft_Graphics_Canvas_Effects.md)</data>
				</originalData>
				<segment state="initial">
					<source>To support <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Universal Windows Platform (UWP)</pc> consistency for developers describing effects in their applications, composition effects leverage Win2D’s IGraphicsEffect interface to use effect descriptions via the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Microsoft.Graphics.Canvas.Effects</pc> Namespace.</source>
					<target>To support <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Universal Windows Platform (UWP)</pc> consistency for developers describing effects in their applications, composition effects leverage Win2D’s IGraphicsEffect interface to use effect descriptions via the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Microsoft.Graphics.Canvas.Effects</pc> Namespace.</target>
				</segment>
			</unit>
			<unit id="109" translate="yes">
				<segment state="initial">
					<source>Brush effects are used to paint areas of an application by applying effects to a set of existing images.</source>
					<target>Brush effects are used to paint areas of an application by applying effects to a set of existing images.</target>
				</segment>
			</unit>
			<unit id="110" translate="yes">
				<segment state="initial">
					<source>Windows 10 composition effect APIs are focused on Sprite Visuals.</source>
					<target>Windows 10 composition effect APIs are focused on Sprite Visuals.</target>
				</segment>
			</unit>
			<unit id="111" translate="yes">
				<segment state="initial">
					<source>The SpriteVisual allows for flexibility and interplay in color, image and effect creation.</source>
					<target>The SpriteVisual allows for flexibility and interplay in color, image and effect creation.</target>
				</segment>
			</unit>
			<unit id="112" translate="yes">
				<segment state="initial">
					<source>The SpriteVisual is a composition visual type that can fill a 2D rectangle with a brush.</source>
					<target>The SpriteVisual is a composition visual type that can fill a 2D rectangle with a brush.</target>
				</segment>
			</unit>
			<unit id="113" translate="yes">
				<segment state="initial">
					<source>The visual defines the bounds of the rectangle and the brush defines the pixels used to paint the rectangle.</source>
					<target>The visual defines the bounds of the rectangle and the brush defines the pixels used to paint the rectangle.</target>
				</segment>
			</unit>
			<unit id="114" translate="yes">
				<segment state="initial">
					<source>Effect brushes are used on composition tree visuals whose content comes from the output of an effect graph.</source>
					<target>Effect brushes are used on composition tree visuals whose content comes from the output of an effect graph.</target>
				</segment>
			</unit>
			<unit id="115" translate="yes">
				<segment state="initial">
					<source>Effects can reference existing surfaces/textures, but not the output of other composition trees.</source>
					<target>Effects can reference existing surfaces/textures, but not the output of other composition trees.</target>
				</segment>
			</unit>
			<unit id="116" translate="yes">
				<segment state="initial">
					<source>Effect Features</source>
					<target>Effect Features</target>
				</segment>
			</unit>
			<unit id="117" translate="yes">
				<segment state="initial">
					<source>Effect Library</source>
					<target>Effect Library</target>
				</segment>
			</unit>
			<unit id="118" translate="yes">
				<segment state="initial">
					<source>Chaining Effects</source>
					<target>Chaining Effects</target>
				</segment>
			</unit>
			<unit id="119" translate="yes">
				<segment state="initial">
					<source>Animation Support</source>
					<target>Animation Support</target>
				</segment>
			</unit>
			<unit id="120" translate="yes">
				<segment state="initial">
					<source>Effect properties – Constant vs. Animated</source>
					<target>Effect properties – Constant vs. Animated</target>
				</segment>
			</unit>
			<unit id="121" translate="yes">
				<segment state="initial">
					<source>Multiple Effect Instances with Independent Properties</source>
					<target>Multiple Effect Instances with Independent Properties</target>
				</segment>
			</unit>
			<unit id="122" translate="yes">
				<segment state="initial">
					<source>Effect Library</source>
					<target>Effect Library</target>
				</segment>
			</unit>
			<unit id="123" translate="yes">
				<segment state="initial">
					<source>Currently composition supports the following effects:</source>
					<target>Currently composition supports the following effects:</target>
				</segment>
			</unit>
			<unit id="124" translate="yes">
				<segment state="initial">
					<source>Effect</source>
					<target>Effect</target>
				</segment>
			</unit>
			<unit id="125" translate="yes">
				<segment state="initial">
					<source>Description</source>
					<target>Description</target>
				</segment>
			</unit>
			<unit id="126" translate="yes">
				<segment state="initial">
					<source>2D affine transform</source>
					<target>2D affine transform</target>
				</segment>
			</unit>
			<unit id="127" translate="yes">
				<segment state="initial">
					<source>Applies a 2D affine transform matrix to an image.</source>
					<target>Applies a 2D affine transform matrix to an image.</target>
				</segment>
			</unit>
			<unit id="128" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://github.com/Microsoft/composition/tree/master/SDK10240_WIN10_RTM/BasicCompositonEffects)</data>
				</originalData>
				<segment state="initial">
					<source>We used this effect to animate alpha mask in our effect <pc dataRefEnd="id2" dataRefStart="id1" id="p1">samples</pc>.</source>
					<target>We used this effect to animate alpha mask in our effect <pc dataRefEnd="id2" dataRefStart="id1" id="p1">samples</pc>.</target>
				</segment>
			</unit>
			<unit id="129" translate="yes">
				<segment state="initial">
					<source>Arithmetic composite</source>
					<target>Arithmetic composite</target>
				</segment>
			</unit>
			<unit id="130" translate="yes">
				<segment state="initial">
					<source>Combines two images using a flexible equation.</source>
					<target>Combines two images using a flexible equation.</target>
				</segment>
			</unit>
			<unit id="131" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://github.com/Microsoft/composition/tree/master/SDK10240_WIN10_RTM/BasicCompositonEffects)</data>
				</originalData>
				<segment state="initial">
					<source>We used arithmetic composite to create a crossfade effect in our <pc dataRefEnd="id2" dataRefStart="id1" id="p1">samples</pc>.</source>
					<target>We used arithmetic composite to create a crossfade effect in our <pc dataRefEnd="id2" dataRefStart="id1" id="p1">samples</pc>.</target>
				</segment>
			</unit>
			<unit id="132" translate="yes">
				<segment state="initial">
					<source>Blend effect</source>
					<target>Blend effect</target>
				</segment>
			</unit>
			<unit id="133" translate="yes">
				<segment state="initial">
					<source>Creates a blend effect that combines two images.</source>
					<target>Creates a blend effect that combines two images.</target>
				</segment>
			</unit>
			<unit id="134" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](http://microsoft.github.io/Win2D/html/T_Microsoft_Graphics_Canvas_Effects_BlendEffectMode.md)</data>
				</originalData>
				<segment state="initial">
					<source>Composition provides 21 of the 26 <pc dataRefEnd="id2" dataRefStart="id1" id="p1">blend modes</pc> supported in Win2D.</source>
					<target>Composition provides 21 of the 26 <pc dataRefEnd="id2" dataRefStart="id1" id="p1">blend modes</pc> supported in Win2D.</target>
				</segment>
			</unit>
			<unit id="135" translate="yes">
				<segment state="initial">
					<source>Color source</source>
					<target>Color source</target>
				</segment>
			</unit>
			<unit id="136" translate="yes">
				<segment state="initial">
					<source>Generates an image containing a solid color.</source>
					<target>Generates an image containing a solid color.</target>
				</segment>
			</unit>
			<unit id="137" translate="yes">
				<segment state="initial">
					<source>Composite</source>
					<target>Composite</target>
				</segment>
			</unit>
			<unit id="138" translate="yes">
				<segment state="initial">
					<source>Combines two images.</source>
					<target>Combines two images.</target>
				</segment>
			</unit>
			<unit id="139" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](http://microsoft.github.io/Win2D/html/T_Microsoft_Graphics_Canvas_CanvasComposite.md)</data>
				</originalData>
				<segment state="initial">
					<source>Composition provides all 13 <pc dataRefEnd="id2" dataRefStart="id1" id="p1">composite modes</pc> supported in Win2D.</source>
					<target>Composition provides all 13 <pc dataRefEnd="id2" dataRefStart="id1" id="p1">composite modes</pc> supported in Win2D.</target>
				</segment>
			</unit>
			<unit id="140" translate="yes">
				<segment state="initial">
					<source>Contrast</source>
					<target>Contrast</target>
				</segment>
			</unit>
			<unit id="141" translate="yes">
				<segment state="initial">
					<source>Increases or decreases the contrast of an image.</source>
					<target>Increases or decreases the contrast of an image.</target>
				</segment>
			</unit>
			<unit id="142" translate="yes">
				<segment state="initial">
					<source>Exposure</source>
					<target>Exposure</target>
				</segment>
			</unit>
			<unit id="143" translate="yes">
				<segment state="initial">
					<source>Increases or decreases the exposure of an image.</source>
					<target>Increases or decreases the exposure of an image.</target>
				</segment>
			</unit>
			<unit id="144" translate="yes">
				<segment state="initial">
					<source>Grayscale</source>
					<target>Grayscale</target>
				</segment>
			</unit>
			<unit id="145" translate="yes">
				<segment state="initial">
					<source>Converts an image to monochromatic gray.</source>
					<target>Converts an image to monochromatic gray.</target>
				</segment>
			</unit>
			<unit id="146" translate="yes">
				<segment state="initial">
					<source>Gamma transfer</source>
					<target>Gamma transfer</target>
				</segment>
			</unit>
			<unit id="147" translate="yes">
				<segment state="initial">
					<source>Alters the colors of an image by applying a per-channel gamma transfer function.</source>
					<target>Alters the colors of an image by applying a per-channel gamma transfer function.</target>
				</segment>
			</unit>
			<unit id="148" translate="yes">
				<segment state="initial">
					<source>Hue rotate</source>
					<target>Hue rotate</target>
				</segment>
			</unit>
			<unit id="149" translate="yes">
				<segment state="initial">
					<source>Alters the color of an image by rotating its hue values.</source>
					<target>Alters the color of an image by rotating its hue values.</target>
				</segment>
			</unit>
			<unit id="150" translate="yes">
				<segment state="initial">
					<source>Invert</source>
					<target>Invert</target>
				</segment>
			</unit>
			<unit id="151" translate="yes">
				<segment state="initial">
					<source>Inverts the colors of an image.</source>
					<target>Inverts the colors of an image.</target>
				</segment>
			</unit>
			<unit id="152" translate="yes">
				<segment state="initial">
					<source>Saturate</source>
					<target>Saturate</target>
				</segment>
			</unit>
			<unit id="153" translate="yes">
				<segment state="initial">
					<source>Alters the saturation of an image.</source>
					<target>Alters the saturation of an image.</target>
				</segment>
			</unit>
			<unit id="154" translate="yes">
				<segment state="initial">
					<source>Sepia</source>
					<target>Sepia</target>
				</segment>
			</unit>
			<unit id="155" translate="yes">
				<segment state="initial">
					<source>Converts an image to sepia tones.</source>
					<target>Converts an image to sepia tones.</target>
				</segment>
			</unit>
			<unit id="156" translate="yes">
				<segment state="initial">
					<source>Temperature and tint</source>
					<target>Temperature and tint</target>
				</segment>
			</unit>
			<unit id="157" translate="yes">
				<segment state="initial">
					<source>Adjusts the temperature and/or tint of an image.</source>
					<target>Adjusts the temperature and/or tint of an image.</target>
				</segment>
			</unit>
			<unit id="158" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](http://microsoft.github.io/Win2D/html/N_Microsoft_Graphics_Canvas_Effects.md)</data>
				</originalData>
				<segment state="initial">
					<source>See Win2D’s <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Microsoft.Graphics.Canvas.Effects</pc> Namespace for more detailed information.</source>
					<target>See Win2D’s <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Microsoft.Graphics.Canvas.Effects</pc> Namespace for more detailed information.</target>
				</segment>
			</unit>
			<unit id="159" translate="yes">
				<segment state="initial">
					<source>Effects not supported in composition are noted as \[NoComposition\].</source>
					<target>Effects not supported in composition are noted as \[NoComposition\].</target>
				</segment>
			</unit>
			<unit id="160" translate="yes">
				<segment state="initial">
					<source>Chaining Effects</source>
					<target>Chaining Effects</target>
				</segment>
			</unit>
			<unit id="161" translate="yes">
				<segment state="initial">
					<source>Effects can be chained, allowing an application to simultaneously use multiple effects on an image.</source>
					<target>Effects can be chained, allowing an application to simultaneously use multiple effects on an image.</target>
				</segment>
			</unit>
			<unit id="162" translate="yes">
				<segment state="initial">
					<source>Effect graphs can support multiple effects that can refer to one and other.</source>
					<target>Effect graphs can support multiple effects that can refer to one and other.</target>
				</segment>
			</unit>
			<unit id="163" translate="yes">
				<segment state="initial">
					<source>When describing your effect, simply add an effect as input to your effect.</source>
					<target>When describing your effect, simply add an effect as input to your effect.</target>
				</segment>
			</unit>
			<unit id="164" translate="yes">
				<segment state="initial">
					<source>The example above describes an arithmetic composite effect which has two inputs.</source>
					<target>The example above describes an arithmetic composite effect which has two inputs.</target>
				</segment>
			</unit>
			<unit id="165" translate="yes">
				<segment state="initial">
					<source>The second input has a saturation effect with a .5 saturation property.</source>
					<target>The second input has a saturation effect with a .5 saturation property.</target>
				</segment>
			</unit>
			<unit id="166" translate="yes">
				<segment state="initial">
					<source>Animation Support</source>
					<target>Animation Support</target>
				</segment>
			</unit>
			<unit id="167" translate="yes">
				<segment state="initial">
					<source>Effect properties support animation, during effect compilation you can specify effect properties can be animated and which can be "baked in" as constants.</source>
					<target>Effect properties support animation, during effect compilation you can specify effect properties can be animated and which can be "baked in" as constants.</target>
				</segment>
			</unit>
			<unit id="168" translate="yes">
				<segment state="initial">
					<source>The animatable properties are specified through strings of the form “effect name.property name”.</source>
					<target>The animatable properties are specified through strings of the form “effect name.property name”.</target>
				</segment>
			</unit>
			<unit id="169" translate="yes">
				<segment state="initial">
					<source>These properties can be animated independently over multiple instantiations of the effect.</source>
					<target>These properties can be animated independently over multiple instantiations of the effect.</target>
				</segment>
			</unit>
			<unit id="170" translate="yes">
				<segment state="initial">
					<source>Effect properties – Constant vs Animated</source>
					<target>Effect properties – Constant vs Animated</target>
				</segment>
			</unit>
			<unit id="171" translate="yes">
				<segment state="initial">
					<source>During effect compilation you can specify effect properties as dynamic or as properties that are "baked in" as constants.</source>
					<target>During effect compilation you can specify effect properties as dynamic or as properties that are "baked in" as constants.</target>
				</segment>
			</unit>
			<unit id="172" translate="yes">
				<originalData>
					<data id="id1">&lt;effect name&gt;</data>
					<data id="id2">&lt;property name&gt;</data>
				</originalData>
				<segment state="initial">
					<source>The dynamic properties are specified through strings of the form “<ph dataRef="id1" id="ph1" />.<ph dataRef="id2" id="ph2" />”.</source>
					<target>The dynamic properties are specified through strings of the form “<ph dataRef="id1" id="ph1" />.<ph dataRef="id2" id="ph2" />”.</target>
				</segment>
			</unit>
			<unit id="173" translate="yes">
				<segment state="initial">
					<source>The dynamic properties can be set to a specific value or can be animated using the composition animation system.</source>
					<target>The dynamic properties can be set to a specific value or can be animated using the composition animation system.</target>
				</segment>
			</unit>
			<unit id="174" translate="yes">
				<segment state="initial">
					<source>When compiling the effect description above, you have the flexibility of either baking in saturation to be equal to 0.5 or making it dynamic and setting it dynamically or animating it.</source>
					<target>When compiling the effect description above, you have the flexibility of either baking in saturation to be equal to 0.5 or making it dynamic and setting it dynamically or animating it.</target>
				</segment>
			</unit>
			<unit id="175" translate="yes">
				<segment state="initial">
					<source>Compiling an effect with saturation baked in:</source>
					<target>Compiling an effect with saturation baked in:</target>
				</segment>
			</unit>
			<unit id="176" translate="yes">
				<segment state="initial">
					<source>Compiling an effect with dynamic saturation:</source>
					<target>Compiling an effect with dynamic saturation:</target>
				</segment>
			</unit>
			<unit id="177" translate="yes">
				<segment state="initial">
					<source>The saturation property of the effect above can then be either set to a static value or animated using either Expression or ScalarKeyFrame animations.</source>
					<target>The saturation property of the effect above can then be either set to a static value or animated using either Expression or ScalarKeyFrame animations.</target>
				</segment>
			</unit>
			<unit id="178" translate="yes">
				<segment state="initial">
					<source>You can create a ScalarKeyFrame that will be used to animate the Saturation property of an effect like this:</source>
					<target>You can create a ScalarKeyFrame that will be used to animate the Saturation property of an effect like this:</target>
				</segment>
			</unit>
			<unit id="179" translate="yes">
				<segment state="initial">
					<source>Start the animation on the Saturation property of the effect like this:</source>
					<target>Start the animation on the Saturation property of the effect like this:</target>
				</segment>
			</unit>
			<unit id="180" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://github.com/Microsoft/composition/tree/master/SDK10586_NOV_UPDATE_RTM/BasicCompositonEffects/Desaturation%20-%20Animation)</data>
					<data id="id3">[</data>
					<data id="id4">](https://github.com/Microsoft/composition/tree/master/SDK10586_NOV_UPDATE_RTM/BasicCompositonEffects/AlphaMask)</data>
				</originalData>
				<segment state="initial">
					<source>See the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Desaturation - Animation sample</pc> for effect properties animated with key frames and the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">AlphaMask sample</pc> for use of effects and expressions.</source>
					<target>See the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Desaturation - Animation sample</pc> for effect properties animated with key frames and the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">AlphaMask sample</pc> for use of effects and expressions.</target>
				</segment>
			</unit>
			<unit id="181" translate="yes">
				<segment state="initial">
					<source>Multiple Effect Instances with Independent Properties</source>
					<target>Multiple Effect Instances with Independent Properties</target>
				</segment>
			</unit>
			<unit id="182" translate="yes">
				<segment state="initial">
					<source>By specifying that a parameter should be dynamic during effect compilation, the parameter can then be changed on a per-effect instance basis.</source>
					<target>By specifying that a parameter should be dynamic during effect compilation, the parameter can then be changed on a per-effect instance basis.</target>
				</segment>
			</unit>
			<unit id="183" translate="yes">
				<segment state="initial">
					<source>This allows two Visuals to use the same effect but be rendered with different effect properties.</source>
					<target>This allows two Visuals to use the same effect but be rendered with different effect properties.</target>
				</segment>
			</unit>
			<unit id="184" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://github.com/Microsoft/composition/tree/master/SDK10586_NOV_UPDATE_RTM/BasicCompositonEffects/ColorSource%20and%20Blend)</data>
				</originalData>
				<segment state="initial">
					<source>See the ColorSource and Blend <pc dataRefEnd="id2" dataRefStart="id1" id="p1">sample</pc> for more information.</source>
					<target>See the ColorSource and Blend <pc dataRefEnd="id2" dataRefStart="id1" id="p1">sample</pc> for more information.</target>
				</segment>
			</unit>
			<unit id="185" translate="yes">
				<segment state="initial">
					<source>Getting Started with Composition Effects</source>
					<target>Getting Started with Composition Effects</target>
				</segment>
			</unit>
			<unit id="186" translate="yes">
				<segment state="initial">
					<source>This quick start tutorial shows you how to make use of some of the basic capabilities of effects.</source>
					<target>This quick start tutorial shows you how to make use of some of the basic capabilities of effects.</target>
				</segment>
			</unit>
			<unit id="187" translate="yes">
				<segment state="initial">
					<source>Installing Visual Studio</source>
					<target>Installing Visual Studio</target>
				</segment>
			</unit>
			<unit id="188" translate="yes">
				<segment state="initial">
					<source>Creating a new project</source>
					<target>Creating a new project</target>
				</segment>
			</unit>
			<unit id="189" translate="yes">
				<segment state="initial">
					<source>Installing Win2D</source>
					<target>Installing Win2D</target>
				</segment>
			</unit>
			<unit id="190" translate="yes">
				<segment state="initial">
					<source>Setting your Composition Basics</source>
					<target>Setting your Composition Basics</target>
				</segment>
			</unit>
			<unit id="191" translate="yes">
				<segment state="initial">
					<source>Creating a CompositionSurface Brush</source>
					<target>Creating a CompositionSurface Brush</target>
				</segment>
			</unit>
			<unit id="192" translate="yes">
				<segment state="initial">
					<source>Creating, Compiling and Applying Effects</source>
					<target>Creating, Compiling and Applying Effects</target>
				</segment>
			</unit>
			<unit id="193" translate="yes">
				<segment state="initial">
					<source>Installing Visual Studio</source>
					<target>Installing Visual Studio</target>
				</segment>
			</unit>
			<unit id="194" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://www.visualstudio.com/downloads/download-visual-studio-vs.aspx)</data>
				</originalData>
				<segment state="initial">
					<source>If you don't have a supported version of Visual Studio installed, go to the Visual Studio Downloads page <pc dataRefEnd="id2" dataRefStart="id1" id="p1">here</pc>.</source>
					<target>If you don't have a supported version of Visual Studio installed, go to the Visual Studio Downloads page <pc dataRefEnd="id2" dataRefStart="id1" id="p1">here</pc>.</target>
				</segment>
			</unit>
			<unit id="195" translate="yes">
				<segment state="initial">
					<source>Creating a new project</source>
					<target>Creating a new project</target>
				</segment>
			</unit>
			<unit id="196" translate="yes">
				<segment state="initial">
					<source>Go to File-&gt;New-&gt;Project...</source>
					<target>Go to File-&gt;New-&gt;Project...</target>
				</segment>
			</unit>
			<unit id="197" translate="yes">
				<segment state="initial">
					<source>Select 'Visual C#'</source>
					<target>Select 'Visual C#'</target>
				</segment>
			</unit>
			<unit id="198" translate="yes">
				<segment state="initial">
					<source>Create a 'Blank App (Windows Universal)' (Visual Studio 2015)</source>
					<target>Create a 'Blank App (Windows Universal)' (Visual Studio 2015)</target>
				</segment>
			</unit>
			<unit id="199" translate="yes">
				<segment state="initial">
					<source>Enter a project name of your choosing</source>
					<target>Enter a project name of your choosing</target>
				</segment>
			</unit>
			<unit id="200" translate="yes">
				<segment state="initial">
					<source>Click 'OK'</source>
					<target>Click 'OK'</target>
				</segment>
			</unit>
			<unit id="201" translate="yes">
				<segment state="initial">
					<source>Installing Win2D</source>
					<target>Installing Win2D</target>
				</segment>
			</unit>
			<unit id="202" translate="yes">
				<segment state="initial">
					<source>Win2D is released as a Nuget.org package and needs to be installed before you can use effects.</source>
					<target>Win2D is released as a Nuget.org package and needs to be installed before you can use effects.</target>
				</segment>
			</unit>
			<unit id="203" translate="yes">
				<segment state="initial">
					<source>There are two package versions, one for Windows 10 and one for Windows 8.1.</source>
					<target>There are two package versions, one for Windows 10 and one for Windows 8.1.</target>
				</segment>
			</unit>
			<unit id="204" translate="yes">
				<segment state="initial">
					<source>For Composition effects you’ll use the Windows 10 version.</source>
					<target>For Composition effects you’ll use the Windows 10 version.</target>
				</segment>
			</unit>
			<unit id="205" translate="yes">
				<segment state="initial">
					<source>Launch the NuGet Package Manager by going to Tools → NuGet Package Manager → Manage NuGet Packages for Solution.</source>
					<target>Launch the NuGet Package Manager by going to Tools → NuGet Package Manager → Manage NuGet Packages for Solution.</target>
				</segment>
			</unit>
			<unit id="206" translate="yes">
				<segment state="initial">
					<source>Search for "Win2D" and select the appropriate package for your target version of Windows.</source>
					<target>Search for "Win2D" and select the appropriate package for your target version of Windows.</target>
				</segment>
			</unit>
			<unit id="207" translate="yes">
				<segment state="initial">
					<source>Because Windows.UI.</source>
					<target>Because Windows.UI.</target>
				</segment>
			</unit>
			<unit id="208" translate="yes">
				<segment state="initial">
					<source>Composition supports Windows 10 (not 8.1), select Win2D.uwp.</source>
					<target>Composition supports Windows 10 (not 8.1), select Win2D.uwp.</target>
				</segment>
			</unit>
			<unit id="209" translate="yes">
				<segment state="initial">
					<source>Accept the license agreement</source>
					<target>Accept the license agreement</target>
				</segment>
			</unit>
			<unit id="210" translate="yes">
				<segment state="initial">
					<source>Click 'Close'</source>
					<target>Click 'Close'</target>
				</segment>
			</unit>
			<unit id="211" translate="yes">
				<segment state="initial">
					<source>In the next few steps we will use composition API’s to apply a saturation effect to this cat image which will remove all saturation.</source>
					<target>In the next few steps we will use composition API’s to apply a saturation effect to this cat image which will remove all saturation.</target>
				</segment>
			</unit>
			<unit id="212" translate="yes">
				<segment state="initial">
					<source>In this model the effect is created and then applied to an image.</source>
					<target>In this model the effect is created and then applied to an image.</target>
				</segment>
			</unit>
			<unit id="213" translate="yes">
				<segment state="initial">
					<source>Source image</source>
					<target>Source image</target>
				</segment>
			</unit>
			<unit id="214" translate="yes">
				<segment state="initial">
					<source>Setting your Composition Basics</source>
					<target>Setting your Composition Basics</target>
				</segment>
			</unit>
			<unit id="215" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://github.com/Microsoft/composition/tree/master/SDK10586_NOV_UPDATE_RTM/CompositionVisual)</data>
				</originalData>
				<segment state="initial">
					<source>See the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Composition Visual Tree Sample</pc> on our GitHub for an example of how to set up Windows.UI.Composition Compositor, root ContainerVisual, and associate with the Core Window.</source>
					<target>See the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Composition Visual Tree Sample</pc> on our GitHub for an example of how to set up Windows.UI.Composition Compositor, root ContainerVisual, and associate with the Core Window.</target>
				</segment>
			</unit>
			<unit id="216" translate="yes">
				<segment state="initial">
					<source>Creating a CompositionSurface Brush</source>
					<target>Creating a CompositionSurface Brush</target>
				</segment>
			</unit>
			<unit id="217" translate="yes">
				<segment state="initial">
					<source>Creating, Compiling and Applying Effects</source>
					<target>Creating, Compiling and Applying Effects</target>
				</segment>
			</unit>
			<unit id="218" translate="yes">
				<segment state="initial">
					<source>1.) Create the graphics effect</source>
					<target>1.) Create the graphics effect</target>
				</segment>
			</unit>
			<unit id="219" translate="yes">
				<segment state="initial">
					<source>2.) Compile the effect and create effect brush</source>
					<target>2.) Compile the effect and create effect brush</target>
				</segment>
			</unit>
			<unit id="220" translate="yes">
				<segment state="initial">
					<source>3.) Create a SpriteVIsual in the composition tree and apply the effect</source>
					<target>3.) Create a SpriteVIsual in the composition tree and apply the effect</target>
				</segment>
			</unit>
			<unit id="221" translate="yes">
				<segment state="initial">
					<source>4.) Create your image source to load.</source>
					<target>4.) Create your image source to load.</target>
				</segment>
			</unit>
			<unit id="222" translate="yes">
				<segment state="initial">
					<source>5.) Size and brush the surface on the SpriteVisual</source>
					<target>5.) Size and brush the surface on the SpriteVisual</target>
				</segment>
			</unit>
			<unit id="223" translate="yes">
				<segment state="initial">
					<source>6.) Run your app – your results should be a desaturated cat:</source>
					<target>6.) Run your app – your results should be a desaturated cat:</target>
				</segment>
			</unit>
			<unit id="224" translate="yes">
				<segment state="initial">
					<source>Desaturated image</source>
					<target>Desaturated image</target>
				</segment>
			</unit>
			<unit id="225" translate="yes">
				<segment state="initial">
					<source>More Information</source>
					<target>More Information</target>
				</segment>
			</unit>
			<unit id="226" translate="yes">
				<segment state="initial">
					<source>Microsoft – Composition GitHub</source>
					<target>Microsoft – Composition GitHub</target>
				</segment>
			</unit>
			<unit id="227" translate="yes">
				<segment state="initial">
					<source>Windows.UI.Composition</source>
					<target>Windows.UI.Composition</target>
				</segment>
			</unit>
			<unit id="228" translate="yes">
				<segment state="initial">
					<source>Windows Composition team on Twitter</source>
					<target>Windows Composition team on Twitter</target>
				</segment>
			</unit>
			<unit id="229" translate="yes">
				<segment state="initial">
					<source>Composition Overview</source>
					<target>Composition Overview</target>
				</segment>
			</unit>
			<unit id="230" translate="yes">
				<segment state="initial">
					<source>Visual Tree Basics</source>
					<target>Visual Tree Basics</target>
				</segment>
			</unit>
			<unit id="231" translate="yes">
				<segment state="initial">
					<source>Composition Brushes</source>
					<target>Composition Brushes</target>
				</segment>
			</unit>
			<unit id="232" translate="yes">
				<segment state="initial">
					<source>Animation Overview</source>
					<target>Animation Overview</target>
				</segment>
			</unit>
			<unit id="233" translate="yes">
				<segment state="initial">
					<source>Composition native DirectX and Direct2D interoperation with BeginDraw and EndDraw</source>
					<target>Composition native DirectX and Direct2D interoperation with BeginDraw and EndDraw</target>
				</segment>
			</unit>
		</group>
	</file>
</xliff>