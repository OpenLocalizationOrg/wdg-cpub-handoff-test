<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="ja-jp" version="2.0" xml:space="preserve" xmlns="urn:oasis:names:tc:xliff:document:2.0">
	<file id="1">
		<mda:metadata>
			<mda:metaGroup>
				<mda:meta type="tool-id">mdxliff</mda:meta>
				<mda:meta type="tool-name">mdxliff</mda:meta>
				<mda:meta type="tool-version">1.0-2eb3c86</mda:meta>
				<mda:meta type="tool-company">Microsoft</mda:meta>
			</mda:metaGroup>
		<mda:metaGroup><mda:meta type="olfilehash">a6198986c994e36161e336924d1cebb7883c07db</mda:meta><mda:meta type="olfilepath">wdg-cpub-test\ndolci1\monetize\use-receipts-to-verify-product-purchases.md</mda:meta><mda:meta type="oltranslationpriority"></mda:meta><mda:meta type="oltranslationtype">Human Translation</mda:meta><mda:meta type="olskeletonhash">f3c8589d45a79bbff63bebbb9774708e76db9ca1</mda:meta><mda:meta type="olxliffhash">5dcc2a1352219e26b6190dc68e807c52fda504b6</mda:meta></mda:metaGroup></mda:metadata>
		<group id="content">
			<unit id="101" translate="yes">
				<segment state="initial">
					<source>Each Windows Store transaction that results in a successful product purchase can optionally return a transaction receipt.</source>
					<target>Each Windows Store transaction that results in a successful product purchase can optionally return a transaction receipt.</target>
				</segment>
			</unit>
			<unit id="102" translate="yes">
				<segment state="initial">
					<source>Use receipts to verify product purchases</source>
					<target>Use receipts to verify product purchases</target>
				</segment>
			</unit>
			<unit id="103" translate="yes">
				<segment state="initial">
					<source>Use receipts to verify product purchases</source>
					<target>Use receipts to verify product purchases</target>
				</segment>
			</unit>
			<unit id="104" translate="yes">
				<segment state="initial">
					<source>\[ Updated for UWP apps on Windows 10.</source>
					<target>\[ Updated for UWP apps on Windows 10.</target>
				</segment>
			</unit>
			<unit id="105" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](http://go.microsoft.com/fwlink/p/?linkid=619132)</data>
				</originalData>
				<segment state="initial">
					<source>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</source>
					<target>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</target>
				</segment>
			</unit>
			<unit id="106" translate="yes">
				<segment state="initial">
					<source>Important APIs</source>
					<target>Important APIs</target>
				</segment>
			</unit>
			<unit id="107" translate="yes">
				<segment state="initial">
					<source>CurrentApp</source>
					<target>CurrentApp</target>
				</segment>
			</unit>
			<unit id="108" translate="yes">
				<segment state="initial">
					<source>CurrentAppSimulator</source>
					<target>CurrentAppSimulator</target>
				</segment>
			</unit>
			<unit id="109" translate="yes">
				<segment state="initial">
					<source>Each Windows Store transaction that results in a successful product purchase can optionally return a transaction receipt.</source>
					<target>Each Windows Store transaction that results in a successful product purchase can optionally return a transaction receipt.</target>
				</segment>
			</unit>
			<unit id="110" translate="yes">
				<segment state="initial">
					<source>This receipts provides information about the listed product and monetary cost to the customer.</source>
					<target>This receipts provides information about the listed product and monetary cost to the customer.</target>
				</segment>
			</unit>
			<unit id="111" translate="yes">
				<segment state="initial">
					<source>Having access to this information supports scenarios where your app needs to verify that a user purchased your app, or has made in-app product purchases from the Windows Store.</source>
					<target>Having access to this information supports scenarios where your app needs to verify that a user purchased your app, or has made in-app product purchases from the Windows Store.</target>
				</segment>
			</unit>
			<unit id="112" translate="yes">
				<segment state="initial">
					<source>For example, imagine a game that offers downloaded content.</source>
					<target>For example, imagine a game that offers downloaded content.</target>
				</segment>
			</unit>
			<unit id="113" translate="yes">
				<segment state="initial">
					<source>If the user who purchased the game content wants to play it on a different device, you need to verify that the user already owns the content.</source>
					<target>If the user who purchased the game content wants to play it on a different device, you need to verify that the user already owns the content.</target>
				</segment>
			</unit>
			<unit id="114" translate="yes">
				<segment state="initial">
					<source>Here's how.</source>
					<target>Here's how.</target>
				</segment>
			</unit>
			<unit id="115" translate="yes">
				<segment state="initial">
					<source>Requesting a receipt</source>
					<target>Requesting a receipt</target>
				</segment>
			</unit>
			<unit id="116" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">[</data>
					<data id="id4">](https://msdn.microsoft.com/library/windows/apps/dn263381)</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
					<data id="id7">[</data>
					<data id="id8">](https://msdn.microsoft.com/library/windows/apps/hh967813)</data>
					<data id="id9">**</data>
					<data id="id10">**</data>
					<data id="id11">*</data>
					<data id="id12">*</data>
					<data id="id13">[</data>
					<data id="id14">](https://msdn.microsoft.com/library/windows/apps/hh967811)</data>
					<data id="id15">**</data>
					<data id="id16">**</data>
				</originalData>
				<segment state="initial">
					<source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Windows.ApplicationModel.Store</pc> namespace supports two ways of getting a receipt: by using the <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">CurrentApp.RequestProductPurchaseAsync | requestProductPurchaseAsync</pc></pc> or <pc dataRefEnd="id8" dataRefStart="id7" id="p4"><pc dataRefEnd="id10" dataRefStart="id9" id="p5">CurrentApp.RequestAppPurchaseAsync | requestAppPurchaseAsync</pc></pc> method and using the <pc dataRefEnd="id12" dataRefStart="id11" id="p6">includeReceipt</pc> parameter, or by calling the <pc dataRefEnd="id14" dataRefStart="id13" id="p7"><pc dataRefEnd="id16" dataRefStart="id15" id="p8">CurrentApp.GetAppReceiptAsync | getAppReceiptAsync</pc></pc> method.</source>
					<target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Windows.ApplicationModel.Store</pc> namespace supports two ways of getting a receipt: by using the <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">CurrentApp.RequestProductPurchaseAsync | requestProductPurchaseAsync</pc></pc> or <pc dataRefEnd="id8" dataRefStart="id7" id="p4"><pc dataRefEnd="id10" dataRefStart="id9" id="p5">CurrentApp.RequestAppPurchaseAsync | requestAppPurchaseAsync</pc></pc> method and using the <pc dataRefEnd="id12" dataRefStart="id11" id="p6">includeReceipt</pc> parameter, or by calling the <pc dataRefEnd="id14" dataRefStart="id13" id="p7"><pc dataRefEnd="id16" dataRefStart="id15" id="p8">CurrentApp.GetAppReceiptAsync | getAppReceiptAsync</pc></pc> method.</target>
				</segment>
			</unit>
			<unit id="117" translate="yes">
				<segment state="initial">
					<source>An app receipt looks something like this.</source>
					<target>An app receipt looks something like this.</target>
				</segment>
			</unit>
			<unit id="118" translate="yes">
				<segment state="initial">
					<source>A product receipt looks like this.</source>
					<target>A product receipt looks like this.</target>
				</segment>
			</unit>
			<unit id="119" translate="yes">
				<segment state="initial">
					<source>You can use either of these receipt examples to test your validation code.</source>
					<target>You can use either of these receipt examples to test your validation code.</target>
				</segment>
			</unit>
			<unit id="120" translate="yes">
				<segment state="initial">
					<source>Validating a receipt</source>
					<target>Validating a receipt</target>
				</segment>
			</unit>
			<unit id="121" translate="yes">
				<segment state="initial">
					<source>After you get a receipt, you need your back-end system (a web service or something similar) to validate it.</source>
					<target>After you get a receipt, you need your back-end system (a web service or something similar) to validate it.</target>
				</segment>
			</unit>
			<unit id="122" translate="yes">
				<segment state="initial">
					<source>Here's a .NET Framework example of that validation process.</source>
					<target>Here's a .NET Framework example of that validation process.</target>
				</segment>
			</unit>
		</group>
	</file>
</xliff>