<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="de-de" version="2.0" xml:space="preserve" xmlns="urn:oasis:names:tc:xliff:document:2.0">
	<file id="1">
		<mda:metadata>
			<mda:metaGroup>
				<mda:meta type="tool-id">mdxliff</mda:meta>
				<mda:meta type="tool-name">mdxliff</mda:meta>
				<mda:meta type="tool-version">1.0-2eb3c86</mda:meta>
				<mda:meta type="tool-company">Microsoft</mda:meta>
			</mda:metaGroup>
		<mda:metaGroup><mda:meta type="olfilehash">9e93fca56644f4877b6d166fbb1a5f75a59a710d</mda:meta><mda:meta type="olfilepath">wdg-cpub-test\ndolci2\input-and-devices\custom-text-input.md</mda:meta><mda:meta type="oltranslationpriority"></mda:meta><mda:meta type="oltranslationtype">Human Translation</mda:meta><mda:meta type="olskeletonhash">4ff83c1051de4f73362f3061b00d61215128f87a</mda:meta><mda:meta type="olxliffhash">98727833e1a9fdd30d47f534f843e3a5d18a3943</mda:meta></mda:metaGroup></mda:metadata>
		<group id="content">
			<unit id="101" translate="yes">
				<segment state="initial">
					<source>The core text APIs in the Windows.UI.Text.Core namespace enable a Universal Windows Platform (UWP) app to receive text input from any text service supported on Windows devices.</source>
					<target>The core text APIs in the Windows.UI.Text.Core namespace enable a Universal Windows Platform (UWP) app to receive text input from any text service supported on Windows devices.</target>
				</segment>
			</unit>
			<unit id="102" translate="yes">
				<segment state="initial">
					<source>Custom text input overview</source>
					<target>Custom text input overview</target>
				</segment>
			</unit>
			<unit id="103" translate="yes">
				<segment state="initial">
					<source>Custom text input</source>
					<target>Custom text input</target>
				</segment>
			</unit>
			<unit id="104" translate="yes">
				<segment state="initial">
					<source>\[ Updated for UWP apps on Windows 10.</source>
					<target>\[ Updated for UWP apps on Windows 10.</target>
				</segment>
			</unit>
			<unit id="105" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](http://go.microsoft.com/fwlink/p/?linkid=619132)</data>
				</originalData>
				<segment state="initial">
					<source>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</source>
					<target>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</target>
				</segment>
			</unit>
			<unit id="106" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn958238)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>The core text APIs in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.UI.Text.Core</pc></pc> namespace enable a Universal Windows Platform (UWP) app to receive text input from any text service supported on Windows devices.</source>
					<target>The core text APIs in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.UI.Text.Core</pc></pc> namespace enable a Universal Windows Platform (UWP) app to receive text input from any text service supported on Windows devices.</target>
				</segment>
			</unit>
			<unit id="107" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/desktop/ms629032)</data>
				</originalData>
				<segment state="initial">
					<source>The APIs are similar to the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Text Services Framework</pc> APIs in that the app is not required to have detailed knowledge of the text services.</source>
					<target>The APIs are similar to the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Text Services Framework</pc> APIs in that the app is not required to have detailed knowledge of the text services.</target>
				</segment>
			</unit>
			<unit id="108" translate="yes">
				<segment state="initial">
					<source>This enables the app to receive text in any language and from any input type, like keyboard, speech, or pen.</source>
					<target>This enables the app to receive text in any language and from any input type, like keyboard, speech, or pen.</target>
				</segment>
			</unit>
			<unit id="109" translate="yes">
				<segment state="initial">
					<source>Important APIs</source>
					<target>Important APIs</target>
				</segment>
			</unit>
			<unit id="110" translate="yes">
				<segment state="initial">
					<source>Windows.UI.Text.Core</source>
					<target>Windows.UI.Text.Core</target>
				</segment>
			</unit>
			<unit id="111" translate="yes">
				<segment state="initial">
					<source>CoreTextEditContext</source>
					<target>CoreTextEditContext</target>
				</segment>
			</unit>
			<unit id="112" translate="yes">
				<segment state="initial">
					<source>Why use core text APIs?</source>
					<target>Why use core text APIs?</target>
				</segment>
			</unit>
			<unit id="113" translate="yes">
				<segment state="initial">
					<source>For many apps, the XAML or HTML text box controls are sufficient for text input and editing.</source>
					<target>For many apps, the XAML or HTML text box controls are sufficient for text input and editing.</target>
				</segment>
			</unit>
			<unit id="114" translate="yes">
				<segment state="initial">
					<source>However, if your app handles complex text scenarios, like a word processing app, you might need the flexibility of a custom text edit control.</source>
					<target>However, if your app handles complex text scenarios, like a word processing app, you might need the flexibility of a custom text edit control.</target>
				</segment>
			</unit>
			<unit id="115" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br208225)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>You could use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CoreWindow</pc></pc> keyboard APIs to create your text edit control, but these don't provide a way to receive composition-based text input, which is required to support East Asian languages.</source>
					<target>You could use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CoreWindow</pc></pc> keyboard APIs to create your text edit control, but these don't provide a way to receive composition-based text input, which is required to support East Asian languages.</target>
				</segment>
			</unit>
			<unit id="116" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn958238)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Instead, use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.UI.Text.Core</pc></pc> APIs when you need to create a custom text edit control.</source>
					<target>Instead, use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.UI.Text.Core</pc></pc> APIs when you need to create a custom text edit control.</target>
				</segment>
			</unit>
			<unit id="117" translate="yes">
				<segment state="initial">
					<source>These APIs are designed to give you a lot of flexibility in processing text input, in any language, and let you provide the text experience best suited to your app.</source>
					<target>These APIs are designed to give you a lot of flexibility in processing text input, in any language, and let you provide the text experience best suited to your app.</target>
				</segment>
			</unit>
			<unit id="118" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/desktop/ms629032)</data>
				</originalData>
				<segment state="initial">
					<source>Text input and edit controls built with the core text APIs can receive text input from all existing text input methods on Windows devices, from <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Text Services Framework</pc> based Input Method Editors (IMEs) and handwriting on PCs to the WordFlow keyboard (which provides auto-correction, prediction, and dictation) on mobile devices.</source>
					<target>Text input and edit controls built with the core text APIs can receive text input from all existing text input methods on Windows devices, from <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Text Services Framework</pc> based Input Method Editors (IMEs) and handwriting on PCs to the WordFlow keyboard (which provides auto-correction, prediction, and dictation) on mobile devices.</target>
				</segment>
			</unit>
			<unit id="119" translate="yes">
				<segment state="initial">
					<source>Architecture</source>
					<target>Architecture</target>
				</segment>
			</unit>
			<unit id="120" translate="yes">
				<segment state="initial">
					<source>The following is a simple representation of the text input system.</source>
					<target>The following is a simple representation of the text input system.</target>
				</segment>
			</unit>
			<unit id="121" translate="yes">
				<segment state="initial">
					<source>"Application" represents a UWP app hosting a custom edit control built using the core text APIs.</source>
					<target>"Application" represents a UWP app hosting a custom edit control built using the core text APIs.</target>
				</segment>
			</unit>
			<unit id="122" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn958238)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.UI.Text.Core</pc></pc> APIs facilitate the communication with text services through Windows.</source>
					<target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.UI.Text.Core</pc></pc> APIs facilitate the communication with text services through Windows.</target>
				</segment>
			</unit>
			<unit id="123" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn958158)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Communication between the text edit control and the text services is handled primarily through a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CoreTextEditContext</pc></pc> object that provides the methods and events to facilitate the communication.</source>
					<target>Communication between the text edit control and the text services is handled primarily through a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CoreTextEditContext</pc></pc> object that provides the methods and events to facilitate the communication.</target>
				</segment>
			</unit>
			<unit id="124" translate="yes">
				<segment state="initial">
					<source>core text architecture diagram</source>
					<target>core text architecture diagram</target>
				</segment>
			</unit>
			<unit id="125" translate="yes">
				<segment state="initial">
					<source>Text ranges and selection</source>
					<target>Text ranges and selection</target>
				</segment>
			</unit>
			<unit id="126" translate="yes">
				<segment state="initial">
					<source>Edit controls provide space for text entry and users expect to edit text anywhere in this space.</source>
					<target>Edit controls provide space for text entry and users expect to edit text anywhere in this space.</target>
				</segment>
			</unit>
			<unit id="127" translate="yes">
				<segment state="initial">
					<source>Here, we explain the text positioning system used by the core text APIs and how ranges and selections are represented in this system.</source>
					<target>Here, we explain the text positioning system used by the core text APIs and how ranges and selections are represented in this system.</target>
				</segment>
			</unit>
			<unit id="128" translate="yes">
				<segment state="initial">
					<source>Application caret position</source>
					<target>Application caret position</target>
				</segment>
			</unit>
			<unit id="129" translate="yes">
				<segment state="initial">
					<source>Text ranges used with the core text APIs are expressed in terms of caret positions.</source>
					<target>Text ranges used with the core text APIs are expressed in terms of caret positions.</target>
				</segment>
			</unit>
			<unit id="130" translate="yes">
				<segment state="initial">
					<source>An "Application Caret Position (ACP)" is a zero-based number that indicates the count of characters from the start of the text stream immediately before the caret, as shown here.</source>
					<target>An "Application Caret Position (ACP)" is a zero-based number that indicates the count of characters from the start of the text stream immediately before the caret, as shown here.</target>
				</segment>
			</unit>
			<unit id="131" translate="yes">
				<segment state="initial">
					<source>example text stream diagram</source>
					<target>example text stream diagram</target>
				</segment>
			</unit>
			<unit id="132" translate="yes">
				<segment state="initial">
					<source>Text ranges and selection</source>
					<target>Text ranges and selection</target>
				</segment>
			</unit>
			<unit id="133" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn958201)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Text ranges and selections are represented by the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CoreTextRange</pc></pc> structure which contains two fields:</source>
					<target>Text ranges and selections are represented by the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CoreTextRange</pc></pc> structure which contains two fields:</target>
				</segment>
			</unit>
			<unit id="134" translate="yes">
				<segment state="initial">
					<source>Field</source>
					<target>Field</target>
				</segment>
			</unit>
			<unit id="135" translate="yes">
				<segment state="initial">
					<source>Data type</source>
					<target>Data type</target>
				</segment>
			</unit>
			<unit id="136" translate="yes">
				<segment state="initial">
					<source>Description</source>
					<target>Description</target>
				</segment>
			</unit>
			<unit id="137" translate="yes">
				<segment state="initial">
					<source>StartCaretPosition</source>
					<target>StartCaretPosition</target>
				</segment>
			</unit>
			<unit id="138" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Number</pc> \[JavaScript\]</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Number</pc> \[JavaScript\]</target>
				</segment>
			</unit>
			<unit id="139" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">System.Int32</pc> \[.NET\]</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">System.Int32</pc> \[.NET\]</target>
				</segment>
			</unit>
			<unit id="140" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">int32</pc> \[C++\]</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">int32</pc> \[C++\]</target>
				</segment>
			</unit>
			<unit id="141" translate="yes">
				<segment state="initial">
					<source>The start position of a range is the ACP immediately before the first character.</source>
					<target>The start position of a range is the ACP immediately before the first character.</target>
				</segment>
			</unit>
			<unit id="142" translate="yes">
				<segment state="initial">
					<source>EndCaretPosition</source>
					<target>EndCaretPosition</target>
				</segment>
			</unit>
			<unit id="143" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Number</pc> \[JavaScript\]</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Number</pc> \[JavaScript\]</target>
				</segment>
			</unit>
			<unit id="144" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">System.Int32</pc> \[.NET\]</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">System.Int32</pc> \[.NET\]</target>
				</segment>
			</unit>
			<unit id="145" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">int32</pc> \[C++\]</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">int32</pc> \[C++\]</target>
				</segment>
			</unit>
			<unit id="146" translate="yes">
				<segment state="initial">
					<source>The end position of a range is the ACP immediately after the last character.</source>
					<target>The end position of a range is the ACP immediately after the last character.</target>
				</segment>
			</unit>
			<unit id="147" translate="yes">
				<segment state="initial">
					<source>For example, in the text range shown previously, the range \[0, 5\] specifies the word "Hello".</source>
					<target>For example, in the text range shown previously, the range \[0, 5\] specifies the word "Hello".</target>
				</segment>
			</unit>
			<unit id="148" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">StartCaretPosition</pc> must always be less than or equal to the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">EndCaretPosition</pc>.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">StartCaretPosition</pc> must always be less than or equal to the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">EndCaretPosition</pc>.</target>
				</segment>
			</unit>
			<unit id="149" translate="yes">
				<segment state="initial">
					<source>The range \[5, 0\] is invalid.</source>
					<target>The range \[5, 0\] is invalid.</target>
				</segment>
			</unit>
			<unit id="150" translate="yes">
				<segment state="initial">
					<source>Insertion point</source>
					<target>Insertion point</target>
				</segment>
			</unit>
			<unit id="151" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>The current caret position, frequently referred to as the insertion point, is represented by setting the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">StartCaretPosition</pc> to be equal to the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">EndCaretPosition</pc>.</source>
					<target>The current caret position, frequently referred to as the insertion point, is represented by setting the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">StartCaretPosition</pc> to be equal to the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">EndCaretPosition</pc>.</target>
				</segment>
			</unit>
			<unit id="152" translate="yes">
				<segment state="initial">
					<source>Noncontiguous selection</source>
					<target>Noncontiguous selection</target>
				</segment>
			</unit>
			<unit id="153" translate="yes">
				<segment state="initial">
					<source>Some edit controls support noncontiguous selections.</source>
					<target>Some edit controls support noncontiguous selections.</target>
				</segment>
			</unit>
			<unit id="154" translate="yes">
				<segment state="initial">
					<source>For example, Microsoft Office apps support multiple arbitrary selections, and many source code editors support column selection.</source>
					<target>For example, Microsoft Office apps support multiple arbitrary selections, and many source code editors support column selection.</target>
				</segment>
			</unit>
			<unit id="155" translate="yes">
				<segment state="initial">
					<source>However, the core text APIs do not support noncontiguous selections.</source>
					<target>However, the core text APIs do not support noncontiguous selections.</target>
				</segment>
			</unit>
			<unit id="156" translate="yes">
				<segment state="initial">
					<source>Edit controls must report only a single contiguous selection, most often the active sub-range of the noncontiguous selections.</source>
					<target>Edit controls must report only a single contiguous selection, most often the active sub-range of the noncontiguous selections.</target>
				</segment>
			</unit>
			<unit id="157" translate="yes">
				<segment state="initial">
					<source>For example, consider this text stream:</source>
					<target>For example, consider this text stream:</target>
				</segment>
			</unit>
			<unit id="158" translate="yes">
				<originalData>
					<data id="id1">](images/coretext/stream-2.png)</data>
				</originalData>
				<segment state="initial">
					<source>example text stream diagram<ph dataRef="id1" id="ph1" /> There are two selections: \[0, 1\] and \[6, 11\].</source>
					<target>example text stream diagram<ph dataRef="id1" id="ph1" /> There are two selections: \[0, 1\] and \[6, 11\].</target>
				</segment>
			</unit>
			<unit id="159" translate="yes">
				<segment state="initial">
					<source>The edit control must report only one of them; either \[0, 1\] or \[6, 11\].</source>
					<target>The edit control must report only one of them; either \[0, 1\] or \[6, 11\].</target>
				</segment>
			</unit>
			<unit id="160" translate="yes">
				<segment state="initial">
					<source>Working with text</source>
					<target>Working with text</target>
				</segment>
			</unit>
			<unit id="161" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn958158)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/dn958176)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
					<data id="id9">[</data>
					<data id="id10">](https://msdn.microsoft.com/library/windows/apps/dn958175)</data>
					<data id="id11">**</data>
					<data id="id12">**</data>
					<data id="id13">[</data>
					<data id="id14">](https://msdn.microsoft.com/library/windows/apps/dn958172)</data>
					<data id="id15">**</data>
					<data id="id16">**</data>
				</originalData>
				<segment state="initial">
					<source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CoreTextEditContext</pc></pc> class enables text flow between Windows and edit controls through the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">TextUpdating</pc></pc> event, the <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">TextRequested</pc></pc> event, and the <pc dataRefEnd="id14" dataRefStart="id13" id="p7"><pc dataRefEnd="id16" dataRefStart="id15" id="p8">NotifyTextChanged</pc></pc> method.</source>
					<target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CoreTextEditContext</pc></pc> class enables text flow between Windows and edit controls through the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">TextUpdating</pc></pc> event, the <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">TextRequested</pc></pc> event, and the <pc dataRefEnd="id14" dataRefStart="id13" id="p7"><pc dataRefEnd="id16" dataRefStart="id15" id="p8">NotifyTextChanged</pc></pc> method.</target>
				</segment>
			</unit>
			<unit id="162" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn958176)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Your edit control receives text through <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">TextUpdating</pc></pc> events that are generated when users interact with text input methods like keyboards, speech, or IMEs.</source>
					<target>Your edit control receives text through <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">TextUpdating</pc></pc> events that are generated when users interact with text input methods like keyboards, speech, or IMEs.</target>
				</segment>
			</unit>
			<unit id="163" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn958172)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>When you change text in your edit control, for example, by pasting text into the control, you need to notify Windows by calling <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">NotifyTextChanged</pc></pc>.</source>
					<target>When you change text in your edit control, for example, by pasting text into the control, you need to notify Windows by calling <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">NotifyTextChanged</pc></pc>.</target>
				</segment>
			</unit>
			<unit id="164" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn958175)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>If the text service requires the new text, then a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">TextRequested</pc></pc> event is raised.</source>
					<target>If the text service requires the new text, then a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">TextRequested</pc></pc> event is raised.</target>
				</segment>
			</unit>
			<unit id="165" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>You must provide the new text in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">TextRequested</pc> event handler.</source>
					<target>You must provide the new text in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">TextRequested</pc> event handler.</target>
				</segment>
			</unit>
			<unit id="166" translate="yes">
				<segment state="initial">
					<source>Accepting text updates</source>
					<target>Accepting text updates</target>
				</segment>
			</unit>
			<unit id="167" translate="yes">
				<segment state="initial">
					<source>Your edit control should typically accept text update requests because they represent the text the user wants to enter.</source>
					<target>Your edit control should typically accept text update requests because they represent the text the user wants to enter.</target>
				</segment>
			</unit>
			<unit id="168" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn958176)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>In the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">TextUpdating</pc></pc> event handler, these actions are expected of your edit control:</source>
					<target>In the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">TextUpdating</pc></pc> event handler, these actions are expected of your edit control:</target>
				</segment>
			</unit>
			<unit id="169" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn958236)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/dn958234)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>Insert the text specified in <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CoreTextTextUpdatingEventArgs.Text</pc></pc> in the position specified in <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">CoreTextTextUpdatingEventArgs.Range</pc></pc>.</source>
					<target>Insert the text specified in <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CoreTextTextUpdatingEventArgs.Text</pc></pc> in the position specified in <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">CoreTextTextUpdatingEventArgs.Range</pc></pc>.</target>
				</segment>
			</unit>
			<unit id="170" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn958233)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Place selection at the position specified in <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CoreTextTextUpdatingEventArgs.NewSelection</pc></pc>.</source>
					<target>Place selection at the position specified in <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CoreTextTextUpdatingEventArgs.NewSelection</pc></pc>.</target>
				</segment>
			</unit>
			<unit id="171" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn958235)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/dn958237)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>Notify the system that the update succeeded by setting <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CoreTextTextUpdatingEventArgs.Result</pc></pc> to <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">CoreTextTextUpdatingResult.Succeeded</pc></pc>.</source>
					<target>Notify the system that the update succeeded by setting <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CoreTextTextUpdatingEventArgs.Result</pc></pc> to <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">CoreTextTextUpdatingResult.Succeeded</pc></pc>.</target>
				</segment>
			</unit>
			<unit id="172" translate="yes">
				<segment state="initial">
					<source>For example, this is the state of an edit control before the user types "d".</source>
					<target>For example, this is the state of an edit control before the user types "d".</target>
				</segment>
			</unit>
			<unit id="173" translate="yes">
				<segment state="initial">
					<source>The insertion point is at \[10, 10\].</source>
					<target>The insertion point is at \[10, 10\].</target>
				</segment>
			</unit>
			<unit id="174" translate="yes">
				<originalData>
					<data id="id1">](images/coretext/stream-3.png)</data>
					<data id="id2">[</data>
					<data id="id3">](https://msdn.microsoft.com/library/windows/apps/dn958176)</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">[</data>
					<data id="id7">](https://msdn.microsoft.com/library/windows/apps/dn958229)</data>
					<data id="id8">**</data>
					<data id="id9">**</data>
				</originalData>
				<segment state="initial">
					<source>example text stream diagram<ph dataRef="id1" id="ph1" /> When the user types "d", a <pc dataRefEnd="id3" dataRefStart="id2" id="p1"><pc dataRefEnd="id5" dataRefStart="id4" id="p2">TextUpdating</pc></pc> event is raised with the following <pc dataRefEnd="id7" dataRefStart="id6" id="p3"><pc dataRefEnd="id9" dataRefStart="id8" id="p4">CoreTextTextUpdatingEventArgs</pc></pc> data:</source>
					<target>example text stream diagram<ph dataRef="id1" id="ph1" /> When the user types "d", a <pc dataRefEnd="id3" dataRefStart="id2" id="p1"><pc dataRefEnd="id5" dataRefStart="id4" id="p2">TextUpdating</pc></pc> event is raised with the following <pc dataRefEnd="id7" dataRefStart="id6" id="p3"><pc dataRefEnd="id9" dataRefStart="id8" id="p4">CoreTextTextUpdatingEventArgs</pc></pc> data:</target>
				</segment>
			</unit>
			<unit id="175" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn958234)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Range</pc></pc> = \[10, 10\]</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Range</pc></pc> = \[10, 10\]</target>
				</segment>
			</unit>
			<unit id="176" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn958236)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Text</pc></pc> = "d"</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Text</pc></pc> = "d"</target>
				</segment>
			</unit>
			<unit id="177" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn958233)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">NewSelection</pc></pc> = \[11, 11\]</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">NewSelection</pc></pc> = \[11, 11\]</target>
				</segment>
			</unit>
			<unit id="178" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn958235)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source>In your edit control, apply the specified changes and set <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Result</pc></pc> to <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Succeeded</pc>.</source>
					<target>In your edit control, apply the specified changes and set <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Result</pc></pc> to <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Succeeded</pc>.</target>
				</segment>
			</unit>
			<unit id="179" translate="yes">
				<segment state="initial">
					<source>Here's the state of the control after the changes are applied.</source>
					<target>Here's the state of the control after the changes are applied.</target>
				</segment>
			</unit>
			<unit id="180" translate="yes">
				<segment state="initial">
					<source>example text stream diagram</source>
					<target>example text stream diagram</target>
				</segment>
			</unit>
			<unit id="181" translate="yes">
				<segment state="initial">
					<source>Rejecting text updates</source>
					<target>Rejecting text updates</target>
				</segment>
			</unit>
			<unit id="182" translate="yes">
				<segment state="initial">
					<source>Sometimes, you cannot apply text updates because the requested range is in an area of the edit control that should not be changed.</source>
					<target>Sometimes, you cannot apply text updates because the requested range is in an area of the edit control that should not be changed.</target>
				</segment>
			</unit>
			<unit id="183" translate="yes">
				<segment state="initial">
					<source>In this case, you should not apply any changes.</source>
					<target>In this case, you should not apply any changes.</target>
				</segment>
			</unit>
			<unit id="184" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn958235)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/dn958237)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>Instead, notify the system that the update failed by setting <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CoreTextTextUpdatingEventArgs.Result</pc></pc> to <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">CoreTextTextUpdatingResult.Failed</pc></pc>.</source>
					<target>Instead, notify the system that the update failed by setting <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CoreTextTextUpdatingEventArgs.Result</pc></pc> to <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">CoreTextTextUpdatingResult.Failed</pc></pc>.</target>
				</segment>
			</unit>
			<unit id="185" translate="yes">
				<segment state="initial">
					<source>For example, consider an edit control that accepts only an e-mail address.</source>
					<target>For example, consider an edit control that accepts only an e-mail address.</target>
				</segment>
			</unit>
			<unit id="186" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn958176)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/dn958235)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
					<data id="id9">**</data>
					<data id="id10">**</data>
				</originalData>
				<segment state="initial">
					<source>Spaces should be rejected because e-mail addresses cannot contain spaces, so when <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">TextUpdating</pc></pc> events are raised for the space key, you should simply set <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Result</pc></pc> to <pc dataRefEnd="id10" dataRefStart="id9" id="p5">Failed</pc> in your edit control.</source>
					<target>Spaces should be rejected because e-mail addresses cannot contain spaces, so when <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">TextUpdating</pc></pc> events are raised for the space key, you should simply set <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Result</pc></pc> to <pc dataRefEnd="id10" dataRefStart="id9" id="p5">Failed</pc> in your edit control.</target>
				</segment>
			</unit>
			<unit id="187" translate="yes">
				<segment state="initial">
					<source>Notifying text changes</source>
					<target>Notifying text changes</target>
				</segment>
			</unit>
			<unit id="188" translate="yes">
				<segment state="initial">
					<source>Sometimes, your edit control makes changes to text such as when text is pasted or auto-corrected.</source>
					<target>Sometimes, your edit control makes changes to text such as when text is pasted or auto-corrected.</target>
				</segment>
			</unit>
			<unit id="189" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn958172)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>In these cases, you must notify the text services of these changes by calling the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">NotifyTextChanged</pc></pc> method.</source>
					<target>In these cases, you must notify the text services of these changes by calling the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">NotifyTextChanged</pc></pc> method.</target>
				</segment>
			</unit>
			<unit id="190" translate="yes">
				<segment state="initial">
					<source>For example, this is the state of an edit control before the user pastes "World".</source>
					<target>For example, this is the state of an edit control before the user pastes "World".</target>
				</segment>
			</unit>
			<unit id="191" translate="yes">
				<segment state="initial">
					<source>The insertion point is at \[6, 6\].</source>
					<target>The insertion point is at \[6, 6\].</target>
				</segment>
			</unit>
			<unit id="192" translate="yes">
				<originalData>
					<data id="id1">](images/coretext/stream-5.png)</data>
				</originalData>
				<segment state="initial">
					<source>example text stream diagram<ph dataRef="id1" id="ph1" /> The user performs the paste action and the edit control ends up with the following text:</source>
					<target>example text stream diagram<ph dataRef="id1" id="ph1" /> The user performs the paste action and the edit control ends up with the following text:</target>
				</segment>
			</unit>
			<unit id="193" translate="yes">
				<originalData>
					<data id="id1">](images/coretext/stream-4.png)</data>
					<data id="id2">[</data>
					<data id="id3">](https://msdn.microsoft.com/library/windows/apps/dn958172)</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
				</originalData>
				<segment state="initial">
					<source>example text stream diagram<ph dataRef="id1" id="ph1" /> When this happens, you should call <pc dataRefEnd="id3" dataRefStart="id2" id="p1"><pc dataRefEnd="id5" dataRefStart="id4" id="p2">NotifyTextChanged</pc></pc> with these arguments:</source>
					<target>example text stream diagram<ph dataRef="id1" id="ph1" /> When this happens, you should call <pc dataRefEnd="id3" dataRefStart="id2" id="p1"><pc dataRefEnd="id5" dataRefStart="id4" id="p2">NotifyTextChanged</pc></pc> with these arguments:</target>
				</segment>
			</unit>
			<unit id="194" translate="yes">
				<originalData>
					<data id="id1">*</data>
					<data id="id2">*</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">modifiedRange</pc> = \[6, 6\]</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">modifiedRange</pc> = \[6, 6\]</target>
				</segment>
			</unit>
			<unit id="195" translate="yes">
				<originalData>
					<data id="id1">*</data>
					<data id="id2">*</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">newLength</pc> = 5</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">newLength</pc> = 5</target>
				</segment>
			</unit>
			<unit id="196" translate="yes">
				<originalData>
					<data id="id1">*</data>
					<data id="id2">*</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">newSelection</pc> = \[11, 11\]</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">newSelection</pc> = \[11, 11\]</target>
				</segment>
			</unit>
			<unit id="197" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn958175)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>One or more <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">TextRequested</pc></pc> events will follow, which you handle to update the text that the text services are working with.</source>
					<target>One or more <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">TextRequested</pc></pc> events will follow, which you handle to update the text that the text services are working with.</target>
				</segment>
			</unit>
			<unit id="198" translate="yes">
				<segment state="initial">
					<source>Overriding text updates</source>
					<target>Overriding text updates</target>
				</segment>
			</unit>
			<unit id="199" translate="yes">
				<segment state="initial">
					<source>In your edit control, you might want to override a text update to provide auto-correction features.</source>
					<target>In your edit control, you might want to override a text update to provide auto-correction features.</target>
				</segment>
			</unit>
			<unit id="200" translate="yes">
				<segment state="initial">
					<source>For example, consider an edit control that provides a correction feature that formalizes contractions.</source>
					<target>For example, consider an edit control that provides a correction feature that formalizes contractions.</target>
				</segment>
			</unit>
			<unit id="201" translate="yes">
				<segment state="initial">
					<source>This is the state of the edit control before the user types the space key to trigger the correction.</source>
					<target>This is the state of the edit control before the user types the space key to trigger the correction.</target>
				</segment>
			</unit>
			<unit id="202" translate="yes">
				<segment state="initial">
					<source>The insertion point is at \[3, 3\].</source>
					<target>The insertion point is at \[3, 3\].</target>
				</segment>
			</unit>
			<unit id="203" translate="yes">
				<originalData>
					<data id="id1">](images/coretext/stream-6.png)</data>
					<data id="id2">[</data>
					<data id="id3">](https://msdn.microsoft.com/library/windows/apps/dn958176)</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
				</originalData>
				<segment state="initial">
					<source>example text stream diagram<ph dataRef="id1" id="ph1" /> The user presses the space key and a corresponding <pc dataRefEnd="id3" dataRefStart="id2" id="p1"><pc dataRefEnd="id5" dataRefStart="id4" id="p2">TextUpdating</pc></pc> event is raised.</source>
					<target>example text stream diagram<ph dataRef="id1" id="ph1" /> The user presses the space key and a corresponding <pc dataRefEnd="id3" dataRefStart="id2" id="p1"><pc dataRefEnd="id5" dataRefStart="id4" id="p2">TextUpdating</pc></pc> event is raised.</target>
				</segment>
			</unit>
			<unit id="204" translate="yes">
				<segment state="initial">
					<source>The edit control accepts the text update.</source>
					<target>The edit control accepts the text update.</target>
				</segment>
			</unit>
			<unit id="205" translate="yes">
				<segment state="initial">
					<source>This is the state of the edit control for a brief moment before the correction is completed.</source>
					<target>This is the state of the edit control for a brief moment before the correction is completed.</target>
				</segment>
			</unit>
			<unit id="206" translate="yes">
				<segment state="initial">
					<source>The insertion point is at \[4, 4\].</source>
					<target>The insertion point is at \[4, 4\].</target>
				</segment>
			</unit>
			<unit id="207" translate="yes">
				<originalData>
					<data id="id1">](images/coretext/stream-7.png)</data>
					<data id="id2">[</data>
					<data id="id3">](https://msdn.microsoft.com/library/windows/apps/dn958176)</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
				</originalData>
				<segment state="initial">
					<source>example text stream diagram<ph dataRef="id1" id="ph1" /> Outside of the <pc dataRefEnd="id3" dataRefStart="id2" id="p1"><pc dataRefEnd="id5" dataRefStart="id4" id="p2">TextUpdating</pc></pc> event handler, the edit control makes the following correction.</source>
					<target>example text stream diagram<ph dataRef="id1" id="ph1" /> Outside of the <pc dataRefEnd="id3" dataRefStart="id2" id="p1"><pc dataRefEnd="id5" dataRefStart="id4" id="p2">TextUpdating</pc></pc> event handler, the edit control makes the following correction.</target>
				</segment>
			</unit>
			<unit id="208" translate="yes">
				<segment state="initial">
					<source>This is the state of the edit control after the correction is complete.</source>
					<target>This is the state of the edit control after the correction is complete.</target>
				</segment>
			</unit>
			<unit id="209" translate="yes">
				<segment state="initial">
					<source>The insertion point is at \[5, 5\].</source>
					<target>The insertion point is at \[5, 5\].</target>
				</segment>
			</unit>
			<unit id="210" translate="yes">
				<originalData>
					<data id="id1">](images/coretext/stream-8.png)</data>
					<data id="id2">[</data>
					<data id="id3">](https://msdn.microsoft.com/library/windows/apps/dn958172)</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
				</originalData>
				<segment state="initial">
					<source>example text stream diagram<ph dataRef="id1" id="ph1" /> When this happens, you should call <pc dataRefEnd="id3" dataRefStart="id2" id="p1"><pc dataRefEnd="id5" dataRefStart="id4" id="p2">NotifyTextChanged</pc></pc> with these arguments:</source>
					<target>example text stream diagram<ph dataRef="id1" id="ph1" /> When this happens, you should call <pc dataRefEnd="id3" dataRefStart="id2" id="p1"><pc dataRefEnd="id5" dataRefStart="id4" id="p2">NotifyTextChanged</pc></pc> with these arguments:</target>
				</segment>
			</unit>
			<unit id="211" translate="yes">
				<originalData>
					<data id="id1">*</data>
					<data id="id2">*</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">modifiedRange</pc> = \[1, 2\]</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">modifiedRange</pc> = \[1, 2\]</target>
				</segment>
			</unit>
			<unit id="212" translate="yes">
				<originalData>
					<data id="id1">*</data>
					<data id="id2">*</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">newLength</pc> = 2</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">newLength</pc> = 2</target>
				</segment>
			</unit>
			<unit id="213" translate="yes">
				<originalData>
					<data id="id1">*</data>
					<data id="id2">*</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">newSelection</pc> = \[5, 5\]</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">newSelection</pc> = \[5, 5\]</target>
				</segment>
			</unit>
			<unit id="214" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn958175)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>One or more <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">TextRequested</pc></pc> events will follow, which you handle to update the text that the text services are working with.</source>
					<target>One or more <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">TextRequested</pc></pc> events will follow, which you handle to update the text that the text services are working with.</target>
				</segment>
			</unit>
			<unit id="215" translate="yes">
				<segment state="initial">
					<source>Providing requested text</source>
					<target>Providing requested text</target>
				</segment>
			</unit>
			<unit id="216" translate="yes">
				<segment state="initial">
					<source>It's important for text services to have the correct text to provide features like auto-correction or prediction, especially for text that already existed in the edit control, from loading a document, for example, or text that is inserted by the edit control as explained in previous sections.</source>
					<target>It's important for text services to have the correct text to provide features like auto-correction or prediction, especially for text that already existed in the edit control, from loading a document, for example, or text that is inserted by the edit control as explained in previous sections.</target>
				</segment>
			</unit>
			<unit id="217" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn958175)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Therefore, whenever a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">TextRequested</pc></pc> event is raised, you must provide the text currently in your edit control for the specified range.</source>
					<target>Therefore, whenever a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">TextRequested</pc></pc> event is raised, you must provide the text currently in your edit control for the specified range.</target>
				</segment>
			</unit>
			<unit id="218" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn958227)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/dn958221)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>There will be times the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Range</pc></pc> in <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">CoreTextTextRequest</pc></pc> specifies a range that your edit control cannot accommodate as-is.</source>
					<target>There will be times the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Range</pc></pc> in <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">CoreTextTextRequest</pc></pc> specifies a range that your edit control cannot accommodate as-is.</target>
				</segment>
			</unit>
			<unit id="219" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">[</data>
					<data id="id4">](https://msdn.microsoft.com/library/windows/apps/dn958175)</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>For example, the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Range</pc> is larger than the size of the edit control at the time of the <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">TextRequested</pc></pc> event, or the end of the <pc dataRefEnd="id8" dataRefStart="id7" id="p4">Range</pc> is out of bounds.</source>
					<target>For example, the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Range</pc> is larger than the size of the edit control at the time of the <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">TextRequested</pc></pc> event, or the end of the <pc dataRefEnd="id8" dataRefStart="id7" id="p4">Range</pc> is out of bounds.</target>
				</segment>
			</unit>
			<unit id="220" translate="yes">
				<segment state="initial">
					<source>In these cases, you should return whatever range makes sense, which is typically a subset of the requested range.</source>
					<target>In these cases, you should return whatever range makes sense, which is typically a subset of the requested range.</target>
				</segment>
			</unit>
			<unit id="221" translate="yes">
				<segment state="initial">
					<source>Related articles</source>
					<target>Related articles</target>
				</segment>
			</unit>
			<unit id="222" translate="yes">
				<segment state="initial">
					<source>Archive samples</source>
					<target>Archive samples</target>
				</segment>
			</unit>
			<unit id="223" translate="yes">
				<segment state="initial">
					<source>XAML text editing sample</source>
					<target>XAML text editing sample</target>
				</segment>
			</unit>
		</group>
	</file>
</xliff>