<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="ja-jp" version="2.0" xml:space="preserve" xmlns="urn:oasis:names:tc:xliff:document:2.0">
	<file id="1">
		<mda:metadata>
			<mda:metaGroup>
				<mda:meta type="tool-id">mdxliff</mda:meta>
				<mda:meta type="tool-name">mdxliff</mda:meta>
				<mda:meta type="tool-version">1.0-2eb3c86</mda:meta>
				<mda:meta type="tool-company">Microsoft</mda:meta>
			</mda:metaGroup>
		<mda:metaGroup><mda:meta type="olfilehash">8f53f371ad19bac1929c4a76e59a180730d99831</mda:meta><mda:meta type="olfilepath">wdg-cpub-test\ndolci1\publish\create-a-custom-app-promotion-campaign.md</mda:meta><mda:meta type="oltranslationpriority"></mda:meta><mda:meta type="oltranslationtype">Human Translation</mda:meta><mda:meta type="olskeletonhash">1aabf3ac0aa99696b786e606fecc15cbba4591cd</mda:meta><mda:meta type="olxliffhash">6971c734ae3de7d0bf84ce316672a65c3ab907db</mda:meta></mda:metaGroup></mda:metadata>
		<group id="content">
			<unit id="101" translate="yes">
				<segment state="initial">
					<source>In addition to creating an ad campaign for your app that will run in Windows apps, you can also promote your app using other channels.</source>
					<target>In addition to creating an ad campaign for your app that will run in Windows apps, you can also promote your app using other channels.</target>
				</segment>
			</unit>
			<unit id="102" translate="yes">
				<segment state="initial">
					<source>Create a custom app promotion campaign</source>
					<target>Create a custom app promotion campaign</target>
				</segment>
			</unit>
			<unit id="103" translate="yes">
				<segment state="initial">
					<source>Create a custom app promotion campaign</source>
					<target>Create a custom app promotion campaign</target>
				</segment>
			</unit>
			<unit id="104" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](create-an-ad-campaign-for-your-app.md)</data>
				</originalData>
				<segment state="initial">
					<source>In addition to creating an <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ad campaign for your app</pc> that will run in Windows apps, you can also promote your app using other channels.</source>
					<target>In addition to creating an <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ad campaign for your app</pc> that will run in Windows apps, you can also promote your app using other channels.</target>
				</segment>
			</unit>
			<unit id="105" translate="yes">
				<segment state="initial">
					<source>For example, you can promote your app using a third-party app marketing provider, or you might post links to your app on social media sites.</source>
					<target>For example, you can promote your app using a third-party app marketing provider, or you might post links to your app on social media sites.</target>
				</segment>
			</unit>
			<unit id="106" translate="yes">
				<originalData>
					<data id="id1">*</data>
					<data id="id2">*</data>
				</originalData>
				<segment state="initial">
					<source>These activities are called <pc dataRefEnd="id2" dataRefStart="id1" id="p1">custom campaigns</pc>.</source>
					<target>These activities are called <pc dataRefEnd="id2" dataRefStart="id1" id="p1">custom campaigns</pc>.</target>
				</segment>
			</unit>
			<unit id="107" translate="yes">
				<segment state="initial">
					<source>If you run custom campaigns for your app, you can track the relative performance of each campaign by creating a different Windows Store app URL for each custom campaign, where each URL contains a different campaign ID.</source>
					<target>If you run custom campaigns for your app, you can track the relative performance of each campaign by creating a different Windows Store app URL for each custom campaign, where each URL contains a different campaign ID.</target>
				</segment>
			</unit>
			<unit id="108" translate="yes">
				<segment state="initial">
					<source>When a customer running Windows 10 clicks a URL that contains a campaign ID, Microsoft associates the click with the corresponding custom campaign and makes this data available to you.</source>
					<target>When a customer running Windows 10 clicks a URL that contains a campaign ID, Microsoft associates the click with the corresponding custom campaign and makes this data available to you.</target>
				</segment>
			</unit>
			<unit id="109" translate="yes">
				<originalData>
					<data id="id1">*</data>
					<data id="id2">*</data>
				</originalData>
				<segment state="initial">
					<source>There are two main types of data associated with custom campaigns: page views for your app and <pc dataRefEnd="id2" dataRefStart="id1" id="p1">conversions</pc>.</source>
					<target>There are two main types of data associated with custom campaigns: page views for your app and <pc dataRefEnd="id2" dataRefStart="id1" id="p1">conversions</pc>.</target>
				</segment>
			</unit>
			<unit id="110" translate="yes">
				<segment state="initial">
					<source>A conversion is an app install that results from a customer clicking on the Windows Store page for your app from a URL that is promoted via a custom campaign.</source>
					<target>A conversion is an app install that results from a customer clicking on the Windows Store page for your app from a URL that is promoted via a custom campaign.</target>
				</segment>
			</unit>
			<unit id="111" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](#understanding-how-app-installs-qualify-as-conversions)</data>
				</originalData>
				<segment state="initial">
					<source>For more details about conversions, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Understanding how app installs qualify as conversions</pc> in this topic.</source>
					<target>For more details about conversions, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Understanding how app installs qualify as conversions</pc> in this topic.</target>
				</segment>
			</unit>
			<unit id="112" translate="yes">
				<segment state="initial">
					<source>You can retrieve custom campaign performance data for your app in the following ways:</source>
					<target>You can retrieve custom campaign performance data for your app in the following ways:</target>
				</segment>
			</unit>
			<unit id="113" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/mt186445)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>If your app is a Universal Windows Platform (UWP) app, it can use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">GetAppPurchaseCampaignIdAsync</pc></pc> method to programmatically retrieve the custom campaign ID that resulted in a conversion.</source>
					<target>If your app is a Universal Windows Platform (UWP) app, it can use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">GetAppPurchaseCampaignIdAsync</pc></pc> method to programmatically retrieve the custom campaign ID that resulted in a conversion.</target>
				</segment>
			</unit>
			<unit id="114" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](channels-and-conversions-report.md)</data>
				</originalData>
				<segment state="initial">
					<source>You can view data about page views and conversions for your app or IAP from the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Channels and conversions report</pc> in the Dev Center dashboard.</source>
					<target>You can view data about page views and conversions for your app or IAP from the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Channels and conversions report</pc> in the Dev Center dashboard.</target>
				</segment>
			</unit>
			<unit id="115" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Important</pc>   This data will only be tracked for customers running Windows 10.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Important</pc>   This data will only be tracked for customers running Windows 10.</target>
				</segment>
			</unit>
			<unit id="116" translate="yes">
				<segment state="initial">
					<source>Customers using other operating systems can still follow the link to your app's listing, but data about those customers' activities will not be included.</source>
					<target>Customers using other operating systems can still follow the link to your app's listing, but data about those customers' activities will not be included.</target>
				</segment>
			</unit>
			<unit id="117" translate="yes">
				<segment state="initial">
					<source>Example custom campaign scenario</source>
					<target>Example custom campaign scenario</target>
				</segment>
			</unit>
			<unit id="118" translate="yes">
				<segment state="initial">
					<source>Consider a game developer who has finished building a new game and would like to promote it to players of her existing games.</source>
					<target>Consider a game developer who has finished building a new game and would like to promote it to players of her existing games.</target>
				</segment>
			</unit>
			<unit id="119" translate="yes">
				<segment state="initial">
					<source>She posts the announcement of the new game release on her Facebook page, including a link to the Windows Store page for the game.</source>
					<target>She posts the announcement of the new game release on her Facebook page, including a link to the Windows Store page for the game.</target>
				</segment>
			</unit>
			<unit id="120" translate="yes">
				<segment state="initial">
					<source>Many of her players also follow her on Twitter, so she also tweets the announcement with the link to the Windows Store page for the game.</source>
					<target>Many of her players also follow her on Twitter, so she also tweets the announcement with the link to the Windows Store page for the game.</target>
				</segment>
			</unit>
			<unit id="121" translate="yes">
				<segment state="initial">
					<source>To track the success of each of these promotion channels, the developer creates two variants of the URL for the Windows Store page for the game:</source>
					<target>To track the success of each of these promotion channels, the developer creates two variants of the URL for the Windows Store page for the game:</target>
				</segment>
			</unit>
			<unit id="122" translate="yes">
				<originalData>
					<data id="id1">*</data>
					<data id="id2">*</data>
				</originalData>
				<segment state="initial">
					<source>The URL she will post to her Facebook page includes the custom campaign ID <pc dataRefEnd="id2" dataRefStart="id1" id="p1">my-facebook-campaign</pc>.</source>
					<target>The URL she will post to her Facebook page includes the custom campaign ID <pc dataRefEnd="id2" dataRefStart="id1" id="p1">my-facebook-campaign</pc>.</target>
				</segment>
			</unit>
			<unit id="123" translate="yes">
				<originalData>
					<data id="id1">*</data>
					<data id="id2">*</data>
				</originalData>
				<segment state="initial">
					<source>The URL she will post to Twitter includes the custom campaign ID <pc dataRefEnd="id2" dataRefStart="id1" id="p1">my-twitter-campaign</pc>.</source>
					<target>The URL she will post to Twitter includes the custom campaign ID <pc dataRefEnd="id2" dataRefStart="id1" id="p1">my-twitter-campaign</pc>.</target>
				</segment>
			</unit>
			<unit id="124" translate="yes">
				<segment state="initial">
					<source>As her Facebook and Twitter followers click on the URLs, Microsoft tracks each click and associates it with the corresponding custom campaign.</source>
					<target>As her Facebook and Twitter followers click on the URLs, Microsoft tracks each click and associates it with the corresponding custom campaign.</target>
				</segment>
			</unit>
			<unit id="125" translate="yes">
				<segment state="initial">
					<source>Subsequent qualifying acquisitions of the game and any in-app product (IAP) purchases are associated with the custom campaign and reported as conversions.</source>
					<target>Subsequent qualifying acquisitions of the game and any in-app product (IAP) purchases are associated with the custom campaign and reported as conversions.</target>
				</segment>
			</unit>
			<unit id="126" translate="yes">
				<segment state="initial">
					<source>Understanding how app installs qualify as conversions</source>
					<target>Understanding how app installs qualify as conversions</target>
				</segment>
			</unit>
			<unit id="127" translate="yes">
				<originalData>
					<data id="id1">*</data>
					<data id="id2">*</data>
				</originalData>
				<segment state="initial">
					<source>A <pc dataRefEnd="id2" dataRefStart="id1" id="p1">conversion</pc> is an app install that results from a customer clicking on the Windows Store page for your app from a URL that is promoted via a custom campaign.</source>
					<target>A <pc dataRefEnd="id2" dataRefStart="id1" id="p1">conversion</pc> is an app install that results from a customer clicking on the Windows Store page for your app from a URL that is promoted via a custom campaign.</target>
				</segment>
			</unit>
			<unit id="128" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](channels-and-conversions-report.md)</data>
					<data id="id3">[</data>
					<data id="id4">](#programmatically)</data>
				</originalData>
				<segment state="initial">
					<source>There are different conditions for qualifying as a conversion for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Channels and conversions report</pc> on the Dev Center dashboard and for qualifying as a conversion for <pc dataRefEnd="id4" dataRefStart="id3" id="p2">programmatically retrieving the campaign ID</pc>.</source>
					<target>There are different conditions for qualifying as a conversion for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Channels and conversions report</pc> on the Dev Center dashboard and for qualifying as a conversion for <pc dataRefEnd="id4" dataRefStart="id3" id="p2">programmatically retrieving the campaign ID</pc>.</target>
				</segment>
			</unit>
			<unit id="129" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](channels-and-conversions-report.md)</data>
				</originalData>
				<segment state="initial">
					<source>To qualify as a conversion for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Channels and conversions report</pc>, the following conditions must be met:</source>
					<target>To qualify as a conversion for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Channels and conversions report</pc>, the following conditions must be met:</target>
				</segment>
			</unit>
			<unit id="130" translate="yes">
				<segment state="initial">
					<source>A customer with a recognized Microsoft account clicks an app URL that contains a custom campaign ID, and is redirected to the Windows Store page for the app.</source>
					<target>A customer with a recognized Microsoft account clicks an app URL that contains a custom campaign ID, and is redirected to the Windows Store page for the app.</target>
				</segment>
			</unit>
			<unit id="131" translate="yes">
				<segment state="initial">
					<source>The same customer (as identified by the same Microsoft account) installs the app within 24 hours after they first clicked the Windows Store URL with the custom campaign ID.</source>
					<target>The same customer (as identified by the same Microsoft account) installs the app within 24 hours after they first clicked the Windows Store URL with the custom campaign ID.</target>
				</segment>
			</unit>
			<unit id="132" translate="yes">
				<segment state="initial">
					<source>This qualifies as a conversion even if the customer installs the app on a different computer or device than the one on which they clicked the Windows Store URL with the custom campaign ID.</source>
					<target>This qualifies as a conversion even if the customer installs the app on a different computer or device than the one on which they clicked the Windows Store URL with the custom campaign ID.</target>
				</segment>
			</unit>
			<unit id="133" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  For app installs that are counted as conversions for a custom campaign, any IAP purchases in that app are also counted as conversions for the same custom campaign.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  For app installs that are counted as conversions for a custom campaign, any IAP purchases in that app are also counted as conversions for the same custom campaign.</target>
				</segment>
			</unit>
			<unit id="134" translate="yes">
				<segment state="initial">
					<source>To qualify as a conversion when programmatically retrieving the campaign ID associated with the app, the following conditions must be met:</source>
					<target>To qualify as a conversion when programmatically retrieving the campaign ID associated with the app, the following conditions must be met:</target>
				</segment>
			</unit>
			<unit id="135" translate="yes">
				<segment state="initial">
					<source>A customer with a recognized Microsoft account clicks an app URL that contains a custom campaign ID, and is redirected to the Windows Store page for the app.</source>
					<target>A customer with a recognized Microsoft account clicks an app URL that contains a custom campaign ID, and is redirected to the Windows Store page for the app.</target>
				</segment>
			</unit>
			<unit id="136" translate="yes">
				<segment state="initial">
					<source>The customer installs the app during the same Windows Store page view after they click the URL.</source>
					<target>The customer installs the app during the same Windows Store page view after they click the URL.</target>
				</segment>
			</unit>
			<unit id="137" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](channels-and-conversions-report.md)</data>
				</originalData>
				<segment state="initial">
					<source>If the user leaves the page and then returns to the page (either on the same computer or device or a different computer or device) within 24 hours and installs the app, this will qualify as a conversion on the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Channels and conversions report</pc>, but this will not qualify as a conversion if you programmatically retrieve the campaign ID.</source>
					<target>If the user leaves the page and then returns to the page (either on the same computer or device or a different computer or device) within 24 hours and installs the app, this will qualify as a conversion on the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Channels and conversions report</pc>, but this will not qualify as a conversion if you programmatically retrieve the campaign ID.</target>
				</segment>
			</unit>
			<unit id="138" translate="yes">
				<segment state="initial">
					<source>Embed a custom campaign ID to your app's Windows Store page URL</source>
					<target>Embed a custom campaign ID to your app's Windows Store page URL</target>
				</segment>
			</unit>
			<unit id="139" translate="yes">
				<segment state="initial">
					<source>To create a Windows Store page URL for your app with a custom campaign ID:</source>
					<target>To create a Windows Store page URL for your app with a custom campaign ID:</target>
				</segment>
			</unit>
			<unit id="140" translate="yes">
				<segment state="initial">
					<source>Create an ID string for your custom campaign.</source>
					<target>Create an ID string for your custom campaign.</target>
				</segment>
			</unit>
			<unit id="141" translate="yes">
				<segment state="initial">
					<source>This string can contain up to 100 characters, although we recommend that you define short campaign IDs that are easily identifiable.</source>
					<target>This string can contain up to 100 characters, although we recommend that you define short campaign IDs that are easily identifiable.</target>
				</segment>
			</unit>
			<unit id="142" translate="yes">
				<segment state="initial">
					<source>Get the Windows Store page URL for your app in HTML or protocol format.</source>
					<target>Get the Windows Store page URL for your app in HTML or protocol format.</target>
				</segment>
			</unit>
			<unit id="143" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](link-to-your-app.md)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>The HTML format URL is available on the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">App Identity</pc> page in the Dev Center dashboard</pc>.</source>
					<target>The HTML format URL is available on the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">App Identity</pc> page in the Dev Center dashboard</pc>.</target>
				</segment>
			</unit>
			<unit id="144" translate="yes">
				<segment state="initial">
					<source>Use the HTTP format if you want customers to navigate to your app's Windows Store page in a browser (this URL will also launch the Windows Store app to your app's listing, if the Windows Store app is installed).</source>
					<target>Use the HTTP format if you want customers to navigate to your app's Windows Store page in a browser (this URL will also launch the Windows Store app to your app's listing, if the Windows Store app is installed).</target>
				</segment>
			</unit>
			<unit id="145" translate="yes">
				<originalData>
					<data id="id1">*</data>
					<data id="id2">*</data>
					<data id="id3">*</data>
					<data id="id4">*</data>
					<data id="id5">/</data>
					<data id="id6">*</data>
					<data id="id7">*</data>
					<data id="id8">**</data>
					<data id="id9">**</data>
				</originalData>
				<segment state="initial">
					<source>This URL has the format <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">https://www.microsoft.com/store/apps/</pc>your app name</pc><ph dataRef="id5" id="ph1" /><pc dataRefEnd="id7" dataRefStart="id6" id="p3">your app ID</pc><pc dataRefEnd="id9" dataRefStart="id8" id="p4">. For example, the HTTP URL for Skype is https://www.microsoft.com/store/apps/skype/9wzdncrfj364. </pc>Note**  HTTP format URLs can be used to navigate to the Windows Store in a browser on computers and tablets running Windows 7 and later, and phones running Windows Phone 8 and later.</source>
					<target>This URL has the format <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">https://www.microsoft.com/store/apps/</pc>your app name</pc><ph dataRef="id5" id="ph1" /><pc dataRefEnd="id7" dataRefStart="id6" id="p3">your app ID</pc><pc dataRefEnd="id9" dataRefStart="id8" id="p4">. For example, the HTTP URL for Skype is https://www.microsoft.com/store/apps/skype/9wzdncrfj364. </pc>Note**  HTTP format URLs can be used to navigate to the Windows Store in a browser on computers and tablets running Windows 7 and later, and phones running Windows Phone 8 and later.</target>
				</segment>
			</unit>
			<unit id="146" translate="yes">
				<segment state="initial">
					<source>Use the protocol format if you are promoting your app from other Windows apps that are running on a device or computer with the Windows Store app installed, and you want customers to open to your app's page in the Windows Store app.</source>
					<target>Use the protocol format if you are promoting your app from other Windows apps that are running on a device or computer with the Windows Store app installed, and you want customers to open to your app's page in the Windows Store app.</target>
				</segment>
			</unit>
			<unit id="147" translate="yes">
				<originalData>
					<data id="id1">*</data>
					<data id="id2">*</data>
					<data id="id3">*</data>
					<data id="id4">*</data>
				</originalData>
				<segment state="initial">
					<source>This URL has the format <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ms-windows-store://pdp/?PRODUCTID=</pc>your app id</pc>**.</source>
					<target>This URL has the format <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ms-windows-store://pdp/?PRODUCTID=</pc>your app id</pc>**.</target>
				</segment>
			</unit>
			<unit id="148" translate="yes">
				<segment state="initial">
					<source>For example, the protocol URL for Skype is ms-windows-store://pdp/?PRODUCTID=9wzdncrfj364.</source>
					<target>For example, the protocol URL for Skype is ms-windows-store://pdp/?PRODUCTID=9wzdncrfj364.</target>
				</segment>
			</unit>
			<unit id="149" translate="yes">
				<segment state="initial">
					<source>Append the following string to the end of the URL for your app:</source>
					<target>Append the following string to the end of the URL for your app:</target>
				</segment>
			</unit>
			<unit id="150" translate="yes">
				<originalData>
					<data id="id1">*</data>
					<data id="id2">*</data>
					<data id="id3">*</data>
					<data id="id4">*</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source>For an HTTP format URL, append <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">?cid=</pc>my custom campaign ID</pc><pc dataRefEnd="id6" dataRefStart="id5" id="p3">. For example, if Skype introduces a campaign ID with the value </pc>custom\_campaign**, the new HTTP URL including the campaign ID would be: https://www.microsoft.com/store/apps/skype/9wzdncrfj364?cid=custom\_campaign.</source>
					<target>For an HTTP format URL, append <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">?cid=</pc>my custom campaign ID</pc><pc dataRefEnd="id6" dataRefStart="id5" id="p3">. For example, if Skype introduces a campaign ID with the value </pc>custom\_campaign**, the new HTTP URL including the campaign ID would be: https://www.microsoft.com/store/apps/skype/9wzdncrfj364?cid=custom\_campaign.</target>
				</segment>
			</unit>
			<unit id="151" translate="yes">
				<originalData>
					<data id="id1">*</data>
					<data id="id2">*</data>
					<data id="id3">*</data>
					<data id="id4">*</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source>For a protocol format URL, append <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">&amp;cid=</pc>my custom campaign ID</pc><pc dataRefEnd="id6" dataRefStart="id5" id="p3">. For example, if Skype introduces a campaign ID with the value </pc>custom\_campaign**, the new protocol URL including the campaign ID would be: ms-windows-store://pdp/?PRODUCTID=9wzdncrfj364&amp;cid=custom\_campaign.</source>
					<target>For a protocol format URL, append <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">&amp;cid=</pc>my custom campaign ID</pc><pc dataRefEnd="id6" dataRefStart="id5" id="p3">. For example, if Skype introduces a campaign ID with the value </pc>custom\_campaign**, the new protocol URL including the campaign ID would be: ms-windows-store://pdp/?PRODUCTID=9wzdncrfj364&amp;cid=custom\_campaign.</target>
				</segment>
			</unit>
			<unit id="152" translate="yes">
				<segment state="initial">
					<source>Programmatically retrieve the custom campaign ID for an app</source>
					<target>Programmatically retrieve the custom campaign ID for an app</target>
				</segment>
			</unit>
			<unit id="153" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/mt186445)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>If your app is a UWP app, you can programmatically retrieve the custom campaign ID associated with your app by using the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">GetAppPurchaseCampaignIdAsync</pc></pc> method.</source>
					<target>If your app is a UWP app, you can programmatically retrieve the custom campaign ID associated with your app by using the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">GetAppPurchaseCampaignIdAsync</pc></pc> method.</target>
				</segment>
			</unit>
			<unit id="154" translate="yes">
				<segment state="initial">
					<source>This method makes many analytics and monetization scenarios possible.</source>
					<target>This method makes many analytics and monetization scenarios possible.</target>
				</segment>
			</unit>
			<unit id="155" translate="yes">
				<segment state="initial">
					<source>For example, you can find out if the current user acquired your app after discovering it through your Facebook campaign, and then customize the app experience accordingly.</source>
					<target>For example, you can find out if the current user acquired your app after discovering it through your Facebook campaign, and then customize the app experience accordingly.</target>
				</segment>
			</unit>
			<unit id="156" translate="yes">
				<segment state="initial">
					<source>Alternatively, if you are using a third-party app marketing provider, you can send data back to the provider.</source>
					<target>Alternatively, if you are using a third-party app marketing provider, you can send data back to the provider.</target>
				</segment>
			</unit>
			<unit id="157" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">[</data>
					<data id="id4">](https://msdn.microsoft.com/library/windows/apps/mt186445)</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  The <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">GetAppPurchaseCampaignIdAsync</pc></pc> method will return a campaign ID string only if the customer clicks your URL with the embedded campaign ID, is redirected to the Windows Store page for your app, and then installs your app without leaving this page.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  The <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">GetAppPurchaseCampaignIdAsync</pc></pc> method will return a campaign ID string only if the customer clicks your URL with the embedded campaign ID, is redirected to the Windows Store page for your app, and then installs your app without leaving this page.</target>
				</segment>
			</unit>
			<unit id="158" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>If the user leaves the page and then later returns and installs the app, this will not qualify as a conversion when using <pc dataRefEnd="id2" dataRefStart="id1" id="p1">GetAppPurchaseCampaignIdAsync</pc>.</source>
					<target>If the user leaves the page and then later returns and installs the app, this will not qualify as a conversion when using <pc dataRefEnd="id2" dataRefStart="id1" id="p1">GetAppPurchaseCampaignIdAsync</pc>.</target>
				</segment>
			</unit>
			<unit id="159" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](#conversions)</data>
				</originalData>
				<segment state="initial">
					<source>For more information, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Understanding conversions</pc> in this topic.</source>
					<target>For more information, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Understanding conversions</pc> in this topic.</target>
				</segment>
			</unit>
			<unit id="160" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/mt186445)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>The following example demonstrates how to use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">GetAppPurchaseCampaignIdAsync</pc></pc> method to retrieve the custom campaign ID for the app.</source>
					<target>The following example demonstrates how to use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">GetAppPurchaseCampaignIdAsync</pc></pc> method to retrieve the custom campaign ID for the app.</target>
				</segment>
			</unit>
			<unit id="161" translate="yes">
				<segment state="initial">
					<source>If the app was not installed as part of a successful conversion, this method returns an empty string.</source>
					<target>If the app was not installed as part of a successful conversion, this method returns an empty string.</target>
				</segment>
			</unit>
			<unit id="162" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/mt186445)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">GetAppPurchaseCampaignIdAsync</pc></pc> method accesses data from the Windows Store.</source>
					<target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">GetAppPurchaseCampaignIdAsync</pc></pc> method accesses data from the Windows Store.</target>
				</segment>
			</unit>
			<unit id="163" translate="yes">
				<segment state="initial">
					<source>Follow these guidelines when using this method:</source>
					<target>Follow these guidelines when using this method:</target>
				</segment>
			</unit>
			<unit id="164" translate="yes">
				<segment state="initial">
					<source>Wrap this method call in an asynchronous operation to allow for the call to complete.</source>
					<target>Wrap this method call in an asynchronous operation to allow for the call to complete.</target>
				</segment>
			</unit>
			<unit id="165" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/mt187034)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/hh779766)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
					<data id="id9">[</data>
					<data id="id10">](https://msdn.microsoft.com/library/windows/apps/hh779765)</data>
					<data id="id11">**</data>
					<data id="id12">**</data>
				</originalData>
				<segment state="initial">
					<source>If your app is not yet published to the Windows Store and you are testing your custom campaign, use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">GetAppPurchaseCampaignIdAsync</pc></pc> method of the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">CurrentAppSimulator</pc></pc> class instead of the <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">CurrentApp</pc></pc> class.</source>
					<target>If your app is not yet published to the Windows Store and you are testing your custom campaign, use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">GetAppPurchaseCampaignIdAsync</pc></pc> method of the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">CurrentAppSimulator</pc></pc> class instead of the <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">CurrentApp</pc></pc> class.</target>
				</segment>
			</unit>
			<unit id="166" translate="yes">
				<segment state="initial">
					<source>Follow these guidelines:</source>
					<target>Follow these guidelines:</target>
				</segment>
			</unit>
			<unit id="167" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>Add an <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AppPurchaseCampaignId</pc> element to the WindowsStoreProxy.xml file, as shown in the following example.</source>
					<target>Add an <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AppPurchaseCampaignId</pc> element to the WindowsStoreProxy.xml file, as shown in the following example.</target>
				</segment>
			</unit>
			<unit id="168" translate="yes">
				<segment state="initial">
					<source>Assign the element's value to the custom campaign ID.</source>
					<target>Assign the element's value to the custom campaign ID.</target>
				</segment>
			</unit>
			<unit id="169" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/mt187034)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>When you run the app, the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">GetAppPurchaseCampaignIdAsync</pc></pc> method will always return this value.</source>
					<target>When you run the app, the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">GetAppPurchaseCampaignIdAsync</pc></pc> method will always return this value.</target>
				</segment>
			</unit>
			<unit id="170" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/hh779766)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>For more information about the WindowsStoreProxy.xml file, see the documentation for <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CurrentAppSimulator</pc></pc>.</source>
					<target>For more information about the WindowsStoreProxy.xml file, see the documentation for <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CurrentAppSimulator</pc></pc>.</target>
				</segment>
			</unit>
			<unit id="171" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/hh779765)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/hh779766)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
					<data id="id9">**</data>
					<data id="id10">**</data>
					<data id="id11">[</data>
					<data id="id12">](https://msdn.microsoft.com/library/windows/apps/mt187034)</data>
					<data id="id13">**</data>
					<data id="id14">**</data>
					<data id="id15">**</data>
					<data id="id16">**</data>
				</originalData>
				<segment state="initial">
					<source>To easily switch between using <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CurrentApp</pc></pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">CurrentAppSimulator</pc></pc>, we recommend that you add the following statements to your code to define a <pc dataRefEnd="id10" dataRefStart="id9" id="p5">Store</pc> alias, and then qualify your <pc dataRefEnd="id12" dataRefStart="id11" id="p6"><pc dataRefEnd="id14" dataRefStart="id13" id="p7">GetAppPurchaseCampaignIdAsync</pc></pc> calls with the <pc dataRefEnd="id16" dataRefStart="id15" id="p8">Store</pc> alias.</source>
					<target>To easily switch between using <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CurrentApp</pc></pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">CurrentAppSimulator</pc></pc>, we recommend that you add the following statements to your code to define a <pc dataRefEnd="id10" dataRefStart="id9" id="p5">Store</pc> alias, and then qualify your <pc dataRefEnd="id12" dataRefStart="id11" id="p6"><pc dataRefEnd="id14" dataRefStart="id13" id="p7">GetAppPurchaseCampaignIdAsync</pc></pc> calls with the <pc dataRefEnd="id16" dataRefStart="id15" id="p8">Store</pc> alias.</target>
				</segment>
			</unit>
			<unit id="172" translate="yes">
				<segment state="initial">
					<source>Test your custom campaign</source>
					<target>Test your custom campaign</target>
				</segment>
			</unit>
			<unit id="173" translate="yes">
				<segment state="initial">
					<source>Before you promote a custom campaign URL, we recommend that you test your custom campaign by doing the following:</source>
					<target>Before you promote a custom campaign URL, we recommend that you test your custom campaign by doing the following:</target>
				</segment>
			</unit>
			<unit id="174" translate="yes">
				<segment state="initial">
					<source>Sign in to your Microsoft Account on the computer or device you are using for testing.</source>
					<target>Sign in to your Microsoft Account on the computer or device you are using for testing.</target>
				</segment>
			</unit>
			<unit id="175" translate="yes">
				<segment state="initial">
					<source>Click your custom campaign URL.</source>
					<target>Click your custom campaign URL.</target>
				</segment>
			</unit>
			<unit id="176" translate="yes">
				<segment state="initial">
					<source>Make sure the Windows Store loads your app page correctly, and then close the Windows Store app or the browser page.</source>
					<target>Make sure the Windows Store loads your app page correctly, and then close the Windows Store app or the browser page.</target>
				</segment>
			</unit>
			<unit id="177" translate="yes">
				<segment state="initial">
					<source>Click the URL several more times, closing the Windows Store app or the browser page after each visit to your app's page.</source>
					<target>Click the URL several more times, closing the Windows Store app or the browser page after each visit to your app's page.</target>
				</segment>
			</unit>
			<unit id="178" translate="yes">
				<segment state="initial">
					<source>During one of the visits to your app's page, install your app to generate a conversion.</source>
					<target>During one of the visits to your app's page, install your app to generate a conversion.</target>
				</segment>
			</unit>
			<unit id="179" translate="yes">
				<segment state="initial">
					<source>Count the total number of times you clicked the URL.</source>
					<target>Count the total number of times you clicked the URL.</target>
				</segment>
			</unit>
			<unit id="180" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/mt187034)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/hh779766)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
					<data id="id9">[</data>
					<data id="id10">](https://msdn.microsoft.com/library/windows/apps/hh779765)</data>
					<data id="id11">**</data>
					<data id="id12">**</data>
				</originalData>
				<segment state="initial">
					<source>If you are programmatically retrieving the custom campaign ID in your app, test this operation using the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">GetAppPurchaseCampaignIdAsync</pc></pc> method of the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">CurrentAppSimulator</pc></pc> class instead of the <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">CurrentApp</pc></pc> class.</source>
					<target>If you are programmatically retrieving the custom campaign ID in your app, test this operation using the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">GetAppPurchaseCampaignIdAsync</pc></pc> method of the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">CurrentAppSimulator</pc></pc> class instead of the <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">CurrentApp</pc></pc> class.</target>
				</segment>
			</unit>
		</group>
	</file>
</xliff>