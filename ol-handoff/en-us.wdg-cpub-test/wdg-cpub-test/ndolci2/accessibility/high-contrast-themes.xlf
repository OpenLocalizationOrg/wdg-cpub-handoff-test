<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="en-us" version="2.0" xml:space="preserve" xmlns="urn:oasis:names:tc:xliff:document:2.0">
	<file id="1">
		<mda:metadata>
			<mda:metaGroup>
				<mda:meta type="tool-id">mdxliff</mda:meta>
				<mda:meta type="tool-name">mdxliff</mda:meta>
				<mda:meta type="tool-version">1.0-c5d768e</mda:meta>
				<mda:meta type="tool-company">Microsoft</mda:meta>
			</mda:metaGroup>
		<mda:metaGroup><mda:meta type="olfilehash">8ceef4fdbba03047cf2068b843e7080ec17ba777</mda:meta><mda:meta type="olfilepath">wdg-cpub-test\ndolci2\accessibility\high-contrast-themes.md</mda:meta><mda:meta type="oltranslationpriority"></mda:meta><mda:meta type="oltranslationtype">Human Translation</mda:meta><mda:meta type="olskeletonhash">e6fe1a1c290257eaf8582b9ec6e469f47b8c66ca</mda:meta><mda:meta type="olxliffhash">5b937f33b035330157a5676f88065964279064e4</mda:meta></mda:metaGroup></mda:metadata>
		<group id="content">
			<unit id="101" translate="yes">
				<segment state="initial">
					<source>Describes the steps needed to ensure your Universal Windows Platform (UWP) app is usable when a high-contrast theme is active.</source>
					<target>Describes the steps needed to ensure your Universal Windows Platform (UWP) app is usable when a high-contrast theme is active.</target>
				</segment>
			</unit>
			<unit id="102" translate="yes">
				<segment state="initial">
					<source>High-contrast themes</source>
					<target>High-contrast themes</target>
				</segment>
			</unit>
			<unit id="103" translate="yes">
				<segment state="initial">
					<source>High-contrast themes</source>
					<target>High-contrast themes</target>
				</segment>
			</unit>
			<unit id="104" translate="yes">
				<segment state="initial">
					<source>\[ Updated for UWP apps on Windows 10.</source>
					<target>\[ Updated for UWP apps on Windows 10.</target>
				</segment>
			</unit>
			<unit id="105" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](http://go.microsoft.com/fwlink/p/?linkid=619132)</data>
				</originalData>
				<segment state="initial">
					<source>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</source>
					<target>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</target>
				</segment>
			</unit>
			<unit id="106" translate="yes">
				<segment state="initial">
					<source>Describes the steps needed to ensure your Universal Windows Platform (UWP) app is usable when a high-contrast theme is active.</source>
					<target>Describes the steps needed to ensure your Universal Windows Platform (UWP) app is usable when a high-contrast theme is active.</target>
				</segment>
			</unit>
			<unit id="107" translate="yes">
				<segment state="initial">
					<source>A UWP app supports high-contrast themes by default.</source>
					<target>A UWP app supports high-contrast themes by default.</target>
				</segment>
			</unit>
			<unit id="108" translate="yes">
				<segment state="initial">
					<source>If a user has chosen that they want the system to use a high-contrast theme from system settings or accessibility tools, the framework automatically uses colors and style settings that produce a high-contrast layout and rendering for controls and components in the UI.</source>
					<target>If a user has chosen that they want the system to use a high-contrast theme from system settings or accessibility tools, the framework automatically uses colors and style settings that produce a high-contrast layout and rendering for controls and components in the UI.</target>
				</segment>
			</unit>
			<unit id="109" translate="yes">
				<segment state="initial">
					<source>This default support is based on using the default themes and templates.</source>
					<target>This default support is based on using the default themes and templates.</target>
				</segment>
			</unit>
			<unit id="110" translate="yes">
				<segment state="initial">
					<source>These themes and templates make references to system colors as resource definitions, and the resource sources change automatically when the system is using a high-contrast mode.</source>
					<target>These themes and templates make references to system colors as resource definitions, and the resource sources change automatically when the system is using a high-contrast mode.</target>
				</segment>
			</unit>
			<unit id="111" translate="yes">
				<segment state="initial">
					<source>However, if you use custom templates, themes, and styles for your control, be careful that you do not disable the built-in support for high contrast.</source>
					<target>However, if you use custom templates, themes, and styles for your control, be careful that you do not disable the built-in support for high contrast.</target>
				</segment>
			</unit>
			<unit id="112" translate="yes">
				<segment state="initial">
					<source>If you use one of the XAML designers for Microsoft Visual Studio for styling, the designer generates a separate, high-contrast theme alongside the primary theme whenever you define a template that is significantly different from the default template.</source>
					<target>If you use one of the XAML designers for Microsoft Visual Studio for styling, the designer generates a separate, high-contrast theme alongside the primary theme whenever you define a template that is significantly different from the default template.</target>
				</segment>
			</unit>
			<unit id="113" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/BR208807)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/BR208794)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>The separate theme dictionaries go into the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ThemeDictionaries</pc></pc> collection, a dedicated property of a <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">ResourceDictionary</pc></pc> element.</source>
					<target>The separate theme dictionaries go into the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ThemeDictionaries</pc></pc> collection, a dedicated property of a <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">ResourceDictionary</pc></pc> element.</target>
				</segment>
			</unit>
			<unit id="114" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/xaml/Hh465374)</data>
				</originalData>
				<segment state="initial">
					<source>For more info on themes and control templates, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Quickstart: Control templates</pc>.</source>
					<target>For more info on themes and control templates, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Quickstart: Control templates</pc>.</target>
				</segment>
			</unit>
			<unit id="115" translate="yes">
				<segment state="initial">
					<source>It's often very informative to look at the XAML resource dictionaries and themes for specific controls and see how the themes are constructed and how they reference resources that are similar but different for each possible high-contrast setting.</source>
					<target>It's often very informative to look at the XAML resource dictionaries and themes for specific controls and see how the themes are constructed and how they reference resources that are similar but different for each possible high-contrast setting.</target>
				</segment>
			</unit>
			<unit id="116" translate="yes">
				<segment state="initial">
					<source>Detecting when a high-contrast theme is enabled</source>
					<target>Detecting when a high-contrast theme is enabled</target>
				</segment>
			</unit>
			<unit id="117" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/BR242237)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>A UWP app can use members of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">AccessibilitySettings</pc></pc> class to detect the current settings for high-contrast themes.</source>
					<target>A UWP app can use members of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">AccessibilitySettings</pc></pc> class to detect the current settings for high-contrast themes.</target>
				</segment>
			</unit>
			<unit id="118" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/BR242237_highcontrast)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">HighContrast</pc></pc> property determines whether a high-contrast theme is currently selected.</source>
					<target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">HighContrast</pc></pc> property determines whether a high-contrast theme is currently selected.</target>
				</segment>
			</unit>
			<unit id="119" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/BR242237_highcontrastscheme)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>If <pc dataRefEnd="id2" dataRefStart="id1" id="p1">HighContrast</pc> is set to <pc dataRefEnd="id4" dataRefStart="id3" id="p2">true</pc>, then the next step is to check the value of the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">HighContrastScheme</pc></pc> property to get the name of the high-contrast theme that is used.</source>
					<target>If <pc dataRefEnd="id2" dataRefStart="id1" id="p1">HighContrast</pc> is set to <pc dataRefEnd="id4" dataRefStart="id3" id="p2">true</pc>, then the next step is to check the value of the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">HighContrastScheme</pc></pc> property to get the name of the high-contrast theme that is used.</target>
				</segment>
			</unit>
			<unit id="120" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>"High Contrast White" and "High Contrast Black" are typically values for <pc dataRefEnd="id2" dataRefStart="id1" id="p1">HighContrastScheme</pc> that your code should respond to.</source>
					<target>"High Contrast White" and "High Contrast Black" are typically values for <pc dataRefEnd="id2" dataRefStart="id1" id="p1">HighContrastScheme</pc> that your code should respond to.</target>
				</segment>
			</unit>
			<unit id="121" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/BR208794)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>XAML-defined <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ResourceDictionary</pc></pc> keys can't have spaces, so the keys for these themes in a resource dictionary are typically "HighContrastWhite" and "HighContrastBlack" respectively.</source>
					<target>XAML-defined <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ResourceDictionary</pc></pc> keys can't have spaces, so the keys for these themes in a resource dictionary are typically "HighContrastWhite" and "HighContrastBlack" respectively.</target>
				</segment>
			</unit>
			<unit id="122" translate="yes">
				<segment state="initial">
					<source>You should also have fallback logic for a default high-contrast theme in case the value is some other string.</source>
					<target>You should also have fallback logic for a default high-contrast theme in case the value is some other string.</target>
				</segment>
			</unit>
			<unit id="123" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](http://go.microsoft.com/fwlink/p/?linkid=254993)</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">XAML high contrast sample</pc> shows the logic for this.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">XAML high contrast sample</pc> shows the logic for this.</target>
				</segment>
			</unit>
			<unit id="124" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">[</data>
					<data id="id4">](https://msdn.microsoft.com/library/windows/apps/BR242237)</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  Make sure you call the <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">AccessibilitySettings</pc></pc> constructor from a scope where the app is initialized and is already displaying content.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  Make sure you call the <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">AccessibilitySettings</pc></pc> constructor from a scope where the app is initialized and is already displaying content.</target>
				</segment>
			</unit>
			<unit id="125" translate="yes">
				<segment state="initial">
					<source>Apps can switch to using high-contrast resource values while the app is running.</source>
					<target>Apps can switch to using high-contrast resource values while the app is running.</target>
				</segment>
			</unit>
			<unit id="126" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/Mt185591)</data>
				</originalData>
				<segment state="initial">
					<source>This works so long as the resources are requested using the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">{ThemeResource} markup extension</pc> in the style or template XAML.</source>
					<target>This works so long as the resources are requested using the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">{ThemeResource} markup extension</pc> in the style or template XAML.</target>
				</segment>
			</unit>
			<unit id="127" translate="yes">
				<segment state="initial">
					<source>The default themes (generic.xaml) all use this {ThemeResource} markup extension technique, so you'll get this behavior if you're using default control themes.</source>
					<target>The default themes (generic.xaml) all use this {ThemeResource} markup extension technique, so you'll get this behavior if you're using default control themes.</target>
				</segment>
			</unit>
			<unit id="128" translate="yes">
				<segment state="initial">
					<source>Custom controls or custom control styling can do this if you've used this {ThemeResource} markup extension resource technique in your custom templates and styles also.</source>
					<target>Custom controls or custom control styling can do this if you've used this {ThemeResource} markup extension resource technique in your custom templates and styles also.</target>
				</segment>
			</unit>
			<unit id="129" translate="yes">
				<segment state="initial">
					<source>Related topics</source>
					<target>Related topics</target>
				</segment>
			</unit>
			<unit id="130" translate="yes">
				<segment state="initial">
					<source>Accessibility</source>
					<target>Accessibility</target>
				</segment>
			</unit>
			<unit id="131" translate="yes">
				<segment state="initial">
					<source>UI contrast and settings sample</source>
					<target>UI contrast and settings sample</target>
				</segment>
			</unit>
			<unit id="132" translate="yes">
				<segment state="initial">
					<source>XAML accessibility sample</source>
					<target>XAML accessibility sample</target>
				</segment>
			</unit>
			<unit id="133" translate="yes">
				<segment state="initial">
					<source>XAML high contrast sample</source>
					<target>XAML high contrast sample</target>
				</segment>
			</unit>
			<unit id="134" translate="yes">
				<segment state="initial">
					<source>AccessibilitySettings</source>
					<target>AccessibilitySettings</target>
				</segment>
			</unit>
		</group>
	</file>
</xliff>