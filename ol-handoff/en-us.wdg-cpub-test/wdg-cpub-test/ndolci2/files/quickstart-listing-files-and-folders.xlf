<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="en-us" version="2.0" xml:space="preserve" xmlns="urn:oasis:names:tc:xliff:document:2.0">
	<file id="1">
		<mda:metadata>
			<mda:metaGroup>
				<mda:meta type="tool-id">mdxliff</mda:meta>
				<mda:meta type="tool-name">mdxliff</mda:meta>
				<mda:meta type="tool-version">1.0-c5d768e</mda:meta>
				<mda:meta type="tool-company">Microsoft</mda:meta>
			</mda:metaGroup>
		<mda:metaGroup><mda:meta type="olfilehash">e9f0823fd27e9eee35d04ea0537721f7fb3e00ce</mda:meta><mda:meta type="olfilepath">wdg-cpub-test\ndolci2\files\quickstart-listing-files-and-folders.md</mda:meta><mda:meta type="oltranslationpriority"></mda:meta><mda:meta type="oltranslationtype">Human Translation</mda:meta><mda:meta type="olskeletonhash">bdf8890cfdb83b158799c7b2db3a15af65d9a1d9</mda:meta><mda:meta type="olxliffhash">978b3fcb92c63d820ea4f794a589d8c4a7cab0df</mda:meta></mda:metaGroup></mda:metadata>
		<group id="content">
			<unit id="101" translate="yes">
				<segment state="initial">
					<source>Enumerate and query files and folders</source>
					<target>Enumerate and query files and folders</target>
				</segment>
			</unit>
			<unit id="102" translate="yes">
				<segment state="initial">
					<source>Access files and folders in either a folder, library, device, or network location.</source>
					<target>Access files and folders in either a folder, library, device, or network location.</target>
				</segment>
			</unit>
			<unit id="103" translate="yes">
				<segment state="initial">
					<source>You can also query the files and folders in a location by constructing file and folder queries.</source>
					<target>You can also query the files and folders in a location by constructing file and folder queries.</target>
				</segment>
			</unit>
			<unit id="104" translate="yes">
				<segment state="initial">
					<source>Enumerate and query files and folders</source>
					<target>Enumerate and query files and folders</target>
				</segment>
			</unit>
			<unit id="105" translate="yes">
				<segment state="initial">
					<source>\[ Updated for UWP apps on Windows 10.</source>
					<target>\[ Updated for UWP apps on Windows 10.</target>
				</segment>
			</unit>
			<unit id="106" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](http://go.microsoft.com/fwlink/p/?linkid=619132)</data>
				</originalData>
				<segment state="initial">
					<source>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</source>
					<target>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</target>
				</segment>
			</unit>
			<unit id="107" translate="yes">
				<segment state="initial">
					<source>Access files and folders in either a folder, library, device, or network location.</source>
					<target>Access files and folders in either a folder, library, device, or network location.</target>
				</segment>
			</unit>
			<unit id="108" translate="yes">
				<segment state="initial">
					<source>You can also query the files and folders in a location by constructing file and folder queries.</source>
					<target>You can also query the files and folders in a location by constructing file and folder queries.</target>
				</segment>
			</unit>
			<unit id="109" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">[</data>
					<data id="id4">](http://go.microsoft.com/fwlink/p/?linkid=619993)</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  Also see the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Folder enumeration sample</pc>.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  Also see the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Folder enumeration sample</pc>.</target>
				</segment>
			</unit>
			<unit id="110" translate="yes">
				<segment state="initial">
					<source>Prerequisites</source>
					<target>Prerequisites</target>
				</segment>
			</unit>
			<unit id="111" translate="yes">
				<segment state="initial">
					<source>Understand async programming for Universal Windows Platform (UWP) apps</source>
					<target>Understand async programming for Universal Windows Platform (UWP) apps</target>
				</segment>
			</unit>
			<unit id="112" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/mt187337)</data>
				</originalData>
				<segment state="initial">
					<source>You can learn how to write asynchronous apps in C# or Visual Basic, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Call asynchronous APIs in C# or Visual Basic</pc>.</source>
					<target>You can learn how to write asynchronous apps in C# or Visual Basic, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Call asynchronous APIs in C# or Visual Basic</pc>.</target>
				</segment>
			</unit>
			<unit id="113" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/mt187334)</data>
				</originalData>
				<segment state="initial">
					<source>To learn how to write asynchronous apps in C++, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Asynchronous programming in C++</pc>.</source>
					<target>To learn how to write asynchronous apps in C++, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Asynchronous programming in C++</pc>.</target>
				</segment>
			</unit>
			<unit id="114" translate="yes">
				<segment state="initial">
					<source>Access permissions to the location</source>
					<target>Access permissions to the location</target>
				</segment>
			</unit>
			<unit id="115" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>For example, the code in these examples require the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">picturesLibrary</pc> capability, but your location may require a different capability or no capability at all.</source>
					<target>For example, the code in these examples require the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">picturesLibrary</pc> capability, but your location may require a different capability or no capability at all.</target>
				</segment>
			</unit>
			<unit id="116" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](file-access-permissions.md)</data>
				</originalData>
				<segment state="initial">
					<source>To learn more, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">File access permissions</pc>.</source>
					<target>To learn more, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">File access permissions</pc>.</target>
				</segment>
			</unit>
			<unit id="117" translate="yes">
				<segment state="initial">
					<source>Enumerate files and folders in a location</source>
					<target>Enumerate files and folders in a location</target>
				</segment>
			</unit>
			<unit id="118" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  Remember to declare the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">picturesLibrary</pc> capability.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  Remember to declare the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">picturesLibrary</pc> capability.</target>
				</segment>
			</unit>
			<unit id="119" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br227276)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/br227156)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>In this example we first use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">StorageFolder.GetFilesAsync</pc></pc> method to get all the files in the root folder of the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">PicturesLibrary</pc></pc> (not in subfolders) and list the name of each file.</source>
					<target>In this example we first use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">StorageFolder.GetFilesAsync</pc></pc> method to get all the files in the root folder of the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">PicturesLibrary</pc></pc> (not in subfolders) and list the name of each file.</target>
				</segment>
			</unit>
			<unit id="120" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br227280)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source>Next, we use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">GetFoldersAsync</pc></pc> method to get all the subfolders in the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">PicturesLibrary</pc> and list the name of each subfolder.</source>
					<target>Next, we use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">GetFoldersAsync</pc></pc> method to get all the subfolders in the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">PicturesLibrary</pc> and list the name of each subfolder.</target>
				</segment>
			</unit>
			<unit id="121" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  In C# or Visual Basic, remember to put the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">async</pc> keyword in the method declaration of any method in which you use the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">await</pc> operator.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  In C# or Visual Basic, remember to put the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">async</pc> keyword in the method declaration of any method in which you use the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">await</pc> operator.</target>
				</segment>
			</unit>
			<unit id="122" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br227286)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Alternatively, you can use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">GetItemsAsync</pc></pc> method to get all items (both files and subfolders) in a particular location.</source>
					<target>Alternatively, you can use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">GetItemsAsync</pc></pc> method to get all items (both files and subfolders) in a particular location.</target>
				</segment>
			</unit>
			<unit id="123" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">[</data>
					<data id="id4">](https://msdn.microsoft.com/library/windows/apps/br227156)</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source>The following example uses the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">GetItemsAsync</pc> method to get all files and subfolders in the root folder of the <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">PicturesLibrary</pc></pc> (not in subfolders).</source>
					<target>The following example uses the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">GetItemsAsync</pc> method to get all files and subfolders in the root folder of the <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">PicturesLibrary</pc></pc> (not in subfolders).</target>
				</segment>
			</unit>
			<unit id="124" translate="yes">
				<segment state="initial">
					<source>Then the example lists the name of each file and subfolder.</source>
					<target>Then the example lists the name of each file and subfolder.</target>
				</segment>
			</unit>
			<unit id="125" translate="yes">
				<originalData>
					<data id="id1">`"folder"`</data>
				</originalData>
				<segment state="initial">
					<source>If the item is a subfolder, the example appends <ph dataRef="id1" id="ph1" /> to the name.</source>
					<target>If the item is a subfolder, the example appends <ph dataRef="id1" id="ph1" /> to the name.</target>
				</segment>
			</unit>
			<unit id="126" translate="yes">
				<segment state="initial">
					<source>Query files in a location and enumerate matching files</source>
					<target>Query files in a location and enumerate matching files</target>
				</segment>
			</unit>
			<unit id="127" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br227156)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>In this example we query for all the files in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">PicturesLibrary</pc></pc> grouped by the month, and this time the example recurses into subfolders.</source>
					<target>In this example we query for all the files in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">PicturesLibrary</pc></pc> grouped by the month, and this time the example recurses into subfolders.</target>
				</segment>
			</unit>
			<unit id="128" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br227262)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/br207957)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>First, we call <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">StorageFolder.CreateFolderQuery</pc></pc> and pass the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">CommonFolderQuery.GroupByMonth</pc></pc> value to the method.</source>
					<target>First, we call <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">StorageFolder.CreateFolderQuery</pc></pc> and pass the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">CommonFolderQuery.GroupByMonth</pc></pc> value to the method.</target>
				</segment>
			</unit>
			<unit id="129" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br208066)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>That gives us a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">StorageFolderQueryResult</pc></pc> object.</source>
					<target>That gives us a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">StorageFolderQueryResult</pc></pc> object.</target>
				</segment>
			</unit>
			<unit id="130" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br208074)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/br227230)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>Next we call <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">StorageFolderQueryResult.GetFoldersAsync</pc></pc> which returns <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">StorageFolder</pc></pc> objects representing virtual folders.</source>
					<target>Next we call <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">StorageFolderQueryResult.GetFoldersAsync</pc></pc> which returns <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">StorageFolder</pc></pc> objects representing virtual folders.</target>
				</segment>
			</unit>
			<unit id="131" translate="yes">
				<segment state="initial">
					<source>In this case we're grouping by month, so the virtual folders each represent a group of files with the same month.</source>
					<target>In this case we're grouping by month, so the virtual folders each represent a group of files with the same month.</target>
				</segment>
			</unit>
			<unit id="132" translate="yes">
				<segment state="initial">
					<source>The output of the example looks similar to the following.</source>
					<target>The output of the example looks similar to the following.</target>
				</segment>
			</unit>
		</group>
	</file>
</xliff>