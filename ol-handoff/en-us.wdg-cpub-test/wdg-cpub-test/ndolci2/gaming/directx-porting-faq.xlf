<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="en-us" version="2.0" xml:space="preserve" xmlns="urn:oasis:names:tc:xliff:document:2.0">
	<file id="1">
		<mda:metadata>
			<mda:metaGroup>
				<mda:meta type="tool-id">mdxliff</mda:meta>
				<mda:meta type="tool-name">mdxliff</mda:meta>
				<mda:meta type="tool-version">1.0-c5d768e</mda:meta>
				<mda:meta type="tool-company">Microsoft</mda:meta>
			</mda:metaGroup>
		<mda:metaGroup><mda:meta type="olfilehash">e68a45cb184babd7476950aa5cbbc0ae62110139</mda:meta><mda:meta type="olfilepath">wdg-cpub-test\ndolci2\gaming\directx-porting-faq.md</mda:meta><mda:meta type="oltranslationpriority"></mda:meta><mda:meta type="oltranslationtype">Human Translation</mda:meta><mda:meta type="olskeletonhash">220c40f21e47ab6612defb6477d01028db295a9e</mda:meta><mda:meta type="olxliffhash">6c6207ea009ed148f4f21a29c50d97c203bb5b34</mda:meta></mda:metaGroup></mda:metadata>
		<group id="content">
			<unit id="101" translate="yes">
				<segment state="initial">
					<source>DirectX 11 porting FAQ</source>
					<target>DirectX 11 porting FAQ</target>
				</segment>
			</unit>
			<unit id="102" translate="yes">
				<segment state="initial">
					<source>Answers to frequently-asked questions about porting games to Universal Windows Platform (UWP).</source>
					<target>Answers to frequently-asked questions about porting games to Universal Windows Platform (UWP).</target>
				</segment>
			</unit>
			<unit id="103" translate="yes">
				<segment state="initial">
					<source>DirectX 11 porting FAQ</source>
					<target>DirectX 11 porting FAQ</target>
				</segment>
			</unit>
			<unit id="104" translate="yes">
				<segment state="initial">
					<source>\[ Updated for UWP apps on Windows 10.</source>
					<target>\[ Updated for UWP apps on Windows 10.</target>
				</segment>
			</unit>
			<unit id="105" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](http://go.microsoft.com/fwlink/p/?linkid=619132)</data>
				</originalData>
				<segment state="initial">
					<source>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</source>
					<target>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</target>
				</segment>
			</unit>
			<unit id="106" translate="yes">
				<segment state="initial">
					<source>Answers to frequently-asked questions about porting games to Universal Windows Platform (UWP).</source>
					<target>Answers to frequently-asked questions about porting games to Universal Windows Platform (UWP).</target>
				</segment>
			</unit>
			<unit id="107" translate="yes">
				<segment state="initial">
					<source>Is porting my game going to be a set of search-and-replace operations on API methods, or do I need to plan for a more thoughtful porting process?</source>
					<target>Is porting my game going to be a set of search-and-replace operations on API methods, or do I need to plan for a more thoughtful porting process?</target>
				</segment>
			</unit>
			<unit id="108" translate="yes">
				<segment state="initial">
					<source>Direct3D 11 is a significant upgrade from Direct3D 9.</source>
					<target>Direct3D 11 is a significant upgrade from Direct3D 9.</target>
				</segment>
			</unit>
			<unit id="109" translate="yes">
				<segment state="initial">
					<source>There are several paradigm shifts, including separate APIs for the virtualized graphics adapter and its context as well as a new layer of polymorphism for device resources.</source>
					<target>There are several paradigm shifts, including separate APIs for the virtualized graphics adapter and its context as well as a new layer of polymorphism for device resources.</target>
				</segment>
			</unit>
			<unit id="110" translate="yes">
				<segment state="initial">
					<source>Your game can still use graphics hardware in essentially the same way, but you'll need to learn about the new Direct3D 11 API architecture and update each part of your graphics code to use the correct API components.</source>
					<target>Your game can still use graphics hardware in essentially the same way, but you'll need to learn about the new Direct3D 11 API architecture and update each part of your graphics code to use the correct API components.</target>
				</segment>
			</unit>
			<unit id="111" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](porting-considerations.md)</data>
				</originalData>
				<segment state="initial">
					<source>See <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Porting concepts and considerations</pc>.</source>
					<target>See <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Porting concepts and considerations</pc>.</target>
				</segment>
			</unit>
			<unit id="112" translate="yes">
				<segment state="initial">
					<source>What is the new device context for?</source>
					<target>What is the new device context for?</target>
				</segment>
			</unit>
			<unit id="113" translate="yes">
				<segment state="initial">
					<source>Am I supposed to replace my Direct3D 9 device with the Direct3D 11 device, the device context, or both?</source>
					<target>Am I supposed to replace my Direct3D 9 device with the Direct3D 11 device, the device context, or both?</target>
				</segment>
			</unit>
			<unit id="114" translate="yes">
				<segment state="initial">
					<source>The Direct3D device is now used to create resources in video memory, while the device context is used to set pipeline state and generate rendering commands.</source>
					<target>The Direct3D device is now used to create resources in video memory, while the device context is used to set pipeline state and generate rendering commands.</target>
				</segment>
			</unit>
			<unit id="115" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](understand-direct3d-11-1-concepts.md)</data>
				</originalData>
				<segment state="initial">
					<source>For more info see: <pc dataRefEnd="id2" dataRefStart="id1" id="p1">What are the most important changes since Direct3D 9?</pc></source>
					<target>For more info see: <pc dataRefEnd="id2" dataRefStart="id1" id="p1">What are the most important changes since Direct3D 9?</pc></target>
				</segment>
			</unit>
			<unit id="116" translate="yes">
				<segment state="initial">
					<source>Do I have to update my game timer for UWP?</source>
					<target>Do I have to update my game timer for UWP?</target>
				</segment>
			</unit>
			<unit id="117" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/desktop/ms644904)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/desktop/ms644905)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">QueryPerformanceCounter</pc></pc>, along with <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">QueryPerformanceFrequency</pc></pc>, is still the best way to implement a game timer for UWP apps.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">QueryPerformanceCounter</pc></pc>, along with <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">QueryPerformanceFrequency</pc></pc>, is still the best way to implement a game timer for UWP apps.</target>
				</segment>
			</unit>
			<unit id="118" translate="yes">
				<segment state="initial">
					<source>You should be aware of a nuance with timers and the UWP app lifecycle.</source>
					<target>You should be aware of a nuance with timers and the UWP app lifecycle.</target>
				</segment>
			</unit>
			<unit id="119" translate="yes">
				<segment state="initial">
					<source>Suspend/resume is different from a player re-launching a desktop game because your game will resume a snapshot in time from when the game was last played.</source>
					<target>Suspend/resume is different from a player re-launching a desktop game because your game will resume a snapshot in time from when the game was last played.</target>
				</segment>
			</unit>
			<unit id="120" translate="yes">
				<segment state="initial">
					<source>If a large amount of time has passed - for example, a few weeks - some game timer implementations might not behave gracefully.</source>
					<target>If a large amount of time has passed - for example, a few weeks - some game timer implementations might not behave gracefully.</target>
				</segment>
			</unit>
			<unit id="121" translate="yes">
				<segment state="initial">
					<source>You can use app lifecycle events to reset your timer when the game resumes.</source>
					<target>You can use app lifecycle events to reset your timer when the game resumes.</target>
				</segment>
			</unit>
			<unit id="122" translate="yes">
				<segment state="initial">
					<source>Games that still use the RDTSC instruction need to upgrade.</source>
					<target>Games that still use the RDTSC instruction need to upgrade.</target>
				</segment>
			</unit>
			<unit id="123" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/desktop/ee417693)</data>
				</originalData>
				<segment state="initial">
					<source>See <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Game Timing and Multicore Processors</pc>.</source>
					<target>See <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Game Timing and Multicore Processors</pc>.</target>
				</segment>
			</unit>
			<unit id="124" translate="yes">
				<segment state="initial">
					<source>My game code is based on D3DX and DXUT.</source>
					<target>My game code is based on D3DX and DXUT.</target>
				</segment>
			</unit>
			<unit id="125" translate="yes">
				<segment state="initial">
					<source>Is there anything available that can help me migrate my code?</source>
					<target>Is there anything available that can help me migrate my code?</target>
				</segment>
			</unit>
			<unit id="126" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](http://go.microsoft.com/fwlink/p/?LinkID=248929)</data>
				</originalData>
				<segment state="initial">
					<source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">DirectX Tool Kit (DirectXTK)</pc> community project offers helper classes for use with Direct3D 11.</source>
					<target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">DirectX Tool Kit (DirectXTK)</pc> community project offers helper classes for use with Direct3D 11.</target>
				</segment>
			</unit>
			<unit id="127" translate="yes">
				<segment state="initial">
					<source>How do I maintain code paths for the desktop and the Windows Store?</source>
					<target>How do I maintain code paths for the desktop and the Windows Store?</target>
				</segment>
			</unit>
			<unit id="128" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](http://go.microsoft.com/fwlink/p/?LinkID=286210)</data>
				</originalData>
				<segment state="initial">
					<source>Chuck Walbourn's article series titled <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Dual-use Coding Techniques for Games</pc> offers guidance on sharing code between the desktop and the Windows Store code paths.</source>
					<target>Chuck Walbourn's article series titled <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Dual-use Coding Techniques for Games</pc> offers guidance on sharing code between the desktop and the Windows Store code paths.</target>
				</segment>
			</unit>
			<unit id="129" translate="yes">
				<segment state="initial">
					<source>How do I load image resources in my DirectX UWP app?</source>
					<target>How do I load image resources in my DirectX UWP app?</target>
				</segment>
			</unit>
			<unit id="130" translate="yes">
				<segment state="initial">
					<source>There are two API paths for loading images:</source>
					<target>There are two API paths for loading images:</target>
				</segment>
			</unit>
			<unit id="131" translate="yes">
				<segment state="initial">
					<source>The content pipeline converts images into DDS files used as Direct3D texture resources.</source>
					<target>The content pipeline converts images into DDS files used as Direct3D texture resources.</target>
				</segment>
			</unit>
			<unit id="132" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/hh972446.aspx)</data>
				</originalData>
				<segment state="initial">
					<source>See <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Using 3-D Assets in Your Game or App</pc>.</source>
					<target>See <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Using 3-D Assets in Your Game or App</pc>.</target>
				</segment>
			</unit>
			<unit id="133" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/desktop/ee719902)</data>
				</originalData>
				<segment state="initial">
					<source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Windows Imaging Component</pc> can be used to load images from a variety of formats, and can be used for Direct2D bitmaps as well as Direct3D texture resources.</source>
					<target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Windows Imaging Component</pc> can be used to load images from a variety of formats, and can be used for Direct2D bitmaps as well as Direct3D texture resources.</target>
				</segment>
			</unit>
			<unit id="134" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](http://go.microsoft.com/fwlink/p/?LinkID=248929)</data>
					<data id="id3">[</data>
					<data id="id4">](http://go.microsoft.com/fwlink/p/?LinkID=248926)</data>
				</originalData>
				<segment state="initial">
					<source>You can also use the DDSTextureLoader, and the WICTextureLoader, from the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">DirectXTK</pc> or <pc dataRefEnd="id4" dataRefStart="id3" id="p2">DirectXTex</pc>.</source>
					<target>You can also use the DDSTextureLoader, and the WICTextureLoader, from the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">DirectXTK</pc> or <pc dataRefEnd="id4" dataRefStart="id3" id="p2">DirectXTex</pc>.</target>
				</segment>
			</unit>
			<unit id="135" translate="yes">
				<segment state="initial">
					<source>Where is the DirectX SDK?</source>
					<target>Where is the DirectX SDK?</target>
				</segment>
			</unit>
			<unit id="136" translate="yes">
				<segment state="initial">
					<source>The DirectX SDK is included as part of the Windows SDK.</source>
					<target>The DirectX SDK is included as part of the Windows SDK.</target>
				</segment>
			</unit>
			<unit id="137" translate="yes">
				<segment state="initial">
					<source>The most recent DirectX SDK that was separate from the Windows SDK was in June 2010.</source>
					<target>The most recent DirectX SDK that was separate from the Windows SDK was in June 2010.</target>
				</segment>
			</unit>
			<unit id="138" translate="yes">
				<segment state="initial">
					<source>Direct3D samples are in the Code Gallery along with the rest of the Windows app samples.</source>
					<target>Direct3D samples are in the Code Gallery along with the rest of the Windows app samples.</target>
				</segment>
			</unit>
			<unit id="139" translate="yes">
				<segment state="initial">
					<source>What about DirectX redistributables?</source>
					<target>What about DirectX redistributables?</target>
				</segment>
			</unit>
			<unit id="140" translate="yes">
				<segment state="initial">
					<source>The vast majority of components in the Windows SDK are already included in supported versions of the OS, or have no DLL component (such as DirectXMath).</source>
					<target>The vast majority of components in the Windows SDK are already included in supported versions of the OS, or have no DLL component (such as DirectXMath).</target>
				</segment>
			</unit>
			<unit id="141" translate="yes">
				<segment state="initial">
					<source>All Direct3D API components that UWP apps can use will already available to your game; you don't need to be redistribute them.</source>
					<target>All Direct3D API components that UWP apps can use will already available to your game; you don't need to be redistribute them.</target>
				</segment>
			</unit>
			<unit id="142" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/desktop/ee416644)</data>
				</originalData>
				<segment state="initial">
					<source>Win32 desktop applications still use DirectSetup, so if you are also upgrading the desktop version of your game see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Direct3D 11 Deployment for Game Developers</pc>.</source>
					<target>Win32 desktop applications still use DirectSetup, so if you are also upgrading the desktop version of your game see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Direct3D 11 Deployment for Game Developers</pc>.</target>
				</segment>
			</unit>
			<unit id="143" translate="yes">
				<segment state="initial">
					<source>Is there any way I can update my desktop code to DirectX 11 before moving away from Effects?</source>
					<target>Is there any way I can update my desktop code to DirectX 11 before moving away from Effects?</target>
				</segment>
			</unit>
			<unit id="144" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](http://go.microsoft.com/fwlink/p/?LinkId=271568)</data>
				</originalData>
				<segment state="initial">
					<source>See the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Effects for Direct3D 11 Update</pc>.</source>
					<target>See the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Effects for Direct3D 11 Update</pc>.</target>
				</segment>
			</unit>
			<unit id="145" translate="yes">
				<segment state="initial">
					<source>Effects 11 helps remove dependencies on legacy DirectX SDK headers; it's intended for use as a porting aid and can only be used with desktop apps.</source>
					<target>Effects 11 helps remove dependencies on legacy DirectX SDK headers; it's intended for use as a porting aid and can only be used with desktop apps.</target>
				</segment>
			</unit>
			<unit id="146" translate="yes">
				<segment state="initial">
					<source>Is there a path for porting my DirectX 8 game to UWP?</source>
					<target>Is there a path for porting my DirectX 8 game to UWP?</target>
				</segment>
			</unit>
			<unit id="147" translate="yes">
				<segment state="initial">
					<source>Yes:</source>
					<target>Yes:</target>
				</segment>
			</unit>
			<unit id="148" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/desktop/bb204851)</data>
				</originalData>
				<segment state="initial">
					<source>Read <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Converting to Direct3D 9</pc>.</source>
					<target>Read <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Converting to Direct3D 9</pc>.</target>
				</segment>
			</unit>
			<unit id="149" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/desktop/cc308047)</data>
				</originalData>
				<segment state="initial">
					<source>Make sure your game has no remnants of the fixed pipeline - see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Deprecated Features</pc>.</source>
					<target>Make sure your game has no remnants of the fixed pipeline - see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Deprecated Features</pc>.</target>
				</segment>
			</unit>
			<unit id="150" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](walkthrough--simple-port-from-direct3d-9-to-11-1.md)</data>
				</originalData>
				<segment state="initial">
					<source>Then take the DirectX 9 porting path: <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Port from D3D 9 to UWP</pc>.</source>
					<target>Then take the DirectX 9 porting path: <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Port from D3D 9 to UWP</pc>.</target>
				</segment>
			</unit>
			<unit id="151" translate="yes">
				<segment state="initial">
					<source>Can I port my DirectX 10 or 11 game to UWP?</source>
					<target>Can I port my DirectX 10 or 11 game to UWP?</target>
				</segment>
			</unit>
			<unit id="152" translate="yes">
				<segment state="initial">
					<source>DirectX 10.x and 11 desktop games are easy to port to UWP.</source>
					<target>DirectX 10.x and 11 desktop games are easy to port to UWP.</target>
				</segment>
			</unit>
			<unit id="153" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/desktop/ff476190)</data>
				</originalData>
				<segment state="initial">
					<source>See <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Migrating to Direct3D 11</pc>.</source>
					<target>See <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Migrating to Direct3D 11</pc>.</target>
				</segment>
			</unit>
			<unit id="154" translate="yes">
				<segment state="initial">
					<source>How do I choose the right display device in a multi-monitor system?</source>
					<target>How do I choose the right display device in a multi-monitor system?</target>
				</segment>
			</unit>
			<unit id="155" translate="yes">
				<segment state="initial">
					<source>The user selects which monitor your app is displayed on.</source>
					<target>The user selects which monitor your app is displayed on.</target>
				</segment>
			</unit>
			<unit id="156" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/desktop/ff476082)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source>Let Windows provide the correct adapter by calling <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">D3D11CreateDevice</pc></pc> with the first parameter set to <pc dataRefEnd="id6" dataRefStart="id5" id="p3">nullptr</pc>.</source>
					<target>Let Windows provide the correct adapter by calling <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">D3D11CreateDevice</pc></pc> with the first parameter set to <pc dataRefEnd="id6" dataRefStart="id5" id="p3">nullptr</pc>.</target>
				</segment>
			</unit>
			<unit id="157" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/desktop/bb174527)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/desktop/bb174531)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>Then get the device's <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">IDXGIDevice interface</pc></pc>, call <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">GetAdapter</pc></pc> and use the DXGI adapter to create the swap chain.</source>
					<target>Then get the device's <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">IDXGIDevice interface</pc></pc>, call <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">GetAdapter</pc></pc> and use the DXGI adapter to create the swap chain.</target>
				</segment>
			</unit>
			<unit id="158" translate="yes">
				<segment state="initial">
					<source>How do I turn on antialiasing?</source>
					<target>How do I turn on antialiasing?</target>
				</segment>
			</unit>
			<unit id="159" translate="yes">
				<segment state="initial">
					<source>Antialiasing (multisampling) is enabled when you create the Direct3D device.</source>
					<target>Antialiasing (multisampling) is enabled when you create the Direct3D device.</target>
				</segment>
			</unit>
			<unit id="160" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/desktop/ff476499)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/desktop/bb173072)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
					<data id="id9">[</data>
					<data id="id10">](https://msdn.microsoft.com/library/windows/desktop/bb174530)</data>
					<data id="id11">**</data>
					<data id="id12">**</data>
				</originalData>
				<segment state="initial">
					<source>Enumerate multisampling support by calling <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CheckMultisampleQualityLevels</pc></pc>, then set multisample options in the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">DXGI\_SAMPLE\_DESC structure</pc></pc> when you call <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">CreateSurface</pc></pc>.</source>
					<target>Enumerate multisampling support by calling <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CheckMultisampleQualityLevels</pc></pc>, then set multisample options in the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">DXGI\_SAMPLE\_DESC structure</pc></pc> when you call <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">CreateSurface</pc></pc>.</target>
				</segment>
			</unit>
			<unit id="161" translate="yes">
				<segment state="initial">
					<source>My game renders using multithreading and/or deferred rendering.</source>
					<target>My game renders using multithreading and/or deferred rendering.</target>
				</segment>
			</unit>
			<unit id="162" translate="yes">
				<segment state="initial">
					<source>What do I need to know for Direct3D 11?</source>
					<target>What do I need to know for Direct3D 11?</target>
				</segment>
			</unit>
			<unit id="163" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/desktop/ff476891)</data>
				</originalData>
				<segment state="initial">
					<source>Visit <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Introduction to Multithreading in Direct3D 11</pc> to get started.</source>
					<target>Visit <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Introduction to Multithreading in Direct3D 11</pc> to get started.</target>
				</segment>
			</unit>
			<unit id="164" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/desktop/ff476890)</data>
				</originalData>
				<segment state="initial">
					<source>For a list of key differences, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Threading Differences between Direct3D Versions</pc>.</source>
					<target>For a list of key differences, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Threading Differences between Direct3D Versions</pc>.</target>
				</segment>
			</unit>
			<unit id="165" translate="yes">
				<originalData>
					<data id="id1">*</data>
					<data id="id2">*</data>
					<data id="id3">*</data>
					<data id="id4">*</data>
				</originalData>
				<segment state="initial">
					<source>Note that deferred rendering uses a device <pc dataRefEnd="id2" dataRefStart="id1" id="p1">deferred context</pc> instead of an <pc dataRefEnd="id4" dataRefStart="id3" id="p2">immediate context</pc>.</source>
					<target>Note that deferred rendering uses a device <pc dataRefEnd="id2" dataRefStart="id1" id="p1">deferred context</pc> instead of an <pc dataRefEnd="id4" dataRefStart="id3" id="p2">immediate context</pc>.</target>
				</segment>
			</unit>
			<unit id="166" translate="yes">
				<segment state="initial">
					<source>Where can I read more about the programmable pipeline since Direct3D 9?</source>
					<target>Where can I read more about the programmable pipeline since Direct3D 9?</target>
				</segment>
			</unit>
			<unit id="167" translate="yes">
				<segment state="initial">
					<source>Visit the following topics:</source>
					<target>Visit the following topics:</target>
				</segment>
			</unit>
			<unit id="168" translate="yes">
				<segment state="initial">
					<source>Programming Guide for HLSL</source>
					<target>Programming Guide for HLSL</target>
				</segment>
			</unit>
			<unit id="169" translate="yes">
				<segment state="initial">
					<source>Direct3D 10 Frequently Asked Questions</source>
					<target>Direct3D 10 Frequently Asked Questions</target>
				</segment>
			</unit>
			<unit id="170" translate="yes">
				<segment state="initial">
					<source>What should I use instead of the .x file format for my models?</source>
					<target>What should I use instead of the .x file format for my models?</target>
				</segment>
			</unit>
			<unit id="171" translate="yes">
				<segment state="initial">
					<source>While we don’t have an official replacement for the .x file format, many of the samples utilize the SDKMesh format.</source>
					<target>While we don’t have an official replacement for the .x file format, many of the samples utilize the SDKMesh format.</target>
				</segment>
			</unit>
			<unit id="172" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/hh972446.aspx)</data>
					<data id="id3">[</data>
					<data id="id4">](http://go.microsoft.com/fwlink/p/?LinkID=248929)</data>
				</originalData>
				<segment state="initial">
					<source>Visual Studio also has a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">content pipeline</pc> that compiles several popular formats into CMO files that can be loaded with code from the Visual Studio 3D starter kit, or loaded using the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">DirectXTK</pc>.</source>
					<target>Visual Studio also has a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">content pipeline</pc> that compiles several popular formats into CMO files that can be loaded with code from the Visual Studio 3D starter kit, or loaded using the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">DirectXTK</pc>.</target>
				</segment>
			</unit>
			<unit id="173" translate="yes">
				<segment state="initial">
					<source>How do I debug my shaders?</source>
					<target>How do I debug my shaders?</target>
				</segment>
			</unit>
			<unit id="174" translate="yes">
				<segment state="initial">
					<source>Microsoft Visual Studio 2015 includes diagnostic tools for DirectX graphics.</source>
					<target>Microsoft Visual Studio 2015 includes diagnostic tools for DirectX graphics.</target>
				</segment>
			</unit>
			<unit id="175" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/hh315751.aspx)</data>
				</originalData>
				<segment state="initial">
					<source>See <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Debugging DirectX Graphics</pc>.</source>
					<target>See <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Debugging DirectX Graphics</pc>.</target>
				</segment>
			</unit>
			<unit id="176" translate="yes">
				<originalData>
					<data id="id1">*</data>
					<data id="id2">*</data>
				</originalData>
				<segment state="initial">
					<source>What is the Direct3D 11 equivalent for <pc dataRefEnd="id2" dataRefStart="id1" id="p1">x</pc> function?</source>
					<target>What is the Direct3D 11 equivalent for <pc dataRefEnd="id2" dataRefStart="id1" id="p1">x</pc> function?</target>
				</segment>
			</unit>
			<unit id="177" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](feature-mapping.md#function-mapping)</data>
				</originalData>
				<segment state="initial">
					<source>See the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">function mapping</pc> provided in Map DirectX 9 features to DirectX 11 APIs.</source>
					<target>See the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">function mapping</pc> provided in Map DirectX 9 features to DirectX 11 APIs.</target>
				</segment>
			</unit>
			<unit id="178" translate="yes">
				<originalData>
					<data id="id1">*</data>
					<data id="id2">*</data>
				</originalData>
				<segment state="initial">
					<source>What is the DXGI\_FORMAT equivalent of <pc dataRefEnd="id2" dataRefStart="id1" id="p1">y</pc> surface format?</source>
					<target>What is the DXGI\_FORMAT equivalent of <pc dataRefEnd="id2" dataRefStart="id1" id="p1">y</pc> surface format?</target>
				</segment>
			</unit>
			<unit id="179" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](feature-mapping.md#surface-format-mapping)</data>
				</originalData>
				<segment state="initial">
					<source>See the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">surface format mapping</pc> provided in Map DirectX 9 features to DirectX 11 APIs.</source>
					<target>See the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">surface format mapping</pc> provided in Map DirectX 9 features to DirectX 11 APIs.</target>
				</segment>
			</unit>
		</group>
	</file>
</xliff>