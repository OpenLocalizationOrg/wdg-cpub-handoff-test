<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="it-it" version="2.0" xml:space="preserve" xmlns="urn:oasis:names:tc:xliff:document:2.0">
	<file id="1">
		<mda:metadata>
			<mda:metaGroup>
				<mda:meta type="tool-id">mdxliff</mda:meta>
				<mda:meta type="tool-name">mdxliff</mda:meta>
				<mda:meta type="tool-version">1.0-2eb3c86</mda:meta>
				<mda:meta type="tool-company">Microsoft</mda:meta>
			</mda:metaGroup>
		<mda:metaGroup><mda:meta type="olfilehash">a6bc02ed66e33006047cdac06c6de7b85a5efb2a</mda:meta><mda:meta type="olfilepath">wdg-cpub-test\ndolci2\gaming\working-with-audio-in-your-directx-game.md</mda:meta><mda:meta type="oltranslationpriority"></mda:meta><mda:meta type="oltranslationtype">Human Translation</mda:meta><mda:meta type="olskeletonhash">68a6854416371b0c2cf50f0eb1e9ca3964009905</mda:meta><mda:meta type="olxliffhash">0bdd921fe10f5ecd2204166052eb93142cae8df9</mda:meta></mda:metaGroup></mda:metadata>
		<group id="content">
			<unit id="101" translate="yes">
				<segment state="initial">
					<source>Audio for games</source>
					<target>Audio for games</target>
				</segment>
			</unit>
			<unit id="102" translate="yes">
				<segment state="initial">
					<source>Learn how to develop and incorporate music and sounds into your DirectX game, and how to process the audio signals to create dynamic and positional sounds.</source>
					<target>Learn how to develop and incorporate music and sounds into your DirectX game, and how to process the audio signals to create dynamic and positional sounds.</target>
				</segment>
			</unit>
			<unit id="103" translate="yes">
				<segment state="initial">
					<source>Audio for games</source>
					<target>Audio for games</target>
				</segment>
			</unit>
			<unit id="104" translate="yes">
				<segment state="initial">
					<source>\[ Updated for UWP apps on Windows 10.</source>
					<target>\[ Updated for UWP apps on Windows 10.</target>
				</segment>
			</unit>
			<unit id="105" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](http://go.microsoft.com/fwlink/p/?linkid=619132)</data>
				</originalData>
				<segment state="initial">
					<source>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</source>
					<target>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</target>
				</segment>
			</unit>
			<unit id="106" translate="yes">
				<segment state="initial">
					<source>Learn how to develop and incorporate music and sounds into your DirectX game, and how to process the audio signals to create dynamic and positional sounds.</source>
					<target>Learn how to develop and incorporate music and sounds into your DirectX game, and how to process the audio signals to create dynamic and positional sounds.</target>
				</segment>
			</unit>
			<unit id="107" translate="yes">
				<segment state="initial">
					<source>For audio programming, we recommend using the XAudio2 library in DirectX, and we use it here.</source>
					<target>For audio programming, we recommend using the XAudio2 library in DirectX, and we use it here.</target>
				</segment>
			</unit>
			<unit id="108" translate="yes">
				<segment state="initial">
					<source>XAudio2 is a low-level audio library that provides a signal processing and mixing foundation for games, and it supports a variety of formats.</source>
					<target>XAudio2 is a low-level audio library that provides a signal processing and mixing foundation for games, and it supports a variety of formats.</target>
				</segment>
			</unit>
			<unit id="109" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/desktop/ms694197)</data>
				</originalData>
				<segment state="initial">
					<source>You can also implement simple sounds and music playback with <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Microsoft Media Foundation</pc>.</source>
					<target>You can also implement simple sounds and music playback with <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Microsoft Media Foundation</pc>.</target>
				</segment>
			</unit>
			<unit id="110" translate="yes">
				<segment state="initial">
					<source>Microsoft Media Foundation is designed for the playback of media files and streams, both audio and video, but can also be used in games, and is particularly useful for cinematic scenes or non-interactive components of your game.</source>
					<target>Microsoft Media Foundation is designed for the playback of media files and streams, both audio and video, but can also be used in games, and is particularly useful for cinematic scenes or non-interactive components of your game.</target>
				</segment>
			</unit>
			<unit id="111" translate="yes">
				<segment state="initial">
					<source>Concepts at a glance</source>
					<target>Concepts at a glance</target>
				</segment>
			</unit>
			<unit id="112" translate="yes">
				<segment state="initial">
					<source>Here are a few audio programming concepts we use in this section.</source>
					<target>Here are a few audio programming concepts we use in this section.</target>
				</segment>
			</unit>
			<unit id="113" translate="yes">
				<segment state="initial">
					<source>Signals are the basic unit of sound programming, analogous to pixels in graphics.</source>
					<target>Signals are the basic unit of sound programming, analogous to pixels in graphics.</target>
				</segment>
			</unit>
			<unit id="114" translate="yes">
				<segment state="initial">
					<source>The digital signal processors (DSPs) that process them are like the pixel shaders of game audio.</source>
					<target>The digital signal processors (DSPs) that process them are like the pixel shaders of game audio.</target>
				</segment>
			</unit>
			<unit id="115" translate="yes">
				<segment state="initial">
					<source>They can transform signals, or combine them, or filter them.</source>
					<target>They can transform signals, or combine them, or filter them.</target>
				</segment>
			</unit>
			<unit id="116" translate="yes">
				<segment state="initial">
					<source>By programming to the DSPs, you can alter your game's sound effects and music with as little or as much complexity as you need.</source>
					<target>By programming to the DSPs, you can alter your game's sound effects and music with as little or as much complexity as you need.</target>
				</segment>
			</unit>
			<unit id="117" translate="yes">
				<segment state="initial">
					<source>Voices are the submixed composites of two or more signals.</source>
					<target>Voices are the submixed composites of two or more signals.</target>
				</segment>
			</unit>
			<unit id="118" translate="yes">
				<segment state="initial">
					<source>There are 3 types of XAudio2 voice objects: source, submix, and mastering voices.</source>
					<target>There are 3 types of XAudio2 voice objects: source, submix, and mastering voices.</target>
				</segment>
			</unit>
			<unit id="119" translate="yes">
				<segment state="initial">
					<source>Source voices operate on audio data provided by the client.</source>
					<target>Source voices operate on audio data provided by the client.</target>
				</segment>
			</unit>
			<unit id="120" translate="yes">
				<segment state="initial">
					<source>Source and submix voices send their output to one or more submix or mastering voices.</source>
					<target>Source and submix voices send their output to one or more submix or mastering voices.</target>
				</segment>
			</unit>
			<unit id="121" translate="yes">
				<segment state="initial">
					<source>Submix and mastering voices mix the audio from all voices feeding them, and operate on the result.</source>
					<target>Submix and mastering voices mix the audio from all voices feeding them, and operate on the result.</target>
				</segment>
			</unit>
			<unit id="122" translate="yes">
				<segment state="initial">
					<source>Mastering voices write audio data to an audio device.</source>
					<target>Mastering voices write audio data to an audio device.</target>
				</segment>
			</unit>
			<unit id="123" translate="yes">
				<segment state="initial">
					<source>Mixing is the process of combining several discrete voices, such as the sound effects and the background audio that are played back in a scene, into a single stream.</source>
					<target>Mixing is the process of combining several discrete voices, such as the sound effects and the background audio that are played back in a scene, into a single stream.</target>
				</segment>
			</unit>
			<unit id="124" translate="yes">
				<segment state="initial">
					<source>Submixing is the process of combining several discrete signals, such as the component sounds of an engine noise, and creating a voice.</source>
					<target>Submixing is the process of combining several discrete signals, such as the component sounds of an engine noise, and creating a voice.</target>
				</segment>
			</unit>
			<unit id="125" translate="yes">
				<segment state="initial">
					<source>Audio formats.</source>
					<target>Audio formats.</target>
				</segment>
			</unit>
			<unit id="126" translate="yes">
				<segment state="initial">
					<source>Music and sound effects can be stored in a variety of digital formats for your game.</source>
					<target>Music and sound effects can be stored in a variety of digital formats for your game.</target>
				</segment>
			</unit>
			<unit id="127" translate="yes">
				<segment state="initial">
					<source>There are uncompressed formats, like WAV, and compressed formats like MP3 and OGG.</source>
					<target>There are uncompressed formats, like WAV, and compressed formats like MP3 and OGG.</target>
				</segment>
			</unit>
			<unit id="128" translate="yes">
				<segment state="initial">
					<source>The more a sample is compressed -- typically designated by its bit rate, where the lower the bit rate is, the more lossy the compression -- the worse fidelity it has.</source>
					<target>The more a sample is compressed -- typically designated by its bit rate, where the lower the bit rate is, the more lossy the compression -- the worse fidelity it has.</target>
				</segment>
			</unit>
			<unit id="129" translate="yes">
				<segment state="initial">
					<source>Fidelity can vary across compression schemes and bit rates, so experiment with them to find what works best for your game.</source>
					<target>Fidelity can vary across compression schemes and bit rates, so experiment with them to find what works best for your game.</target>
				</segment>
			</unit>
			<unit id="130" translate="yes">
				<segment state="initial">
					<source>Sample rate and quality.</source>
					<target>Sample rate and quality.</target>
				</segment>
			</unit>
			<unit id="131" translate="yes">
				<segment state="initial">
					<source>Sounds can be sampled at different rates, and sounds sampled at a lower rate have much poorer fidelity.</source>
					<target>Sounds can be sampled at different rates, and sounds sampled at a lower rate have much poorer fidelity.</target>
				</segment>
			</unit>
			<unit id="132" translate="yes">
				<segment state="initial">
					<source>The sample rate for CD quality is 44.1 Khz (44100 Hz).</source>
					<target>The sample rate for CD quality is 44.1 Khz (44100 Hz).</target>
				</segment>
			</unit>
			<unit id="133" translate="yes">
				<segment state="initial">
					<source>If you don't need high fidelity for a sound, you can choose a lower sample rate.</source>
					<target>If you don't need high fidelity for a sound, you can choose a lower sample rate.</target>
				</segment>
			</unit>
			<unit id="134" translate="yes">
				<segment state="initial">
					<source>Higher rates may be appropriate for professional audio applications, but you probably don't need them unless your game demands professional fidelity sound.</source>
					<target>Higher rates may be appropriate for professional audio applications, but you probably don't need them unless your game demands professional fidelity sound.</target>
				</segment>
			</unit>
			<unit id="135" translate="yes">
				<segment state="initial">
					<source>Sound emitters (or sources).</source>
					<target>Sound emitters (or sources).</target>
				</segment>
			</unit>
			<unit id="136" translate="yes">
				<segment state="initial">
					<source>In XAudio2, sound emitters are locations that emit a sound, be it a mere blip of a background noise or a snarling rock track played by an in-game jukebox.</source>
					<target>In XAudio2, sound emitters are locations that emit a sound, be it a mere blip of a background noise or a snarling rock track played by an in-game jukebox.</target>
				</segment>
			</unit>
			<unit id="137" translate="yes">
				<segment state="initial">
					<source>You specify emitters by world coordinates.</source>
					<target>You specify emitters by world coordinates.</target>
				</segment>
			</unit>
			<unit id="138" translate="yes">
				<segment state="initial">
					<source>Sound listeners.</source>
					<target>Sound listeners.</target>
				</segment>
			</unit>
			<unit id="139" translate="yes">
				<segment state="initial">
					<source>A sound listener is often the player, or perhaps an AI entity in a more advanced game, that processes the sounds received from a listener.</source>
					<target>A sound listener is often the player, or perhaps an AI entity in a more advanced game, that processes the sounds received from a listener.</target>
				</segment>
			</unit>
			<unit id="140" translate="yes">
				<segment state="initial">
					<source>You can submix that sound into the audio stream for playback to the player, or you can use it to take a specific in-game action, like awakening an AI guard marked as a listener.</source>
					<target>You can submix that sound into the audio stream for playback to the player, or you can use it to take a specific in-game action, like awakening an AI guard marked as a listener.</target>
				</segment>
			</unit>
			<unit id="141" translate="yes">
				<segment state="initial">
					<source>Design considerations</source>
					<target>Design considerations</target>
				</segment>
			</unit>
			<unit id="142" translate="yes">
				<segment state="initial">
					<source>Audio is a tremendously important part of game design and development.</source>
					<target>Audio is a tremendously important part of game design and development.</target>
				</segment>
			</unit>
			<unit id="143" translate="yes">
				<segment state="initial">
					<source>Many gamers can recall a mediocre game elevated to legendary status just because of a memorable soundtrack, or great voice work and sound mixing, or overall stellar audio production.</source>
					<target>Many gamers can recall a mediocre game elevated to legendary status just because of a memorable soundtrack, or great voice work and sound mixing, or overall stellar audio production.</target>
				</segment>
			</unit>
			<unit id="144" translate="yes">
				<segment state="initial">
					<source>Music and sound define a game's personality, and establish the main motive that defines the game and makes it stand apart from other similar games.</source>
					<target>Music and sound define a game's personality, and establish the main motive that defines the game and makes it stand apart from other similar games.</target>
				</segment>
			</unit>
			<unit id="145" translate="yes">
				<segment state="initial">
					<source>The effort you spend designing and developing your game's audio profile will be well worth it.</source>
					<target>The effort you spend designing and developing your game's audio profile will be well worth it.</target>
				</segment>
			</unit>
			<unit id="146" translate="yes">
				<segment state="initial">
					<source>Positional 3D audio can add a level of immersion beyond that provided by 3D graphics.</source>
					<target>Positional 3D audio can add a level of immersion beyond that provided by 3D graphics.</target>
				</segment>
			</unit>
			<unit id="147" translate="yes">
				<segment state="initial">
					<source>If you are developing a complex game that simulates a world, or which demands a cinematic style, consider using 3D positional audio techniques to really draw the player in.</source>
					<target>If you are developing a complex game that simulates a world, or which demands a cinematic style, consider using 3D positional audio techniques to really draw the player in.</target>
				</segment>
			</unit>
			<unit id="148" translate="yes">
				<segment state="initial">
					<source>DirectX audio development roadmap</source>
					<target>DirectX audio development roadmap</target>
				</segment>
			</unit>
			<unit id="149" translate="yes">
				<segment state="initial">
					<source>XAudio2 conceptual resources</source>
					<target>XAudio2 conceptual resources</target>
				</segment>
			</unit>
			<unit id="150" translate="yes">
				<segment state="initial">
					<source>XAudio2 is the audio mixing library for DirectX, and is primarily intended for developing high performance audio engines for games.</source>
					<target>XAudio2 is the audio mixing library for DirectX, and is primarily intended for developing high performance audio engines for games.</target>
				</segment>
			</unit>
			<unit id="151" translate="yes">
				<segment state="initial">
					<source>For game developers who want to add sound effects and background music to their modern games, XAudio2 offers an audio graph and mixing engine with low-latency and support for dynamic buffers, synchronous sample-accurate playback, and implicit source rate conversion.</source>
					<target>For game developers who want to add sound effects and background music to their modern games, XAudio2 offers an audio graph and mixing engine with low-latency and support for dynamic buffers, synchronous sample-accurate playback, and implicit source rate conversion.</target>
				</segment>
			</unit>
			<unit id="152" translate="yes">
				<segment state="initial">
					<source>Topic</source>
					<target>Topic</target>
				</segment>
			</unit>
			<unit id="153" translate="yes">
				<segment state="initial">
					<source>Description</source>
					<target>Description</target>
				</segment>
			</unit>
			<unit id="154" translate="yes">
				<segment state="initial">
					<source>Introduction to XAudio2</source>
					<target>Introduction to XAudio2</target>
				</segment>
			</unit>
			<unit id="155" translate="yes">
				<segment state="initial">
					<source>The topic provides a list of the audio programming features supported by XAudio2.</source>
					<target>The topic provides a list of the audio programming features supported by XAudio2.</target>
				</segment>
			</unit>
			<unit id="156" translate="yes">
				<segment state="initial">
					<source>Getting Started with XAudio2</source>
					<target>Getting Started with XAudio2</target>
				</segment>
			</unit>
			<unit id="157" translate="yes">
				<segment state="initial">
					<source>This topic provides information on key XAudio2 concepts, XAudio2 versions, and the RIFF audio format.</source>
					<target>This topic provides information on key XAudio2 concepts, XAudio2 versions, and the RIFF audio format.</target>
				</segment>
			</unit>
			<unit id="158" translate="yes">
				<segment state="initial">
					<source>Common Audio Programming Concepts</source>
					<target>Common Audio Programming Concepts</target>
				</segment>
			</unit>
			<unit id="159" translate="yes">
				<segment state="initial">
					<source>This topic provides an overview of common audio concepts with which an audio developer should be familiar.</source>
					<target>This topic provides an overview of common audio concepts with which an audio developer should be familiar.</target>
				</segment>
			</unit>
			<unit id="160" translate="yes">
				<segment state="initial">
					<source>XAudio2 Voices</source>
					<target>XAudio2 Voices</target>
				</segment>
			</unit>
			<unit id="161" translate="yes">
				<segment state="initial">
					<source>This topic contains an overview of XAudio2 voices, which are used to submix, operate on, and master audio data.</source>
					<target>This topic contains an overview of XAudio2 voices, which are used to submix, operate on, and master audio data.</target>
				</segment>
			</unit>
			<unit id="162" translate="yes">
				<segment state="initial">
					<source>XAudio2 Callbacks</source>
					<target>XAudio2 Callbacks</target>
				</segment>
			</unit>
			<unit id="163" translate="yes">
				<segment state="initial">
					<source>This topic covers the XAudio 2 callbacks, which are used to prevent breaks in the audio playback.</source>
					<target>This topic covers the XAudio 2 callbacks, which are used to prevent breaks in the audio playback.</target>
				</segment>
			</unit>
			<unit id="164" translate="yes">
				<segment state="initial">
					<source>XAudio2 Audio Graphs</source>
					<target>XAudio2 Audio Graphs</target>
				</segment>
			</unit>
			<unit id="165" translate="yes">
				<segment state="initial">
					<source>This topic covers the XAudio2 audio processing graphs, which take a set of audio streams from the client as input, process them, and deliver the final result to an audio device.</source>
					<target>This topic covers the XAudio2 audio processing graphs, which take a set of audio streams from the client as input, process them, and deliver the final result to an audio device.</target>
				</segment>
			</unit>
			<unit id="166" translate="yes">
				<segment state="initial">
					<source>XAudio2 Audio Effects</source>
					<target>XAudio2 Audio Effects</target>
				</segment>
			</unit>
			<unit id="167" translate="yes">
				<segment state="initial">
					<source>The topic covers XAudio2 audio effects, which take incoming audio data and perform some operation on the data (such as a reverb effect) before passing it on.</source>
					<target>The topic covers XAudio2 audio effects, which take incoming audio data and perform some operation on the data (such as a reverb effect) before passing it on.</target>
				</segment>
			</unit>
			<unit id="168" translate="yes">
				<segment state="initial">
					<source>Streaming Audio Data with XAudio2</source>
					<target>Streaming Audio Data with XAudio2</target>
				</segment>
			</unit>
			<unit id="169" translate="yes">
				<segment state="initial">
					<source>This topic covers audio streaming with XAudio2.</source>
					<target>This topic covers audio streaming with XAudio2.</target>
				</segment>
			</unit>
			<unit id="170" translate="yes">
				<segment state="initial">
					<source>X3DAudio</source>
					<target>X3DAudio</target>
				</segment>
			</unit>
			<unit id="171" translate="yes">
				<segment state="initial">
					<source>this topic covers X3DAudio, an API used in conjunction with XAudio2 to create the illusion of a sound coming from a point in 3D space.</source>
					<target>this topic covers X3DAudio, an API used in conjunction with XAudio2 to create the illusion of a sound coming from a point in 3D space.</target>
				</segment>
			</unit>
			<unit id="172" translate="yes">
				<segment state="initial">
					<source>XAudio2 Programming Reference</source>
					<target>XAudio2 Programming Reference</target>
				</segment>
			</unit>
			<unit id="173" translate="yes">
				<segment state="initial">
					<source>This section contains the complete reference for the XAudio2 APIs.</source>
					<target>This section contains the complete reference for the XAudio2 APIs.</target>
				</segment>
			</unit>
			<unit id="174" translate="yes">
				<segment state="initial">
					<source>XAudio2 "how to" resources</source>
					<target>XAudio2 "how to" resources</target>
				</segment>
			</unit>
			<unit id="175" translate="yes">
				<segment state="initial">
					<source>Topic</source>
					<target>Topic</target>
				</segment>
			</unit>
			<unit id="176" translate="yes">
				<segment state="initial">
					<source>Description</source>
					<target>Description</target>
				</segment>
			</unit>
			<unit id="177" translate="yes">
				<segment state="initial">
					<source>How to: Initialize XAudio2</source>
					<target>How to: Initialize XAudio2</target>
				</segment>
			</unit>
			<unit id="178" translate="yes">
				<segment state="initial">
					<source>Learn how to initialize XAudio2 for audio playback by creating an instance of the XAudio2 engine, and creating a mastering voice.</source>
					<target>Learn how to initialize XAudio2 for audio playback by creating an instance of the XAudio2 engine, and creating a mastering voice.</target>
				</segment>
			</unit>
			<unit id="179" translate="yes">
				<segment state="initial">
					<source>How to: Load Audio Data Files in XAudio2</source>
					<target>How to: Load Audio Data Files in XAudio2</target>
				</segment>
			</unit>
			<unit id="180" translate="yes">
				<segment state="initial">
					<source>Learn how to populate the structures required to play audio data in XAudio2.</source>
					<target>Learn how to populate the structures required to play audio data in XAudio2.</target>
				</segment>
			</unit>
			<unit id="181" translate="yes">
				<segment state="initial">
					<source>How to: Play a Sound with XAudio2</source>
					<target>How to: Play a Sound with XAudio2</target>
				</segment>
			</unit>
			<unit id="182" translate="yes">
				<segment state="initial">
					<source>Learn how to play previously-loaded audio data in XAudio2.</source>
					<target>Learn how to play previously-loaded audio data in XAudio2.</target>
				</segment>
			</unit>
			<unit id="183" translate="yes">
				<segment state="initial">
					<source>How to: Use Submix Voices</source>
					<target>How to: Use Submix Voices</target>
				</segment>
			</unit>
			<unit id="184" translate="yes">
				<segment state="initial">
					<source>Learn how to set groups of voices to send their output to the same submix voice.</source>
					<target>Learn how to set groups of voices to send their output to the same submix voice.</target>
				</segment>
			</unit>
			<unit id="185" translate="yes">
				<segment state="initial">
					<source>How to: Use Source Voice Callbacks</source>
					<target>How to: Use Source Voice Callbacks</target>
				</segment>
			</unit>
			<unit id="186" translate="yes">
				<segment state="initial">
					<source>Learn how to use XAudio2 source voice callbacks.</source>
					<target>Learn how to use XAudio2 source voice callbacks.</target>
				</segment>
			</unit>
			<unit id="187" translate="yes">
				<segment state="initial">
					<source>How to: Use Engine Callbacks</source>
					<target>How to: Use Engine Callbacks</target>
				</segment>
			</unit>
			<unit id="188" translate="yes">
				<segment state="initial">
					<source>Learn how to use XAudio2 engine callbacks.</source>
					<target>Learn how to use XAudio2 engine callbacks.</target>
				</segment>
			</unit>
			<unit id="189" translate="yes">
				<segment state="initial">
					<source>How to: Build a Basic Audio Processing Graph</source>
					<target>How to: Build a Basic Audio Processing Graph</target>
				</segment>
			</unit>
			<unit id="190" translate="yes">
				<segment state="initial">
					<source>Learn how to create an audio processing graph, constructed from a single mastering voice and a single source voice.</source>
					<target>Learn how to create an audio processing graph, constructed from a single mastering voice and a single source voice.</target>
				</segment>
			</unit>
			<unit id="191" translate="yes">
				<segment state="initial">
					<source>How to: Dynamically Add or Remove Voices From an Audio Graph</source>
					<target>How to: Dynamically Add or Remove Voices From an Audio Graph</target>
				</segment>
			</unit>
			<unit id="192" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/desktop/ee415767)</data>
				</originalData>
				<segment state="initial">
					<source>Learn how to add or remove submix voices from a graph that has been created following the steps in <pc dataRefEnd="id2" dataRefStart="id1" id="p1">How to: Build a Basic Audio Processing Graph</pc>.</source>
					<target>Learn how to add or remove submix voices from a graph that has been created following the steps in <pc dataRefEnd="id2" dataRefStart="id1" id="p1">How to: Build a Basic Audio Processing Graph</pc>.</target>
				</segment>
			</unit>
			<unit id="193" translate="yes">
				<segment state="initial">
					<source>How to: Create an Effect Chain</source>
					<target>How to: Create an Effect Chain</target>
				</segment>
			</unit>
			<unit id="194" translate="yes">
				<segment state="initial">
					<source>Learn how to apply an effect chain to a voice to allow custom processing of the audio data for that voice.</source>
					<target>Learn how to apply an effect chain to a voice to allow custom processing of the audio data for that voice.</target>
				</segment>
			</unit>
			<unit id="195" translate="yes">
				<segment state="initial">
					<source>How to: Create an XAPO</source>
					<target>How to: Create an XAPO</target>
				</segment>
			</unit>
			<unit id="196" translate="yes">
				<originalData>
					<data id="id1">&lt;strong&gt;</data>
					<data id="id2">&lt;/strong&gt;</data>
				</originalData>
				<segment state="initial">
					<source>Learn how to implement [<ph dataRef="id1" id="ph1" />IXAPO<ph dataRef="id2" id="ph2" />](https://msdn.microsoft.com/library/windows/desktop/ee415893) to create an XAudio2 audio processing object (XAPO).</source>
					<target>Learn how to implement [<ph dataRef="id1" id="ph1" />IXAPO<ph dataRef="id2" id="ph2" />](https://msdn.microsoft.com/library/windows/desktop/ee415893) to create an XAudio2 audio processing object (XAPO).</target>
				</segment>
			</unit>
			<unit id="197" translate="yes">
				<segment state="initial">
					<source>How to: Add Run-time Parameter Support to an XAPO</source>
					<target>How to: Add Run-time Parameter Support to an XAPO</target>
				</segment>
			</unit>
			<unit id="198" translate="yes">
				<originalData>
					<data id="id1">&lt;strong&gt;</data>
					<data id="id2">&lt;/strong&gt;</data>
				</originalData>
				<segment state="initial">
					<source>Learn how to add run-time parameter support to an XAPO by implementing the [<ph dataRef="id1" id="ph1" />IXAPOParameters<ph dataRef="id2" id="ph2" />](https://msdn.microsoft.com/library/windows/desktop/ee415896) interface.</source>
					<target>Learn how to add run-time parameter support to an XAPO by implementing the [<ph dataRef="id1" id="ph1" />IXAPOParameters<ph dataRef="id2" id="ph2" />](https://msdn.microsoft.com/library/windows/desktop/ee415896) interface.</target>
				</segment>
			</unit>
			<unit id="199" translate="yes">
				<segment state="initial">
					<source>How to: Use an XAPO in XAudio2</source>
					<target>How to: Use an XAPO in XAudio2</target>
				</segment>
			</unit>
			<unit id="200" translate="yes">
				<segment state="initial">
					<source>Learn how to use an effect implemented as an XAPO in an XAudio2 effect chain.</source>
					<target>Learn how to use an effect implemented as an XAPO in an XAudio2 effect chain.</target>
				</segment>
			</unit>
			<unit id="201" translate="yes">
				<segment state="initial">
					<source>How to: Use XAPOFX in XAudio2</source>
					<target>How to: Use XAPOFX in XAudio2</target>
				</segment>
			</unit>
			<unit id="202" translate="yes">
				<segment state="initial">
					<source>Learn how to use one of the effects included in XAPOFX in an XAudio2 effect chain.</source>
					<target>Learn how to use one of the effects included in XAPOFX in an XAudio2 effect chain.</target>
				</segment>
			</unit>
			<unit id="203" translate="yes">
				<segment state="initial">
					<source>How to: Stream a Sound from Disk</source>
					<target>How to: Stream a Sound from Disk</target>
				</segment>
			</unit>
			<unit id="204" translate="yes">
				<segment state="initial">
					<source>Learn how to stream audio data in XAudio2 by creating a separate thread to read an audio buffer, and to use callbacks to control that thread.</source>
					<target>Learn how to stream audio data in XAudio2 by creating a separate thread to read an audio buffer, and to use callbacks to control that thread.</target>
				</segment>
			</unit>
			<unit id="205" translate="yes">
				<segment state="initial">
					<source>How to: Integrate X3DAudio with XAudio2</source>
					<target>How to: Integrate X3DAudio with XAudio2</target>
				</segment>
			</unit>
			<unit id="206" translate="yes">
				<segment state="initial">
					<source>Learn how to use X3DAudio to provide the volume and pitch values for XAudio2 voices as well as the parameters for the XAudio2 built-in reverb effect.</source>
					<target>Learn how to use X3DAudio to provide the volume and pitch values for XAudio2 voices as well as the parameters for the XAudio2 built-in reverb effect.</target>
				</segment>
			</unit>
			<unit id="207" translate="yes">
				<segment state="initial">
					<source>How to: Group Audio Methods as an Operation Set</source>
					<target>How to: Group Audio Methods as an Operation Set</target>
				</segment>
			</unit>
			<unit id="208" translate="yes">
				<segment state="initial">
					<source>Learn how to use XAudio2 operation sets to make a group of method calls take effect at the same time.</source>
					<target>Learn how to use XAudio2 operation sets to make a group of method calls take effect at the same time.</target>
				</segment>
			</unit>
			<unit id="209" translate="yes">
				<segment state="initial">
					<source>Debugging Audio Glitches in XAudio2</source>
					<target>Debugging Audio Glitches in XAudio2</target>
				</segment>
			</unit>
			<unit id="210" translate="yes">
				<segment state="initial">
					<source>Learn how to set the debug logging level for XAudio2.</source>
					<target>Learn how to set the debug logging level for XAudio2.</target>
				</segment>
			</unit>
			<unit id="211" translate="yes">
				<segment state="initial">
					<source>Media Foundation resources</source>
					<target>Media Foundation resources</target>
				</segment>
			</unit>
			<unit id="212" translate="yes">
				<segment state="initial">
					<source>Media Foundation (MF) is a media platform for streaming audio and video playback.</source>
					<target>Media Foundation (MF) is a media platform for streaming audio and video playback.</target>
				</segment>
			</unit>
			<unit id="213" translate="yes">
				<segment state="initial">
					<source>You can use the Media Foundation APIs to stream audio and video encoded and compressed with a variety of algorithms.</source>
					<target>You can use the Media Foundation APIs to stream audio and video encoded and compressed with a variety of algorithms.</target>
				</segment>
			</unit>
			<unit id="214" translate="yes">
				<segment state="initial">
					<source>It is not designed for real-time gameplay scenarios; instead, it provides powerful tools and broad codec support for more linear capture and presentation of audio and video components.</source>
					<target>It is not designed for real-time gameplay scenarios; instead, it provides powerful tools and broad codec support for more linear capture and presentation of audio and video components.</target>
				</segment>
			</unit>
			<unit id="215" translate="yes">
				<segment state="initial">
					<source>Topic</source>
					<target>Topic</target>
				</segment>
			</unit>
			<unit id="216" translate="yes">
				<segment state="initial">
					<source>Description</source>
					<target>Description</target>
				</segment>
			</unit>
			<unit id="217" translate="yes">
				<segment state="initial">
					<source>About Media Foundation</source>
					<target>About Media Foundation</target>
				</segment>
			</unit>
			<unit id="218" translate="yes">
				<segment state="initial">
					<source>This section contains general information about the Media Foundation APIs, and the tools available to support them.</source>
					<target>This section contains general information about the Media Foundation APIs, and the tools available to support them.</target>
				</segment>
			</unit>
			<unit id="219" translate="yes">
				<segment state="initial">
					<source>Media Foundation: Essential Concepts</source>
					<target>Media Foundation: Essential Concepts</target>
				</segment>
			</unit>
			<unit id="220" translate="yes">
				<segment state="initial">
					<source>This topic introduces some concepts that you will need to understand before writing a Media Foundation application.</source>
					<target>This topic introduces some concepts that you will need to understand before writing a Media Foundation application.</target>
				</segment>
			</unit>
			<unit id="221" translate="yes">
				<segment state="initial">
					<source>Media Foundation Architecture</source>
					<target>Media Foundation Architecture</target>
				</segment>
			</unit>
			<unit id="222" translate="yes">
				<segment state="initial">
					<source>This section describes the general design of Microsoft Media Foundation, as well as the media primitives and processing pipeline it uses.</source>
					<target>This section describes the general design of Microsoft Media Foundation, as well as the media primitives and processing pipeline it uses.</target>
				</segment>
			</unit>
			<unit id="223" translate="yes">
				<segment state="initial">
					<source>Audio/Video Capture</source>
					<target>Audio/Video Capture</target>
				</segment>
			</unit>
			<unit id="224" translate="yes">
				<segment state="initial">
					<source>This topic describes how to use Microsoft Media Foundation to perform audio and video capture.</source>
					<target>This topic describes how to use Microsoft Media Foundation to perform audio and video capture.</target>
				</segment>
			</unit>
			<unit id="225" translate="yes">
				<segment state="initial">
					<source>Audio/Video Playback</source>
					<target>Audio/Video Playback</target>
				</segment>
			</unit>
			<unit id="226" translate="yes">
				<segment state="initial">
					<source>This topic describes how to implement audio/video playback in your app.</source>
					<target>This topic describes how to implement audio/video playback in your app.</target>
				</segment>
			</unit>
			<unit id="227" translate="yes">
				<segment state="initial">
					<source>Supported Media Formats in Media Foundation</source>
					<target>Supported Media Formats in Media Foundation</target>
				</segment>
			</unit>
			<unit id="228" translate="yes">
				<segment state="initial">
					<source>This topic lists the media formats that Microsoft Media Foundation supports natively.</source>
					<target>This topic lists the media formats that Microsoft Media Foundation supports natively.</target>
				</segment>
			</unit>
			<unit id="229" translate="yes">
				<segment state="initial">
					<source>(Third parties can support additional formats by writing custom plug-ins.)</source>
					<target>(Third parties can support additional formats by writing custom plug-ins.)</target>
				</segment>
			</unit>
			<unit id="230" translate="yes">
				<segment state="initial">
					<source>Encoding and File Authoring</source>
					<target>Encoding and File Authoring</target>
				</segment>
			</unit>
			<unit id="231" translate="yes">
				<segment state="initial">
					<source>This topic describes how to use Microsoft Media Foundation to perform audio and video encoding, and author media files.</source>
					<target>This topic describes how to use Microsoft Media Foundation to perform audio and video encoding, and author media files.</target>
				</segment>
			</unit>
			<unit id="232" translate="yes">
				<segment state="initial">
					<source>Windows Media Codecs</source>
					<target>Windows Media Codecs</target>
				</segment>
			</unit>
			<unit id="233" translate="yes">
				<segment state="initial">
					<source>This topic describes how to use the features of the Windows Media Audio and Video codecs to produce and consume compressed data streams.</source>
					<target>This topic describes how to use the features of the Windows Media Audio and Video codecs to produce and consume compressed data streams.</target>
				</segment>
			</unit>
			<unit id="234" translate="yes">
				<segment state="initial">
					<source>Media Foundation Programming Reference</source>
					<target>Media Foundation Programming Reference</target>
				</segment>
			</unit>
			<unit id="235" translate="yes">
				<segment state="initial">
					<source>This section contains reference information for the Media Foundation APIs.</source>
					<target>This section contains reference information for the Media Foundation APIs.</target>
				</segment>
			</unit>
			<unit id="236" translate="yes">
				<segment state="initial">
					<source>Media Foundation SDK Samples</source>
					<target>Media Foundation SDK Samples</target>
				</segment>
			</unit>
			<unit id="237" translate="yes">
				<segment state="initial">
					<source>This section lists sample apps that demonstrate how to use Media Foundation.</source>
					<target>This section lists sample apps that demonstrate how to use Media Foundation.</target>
				</segment>
			</unit>
			<unit id="238" translate="yes">
				<segment state="initial">
					<source>Windows Runtime XAML media types</source>
					<target>Windows Runtime XAML media types</target>
				</segment>
			</unit>
			<unit id="239" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/hh825871)</data>
				</originalData>
				<segment state="initial">
					<source>If you are using <pc dataRefEnd="id2" dataRefStart="id1" id="p1">DirectX-XAML interop</pc>, you can incorporate the Windows Runtime XAML media APIs into your Windows Store apps using DirectX with C++ for simpler game scenarios.</source>
					<target>If you are using <pc dataRefEnd="id2" dataRefStart="id1" id="p1">DirectX-XAML interop</pc>, you can incorporate the Windows Runtime XAML media APIs into your Windows Store apps using DirectX with C++ for simpler game scenarios.</target>
				</segment>
			</unit>
			<unit id="240" translate="yes">
				<segment state="initial">
					<source>Topic</source>
					<target>Topic</target>
				</segment>
			</unit>
			<unit id="241" translate="yes">
				<segment state="initial">
					<source>Description</source>
					<target>Description</target>
				</segment>
			</unit>
			<unit id="242" translate="yes">
				<originalData>
					<data id="id1">&lt;strong&gt;</data>
					<data id="id2">&lt;/strong&gt;</data>
				</originalData>
				<segment state="initial">
					<source>[<ph dataRef="id1" id="ph1" />Windows.UI.Xaml.Controls.MediaElement<ph dataRef="id2" id="ph2" />](https://msdn.microsoft.com/library/windows/apps/br242926)</source>
					<target>[<ph dataRef="id1" id="ph1" />Windows.UI.Xaml.Controls.MediaElement<ph dataRef="id2" id="ph2" />](https://msdn.microsoft.com/library/windows/apps/br242926)</target>
				</segment>
			</unit>
			<unit id="243" translate="yes">
				<segment state="initial">
					<source>XAML element that represents an object that contains audio, video, or both.</source>
					<target>XAML element that represents an object that contains audio, video, or both.</target>
				</segment>
			</unit>
			<unit id="244" translate="yes">
				<segment state="initial">
					<source>Audio, video, and camera</source>
					<target>Audio, video, and camera</target>
				</segment>
			</unit>
			<unit id="245" translate="yes">
				<segment state="initial">
					<source>Learn how to incorporate basic audio and video in your Universal Windows Platform (UWP) app.</source>
					<target>Learn how to incorporate basic audio and video in your Universal Windows Platform (UWP) app.</target>
				</segment>
			</unit>
			<unit id="246" translate="yes">
				<segment state="initial">
					<source>MediaElement</source>
					<target>MediaElement</target>
				</segment>
			</unit>
			<unit id="247" translate="yes">
				<segment state="initial">
					<source>Learn how to play a locally-stored media file in your UWP app.</source>
					<target>Learn how to play a locally-stored media file in your UWP app.</target>
				</segment>
			</unit>
			<unit id="248" translate="yes">
				<segment state="initial">
					<source>MediaElement</source>
					<target>MediaElement</target>
				</segment>
			</unit>
			<unit id="249" translate="yes">
				<segment state="initial">
					<source>Learn how to stream a media file with low-latency in your UWP app.</source>
					<target>Learn how to stream a media file with low-latency in your UWP app.</target>
				</segment>
			</unit>
			<unit id="250" translate="yes">
				<segment state="initial">
					<source>Media casting</source>
					<target>Media casting</target>
				</segment>
			</unit>
			<unit id="251" translate="yes">
				<segment state="initial">
					<source>Learn how to use the Play To contract to stream media from your UWP app to another device.</source>
					<target>Learn how to use the Play To contract to stream media from your UWP app to another device.</target>
				</segment>
			</unit>
			<unit id="252" translate="yes">
				<segment state="initial">
					<source>Reference</source>
					<target>Reference</target>
				</segment>
			</unit>
			<unit id="253" translate="yes">
				<segment state="initial">
					<source>XAudio2 Introduction</source>
					<target>XAudio2 Introduction</target>
				</segment>
			</unit>
			<unit id="254" translate="yes">
				<segment state="initial">
					<source>XAudio2 Programming Guide</source>
					<target>XAudio2 Programming Guide</target>
				</segment>
			</unit>
			<unit id="255" translate="yes">
				<segment state="initial">
					<source>Microsoft Media Foundation overview</source>
					<target>Microsoft Media Foundation overview</target>
				</segment>
			</unit>
			<unit id="256" translate="yes">
				<segment state="initial">
					<source>Note</source>
					<target>Note</target>
				</segment>
			</unit>
			<unit id="257" translate="yes">
				<segment state="initial">
					<source>This article is for Windows 10 developers writing Universal Windows Platform (UWP) apps.</source>
					<target>This article is for Windows 10 developers writing Universal Windows Platform (UWP) apps.</target>
				</segment>
			</unit>
			<unit id="258" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](http://go.microsoft.com/fwlink/p/?linkid=619132)</data>
				</originalData>
				<segment state="initial">
					<source>If you’re developing for Windows 8.x or Windows Phone 8.x, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archived documentation</pc>.</source>
					<target>If you’re developing for Windows 8.x or Windows Phone 8.x, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archived documentation</pc>.</target>
				</segment>
			</unit>
			<unit id="259" translate="yes">
				<segment state="initial">
					<source>Related topics</source>
					<target>Related topics</target>
				</segment>
			</unit>
			<unit id="260" translate="yes">
				<segment state="initial">
					<source>XAudio2 Programming Guide</source>
					<target>XAudio2 Programming Guide</target>
				</segment>
			</unit>
		</group>
	</file>
</xliff>