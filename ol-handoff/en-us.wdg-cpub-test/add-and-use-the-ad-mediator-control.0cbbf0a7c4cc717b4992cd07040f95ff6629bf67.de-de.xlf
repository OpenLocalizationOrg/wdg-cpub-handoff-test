<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="de-de" version="2.0" xml:space="preserve" xmlns="urn:oasis:names:tc:xliff:document:2.0">
	<file id="1">
		<mda:metadata>
			<mda:metaGroup>
				<mda:meta type="tool-id">mdxliff</mda:meta>
				<mda:meta type="tool-name">mdxliff</mda:meta>
				<mda:meta type="tool-version">1.0-2eb3c86</mda:meta>
				<mda:meta type="tool-company">Microsoft</mda:meta>
			</mda:metaGroup>
		<mda:metaGroup><mda:meta type="olfilehash">9be4a8ed7cc5abdba692d77da58ca61abe18b1c1</mda:meta><mda:meta type="olfilepath">wdg-cpub-test\ndolci1\monetize\add-and-use-the-ad-mediator-control.md</mda:meta><mda:meta type="oltranslationpriority"></mda:meta><mda:meta type="oltranslationtype">Human Translation</mda:meta><mda:meta type="olskeletonhash">7bf07dc4b396d4b984827f6a2569ecfde130adf2</mda:meta><mda:meta type="olxliffhash">d4d7a44991c0b926083a2712ece98b9cf72adf1a</mda:meta></mda:metaGroup></mda:metadata>
		<group id="content">
			<unit id="101" translate="yes">
				<segment state="initial">
					<source>After you install the Microsoft Universal Ad Client SDK, follow the instructions in this topic to use the ad mediator control in your app.</source>
					<target>After you install the Microsoft Universal Ad Client SDK, follow the instructions in this topic to use the ad mediator control in your app.</target>
				</segment>
			</unit>
			<unit id="102" translate="yes">
				<segment state="initial">
					<source>Add and use the ad mediator control</source>
					<target>Add and use the ad mediator control</target>
				</segment>
			</unit>
			<unit id="103" translate="yes">
				<segment state="initial">
					<source>Add and use the ad mediator control</source>
					<target>Add and use the ad mediator control</target>
				</segment>
			</unit>
			<unit id="104" translate="yes">
				<segment state="initial">
					<source>\[ Updated for UWP apps on Windows 10.</source>
					<target>\[ Updated for UWP apps on Windows 10.</target>
				</segment>
			</unit>
			<unit id="105" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](http://go.microsoft.com/fwlink/p/?linkid=619132)</data>
				</originalData>
				<segment state="initial">
					<source>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</source>
					<target>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</target>
				</segment>
			</unit>
			<unit id="106" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](install-the-microsoft-universal-ad-client-sdk.md)</data>
				</originalData>
				<segment state="initial">
					<source>After you <pc dataRefEnd="id2" dataRefStart="id1" id="p1">install the Microsoft Universal Ad Client SDK</pc>, follow the instructions in this topic to use the ad mediator control in your app.</source>
					<target>After you <pc dataRefEnd="id2" dataRefStart="id1" id="p1">install the Microsoft Universal Ad Client SDK</pc>, follow the instructions in this topic to use the ad mediator control in your app.</target>
				</segment>
			</unit>
			<unit id="107" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](select-and-manage-your-ad-networks.md)</data>
				</originalData>
				<segment state="initial">
					<source>For a list of the ad networks and project types currently supported by ad mediation, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Select and manage your ad networks</pc>.</source>
					<target>For a list of the ad networks and project types currently supported by ad mediation, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Select and manage your ad networks</pc>.</target>
				</segment>
			</unit>
			<unit id="108" translate="yes">
				<segment state="initial">
					<source>Add the ad mediator control to your project</source>
					<target>Add the ad mediator control to your project</target>
				</segment>
			</unit>
			<unit id="109" translate="yes">
				<segment state="initial">
					<source>To add an instance of the ad mediator control to your project:</source>
					<target>To add an instance of the ad mediator control to your project:</target>
				</segment>
			</unit>
			<unit id="110" translate="yes">
				<segment state="initial">
					<source>In Visual Studio, open your project.</source>
					<target>In Visual Studio, open your project.</target>
				</segment>
			</unit>
			<unit id="111" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](select-and-manage-your-ad-networks.md)</data>
				</originalData>
				<segment state="initial">
					<source>If you're adding ad mediation to an app which is already monetizing with any of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ad networks</pc> supported by ad mediation, remove the existing ad implementation and all of its references before proceeding.</source>
					<target>If you're adding ad mediation to an app which is already monetizing with any of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ad networks</pc> supported by ad mediation, remove the existing ad implementation and all of its references before proceeding.</target>
				</segment>
			</unit>
			<unit id="112" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>In <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Solution Explorer</pc>, locate the page in your app where you want to show ads and then double-click the page to open it in the designer.</source>
					<target>In <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Solution Explorer</pc>, locate the page in your app where you want to show ads and then double-click the page to open it in the designer.</target>
				</segment>
			</unit>
			<unit id="113" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>From the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Toolbox</pc>, drag a new <pc dataRefEnd="id4" dataRefStart="id3" id="p2">AdMediatorControl</pc> into the designer (be sure to drag the control into the designer, not into your XAML code).</source>
					<target>From the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Toolbox</pc>, drag a new <pc dataRefEnd="id4" dataRefStart="id3" id="p2">AdMediatorControl</pc> into the designer (be sure to drag the control into the designer, not into your XAML code).</target>
				</segment>
			</unit>
			<unit id="114" translate="yes">
				<segment state="initial">
					<source>Position the control in the location where you'd like your ads to display.</source>
					<target>Position the control in the location where you'd like your ads to display.</target>
				</segment>
			</unit>
			<unit id="115" translate="yes">
				<segment state="initial">
					<source>You can add multiple controls if you want to display ads in more than one area of your app.</source>
					<target>You can add multiple controls if you want to display ads in more than one area of your app.</target>
				</segment>
			</unit>
			<unit id="116" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AdMediatorControl</pc> is located in the following <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Toolbox</pc> locations:</source>
					<target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AdMediatorControl</pc> is located in the following <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Toolbox</pc> locations:</target>
				</segment>
			</unit>
			<unit id="117" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>In a Universal Windows Platform (UWP) project, use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AdMediatorControl</pc> under the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">AdMediator Universal</pc> section.</source>
					<target>In a Universal Windows Platform (UWP) project, use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AdMediatorControl</pc> under the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">AdMediator Universal</pc> section.</target>
				</segment>
			</unit>
			<unit id="118" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>In a Windows 8.1 or Windows Phone 8.1 project using C# or Visual Basic with XAML, use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AdMediatorControl</pc> under the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">AdMediator</pc> section.</source>
					<target>In a Windows 8.1 or Windows Phone 8.1 project using C# or Visual Basic with XAML, use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AdMediatorControl</pc> under the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">AdMediator</pc> section.</target>
				</segment>
			</unit>
			<unit id="119" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>In a Windows Phone Silverlight project, use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AdMediatorControl</pc> under the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">All Windows Phone Controls</pc> section.</source>
					<target>In a Windows Phone Silverlight project, use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AdMediatorControl</pc> under the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">All Windows Phone Controls</pc> section.</target>
				</segment>
			</unit>
			<unit id="120" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  When you drag the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">AdMediatorControl</pc> control to the designer for the first time in a UWP, Windows 8.1, or Windows Phone 8.1 project using C# or Visual Basic with XAML, Visual Studio adds the required ad mediator assembly reference to your project, but the control isn't added to the designer yet.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  When you drag the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">AdMediatorControl</pc> control to the designer for the first time in a UWP, Windows 8.1, or Windows Phone 8.1 project using C# or Visual Basic with XAML, Visual Studio adds the required ad mediator assembly reference to your project, but the control isn't added to the designer yet.</target>
				</segment>
			</unit>
			<unit id="121" translate="yes">
				<segment state="initial">
					<source>To add the control, click OK in the message displayed by Visual Studio, wait several seconds for the designer to refresh, and then drag the control back to the designer again.</source>
					<target>To add the control, click OK in the message displayed by Visual Studio, wait several seconds for the designer to refresh, and then drag the control back to the designer again.</target>
				</segment>
			</unit>
			<unit id="122" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>If you still can't successfully add the control to the designer, make sure your project targets the applicable processor architecture for your app (for example, <pc dataRefEnd="id2" dataRefStart="id1" id="p1">x86</pc>) rather than <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Any CPU</pc>.</source>
					<target>If you still can't successfully add the control to the designer, make sure your project targets the applicable processor architecture for your app (for example, <pc dataRefEnd="id2" dataRefStart="id1" id="p1">x86</pc>) rather than <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Any CPU</pc>.</target>
				</segment>
			</unit>
			<unit id="123" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>The control cannot be added to the designer if the project targets <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Any CPU</pc> for the build platform.</source>
					<target>The control cannot be added to the designer if the project targets <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Any CPU</pc> for the build platform.</target>
				</segment>
			</unit>
			<unit id="124" translate="yes">
				<segment state="initial">
					<source>Visual Studio adds an ad mediator assembly reference to your project and inserts XAML for the ad mediator control into the current page, including a unique ID and a name for the control.</source>
					<target>Visual Studio adds an ad mediator assembly reference to your project and inserts XAML for the ad mediator control into the current page, including a unique ID and a name for the control.</target>
				</segment>
			</unit>
			<unit id="125" translate="yes">
				<segment state="initial">
					<source>The assembly reference and the XAML varies depending on your target platform.</source>
					<target>The assembly reference and the XAML varies depending on your target platform.</target>
				</segment>
			</unit>
			<unit id="126" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>For example, for a Universal Windows Platform (UWP) app the assembly name is <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Microsoft.AdMediator.Universal</pc>, and the generated XAML is similar to the following example.</source>
					<target>For example, for a Universal Windows Platform (UWP) app the assembly name is <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Microsoft.AdMediator.Universal</pc>, and the generated XAML is similar to the following example.</target>
				</segment>
			</unit>
			<unit id="127" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Name</pc> element helps you to identify the specific control in your app when you configure your ad mediation.</source>
					<target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Name</pc> element helps you to identify the specific control in your app when you configure your ad mediation.</target>
				</segment>
			</unit>
			<unit id="128" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>You can change this to whatever you’d like, but be sure not to change or duplicate the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Id</pc> element.</source>
					<target>You can change this to whatever you’d like, but be sure not to change or duplicate the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Id</pc> element.</target>
				</segment>
			</unit>
			<unit id="129" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>This <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Id</pc> must be unique for each control within your app.</source>
					<target>This <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Id</pc> must be unique for each control within your app.</target>
				</segment>
			</unit>
			<unit id="130" translate="yes">
				<segment state="initial">
					<source>Adjust the size and position of the control as necessary.</source>
					<target>Adjust the size and position of the control as necessary.</target>
				</segment>
			</unit>
			<unit id="131" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](#adjust-size-and-position)</data>
				</originalData>
				<segment state="initial">
					<source>For more information, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Adjust size and position</pc>.</source>
					<target>For more information, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Adjust size and position</pc>.</target>
				</segment>
			</unit>
			<unit id="132" translate="yes">
				<segment state="initial">
					<source>Configure ad networks</source>
					<target>Configure ad networks</target>
				</segment>
			</unit>
			<unit id="133" translate="yes">
				<segment state="initial">
					<source>After you’ve added all the controls you’d like, you’re ready to configure the ad networks through Connected Services.</source>
					<target>After you’ve added all the controls you’d like, you’re ready to configure the ad networks through Connected Services.</target>
				</segment>
			</unit>
			<unit id="134" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Important</pc>  If you add an additional AdMediatorControl later, you’ll need to configure it through Connected Services again.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Important</pc>  If you add an additional AdMediatorControl later, you’ll need to configure it through Connected Services again.</target>
				</segment>
			</unit>
			<unit id="135" translate="yes">
				<segment state="initial">
					<source>Otherwise, the new control will not be able to use ad mediation.</source>
					<target>Otherwise, the new control will not be able to use ad mediation.</target>
				</segment>
			</unit>
			<unit id="136" translate="yes">
				<segment state="initial">
					<source>To configure the ad networks:</source>
					<target>To configure the ad networks:</target>
				</segment>
			</unit>
			<unit id="137" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Right-click the name of the project in Solution Explorer, click <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Add</pc>, and then click <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Connected Service…</pc></source>
					<target>Right-click the name of the project in Solution Explorer, click <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Add</pc>, and then click <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Connected Service…</pc></target>
				</segment>
			</unit>
			<unit id="138" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>to launch the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Add Connected Service</pc> window (Visual Studio 2015) or <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Services Manager</pc> window (Visual Studio 2013).</source>
					<target>to launch the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Add Connected Service</pc> window (Visual Studio 2015) or <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Services Manager</pc> window (Visual Studio 2013).</target>
				</segment>
			</unit>
			<unit id="139" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source>If you are using Visual Studio 2015, click <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Ad Mediator</pc> and then click <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Configure</pc> to open the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Ad Mediator</pc> window.</source>
					<target>If you are using Visual Studio 2015, click <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Ad Mediator</pc> and then click <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Configure</pc> to open the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Ad Mediator</pc> window.</target>
				</segment>
			</unit>
			<unit id="140" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>If you are using Visual Studio 2013, simply click <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Ad Mediator</pc> in the left pane of the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Services Manager</pc>.</source>
					<target>If you are using Visual Studio 2013, simply click <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Ad Mediator</pc> in the left pane of the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Services Manager</pc>.</target>
				</segment>
			</unit>
			<unit id="141" translate="yes">
				<segment state="initial">
					<source>The AdMediator.config file is added to your project.</source>
					<target>The AdMediator.config file is added to your project.</target>
				</segment>
			</unit>
			<unit id="142" translate="yes">
				<segment state="initial">
					<source>This file is where initial ad network configuration settings are saved locally in your project.</source>
					<target>This file is where initial ad network configuration settings are saved locally in your project.</target>
				</segment>
			</unit>
			<unit id="143" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
					<data id="id9">**</data>
					<data id="id10">**</data>
				</originalData>
				<segment state="initial">
					<source>In the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Ad Mediator</pc> (Visual Studio 2015) or <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Services Manager</pc> (Visual Studio 2013) window, click <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Select ad networks</pc>, select the ad networks you want to use, and click <pc dataRefEnd="id8" dataRefStart="id7" id="p4">OK</pc> in the <pc dataRefEnd="id10" dataRefStart="id9" id="p5">Select ad networks</pc> window.</source>
					<target>In the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Ad Mediator</pc> (Visual Studio 2015) or <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Services Manager</pc> (Visual Studio 2013) window, click <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Select ad networks</pc>, select the ad networks you want to use, and click <pc dataRefEnd="id8" dataRefStart="id7" id="p4">OK</pc> in the <pc dataRefEnd="id10" dataRefStart="id9" id="p5">Select ad networks</pc> window.</target>
				</segment>
			</unit>
			<unit id="144" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Tip</pc>  It’s a good idea to add all the networks that you have accounts with, even if you don’t plan to use all of them in your app right away.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Tip</pc>  It’s a good idea to add all the networks that you have accounts with, even if you don’t plan to use all of them in your app right away.</target>
				</segment>
			</unit>
			<unit id="145" translate="yes">
				<segment state="initial">
					<source>After the app is published, you'll be able configure how often each network is used in Dev Center (or start to use a network you hadn't before) without having to make code changes and resubmit the app.</source>
					<target>After the app is published, you'll be able configure how often each network is used in Dev Center (or start to use a network you hadn't before) without having to make code changes and resubmit the app.</target>
				</segment>
			</unit>
			<unit id="146" translate="yes">
				<segment state="initial">
					<source>Visual Studio fetches the required assemblies for the selected ad networks and adds those assembly references to your project.</source>
					<target>Visual Studio fetches the required assemblies for the selected ad networks and adds those assembly references to your project.</target>
				</segment>
			</unit>
			<unit id="147" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>After this process is complete, click <pc dataRefEnd="id2" dataRefStart="id1" id="p1">OK</pc> in the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Fetching Status</pc> dialog box.</source>
					<target>After this process is complete, click <pc dataRefEnd="id2" dataRefStart="id1" id="p1">OK</pc> in the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Fetching Status</pc> dialog box.</target>
				</segment>
			</unit>
			<unit id="148" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source>In the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Ad Mediator</pc> (Visual Studio 2015) or <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Services Manager</pc> (Visual Studio 2013) window, optionally select each network and click <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Configure</pc> to enter the configuration information for each network to use while testing the app.</source>
					<target>In the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Ad Mediator</pc> (Visual Studio 2015) or <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Services Manager</pc> (Visual Studio 2013) window, optionally select each network and click <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Configure</pc> to enter the configuration information for each network to use while testing the app.</target>
				</segment>
			</unit>
			<unit id="149" translate="yes">
				<segment state="initial">
					<source>This information is saved to the AdMediator.config file in your project.</source>
					<target>This information is saved to the AdMediator.config file in your project.</target>
				</segment>
			</unit>
			<unit id="150" translate="yes">
				<segment state="initial">
					<source>You'll be able to modify this information when you configure ad network behavior on the Windows Dev Center dashboard.</source>
					<target>You'll be able to modify this information when you configure ad network behavior on the Windows Dev Center dashboard.</target>
				</segment>
			</unit>
			<unit id="151" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](submit-your-app-and-configure-ad-mediation.md)</data>
				</originalData>
				<segment state="initial">
					<source>For more information, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Submitting your app and configuring ad mediation</pc>.</source>
					<target>For more information, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Submitting your app and configuring ad mediation</pc>.</target>
				</segment>
			</unit>
			<unit id="152" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  If you do not enter configuration information during this step, ad mediation will automatically use test configuration values when you run your app on your development computer (for UWP and Windows 8.1 XAML apps) or on the emulator or device (for Windows Phone apps).</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  If you do not enter configuration information during this step, ad mediation will automatically use test configuration values when you run your app on your development computer (for UWP and Windows 8.1 XAML apps) or on the emulator or device (for Windows Phone apps).</target>
				</segment>
			</unit>
			<unit id="153" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source>In the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Ad Mediator</pc> (Visual Studio 2015) or <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Services Manager</pc> (Visual Studio 2013) window, confirm that each ad network you have selected shows <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Fetched</pc>.</source>
					<target>In the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Ad Mediator</pc> (Visual Studio 2015) or <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Services Manager</pc> (Visual Studio 2013) window, confirm that each ad network you have selected shows <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Fetched</pc>.</target>
				</segment>
			</unit>
			<unit id="154" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>Click <pc dataRefEnd="id2" dataRefStart="id1" id="p1">OK</pc> to submit the changes to your project.</source>
					<target>Click <pc dataRefEnd="id2" dataRefStart="id1" id="p1">OK</pc> to submit the changes to your project.</target>
				</segment>
			</unit>
			<unit id="155" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>   If you later upgrade to a newer version of the Microsoft Universal Ad Client SDK, you’ll need to launch <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Connected Services</pc> again to ensure any automatically fetched ad network DLLs are correctly updated.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>   If you later upgrade to a newer version of the Microsoft Universal Ad Client SDK, you’ll need to launch <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Connected Services</pc> again to ensure any automatically fetched ad network DLLs are correctly updated.</target>
				</segment>
			</unit>
			<unit id="156" translate="yes">
				<segment state="initial">
					<source>Declare required capabilities</source>
					<target>Declare required capabilities</target>
				</segment>
			</unit>
			<unit id="157" translate="yes">
				<segment state="initial">
					<source>Each ad network may require certain app capabilities.</source>
					<target>Each ad network may require certain app capabilities.</target>
				</segment>
			</unit>
			<unit id="158" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>These are shown by each provider in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Ad Mediator</pc> (for Visual Studio 2015) or <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Services Manager</pc> (for Visual Studio 2013) window.</source>
					<target>These are shown by each provider in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Ad Mediator</pc> (for Visual Studio 2015) or <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Services Manager</pc> (for Visual Studio 2013) window.</target>
				</segment>
			</unit>
			<unit id="159" translate="yes">
				<segment state="initial">
					<source>Be sure to declare all of the required capabilities in your app's manifest so that the ads are properly displayed.</source>
					<target>Be sure to declare all of the required capabilities in your app's manifest so that the ads are properly displayed.</target>
				</segment>
			</unit>
			<unit id="160" translate="yes">
				<segment state="initial">
					<source>The following screenshot shows the required capabilities for several ad networks in a Windows 8.1 or Windows Phone 8.1 XAML app.</source>
					<target>The following screenshot shows the required capabilities for several ad networks in a Windows 8.1 or Windows Phone 8.1 XAML app.</target>
				</segment>
			</unit>
			<unit id="161" translate="yes">
				<segment state="initial">
					<source>services manager showing all references fetched</source>
					<target>services manager showing all references fetched</target>
				</segment>
			</unit>
			<unit id="162" translate="yes">
				<segment state="initial">
					<source>The following screenshot shows the required capabilities for several ad networks in a Windows Phone 8.1 Silverlight app.</source>
					<target>The following screenshot shows the required capabilities for several ad networks in a Windows Phone 8.1 Silverlight app.</target>
				</segment>
			</unit>
			<unit id="163" translate="yes">
				<segment state="initial">
					<source>services manager showing all references fetched</source>
					<target>services manager showing all references fetched</target>
				</segment>
			</unit>
			<unit id="164" translate="yes">
				<segment state="initial">
					<source>Fetch ad network DLLs manually</source>
					<target>Fetch ad network DLLs manually</target>
				</segment>
			</unit>
			<unit id="165" translate="yes">
				<segment state="initial">
					<source>In some cases, you may see that certain DLLs were not fetched.</source>
					<target>In some cases, you may see that certain DLLs were not fetched.</target>
				</segment>
			</unit>
			<unit id="166" translate="yes">
				<segment state="initial">
					<source>In this case, you'll need to add them manually.</source>
					<target>In this case, you'll need to add them manually.</target>
				</segment>
			</unit>
			<unit id="167" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](select-and-manage-your-ad-networks.md)</data>
				</originalData>
				<segment state="initial">
					<source>For links to download individual assemblies, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Selecting and managing your ad networks</pc>.</source>
					<target>For links to download individual assemblies, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Selecting and managing your ad networks</pc>.</target>
				</segment>
			</unit>
			<unit id="168" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  When adding DLLs manually, you may get an error message saying "A reference to a higher version or incompatible assembly cannot be added to the project."</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  When adding DLLs manually, you may get an error message saying "A reference to a higher version or incompatible assembly cannot be added to the project."</target>
				</segment>
			</unit>
			<unit id="169" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>To resolve this error, right-click the DLL in Explorer and then select <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Properties</pc>.</source>
					<target>To resolve this error, right-click the DLL in Explorer and then select <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Properties</pc>.</target>
				</segment>
			</unit>
			<unit id="170" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>In the Security section, click <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Unblock</pc>.</source>
					<target>In the Security section, click <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Unblock</pc>.</target>
				</segment>
			</unit>
			<unit id="171" translate="yes">
				<segment state="initial">
					<source>unblock button for resolving error message</source>
					<target>unblock button for resolving error message</target>
				</segment>
			</unit>
			<unit id="172" translate="yes">
				<segment state="initial">
					<source>Adjust size and position</source>
					<target>Adjust size and position</target>
				</segment>
			</unit>
			<unit id="173" translate="yes">
				<segment state="initial">
					<source>You can configure the size and position of the ad mediator control in the designer or in your XAML code.</source>
					<target>You can configure the size and position of the ad mediator control in the designer or in your XAML code.</target>
				</segment>
			</unit>
			<unit id="174" translate="yes">
				<segment state="initial">
					<source>Make sure that this size will be large enough to fit all the ads you'll be displaying from your ad networks.</source>
					<target>Make sure that this size will be large enough to fit all the ads you'll be displaying from your ad networks.</target>
				</segment>
			</unit>
			<unit id="175" translate="yes">
				<segment state="initial">
					<source>Some ad networks may not serve an ad if they detect that the canvas size isn't large enough for the ad to display in full.</source>
					<target>Some ad networks may not serve an ad if they detect that the canvas size isn't large enough for the ad to display in full.</target>
				</segment>
			</unit>
			<unit id="176" translate="yes">
				<segment state="initial">
					<source>If any of your ad units will be larger than the default size, you can adjust the canvas size to accommodate your largest ad.</source>
					<target>If any of your ad units will be larger than the default size, you can adjust the canvas size to accommodate your largest ad.</target>
				</segment>
			</unit>
			<unit id="177" translate="yes">
				<segment state="initial">
					<source>When you drag the control to the designer, the default control sizes are:</source>
					<target>When you drag the control to the designer, the default control sizes are:</target>
				</segment>
			</unit>
			<unit id="178" translate="yes">
				<segment state="initial">
					<source>UWP and Windows 8.1 XAML: 300 width x 250 height.</source>
					<target>UWP and Windows 8.1 XAML: 300 width x 250 height.</target>
				</segment>
			</unit>
			<unit id="179" translate="yes">
				<segment state="initial">
					<source>Windows Phone 8.1 XAML: 400 width x 67 height.</source>
					<target>Windows Phone 8.1 XAML: 400 width x 67 height.</target>
				</segment>
			</unit>
			<unit id="180" translate="yes">
				<segment state="initial">
					<source>Windows Phone 8 and Windows Phone 8.1 Silverlight: 480 width x 80 height.</source>
					<target>Windows Phone 8 and Windows Phone 8.1 Silverlight: 480 width x 80 height.</target>
				</segment>
			</unit>
			<unit id="181" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>You can override the default ad sizes using the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Width</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Height</pc> optional parameters, as shown below.</source>
					<target>You can override the default ad sizes using the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Width</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Height</pc> optional parameters, as shown below.</target>
				</segment>
			</unit>
			<unit id="182" translate="yes">
				<segment state="initial">
					<source>You can also specify how each control is positioned to accommodate a variety of sizes and placements depending on your app's needs.</source>
					<target>You can also specify how each control is positioned to accommodate a variety of sizes and placements depending on your app's needs.</target>
				</segment>
			</unit>
			<unit id="183" translate="yes">
				<segment state="initial">
					<source>For some ad networks, you can use optional parameters to make adjustments.</source>
					<target>For some ad networks, you can use optional parameters to make adjustments.</target>
				</segment>
			</unit>
			<unit id="184" translate="yes">
				<segment state="initial">
					<source>For example, to align ads from Microsoft Advertising to the bottom left:</source>
					<target>For example, to align ads from Microsoft Advertising to the bottom left:</target>
				</segment>
			</unit>
			<unit id="185" translate="yes">
				<segment state="initial">
					<source>Supported ad sizes for Microsoft Advertising</source>
					<target>Supported ad sizes for Microsoft Advertising</target>
				</segment>
			</unit>
			<unit id="186" translate="yes">
				<segment state="initial">
					<source>Microsoft Advertising only supports ads in the following standard sizes recommended by the Interactive Advertising Bureau (IAB) for apps running on the following platforms.</source>
					<target>Microsoft Advertising only supports ads in the following standard sizes recommended by the Interactive Advertising Bureau (IAB) for apps running on the following platforms.</target>
				</segment>
			</unit>
			<unit id="187" translate="yes">
				<segment state="initial">
					<source>Windows 10 and Windows 8.1:</source>
					<target>Windows 10 and Windows 8.1:</target>
				</segment>
			</unit>
			<unit id="188" translate="yes">
				<segment state="initial">
					<source>160 x 600</source>
					<target>160 x 600</target>
				</segment>
			</unit>
			<unit id="189" translate="yes">
				<segment state="initial">
					<source>250 x 250 (Note that very few ads are available in this size.</source>
					<target>250 x 250 (Note that very few ads are available in this size.</target>
				</segment>
			</unit>
			<unit id="190" translate="yes">
				<segment state="initial">
					<source>We recommend using other sizes to maximize the fill rate and eCPM.)</source>
					<target>We recommend using other sizes to maximize the fill rate and eCPM.)</target>
				</segment>
			</unit>
			<unit id="191" translate="yes">
				<segment state="initial">
					<source>300 x 250</source>
					<target>300 x 250</target>
				</segment>
			</unit>
			<unit id="192" translate="yes">
				<segment state="initial">
					<source>300 x 600</source>
					<target>300 x 600</target>
				</segment>
			</unit>
			<unit id="193" translate="yes">
				<segment state="initial">
					<source>728 x 90</source>
					<target>728 x 90</target>
				</segment>
			</unit>
			<unit id="194" translate="yes">
				<segment state="initial">
					<source>Windows 10 Mobile, Windows Phone 8.1 and Windows Phone 8:</source>
					<target>Windows 10 Mobile, Windows Phone 8.1 and Windows Phone 8:</target>
				</segment>
			</unit>
			<unit id="195" translate="yes">
				<segment state="initial">
					<source>300 x 50</source>
					<target>300 x 50</target>
				</segment>
			</unit>
			<unit id="196" translate="yes">
				<segment state="initial">
					<source>320 x 50</source>
					<target>320 x 50</target>
				</segment>
			</unit>
			<unit id="197" translate="yes">
				<segment state="initial">
					<source>480 x 80</source>
					<target>480 x 80</target>
				</segment>
			</unit>
			<unit id="198" translate="yes">
				<segment state="initial">
					<source>640 x 100</source>
					<target>640 x 100</target>
				</segment>
			</unit>
			<unit id="199" translate="yes">
				<segment state="initial">
					<source>You might want to specify an ad mediator control size that doesn't match one of the ad sizes supported by Microsoft Advertising (for example, you might want to do this if a different size is a better fit for your app's UI, or if you are also targeting other ad networks that support other ad sizes).</source>
					<target>You might want to specify an ad mediator control size that doesn't match one of the ad sizes supported by Microsoft Advertising (for example, you might want to do this if a different size is a better fit for your app's UI, or if you are also targeting other ad networks that support other ad sizes).</target>
				</segment>
			</unit>
			<unit id="200" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>To do this, specify the exact control size you want in the designer or in your XAML code, and then assign the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Width</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Height</pc> optional parameters for Microsoft Advertising to the closest supported size that will fit within the bounds of the control.</source>
					<target>To do this, specify the exact control size you want in the designer or in your XAML code, and then assign the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Width</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Height</pc> optional parameters for Microsoft Advertising to the closest supported size that will fit within the bounds of the control.</target>
				</segment>
			</unit>
			<unit id="201" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>The control will display to the exact size you specify in the designer, but Microsoft Advertising will serve ads that match the size you specify using the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Width</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Height</pc> optional parameters.</source>
					<target>The control will display to the exact size you specify in the designer, but Microsoft Advertising will serve ads that match the size you specify using the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Width</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Height</pc> optional parameters.</target>
				</segment>
			</unit>
			<unit id="202" translate="yes">
				<segment state="initial">
					<source>For example, if you have a UWP app and you want your ad mediator control to display at 300 x 300, set the control to 300 x 300 in the designer or in your XAML code.</source>
					<target>For example, if you have a UWP app and you want your ad mediator control to display at 300 x 300, set the control to 300 x 300 in the designer or in your XAML code.</target>
				</segment>
			</unit>
			<unit id="203" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Then, assign the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Width</pc> optional parameter to 300 and the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Height</pc> optional parameter to 250 for Microsoft Advertising, as shown in the following code.</source>
					<target>Then, assign the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Width</pc> optional parameter to 300 and the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Height</pc> optional parameter to 250 for Microsoft Advertising, as shown in the following code.</target>
				</segment>
			</unit>
			<unit id="204" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](test-your-ad-mediation-implementation.md)</data>
				</originalData>
				<segment state="initial">
					<source>To verify that your size settings are compatible with Microsoft Advertising, <pc dataRefEnd="id2" dataRefStart="id1" id="p1">test your ad mediation implementation</pc> and make sure that test ads from Microsoft Advertising are displayed.</source>
					<target>To verify that your size settings are compatible with Microsoft Advertising, <pc dataRefEnd="id2" dataRefStart="id1" id="p1">test your ad mediation implementation</pc> and make sure that test ads from Microsoft Advertising are displayed.</target>
				</segment>
			</unit>
			<unit id="205" translate="yes">
				<segment state="initial">
					<source>Pause, resume, and disable ad mediation</source>
					<target>Pause, resume, and disable ad mediation</target>
				</segment>
			</unit>
			<unit id="206" translate="yes">
				<segment state="initial">
					<source>If you’d like to pause ad mediation for any given amount of time during the app runtime, use the AdMediatorControl.Pause() method.</source>
					<target>If you’d like to pause ad mediation for any given amount of time during the app runtime, use the AdMediatorControl.Pause() method.</target>
				</segment>
			</unit>
			<unit id="207" translate="yes">
				<segment state="initial">
					<source>Note that when you do this, the most recent ad will continue showing until you resume mediation by calling the AdMediatorControl.Resume() method.</source>
					<target>Note that when you do this, the most recent ad will continue showing until you resume mediation by calling the AdMediatorControl.Resume() method.</target>
				</segment>
			</unit>
			<unit id="208" translate="yes">
				<segment state="initial">
					<source>To disable the ad mediator completely, use the AdMediatorControl.Disable() method.</source>
					<target>To disable the ad mediator completely, use the AdMediatorControl.Disable() method.</target>
				</segment>
			</unit>
			<unit id="209" translate="yes">
				<segment state="initial">
					<source>This will remove any ads that are showing, and it will minimize the memory footprint of the mediator.</source>
					<target>This will remove any ads that are showing, and it will minimize the memory footprint of the mediator.</target>
				</segment>
			</unit>
			<unit id="210" translate="yes">
				<segment state="initial">
					<source>You can call AdMediatorControl.Resume() to resume mediation, but note that startup time will be slower than usual after ad mediation has been disabled.</source>
					<target>You can call AdMediatorControl.Resume() to resume mediation, but note that startup time will be slower than usual after ad mediation has been disabled.</target>
				</segment>
			</unit>
			<unit id="211" translate="yes">
				<segment state="initial">
					<source>Set timeouts</source>
					<target>Set timeouts</target>
				</segment>
			</unit>
			<unit id="212" translate="yes">
				<segment state="initial">
					<source>You can specify the number of seconds (from 2-60) for which ad mediation should wait after requesting an ad from that ad network before abandoning that request and making a request to another network instead.</source>
					<target>You can specify the number of seconds (from 2-60) for which ad mediation should wait after requesting an ad from that ad network before abandoning that request and making a request to another network instead.</target>
				</segment>
			</unit>
			<unit id="213" translate="yes">
				<segment state="initial">
					<source>By default, the timeout for all ad networks is 15 seconds.</source>
					<target>By default, the timeout for all ad networks is 15 seconds.</target>
				</segment>
			</unit>
			<unit id="214" translate="yes">
				<segment state="initial">
					<source>The code below shows how to specify a timeout duration for Microsoft Advertising.</source>
					<target>The code below shows how to specify a timeout duration for Microsoft Advertising.</target>
				</segment>
			</unit>
			<unit id="215" translate="yes">
				<segment state="initial">
					<source>You can modify the durations and networks as needed.</source>
					<target>You can modify the durations and networks as needed.</target>
				</segment>
			</unit>
			<unit id="216" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  You can alternatively set the timeout value in the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Monetize with ads</pc> page on the Dev Center dashboard.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  You can alternatively set the timeout value in the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Monetize with ads</pc> page on the Dev Center dashboard.</target>
				</segment>
			</unit>
			<unit id="217" translate="yes">
				<segment state="initial">
					<source>If you set the timeout in code and in the dashboard, that value you set in code overrides the dashboard value.</source>
					<target>If you set the timeout in code and in the dashboard, that value you set in code overrides the dashboard value.</target>
				</segment>
			</unit>
			<unit id="218" translate="yes">
				<segment state="initial">
					<source>Event handling</source>
					<target>Event handling</target>
				</segment>
			</unit>
			<unit id="219" translate="yes">
				<segment state="initial">
					<source>Adding code to log events and capture ad mediation errors can help with troubleshooting.</source>
					<target>Adding code to log events and capture ad mediation errors can help with troubleshooting.</target>
				</segment>
			</unit>
			<unit id="220" translate="yes">
				<segment state="initial">
					<source>The code sample below adds event handlers for specific events from a control.</source>
					<target>The code sample below adds event handlers for specific events from a control.</target>
				</segment>
			</unit>
			<unit id="221" translate="yes">
				<segment state="initial">
					<source>Handle unhandled exceptions from ad networks</source>
					<target>Handle unhandled exceptions from ad networks</target>
				</segment>
			</unit>
			<unit id="222" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  As part of our testing, we've identified a number of unhandled exceptions from specific ad networks that must be handled within the app to avoid app crashes related to these exceptions.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  As part of our testing, we've identified a number of unhandled exceptions from specific ad networks that must be handled within the app to avoid app crashes related to these exceptions.</target>
				</segment>
			</unit>
			<unit id="223" translate="yes">
				<segment state="initial">
					<source>We highly recommend that you copy and paste the code sample below to your App.xaml.cs file.</source>
					<target>We highly recommend that you copy and paste the code sample below to your App.xaml.cs file.</target>
				</segment>
			</unit>
			<unit id="224" translate="yes">
				<segment state="initial">
					<source>Code to use for a UWP, Windows 8.1 or a Windows Phone app using C# and XAML</source>
					<target>Code to use for a UWP, Windows 8.1 or a Windows Phone app using C# and XAML</target>
				</segment>
			</unit>
			<unit id="225" translate="yes">
				<segment state="initial">
					<source>Code to use for a Windows Phone Silverlight app</source>
					<target>Code to use for a Windows Phone Silverlight app</target>
				</segment>
			</unit>
			<unit id="226" translate="yes">
				<segment state="initial">
					<source>Related topics</source>
					<target>Related topics</target>
				</segment>
			</unit>
			<unit id="227" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](select-and-manage-your-ad-networks.md)</data>
					<data id="id3">
</data>
					<data id="id4">[</data>
					<data id="id5">](test-your-ad-mediation-implementation.md)</data>
					<data id="id6">
</data>
					<data id="id7">[</data>
					<data id="id8">](submit-your-app-and-configure-ad-mediation.md)</data>
					<data id="id9">
</data>
					<data id="id10">[</data>
					<data id="id11">](troubleshoot-ad-mediation.md)</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Select and manage your ad networks</pc><ph dataRef="id3" id="ph1" /><pc dataRefEnd="id5" dataRefStart="id4" id="p2">Test your ad mediation implementation</pc><ph dataRef="id6" id="ph2" /><pc dataRefEnd="id8" dataRefStart="id7" id="p3">Submit your app and configure ad mediation</pc><ph dataRef="id9" id="ph3" /><pc dataRefEnd="id11" dataRefStart="id10" id="p4">Troubleshoot ad mediation</pc></source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Select and manage your ad networks</pc><ph dataRef="id3" id="ph1" /><pc dataRefEnd="id5" dataRefStart="id4" id="p2">Test your ad mediation implementation</pc><ph dataRef="id6" id="ph2" /><pc dataRefEnd="id8" dataRefStart="id7" id="p3">Submit your app and configure ad mediation</pc><ph dataRef="id9" id="ph3" /><pc dataRefEnd="id11" dataRefStart="id10" id="p4">Troubleshoot ad mediation</pc></target>
				</segment>
			</unit>
		</group>
	</file>
</xliff>