<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="ja-jp" version="2.0" xml:space="preserve" xmlns="urn:oasis:names:tc:xliff:document:2.0">
	<file id="1">
		<mda:metadata>
			<mda:metaGroup>
				<mda:meta type="tool-id">mdxliff</mda:meta>
				<mda:meta type="tool-name">mdxliff</mda:meta>
				<mda:meta type="tool-version">1.0-2eb3c86</mda:meta>
				<mda:meta type="tool-company">Microsoft</mda:meta>
			</mda:metaGroup>
		<mda:metaGroup><mda:meta type="olfilehash">910f50e73a8efdea0431ea565dfdc7374a019a68</mda:meta><mda:meta type="olfilepath">wdg-cpub-test\v-paulj\Windows-driver-docs_develop\driver_verifier_properties_for__driver_projects.md</mda:meta><mda:meta type="oltranslationpriority"></mda:meta><mda:meta type="oltranslationtype">Human Translation</mda:meta><mda:meta type="olskeletonhash">32ff9f1ec04d824a7eac0a54958a5eac42c889fd</mda:meta><mda:meta type="olxliffhash">db166a68ec345b5c3821bb0a91c6d7e3d751af8a</mda:meta></mda:metaGroup></mda:metadata>
		<group id="content">
			<unit id="101" translate="yes">
				<segment state="initial">
					<source>Driver Verifier Properties for Driver Package Projects</source>
					<target>Driver Verifier Properties for Driver Package Projects</target>
				</segment>
			</unit>
			<unit id="102" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/en-us/Library/Windows/Hardware/Ff545448)</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Driver Verifier</pc> is a run-time verification tool that increases the effectiveness of your driver testing.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Driver Verifier</pc> is a run-time verification tool that increases the effectiveness of your driver testing.</target>
				</segment>
			</unit>
			<unit id="103" translate="yes">
				<segment state="initial">
					<source>You can enable and configure Driver Verifier to run on all test computers when you deploy your driver for testing.</source>
					<target>You can enable and configure Driver Verifier to run on all test computers when you deploy your driver for testing.</target>
				</segment>
			</unit>
			<unit id="104" translate="yes">
				<segment state="initial">
					<source>You should always set up a kernel mode debugging connection with the test computer when you enable Driver Verifier on the remote test computer.</source>
					<target>You should always set up a kernel mode debugging connection with the test computer when you enable Driver Verifier on the remote test computer.</target>
				</segment>
			</unit>
			<unit id="105" translate="yes">
				<segment state="initial">
					<source>For information about configuring a target computer and setting up a debug cable, see [Setting Up Kernel-Mode Debugging in Visual Studio](https://msdn.microsoft.com/en-us/windows/hardware/hh439376.</source>
					<target>For information about configuring a target computer and setting up a debug cable, see [Setting Up Kernel-Mode Debugging in Visual Studio](https://msdn.microsoft.com/en-us/windows/hardware/hh439376.</target>
				</segment>
			</unit>
			<unit id="106" translate="yes">
				<segment state="initial">
					<source>Setting Driver Verifier properties for driver package projects</source>
					<target>Setting Driver Verifier properties for driver package projects</target>
				</segment>
			</unit>
			<unit id="107" translate="yes">
				<segment state="initial">
					<source>Open the property pages for your driver package.</source>
					<target>Open the property pages for your driver package.</target>
				</segment>
			</unit>
			<unit id="108" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>Right-click the driver package project in Solution Explorer and select <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Properties</pc>.</source>
					<target>Right-click the driver package project in Solution Explorer and select <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Properties</pc>.</target>
				</segment>
			</unit>
			<unit id="109" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source>In the property pages for the driver package, click <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Configuration Properties</pc>, click <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Driver Install</pc>, and then click <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Driver Verification</pc>.</source>
					<target>In the property pages for the driver package, click <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Configuration Properties</pc>, click <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Driver Install</pc>, and then click <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Driver Verification</pc>.</target>
				</segment>
			</unit>
			<unit id="110" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>Select the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Enable Driver Verification</pc> option.</source>
					<target>Select the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Enable Driver Verification</pc> option.</target>
				</segment>
			</unit>
			<unit id="111" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/en-us/Library/Windows/Hardware/Ff545448)</data>
				</originalData>
				<segment state="initial">
					<source>When this option is selected, you can select the driver or drivers to verify on the test computer and you can select the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Driver Verifier</pc> options to use.</source>
					<target>When this option is selected, you can select the driver or drivers to verify on the test computer and you can select the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Driver Verifier</pc> options to use.</target>
				</segment>
			</unit>
			<unit id="112" translate="yes">
				<segment state="initial">
					<source>Project Configuration and Platform</source>
					<target>Project Configuration and Platform</target>
				</segment>
			</unit>
			<unit id="113" translate="yes">
				<segment state="initial">
					<source>The configuration list and platform list let you apply different deployment settings for different project configuration and platform combinations.</source>
					<target>The configuration list and platform list let you apply different deployment settings for different project configuration and platform combinations.</target>
				</segment>
			</unit>
			<unit id="114" translate="yes">
				<segment state="initial">
					<source>For example, you can deploy a driver to one test computer using a set of deployment options for debug builds and to a different test computer using deployment options for release builds.</source>
					<target>For example, you can deploy a driver to one test computer using a set of deployment options for debug builds and to a different test computer using deployment options for release builds.</target>
				</segment>
			</unit>
			<unit id="115" translate="yes">
				<segment state="initial">
					<source>Enable Driver Verifier</source>
					<target>Enable Driver Verifier</target>
				</segment>
			</unit>
			<unit id="116" translate="yes">
				<segment state="initial">
					<source>You can enable Driver Verifier on the test computer for all drivers on the computer, for the driver project only, or for a list of specified drivers.</source>
					<target>You can enable Driver Verifier on the test computer for all drivers on the computer, for the driver project only, or for a list of specified drivers.</target>
				</segment>
			</unit>
			<unit id="117" translate="yes">
				<segment state="initial">
					<source>For example, you might want to enable Driver Verifier for the set of drivers on the stack for a particular device.</source>
					<target>For example, you might want to enable Driver Verifier for the set of drivers on the stack for a particular device.</target>
				</segment>
			</unit>
			<unit id="118" translate="yes">
				<segment state="initial">
					<source>Verify Drivers</source>
					<target>Verify Drivers</target>
				</segment>
			</unit>
			<unit id="119" translate="yes">
				<segment state="initial">
					<source>Specifies which driver or drivers to verify on the test computer.</source>
					<target>Specifies which driver or drivers to verify on the test computer.</target>
				</segment>
			</unit>
			<unit id="120" translate="yes">
				<segment state="initial">
					<source>All Drivers</source>
					<target>All Drivers</target>
				</segment>
			</unit>
			<unit id="121" translate="yes">
				<segment state="initial">
					<source>Specifies that Driver Verifier verifies all installed drivers on the remote test computer.</source>
					<target>Specifies that Driver Verifier verifies all installed drivers on the remote test computer.</target>
				</segment>
			</unit>
			<unit id="122" translate="yes">
				<segment state="initial">
					<source>Project Output</source>
					<target>Project Output</target>
				</segment>
			</unit>
			<unit id="123" translate="yes">
				<segment state="initial">
					<source>Specifies that Driver Verifier verifies the driver project installed on the remote test computer.</source>
					<target>Specifies that Driver Verifier verifies the driver project installed on the remote test computer.</target>
				</segment>
			</unit>
			<unit id="124" translate="yes">
				<segment state="initial">
					<source>This is the default option.</source>
					<target>This is the default option.</target>
				</segment>
			</unit>
			<unit id="125" translate="yes">
				<segment state="initial">
					<source>Driver List</source>
					<target>Driver List</target>
				</segment>
			</unit>
			<unit id="126" translate="yes">
				<segment state="initial">
					<source>Specifies the driver or list of drivers that Driver Verifier verifies on the remote test computer.</source>
					<target>Specifies the driver or list of drivers that Driver Verifier verifies on the remote test computer.</target>
				</segment>
			</unit>
			<unit id="127" translate="yes">
				<segment state="initial">
					<source>For example, you could list all of the drivers associated with a particular device.</source>
					<target>For example, you could list all of the drivers associated with a particular device.</target>
				</segment>
			</unit>
			<unit id="128" translate="yes">
				<segment state="initial">
					<source>Specify the drivers by binary name, for example, Driver.sys.</source>
					<target>Specify the drivers by binary name, for example, Driver.sys.</target>
				</segment>
			</unit>
			<unit id="129" translate="yes">
				<segment state="initial">
					<source>Use a semicolon to separate a list of drivers.</source>
					<target>Use a semicolon to separate a list of drivers.</target>
				</segment>
			</unit>
			<unit id="130" translate="yes">
				<originalData>
					<data id="id1">*</data>
					<data id="id2">*</data>
				</originalData>
				<segment state="initial">
					<source>Wildcard values, such as <pc dataRefEnd="id2" dataRefStart="id1" id="p1">n\*.sys</pc>, are not supported.</source>
					<target>Wildcard values, such as <pc dataRefEnd="id2" dataRefStart="id1" id="p1">n\*.sys</pc>, are not supported.</target>
				</segment>
			</unit>
			<unit id="131" translate="yes">
				<segment state="initial">
					<source>Driver Verifier Standard Flags</source>
					<target>Driver Verifier Standard Flags</target>
				</segment>
			</unit>
			<unit id="132" translate="yes">
				<segment state="initial">
					<source>You can configure the following Driver Verifier options on the test computer.</source>
					<target>You can configure the following Driver Verifier options on the test computer.</target>
				</segment>
			</unit>
			<unit id="133" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/en-us/Library/Windows/Hardware/Hh454208)</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">DDI compliance checking</pc> (Windows 8)</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">DDI compliance checking</pc> (Windows 8)</target>
				</segment>
			</unit>
			<unit id="134" translate="yes">
				<segment state="initial">
					<source>When this option is active, Driver Verifier applies a set of device driver interface (DDI) rules that check for the proper interaction between a driver and the kernel interface of the operating system.</source>
					<target>When this option is active, Driver Verifier applies a set of device driver interface (DDI) rules that check for the proper interaction between a driver and the kernel interface of the operating system.</target>
				</segment>
			</unit>
			<unit id="135" translate="yes">
				<segment state="initial">
					<source>Deadlock detection</source>
					<target>Deadlock detection</target>
				</segment>
			</unit>
			<unit id="136" translate="yes">
				<segment state="initial">
					<source>When this option is active, Driver Verifier monitors the driver's use of spin locks, mutexes, and fast mutexes.</source>
					<target>When this option is active, Driver Verifier monitors the driver's use of spin locks, mutexes, and fast mutexes.</target>
				</segment>
			</unit>
			<unit id="137" translate="yes">
				<segment state="initial">
					<source>This detects whether the driver's code has the potential for causing a deadlock at some point.</source>
					<target>This detects whether the driver's code has the potential for causing a deadlock at some point.</target>
				</segment>
			</unit>
			<unit id="138" translate="yes">
				<segment state="initial">
					<source>DMA verification</source>
					<target>DMA verification</target>
				</segment>
			</unit>
			<unit id="139" translate="yes">
				<segment state="initial">
					<source>When this option is active, Driver Verifier monitors the driver's use of direct memory access (DMA) routines.</source>
					<target>When this option is active, Driver Verifier monitors the driver's use of direct memory access (DMA) routines.</target>
				</segment>
			</unit>
			<unit id="140" translate="yes">
				<segment state="initial">
					<source>This detects improper use of DMA buffers, adapters, and map registers.</source>
					<target>This detects improper use of DMA buffers, adapters, and map registers.</target>
				</segment>
			</unit>
			<unit id="141" translate="yes">
				<segment state="initial">
					<source>Force IRQL checking</source>
					<target>Force IRQL checking</target>
				</segment>
			</unit>
			<unit id="142" translate="yes">
				<segment state="initial">
					<source>When this option is active, Driver Verifier places extreme memory pressure on the driver by invalidating pageable code.</source>
					<target>When this option is active, Driver Verifier places extreme memory pressure on the driver by invalidating pageable code.</target>
				</segment>
			</unit>
			<unit id="143" translate="yes">
				<segment state="initial">
					<source>If the driver attempts to access paged memory at the wrong IRQL or while holding a spin lock, Driver Verifier detects this behavior.</source>
					<target>If the driver attempts to access paged memory at the wrong IRQL or while holding a spin lock, Driver Verifier detects this behavior.</target>
				</segment>
			</unit>
			<unit id="144" translate="yes">
				<segment state="initial">
					<source>I/O verification</source>
					<target>I/O verification</target>
				</segment>
			</unit>
			<unit id="145" translate="yes">
				<segment state="initial">
					<source>When this option is active, Driver Verifier allocates the driver's Interrupt Request Packets (IRPs) from a special pool, and monitors the driver's I/O handling.</source>
					<target>When this option is active, Driver Verifier allocates the driver's Interrupt Request Packets (IRPs) from a special pool, and monitors the driver's I/O handling.</target>
				</segment>
			</unit>
			<unit id="146" translate="yes">
				<segment state="initial">
					<source>This detects illegal or inconsistent use of I/O routines.</source>
					<target>This detects illegal or inconsistent use of I/O routines.</target>
				</segment>
			</unit>
			<unit id="147" translate="yes">
				<segment state="initial">
					<source>Driver Verifier also monitors the calls of several I/O Manager routines and performs stress testing of Plug-and-Play (PnP) IRPs, power IRPs and WMI IRPs.</source>
					<target>Driver Verifier also monitors the calls of several I/O Manager routines and performs stress testing of Plug-and-Play (PnP) IRPs, power IRPs and WMI IRPs.</target>
				</segment>
			</unit>
			<unit id="148" translate="yes">
				<segment state="initial">
					<source>Miscellaneous checks</source>
					<target>Miscellaneous checks</target>
				</segment>
			</unit>
			<unit id="149" translate="yes">
				<segment state="initial">
					<source>When this option is active, Driver Verifier looks for common causes of driver crashes, such as the mishandling of freed memory.</source>
					<target>When this option is active, Driver Verifier looks for common causes of driver crashes, such as the mishandling of freed memory.</target>
				</segment>
			</unit>
			<unit id="150" translate="yes">
				<segment state="initial">
					<source>Pool tracking</source>
					<target>Pool tracking</target>
				</segment>
			</unit>
			<unit id="151" translate="yes">
				<segment state="initial">
					<source>When this option is active, Driver Verifier checks to see whether the driver has freed all of its memory allocations when it is unloaded.</source>
					<target>When this option is active, Driver Verifier checks to see whether the driver has freed all of its memory allocations when it is unloaded.</target>
				</segment>
			</unit>
			<unit id="152" translate="yes">
				<segment state="initial">
					<source>This reveals memory leaks.</source>
					<target>This reveals memory leaks.</target>
				</segment>
			</unit>
			<unit id="153" translate="yes">
				<segment state="initial">
					<source>Security checks</source>
					<target>Security checks</target>
				</segment>
			</unit>
			<unit id="154" translate="yes">
				<segment state="initial">
					<source>When this option is active, Driver Verifier looks for common errors that can result in security vulnerabilities, such as a reference to user-mode addresses by kernel-mode routines.</source>
					<target>When this option is active, Driver Verifier looks for common errors that can result in security vulnerabilities, such as a reference to user-mode addresses by kernel-mode routines.</target>
				</segment>
			</unit>
			<unit id="155" translate="yes">
				<segment state="initial">
					<source>Special pool checking</source>
					<target>Special pool checking</target>
				</segment>
			</unit>
			<unit id="156" translate="yes">
				<segment state="initial">
					<source>When this option is active, Driver Verifier allocates most of the driver's memory requests from a special pool.</source>
					<target>When this option is active, Driver Verifier allocates most of the driver's memory requests from a special pool.</target>
				</segment>
			</unit>
			<unit id="157" translate="yes">
				<segment state="initial">
					<source>This special pool is monitored for memory overruns, memory underruns, and memory that is accessed after it is freed.</source>
					<target>This special pool is monitored for memory overruns, memory underruns, and memory that is accessed after it is freed.</target>
				</segment>
			</unit>
			<unit id="158" translate="yes">
				<segment state="initial">
					<source>Driver Verifier Scenario Specific Settings</source>
					<target>Driver Verifier Scenario Specific Settings</target>
				</segment>
			</unit>
			<unit id="159" translate="yes">
				<segment state="initial">
					<source>Low resources simulation</source>
					<target>Low resources simulation</target>
				</segment>
			</unit>
			<unit id="160" translate="yes">
				<segment state="initial">
					<source>When this option is active, Driver Verifier randomly fails pool allocation requests and other resource requests.</source>
					<target>When this option is active, Driver Verifier randomly fails pool allocation requests and other resource requests.</target>
				</segment>
			</unit>
			<unit id="161" translate="yes">
				<segment state="initial">
					<source>By injecting these allocation faults into the system, Driver Verifier tests the driver's ability to cope with a low-resource situation.</source>
					<target>By injecting these allocation faults into the system, Driver Verifier tests the driver's ability to cope with a low-resource situation.</target>
				</segment>
			</unit>
			<unit id="162" translate="yes">
				<segment state="initial">
					<source>Force pending I/O requests</source>
					<target>Force pending I/O requests</target>
				</segment>
			</unit>
			<unit id="163" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/en-us/Library/Windows/Hardware/Ff548336)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>When this option is active, Driver Verifier tests the driver's response to STATUS\_PENDING return values by returning STATUS\_PENDING for random calls to <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">IoCallDriver</pc></pc>.</source>
					<target>When this option is active, Driver Verifier tests the driver's response to STATUS\_PENDING return values by returning STATUS\_PENDING for random calls to <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">IoCallDriver</pc></pc>.</target>
				</segment>
			</unit>
			<unit id="164" translate="yes">
				<segment state="initial">
					<source>IRP logging</source>
					<target>IRP logging</target>
				</segment>
			</unit>
			<unit id="165" translate="yes">
				<segment state="initial">
					<source>When this option is active, Driver Verifier monitors a driver's use of IRPs and creates a log of IRP use.</source>
					<target>When this option is active, Driver Verifier monitors a driver's use of IRPs and creates a log of IRP use.</target>
				</segment>
			</unit>
			<unit id="166" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/en-us/Library/Windows/Hardware/Hh974663)</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Invariant MDL Checking for Stack</pc> (Windows 8)</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Invariant MDL Checking for Stack</pc> (Windows 8)</target>
				</segment>
			</unit>
			<unit id="167" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/en-us/Library/Windows/Hardware/Hh974663)</data>
				</originalData>
				<segment state="initial">
					<source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Invariant MDL Checking for Stack</pc> option monitors how the driver handles invariant MDL buffers across the driver stack.</source>
					<target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Invariant MDL Checking for Stack</pc> option monitors how the driver handles invariant MDL buffers across the driver stack.</target>
				</segment>
			</unit>
			<unit id="168" translate="yes">
				<segment state="initial">
					<source>Driver Verifier can detect illegal modification of invariant MDL buffers.</source>
					<target>Driver Verifier can detect illegal modification of invariant MDL buffers.</target>
				</segment>
			</unit>
			<unit id="169" translate="yes">
				<segment state="initial">
					<source>To use this option, I/O Verification must be enabled on at least one driver.</source>
					<target>To use this option, I/O Verification must be enabled on at least one driver.</target>
				</segment>
			</unit>
			<unit id="170" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/en-us/Library/Windows/Hardware/Hh974662)</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Invariant MDL Checking for Driver</pc> (Windows 8)</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Invariant MDL Checking for Driver</pc> (Windows 8)</target>
				</segment>
			</unit>
			<unit id="171" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/en-us/Library/Windows/Hardware/Hh974662)</data>
				</originalData>
				<segment state="initial">
					<source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Invariant MDL Checking for Driver</pc> option monitors how the driver handles invariant MDL buffers on a per-driver basis.</source>
					<target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Invariant MDL Checking for Driver</pc> option monitors how the driver handles invariant MDL buffers on a per-driver basis.</target>
				</segment>
			</unit>
			<unit id="172" translate="yes">
				<segment state="initial">
					<source>This option detects illegal modification of invariant MDL buffers.</source>
					<target>This option detects illegal modification of invariant MDL buffers.</target>
				</segment>
			</unit>
			<unit id="173" translate="yes">
				<segment state="initial">
					<source>To use this option, you must enable I/O Verification on at least one driver.</source>
					<target>To use this option, you must enable I/O Verification on at least one driver.</target>
				</segment>
			</unit>
			<unit id="174" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/en-us/Library/Windows/Hardware/Hh454184)</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Power Framework Delay Fuzzing</pc> (Windows 8)</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Power Framework Delay Fuzzing</pc> (Windows 8)</target>
				</segment>
			</unit>
			<unit id="175" translate="yes">
				<segment state="initial">
					<source>When this option is active, Driver Verifier randomizes thread schedules to help flush out concurrency errors in the driver.</source>
					<target>When this option is active, Driver Verifier randomizes thread schedules to help flush out concurrency errors in the driver.</target>
				</segment>
			</unit>
			<unit id="176" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/en-us/Library/Windows/Hardware/Hh974664)</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Stack Based Failure Injection</pc> (Windows 8)</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Stack Based Failure Injection</pc> (Windows 8)</target>
				</segment>
			</unit>
			<unit id="177" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/en-us/Library/Windows/Hardware/Hh974664)</data>
				</originalData>
				<segment state="initial">
					<source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Stack Based Failure Injection</pc> option injects resource failures in kernel-mode drivers.</source>
					<target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Stack Based Failure Injection</pc> option injects resource failures in kernel-mode drivers.</target>
				</segment>
			</unit>
			<unit id="178" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/en-us/Library/Windows/Hardware/Ff545448)</data>
				</originalData>
				<segment state="initial">
					<source>This option uses a special driver, KmAutoFail.sys, in conjunction with <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Driver Verifier</pc> to penetrate driver error handling paths.</source>
					<target>This option uses a special driver, KmAutoFail.sys, in conjunction with <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Driver Verifier</pc> to penetrate driver error handling paths.</target>
				</segment>
			</unit>
			<unit id="179" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">[</data>
					<data id="id4">](https://msdn.microsoft.com/en-us/Library/Windows/Hardware/Hh974664)</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/en-us/Library/Windows/Hardware/Ff548288)</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  You cannot combine <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Stack Based Failure Injection</pc> with <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Low resources simulation</pc>.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  You cannot combine <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Stack Based Failure Injection</pc> with <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Low resources simulation</pc>.</target>
				</segment>
			</unit>
			<unit id="180" translate="yes">
				<segment state="initial">
					<source>Driver Verifier options that require I/O Verification</source>
					<target>Driver Verifier options that require I/O Verification</target>
				</segment>
			</unit>
			<unit id="181" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/en-us/Library/Windows/Hardware/Ff548045)</data>
				</originalData>
				<segment state="initial">
					<source>There are four options that require you to first enable <pc dataRefEnd="id2" dataRefStart="id1" id="p1">I/O Verification</pc>.</source>
					<target>There are four options that require you to first enable <pc dataRefEnd="id2" dataRefStart="id1" id="p1">I/O Verification</pc>.</target>
				</segment>
			</unit>
			<unit id="182" translate="yes">
				<segment state="initial">
					<source>If I/O Verification is not enabled, these options are not enabled.</source>
					<target>If I/O Verification is not enabled, these options are not enabled.</target>
				</segment>
			</unit>
			<unit id="183" translate="yes">
				<segment state="initial">
					<source>Force Pending I/O Requests</source>
					<target>Force Pending I/O Requests</target>
				</segment>
			</unit>
			<unit id="184" translate="yes">
				<segment state="initial">
					<source>IRP Logging</source>
					<target>IRP Logging</target>
				</segment>
			</unit>
			<unit id="185" translate="yes">
				<segment state="initial">
					<source>Invariant MDL Checking for Stack</source>
					<target>Invariant MDL Checking for Stack</target>
				</segment>
			</unit>
			<unit id="186" translate="yes">
				<segment state="initial">
					<source>Invariant MDL Checking for Driver</source>
					<target>Invariant MDL Checking for Driver</target>
				</segment>
			</unit>
			<unit id="187" translate="yes">
				<segment state="initial">
					<source>Related topics</source>
					<target>Related topics</target>
				</segment>
			</unit>
			<unit id="188" translate="yes">
				<segment state="initial">
					<source>Driver Verifier</source>
					<target>Driver Verifier</target>
				</segment>
			</unit>
			<unit id="189" translate="yes">
				<segment state="initial">
					<source>How to test a driver at runtime using Visual Studio</source>
					<target>How to test a driver at runtime using Visual Studio</target>
				</segment>
			</unit>
			<unit id="190" translate="yes">
				<segment state="initial">
					<source>Setting Up Kernel-Mode Debugging in Visual Studio</source>
					<target>Setting Up Kernel-Mode Debugging in Visual Studio</target>
				</segment>
			</unit>
			<unit id="191" translate="yes">
				<segment state="initial">
					<source>Deploying a Driver to a Test Computer</source>
					<target>Deploying a Driver to a Test Computer</target>
				</segment>
			</unit>
			<unit id="192" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">]</data>
					<data id="id3">(mailto:wsddocfb@microsoft.com?subject=Documentation%20feedback%20[VsDriver\vsdriver]:%20Driver%20Verifier%20Properties%20for%20%20Driver%20Package%20Projects%20%20RELEASE:%20%289/30/2015%29&amp;body=%0A%0APRIVACY%20STATEMENT%0A%0AWe%20use%20your%20feedback%20to%20improve%20the%20documentation.%20We%20don't%20use%20your%20email%20address%20for%20any%20other%20purpose,%20and%20we'll%20remove%20your%20email%20address%20from%20our%20system%20after%20the%20issue%20that%20you're%20reporting%20is%20fixed.%20While%20we're%20working%20to%20fix%20this%20issue,%20we%20might%20send%20you%20an%20email%20message%20to%20ask%20for%20more%20info.%20Later,%20we%20might%20also%20send%20you%20an%20email%20message%20to%20let%20you%20know%20that%20we've%20addressed%20your%20feedback.%0A%0AFor%20more%20info%20about%20Microsoft's%20privacy%20policy,%20see%20http://privacy.microsoft.com/en-us/default. "</data>
					<data id="id4">")</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Send comments about this topic to Microsoft</pc><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Send comments about this topic to Microsoft</pc></source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Send comments about this topic to Microsoft</pc><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Send comments about this topic to Microsoft</pc></target>
				</segment>
			</unit>
		</group>
	</file>
</xliff>