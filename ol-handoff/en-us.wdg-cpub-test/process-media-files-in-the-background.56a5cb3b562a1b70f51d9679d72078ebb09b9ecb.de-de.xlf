<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="de-de" version="2.0" xml:space="preserve" xmlns="urn:oasis:names:tc:xliff:document:2.0">
	<file id="1">
		<mda:metadata>
			<mda:metaGroup>
				<mda:meta type="tool-id">mdxliff</mda:meta>
				<mda:meta type="tool-name">mdxliff</mda:meta>
				<mda:meta type="tool-version">1.0-2eb3c86</mda:meta>
				<mda:meta type="tool-company">Microsoft</mda:meta>
			</mda:metaGroup>
		<mda:metaGroup><mda:meta type="olfilehash">c57bfc9b5f878f4700d095e1fdb6b5a60d3f9bdb</mda:meta><mda:meta type="olfilepath">wdg-cpub-test\ndolci1\audio-video-camera\process-media-files-in-the-background.md</mda:meta><mda:meta type="oltranslationpriority"></mda:meta><mda:meta type="oltranslationtype">Human Translation</mda:meta><mda:meta type="olskeletonhash">a4b097e87498a9de58900e367f464664af597154</mda:meta><mda:meta type="olxliffhash">bfe1afdcf8aaaf318503cf70ac2e7e3bbf41a4f4</mda:meta></mda:metaGroup></mda:metadata>
		<group id="content">
			<unit id="101" translate="yes">
				<segment state="initial">
					<source>This article shows you how to use the MediaProcessingTrigger and a background task to process media files in the background.</source>
					<target>This article shows you how to use the MediaProcessingTrigger and a background task to process media files in the background.</target>
				</segment>
			</unit>
			<unit id="102" translate="yes">
				<segment state="initial">
					<source>Process media files in the background</source>
					<target>Process media files in the background</target>
				</segment>
			</unit>
			<unit id="103" translate="yes">
				<segment state="initial">
					<source>Process media files in the background</source>
					<target>Process media files in the background</target>
				</segment>
			</unit>
			<unit id="104" translate="yes">
				<segment state="initial">
					<source>\[ Updated for UWP apps on Windows 10.</source>
					<target>\[ Updated for UWP apps on Windows 10.</target>
				</segment>
			</unit>
			<unit id="105" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](http://go.microsoft.com/fwlink/p/?linkid=619132)</data>
				</originalData>
				<segment state="initial">
					<source>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</source>
					<target>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</target>
				</segment>
			</unit>
			<unit id="106" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn806005)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>This article shows you how to use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">MediaProcessingTrigger</pc></pc> and a background task to process media files in the background.</source>
					<target>This article shows you how to use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">MediaProcessingTrigger</pc></pc> and a background task to process media files in the background.</target>
				</segment>
			</unit>
			<unit id="107" translate="yes">
				<segment state="initial">
					<source>The example app described in this article allows the user to select an input media file to transcode and specify an output file for the transcoding result.</source>
					<target>The example app described in this article allows the user to select an input media file to transcode and specify an output file for the transcoding result.</target>
				</segment>
			</unit>
			<unit id="108" translate="yes">
				<segment state="initial">
					<source>Then, a background task is launched to perform the transcoding operation.</source>
					<target>Then, a background task is launched to perform the transcoding operation.</target>
				</segment>
			</unit>
			<unit id="109" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn806005)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">MediaProcessingTrigger</pc></pc> is intended to support many different media processing scenarios besides transcoding, including rendering media compositions to disk and uploading processed media files after processing is complete.</source>
					<target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">MediaProcessingTrigger</pc></pc> is intended to support many different media processing scenarios besides transcoding, including rendering media compositions to disk and uploading processed media files after processing is complete.</target>
				</segment>
			</unit>
			<unit id="110" translate="yes">
				<segment state="initial">
					<source>For more detailed information on the different Universal Windows app features utilized in this sample, see:</source>
					<target>For more detailed information on the different Universal Windows app features utilized in this sample, see:</target>
				</segment>
			</unit>
			<unit id="111" translate="yes">
				<segment state="initial">
					<source>Transcode media files</source>
					<target>Transcode media files</target>
				</segment>
			</unit>
			<unit id="112" translate="yes">
				<segment state="initial">
					<source>Launching resuming and background tasks</source>
					<target>Launching resuming and background tasks</target>
				</segment>
			</unit>
			<unit id="113" translate="yes">
				<segment state="initial">
					<source>Tiles badges and notifications</source>
					<target>Tiles badges and notifications</target>
				</segment>
			</unit>
			<unit id="114" translate="yes">
				<segment state="initial">
					<source>Create a media processing background task</source>
					<target>Create a media processing background task</target>
				</segment>
			</unit>
			<unit id="115" translate="yes">
				<segment state="initial">
					<source>To add a background task to your existing solution in Microsoft Visual Studio, Enter a name for your comp</source>
					<target>To add a background task to your existing solution in Microsoft Visual Studio, Enter a name for your comp</target>
				</segment>
			</unit>
			<unit id="116" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source>From the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">File</pc> menu, select <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Add</pc> and then <pc dataRefEnd="id6" dataRefStart="id5" id="p3">New Project...</pc>.</source>
					<target>From the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">File</pc> menu, select <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Add</pc> and then <pc dataRefEnd="id6" dataRefStart="id5" id="p3">New Project...</pc>.</target>
				</segment>
			</unit>
			<unit id="117" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>Select the project type <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Windows Runtime Component (Universal Windows)</pc>.</source>
					<target>Select the project type <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Windows Runtime Component (Universal Windows)</pc>.</target>
				</segment>
			</unit>
			<unit id="118" translate="yes">
				<segment state="initial">
					<source>Enter a name for your new component project.</source>
					<target>Enter a name for your new component project.</target>
				</segment>
			</unit>
			<unit id="119" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>This example uses the project name <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaProcessingBackgroundTask</pc>.</source>
					<target>This example uses the project name <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaProcessingBackgroundTask</pc>.</target>
				</segment>
			</unit>
			<unit id="120" translate="yes">
				<segment state="initial">
					<source>Click OK.</source>
					<target>Click OK.</target>
				</segment>
			</unit>
			<unit id="121" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>In <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Solution Explorer</pc>, right-click the icon for the "Class1.cs" file that is created by default and select <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Rename</pc>.</source>
					<target>In <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Solution Explorer</pc>, right-click the icon for the "Class1.cs" file that is created by default and select <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Rename</pc>.</target>
				</segment>
			</unit>
			<unit id="122" translate="yes">
				<segment state="initial">
					<source>Rename the file to "MediaProcessingTask.cs".</source>
					<target>Rename the file to "MediaProcessingTask.cs".</target>
				</segment>
			</unit>
			<unit id="123" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>When Visual Studio asks if you want to rename all of the references to this class, click <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Yes</pc>.</source>
					<target>When Visual Studio asks if you want to rename all of the references to this class, click <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Yes</pc>.</target>
				</segment>
			</unit>
			<unit id="124" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>In the renamed class file, add the following <pc dataRefEnd="id2" dataRefStart="id1" id="p1">using</pc> directives to include these namespaces in your project.</source>
					<target>In the renamed class file, add the following <pc dataRefEnd="id2" dataRefStart="id1" id="p1">using</pc> directives to include these namespaces in your project.</target>
				</segment>
			</unit>
			<unit id="125" translate="yes">
				<segment state="initial">
					<source>BackgroundUsing</source>
					<target>BackgroundUsing</target>
				</segment>
			</unit>
			<unit id="126" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br224794)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Update your class declaration to make your class inherit from <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">IBackgroundTask</pc></pc>.</source>
					<target>Update your class declaration to make your class inherit from <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">IBackgroundTask</pc></pc>.</target>
				</segment>
			</unit>
			<unit id="127" translate="yes">
				<segment state="initial">
					<source>BackgroundClass</source>
					<target>BackgroundClass</target>
				</segment>
			</unit>
			<unit id="128" translate="yes">
				<segment state="initial">
					<source>Add the following member variables to your class:</source>
					<target>Add the following member variables to your class:</target>
				</segment>
			</unit>
			<unit id="129" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br224797)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>An <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">IBackgroundTaskInstance</pc></pc> that will be used to update the foreground app with the progress of the background task.</source>
					<target>An <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">IBackgroundTaskInstance</pc></pc> that will be used to update the foreground app with the progress of the background task.</target>
				</segment>
			</unit>
			<unit id="130" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/hh700499)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>A <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">BackgroundTaskDeferral</pc></pc> that keeps the system from shutting down your background task while media transcoding is being performed asynchronously.</source>
					<target>A <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">BackgroundTaskDeferral</pc></pc> that keeps the system from shutting down your background task while media transcoding is being performed asynchronously.</target>
				</segment>
			</unit>
			<unit id="131" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>A <pc dataRefEnd="id2" dataRefStart="id1" id="p1">CancellationTokenSource</pc> object that can be used to cancel the asynchronous transcoding operation.</source>
					<target>A <pc dataRefEnd="id2" dataRefStart="id1" id="p1">CancellationTokenSource</pc> object that can be used to cancel the asynchronous transcoding operation.</target>
				</segment>
			</unit>
			<unit id="132" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br207080)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">MediaTranscoder</pc></pc> object that will be used to transcode media files.</source>
					<target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">MediaTranscoder</pc></pc> object that will be used to transcode media files.</target>
				</segment>
			</unit>
			<unit id="133" translate="yes">
				<segment state="initial">
					<source>BackgroundMembers</source>
					<target>BackgroundMembers</target>
				</segment>
			</unit>
			<unit id="134" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br224811)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>The system calls <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Run</pc></pc> method of a background task when the task is launched.</source>
					<target>The system calls <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Run</pc></pc> method of a background task when the task is launched.</target>
				</segment>
			</unit>
			<unit id="135" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br224794)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Set the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">IBackgroundTask</pc></pc> object passed into the method to the corresponding member variable.</source>
					<target>Set the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">IBackgroundTask</pc></pc> object passed into the method to the corresponding member variable.</target>
				</segment>
			</unit>
			<unit id="136" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br224798)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Register a handler for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Canceled</pc></pc> event, which will be raised if the system needs to shut down the background task.</source>
					<target>Register a handler for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Canceled</pc></pc> event, which will be raised if the system needs to shut down the background task.</target>
				</segment>
			</unit>
			<unit id="137" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br224800)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Then, set the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Progress</pc></pc> property to zero.</source>
					<target>Then, set the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Progress</pc></pc> property to zero.</target>
				</segment>
			</unit>
			<unit id="138" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/hh700507)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Next, call the background task object's <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">GetDeferral</pc></pc> method to obtain a deferral.</source>
					<target>Next, call the background task object's <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">GetDeferral</pc></pc> method to obtain a deferral.</target>
				</segment>
			</unit>
			<unit id="139" translate="yes">
				<segment state="initial">
					<source>This tells the system not to shut down your task because you are performing asynchronous operations.</source>
					<target>This tells the system not to shut down your task because you are performing asynchronous operations.</target>
				</segment>
			</unit>
			<unit id="140" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>Next, call the helper method <pc dataRefEnd="id2" dataRefStart="id1" id="p1">TranscodeFileAsync</pc>, which is defined in the next section.</source>
					<target>Next, call the helper method <pc dataRefEnd="id2" dataRefStart="id1" id="p1">TranscodeFileAsync</pc>, which is defined in the next section.</target>
				</segment>
			</unit>
			<unit id="141" translate="yes">
				<segment state="initial">
					<source>If that completes successfully, a helper method is called to launch a toast notification to alert the user that transcoding is complete.</source>
					<target>If that completes successfully, a helper method is called to launch a toast notification to alert the user that transcoding is complete.</target>
				</segment>
			</unit>
			<unit id="142" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">[</data>
					<data id="id4">](https://msdn.microsoft.com/library/windows/apps/hh700504)</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source>At the end of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Run</pc> method, call <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">Complete</pc></pc> on the deferral object to let the system know that your background task is complete and can be terminated.</source>
					<target>At the end of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Run</pc> method, call <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">Complete</pc></pc> on the deferral object to let the system know that your background task is complete and can be terminated.</target>
				</segment>
			</unit>
			<unit id="143" translate="yes">
				<segment state="initial">
					<source>Run</source>
					<target>Run</target>
				</segment>
			</unit>
			<unit id="144" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">[</data>
					<data id="id4">](https://msdn.microsoft.com/library/windows/apps/br241622)</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source>In the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">TranscodeFileAsync</pc> helper method, the file names for the input and output files for the transcoding operations are retrieved from the <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">LocalSettings</pc></pc> for your app.</source>
					<target>In the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">TranscodeFileAsync</pc> helper method, the file names for the input and output files for the transcoding operations are retrieved from the <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">LocalSettings</pc></pc> for your app.</target>
				</segment>
			</unit>
			<unit id="145" translate="yes">
				<segment state="initial">
					<source>These values will be set by your foreground app.</source>
					<target>These values will be set by your foreground app.</target>
				</segment>
			</unit>
			<unit id="146" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br227171)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Create a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">StorageFile</pc></pc> object for the input and output files and then create an encoding profile to use for transcoding.</source>
					<target>Create a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">StorageFile</pc></pc> object for the input and output files and then create an encoding profile to use for transcoding.</target>
				</segment>
			</unit>
			<unit id="147" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/hh700936)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Call <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">PrepareFileTranscodeAsync</pc></pc>, passing in the input file, output file, and encoding profile.</source>
					<target>Call <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">PrepareFileTranscodeAsync</pc></pc>, passing in the input file, output file, and encoding profile.</target>
				</segment>
			</unit>
			<unit id="148" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/hh700941)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">PrepareTranscodeResult</pc></pc> object returned from this call lets you know if transcoding can be performed.</source>
					<target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">PrepareTranscodeResult</pc></pc> object returned from this call lets you know if transcoding can be performed.</target>
				</segment>
			</unit>
			<unit id="149" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/hh700942)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/hh700946)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>If the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CanTranscode</pc></pc> property is true, call <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">TranscodeAsync</pc></pc> to perform the transcoding operation.</source>
					<target>If the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CanTranscode</pc></pc> property is true, call <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">TranscodeAsync</pc></pc> to perform the transcoding operation.</target>
				</segment>
			</unit>
			<unit id="150" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AsTask</pc> method enables you to track the progress the asynchronous operation or cancel it.</source>
					<target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AsTask</pc> method enables you to track the progress the asynchronous operation or cancel it.</target>
				</segment>
			</unit>
			<unit id="151" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>Create a new <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Progress</pc> object, specifying the units of progress you desire and the name of the method that will be called to notify you of the current progress of the task.</source>
					<target>Create a new <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Progress</pc> object, specifying the units of progress you desire and the name of the method that will be called to notify you of the current progress of the task.</target>
				</segment>
			</unit>
			<unit id="152" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Pass the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Progress</pc> object into the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">AsTask</pc> method along with the cancellation token that allows you to cancel the task.</source>
					<target>Pass the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Progress</pc> object into the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">AsTask</pc> method along with the cancellation token that allows you to cancel the task.</target>
				</segment>
			</unit>
			<unit id="153" translate="yes">
				<segment state="initial">
					<source>TranscodeFileAsync</source>
					<target>TranscodeFileAsync</target>
				</segment>
			</unit>
			<unit id="154" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>In the method you used to create the Progress object in the previous step, <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Progress</pc>, set the progress of the background task instance.</source>
					<target>In the method you used to create the Progress object in the previous step, <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Progress</pc>, set the progress of the background task instance.</target>
				</segment>
			</unit>
			<unit id="155" translate="yes">
				<segment state="initial">
					<source>This will pass the progress to the foreground app, if it is running.</source>
					<target>This will pass the progress to the foreground app, if it is running.</target>
				</segment>
			</unit>
			<unit id="156" translate="yes">
				<segment state="initial">
					<source>Progress</source>
					<target>Progress</target>
				</segment>
			</unit>
			<unit id="157" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">SendToastNotification</pc> helper method creates a new toast notification by getting a template XML document for a toast that only has text content.</source>
					<target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">SendToastNotification</pc> helper method creates a new toast notification by getting a template XML document for a toast that only has text content.</target>
				</segment>
			</unit>
			<unit id="158" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br208641)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>The text element of the toast XML is set and then a new <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ToastNotification</pc></pc> object is created from the XML document.</source>
					<target>The text element of the toast XML is set and then a new <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ToastNotification</pc></pc> object is created from the XML document.</target>
				</segment>
			</unit>
			<unit id="159" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br208659)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Finally, the toast is shown to the user by calling <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ToastNotifier.Show</pc></pc>.</source>
					<target>Finally, the toast is shown to the user by calling <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ToastNotifier.Show</pc></pc>.</target>
				</segment>
			</unit>
			<unit id="160" translate="yes">
				<segment state="initial">
					<source>SendToastNotification</source>
					<target>SendToastNotification</target>
				</segment>
			</unit>
			<unit id="161" translate="yes">
				<segment state="initial">
					<source>Register and launch the background task</source>
					<target>Register and launch the background task</target>
				</segment>
			</unit>
			<unit id="162" translate="yes">
				<segment state="initial">
					<source>Before you can launch the background task from your foreground app, you must update your foreground app's Package.appmanifest file to let the system know that your app uses a background task.</source>
					<target>Before you can launch the background task from your foreground app, you must update your foreground app's Package.appmanifest file to let the system know that your app uses a background task.</target>
				</segment>
			</unit>
			<unit id="163" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>In <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Solution Explorer</pc>, double-click the Package.appmanifest file icon to open the manifest editor.</source>
					<target>In <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Solution Explorer</pc>, double-click the Package.appmanifest file icon to open the manifest editor.</target>
				</segment>
			</unit>
			<unit id="164" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>Select the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Declarations</pc> tab.</source>
					<target>Select the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Declarations</pc> tab.</target>
				</segment>
			</unit>
			<unit id="165" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source>From <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Available Declarations</pc>, select <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Background Tasks</pc> and click <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Add</pc>.</source>
					<target>From <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Available Declarations</pc>, select <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Background Tasks</pc> and click <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Add</pc>.</target>
				</segment>
			</unit>
			<unit id="166" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Under <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Supported Declarations</pc> make sure that the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Background Tasks</pc> item is selected.</source>
					<target>Under <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Supported Declarations</pc> make sure that the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Background Tasks</pc> item is selected.</target>
				</segment>
			</unit>
			<unit id="167" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Under <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Properties</pc>, select the checkbox for <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Media processing</pc>.</source>
					<target>Under <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Properties</pc>, select the checkbox for <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Media processing</pc>.</target>
				</segment>
			</unit>
			<unit id="168" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>In the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Entry Point</pc> text box, specify the namespace and class name for your background test, separated by a period.</source>
					<target>In the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Entry Point</pc> text box, specify the namespace and class name for your background test, separated by a period.</target>
				</segment>
			</unit>
			<unit id="169" translate="yes">
				<segment state="initial">
					<source>For this example, the entry is:</source>
					<target>For this example, the entry is:</target>
				</segment>
			</unit>
			<unit id="170" translate="yes">
				<segment state="initial">
					<source>Next, you need to add a reference to your background task to your foreground app.</source>
					<target>Next, you need to add a reference to your background task to your foreground app.</target>
				</segment>
			</unit>
			<unit id="171" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source>In <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Solution Explorer</pc>, under your foreground app project, right-click the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">References</pc> folder and select <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Add Reference...</pc>.</source>
					<target>In <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Solution Explorer</pc>, under your foreground app project, right-click the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">References</pc> folder and select <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Add Reference...</pc>.</target>
				</segment>
			</unit>
			<unit id="172" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Expand the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Projects</pc> node and select <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Solution</pc>.</source>
					<target>Expand the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Projects</pc> node and select <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Solution</pc>.</target>
				</segment>
			</unit>
			<unit id="173" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>Check the box next to your background task project and click <pc dataRefEnd="id2" dataRefStart="id1" id="p1">OK</pc>.</source>
					<target>Check the box next to your background task project and click <pc dataRefEnd="id2" dataRefStart="id1" id="p1">OK</pc>.</target>
				</segment>
			</unit>
			<unit id="174" translate="yes">
				<segment state="initial">
					<source>The rest of the code in this example should be added to your foreground app.</source>
					<target>The rest of the code in this example should be added to your foreground app.</target>
				</segment>
			</unit>
			<unit id="175" translate="yes">
				<segment state="initial">
					<source>First, you will need to add the following namespaces to your project.</source>
					<target>First, you will need to add the following namespaces to your project.</target>
				</segment>
			</unit>
			<unit id="176" translate="yes">
				<segment state="initial">
					<source>ForegroundUsing</source>
					<target>ForegroundUsing</target>
				</segment>
			</unit>
			<unit id="177" translate="yes">
				<segment state="initial">
					<source>Next, add the following member variables that are needed to register the background task.</source>
					<target>Next, add the following member variables that are needed to register the background task.</target>
				</segment>
			</unit>
			<unit id="178" translate="yes">
				<segment state="initial">
					<source>ForegroundMembers</source>
					<target>ForegroundMembers</target>
				</segment>
			</unit>
			<unit id="179" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">[</data>
					<data id="id4">](https://msdn.microsoft.com/library/windows/apps/br207847)</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
					<data id="id7">[</data>
					<data id="id8">](https://msdn.microsoft.com/library/windows/apps/br207871)</data>
					<data id="id9">**</data>
					<data id="id10">**</data>
				</originalData>
				<segment state="initial">
					<source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">PickFilesToTranscode</pc> helper method uses a <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">FileOpenPicker</pc></pc> and a <pc dataRefEnd="id8" dataRefStart="id7" id="p4"><pc dataRefEnd="id10" dataRefStart="id9" id="p5">FileSavePicker</pc></pc> to open the input and output files for transcoding.</source>
					<target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">PickFilesToTranscode</pc> helper method uses a <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">FileOpenPicker</pc></pc> and a <pc dataRefEnd="id8" dataRefStart="id7" id="p4"><pc dataRefEnd="id10" dataRefStart="id9" id="p5">FileSavePicker</pc></pc> to open the input and output files for transcoding.</target>
				</segment>
			</unit>
			<unit id="180" translate="yes">
				<segment state="initial">
					<source>The user may select files in a location that your app does not have access to.</source>
					<target>The user may select files in a location that your app does not have access to.</target>
				</segment>
			</unit>
			<unit id="181" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br207457)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>To make sure your background task can open the files, add them to the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">FutureAccessList</pc></pc> for your app.</source>
					<target>To make sure your background task can open the files, add them to the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">FutureAccessList</pc></pc> for your app.</target>
				</segment>
			</unit>
			<unit id="182" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br241622)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Finally, set entries for the input and output file names in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">LocalSettings</pc></pc> for your app.</source>
					<target>Finally, set entries for the input and output file names in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">LocalSettings</pc></pc> for your app.</target>
				</segment>
			</unit>
			<unit id="183" translate="yes">
				<segment state="initial">
					<source>The background task retrieves the file names from this location.</source>
					<target>The background task retrieves the file names from this location.</target>
				</segment>
			</unit>
			<unit id="184" translate="yes">
				<segment state="initial">
					<source>PickFilesToTranscode</source>
					<target>PickFilesToTranscode</target>
				</segment>
			</unit>
			<unit id="185" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn806005)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/br224768)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>To register the background task, create a new <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">MediaProcessingTrigger</pc></pc> and a new <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">BackgroundTaskBuilder</pc></pc>.</source>
					<target>To register the background task, create a new <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">MediaProcessingTrigger</pc></pc> and a new <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">BackgroundTaskBuilder</pc></pc>.</target>
				</segment>
			</unit>
			<unit id="186" translate="yes">
				<segment state="initial">
					<source>Set the name of the background task builder so that you can identify it later.</source>
					<target>Set the name of the background task builder so that you can identify it later.</target>
				</segment>
			</unit>
			<unit id="187" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br224774)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Set the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">TaskEntryPoint</pc></pc> to the same namespace and class name string you used in the manifest file.</source>
					<target>Set the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">TaskEntryPoint</pc></pc> to the same namespace and class name string you used in the manifest file.</target>
				</segment>
			</unit>
			<unit id="188" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn641725)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source>Set the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Trigger</pc></pc> property to the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">MediaProcessingTrigger</pc> instance.</source>
					<target>Set the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Trigger</pc></pc> property to the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">MediaProcessingTrigger</pc> instance.</target>
				</segment>
			</unit>
			<unit id="189" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br224787)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/br229870)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
					<data id="id9">[</data>
					<data id="id10">](https://msdn.microsoft.com/library/windows/apps/br224771)</data>
					<data id="id11">**</data>
					<data id="id12">**</data>
				</originalData>
				<segment state="initial">
					<source>Before registering the task, make sure you unregister any previously registered tasks by looping through the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">AllTasks</pc></pc> collection and calling <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Unregister</pc></pc> on any tasks that have the name you specified in the <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">BackgroundTaskBuilder.Name</pc></pc> property.</source>
					<target>Before registering the task, make sure you unregister any previously registered tasks by looping through the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">AllTasks</pc></pc> collection and calling <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Unregister</pc></pc> on any tasks that have the name you specified in the <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">BackgroundTaskBuilder.Name</pc></pc> property.</target>
				</segment>
			</unit>
			<unit id="190" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br224772)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Register the background task by calling <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Register</pc></pc>.</source>
					<target>Register the background task by calling <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Register</pc></pc>.</target>
				</segment>
			</unit>
			<unit id="191" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br224788)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/br224808)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>Register handlers for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Completed</pc></pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Progress</pc></pc> events.</source>
					<target>Register handlers for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Completed</pc></pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Progress</pc></pc> events.</target>
				</segment>
			</unit>
			<unit id="192" translate="yes">
				<segment state="initial">
					<source>RegisterBackgroundTask</source>
					<target>RegisterBackgroundTask</target>
				</segment>
			</unit>
			<unit id="193" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">[</data>
					<data id="id4">](https://msdn.microsoft.com/library/windows/apps/dn765071)</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source>Launch the background task by calling the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaProcessingTrigger</pc> object's <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">RequestAsync</pc></pc> method.</source>
					<target>Launch the background task by calling the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaProcessingTrigger</pc> object's <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">RequestAsync</pc></pc> method.</target>
				</segment>
			</unit>
			<unit id="194" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn806007)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">MediaProcessingTriggerResult</pc></pc> object returned by this method lets you know whether the background task was started successfully, and if not, lets you know why the background task wasn't launched.</source>
					<target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">MediaProcessingTriggerResult</pc></pc> object returned by this method lets you know whether the background task was started successfully, and if not, lets you know why the background task wasn't launched.</target>
				</segment>
			</unit>
			<unit id="195" translate="yes">
				<segment state="initial">
					<source>LaunchBackgroundTask</source>
					<target>LaunchBackgroundTask</target>
				</segment>
			</unit>
			<unit id="196" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">OnProgress</pc> event handler is called when the background task updates the progress of the operation.</source>
					<target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">OnProgress</pc> event handler is called when the background task updates the progress of the operation.</target>
				</segment>
			</unit>
			<unit id="197" translate="yes">
				<segment state="initial">
					<source>You can use this opportunity to update your UI with progress information.</source>
					<target>You can use this opportunity to update your UI with progress information.</target>
				</segment>
			</unit>
			<unit id="198" translate="yes">
				<segment state="initial">
					<source>OnProgress</source>
					<target>OnProgress</target>
				</segment>
			</unit>
			<unit id="199" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">OnCompleted</pc> event handler is called when the background task has finished running.</source>
					<target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">OnCompleted</pc> event handler is called when the background task has finished running.</target>
				</segment>
			</unit>
			<unit id="200" translate="yes">
				<segment state="initial">
					<source>This is another opportunity to update your UI to give status information to the user.</source>
					<target>This is another opportunity to update your UI to give status information to the user.</target>
				</segment>
			</unit>
			<unit id="201" translate="yes">
				<segment state="initial">
					<source>OnCompleted</source>
					<target>OnCompleted</target>
				</segment>
			</unit>
		</group>
	</file>
</xliff>