<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="it-it" version="2.0" xml:space="preserve" xmlns="urn:oasis:names:tc:xliff:document:2.0">
	<file id="1">
		<mda:metadata>
			<mda:metaGroup>
				<mda:meta type="tool-id">mdxliff</mda:meta>
				<mda:meta type="tool-name">mdxliff</mda:meta>
				<mda:meta type="tool-version">1.0-2eb3c86</mda:meta>
				<mda:meta type="tool-company">Microsoft</mda:meta>
			</mda:metaGroup>
		<mda:metaGroup><mda:meta type="olfilehash">6989e01626b599065606317e28285b13f04ce123</mda:meta><mda:meta type="olfilepath">wdg-cpub-test\ndolci2\controls-and-patterns\rich-text-block.md</mda:meta><mda:meta type="oltranslationpriority"></mda:meta><mda:meta type="oltranslationtype">Human Translation</mda:meta><mda:meta type="olskeletonhash">719801d5afb4085ef3d9415a5db07e2f43cf62cc</mda:meta><mda:meta type="olxliffhash">3ece0f243bbe4d0f7dcfa072781e1d23de056f5f</mda:meta></mda:metaGroup></mda:metadata>
		<group id="content">
			<unit id="101" translate="yes">
				<segment state="initial">
					<source>Use a RichTextBlock with RichTextBlockOverflow elements to create advanced text layouts.</source>
					<target>Use a RichTextBlock with RichTextBlockOverflow elements to create advanced text layouts.</target>
				</segment>
			</unit>
			<unit id="102" translate="yes">
				<segment state="initial">
					<source>RichTextBlock</source>
					<target>RichTextBlock</target>
				</segment>
			</unit>
			<unit id="103" translate="yes">
				<segment state="initial">
					<source>Rich text block</source>
					<target>Rich text block</target>
				</segment>
			</unit>
			<unit id="104" translate="yes">
				<segment state="initial">
					<source>Rich text blocks provide several features for advanced text layout that you can use when you need support for paragraphs, inline UI elements, or complex text layouts.</source>
					<target>Rich text blocks provide several features for advanced text layout that you can use when you need support for paragraphs, inline UI elements, or complex text layouts.</target>
				</segment>
			</unit>
			<unit id="105" translate="yes">
				<segment state="initial">
					<source>Important APIs</source>
					<target>Important APIs</target>
				</segment>
			</unit>
			<unit id="106" translate="yes">
				<segment state="initial">
					<source>RichTextBlock class</source>
					<target>RichTextBlock class</target>
				</segment>
			</unit>
			<unit id="107" translate="yes">
				<segment state="initial">
					<source>RichTextBlockOverflow class</source>
					<target>RichTextBlockOverflow class</target>
				</segment>
			</unit>
			<unit id="108" translate="yes">
				<segment state="initial">
					<source>Paragraph class</source>
					<target>Paragraph class</target>
				</segment>
			</unit>
			<unit id="109" translate="yes">
				<segment state="initial">
					<source>Typography class</source>
					<target>Typography class</target>
				</segment>
			</unit>
			<unit id="110" translate="yes">
				<segment state="initial">
					<source>Is this the right control?</source>
					<target>Is this the right control?</target>
				</segment>
			</unit>
			<unit id="111" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>Use a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">RichTextBlock</pc> when you need support for multiple paragraphs, multi-column or other complex text layouts, or inline UI elements like images.</source>
					<target>Use a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">RichTextBlock</pc> when you need support for multiple paragraphs, multi-column or other complex text layouts, or inline UI elements like images.</target>
				</segment>
			</unit>
			<unit id="112" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>Use a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">TextBlock</pc> to display most read-only text in your app.</source>
					<target>Use a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">TextBlock</pc> to display most read-only text in your app.</target>
				</segment>
			</unit>
			<unit id="113" translate="yes">
				<segment state="initial">
					<source>You can use it to display single-line or multi-line text, inline hyperlinks, and text with formatting like bold, italic, or underlined.</source>
					<target>You can use it to display single-line or multi-line text, inline hyperlinks, and text with formatting like bold, italic, or underlined.</target>
				</segment>
			</unit>
			<unit id="114" translate="yes">
				<segment state="initial">
					<source>TextBlock provides a simpler content model, so it’s typically easier to use, and it can provide better text rendering performance than RichTextBlock.</source>
					<target>TextBlock provides a simpler content model, so it’s typically easier to use, and it can provide better text rendering performance than RichTextBlock.</target>
				</segment>
			</unit>
			<unit id="115" translate="yes">
				<segment state="initial">
					<source>It's preferred for most app UI text.</source>
					<target>It's preferred for most app UI text.</target>
				</segment>
			</unit>
			<unit id="116" translate="yes">
				<segment state="initial">
					<source>Although you can put line breaks in the text, TextBlock is designed to display a single paragraph and doesn’t support text indentation.</source>
					<target>Although you can put line breaks in the text, TextBlock is designed to display a single paragraph and doesn’t support text indentation.</target>
				</segment>
			</unit>
			<unit id="117" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](text-controls.md)</data>
				</originalData>
				<segment state="initial">
					<source>For more info about choosing the right text control, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Text controls</pc> article.</source>
					<target>For more info about choosing the right text control, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Text controls</pc> article.</target>
				</segment>
			</unit>
			<unit id="118" translate="yes">
				<segment state="initial">
					<source>Examples</source>
					<target>Examples</target>
				</segment>
			</unit>
			<unit id="119" translate="yes">
				<segment state="initial">
					<source>Create a rich text block</source>
					<target>Create a rich text block</target>
				</segment>
			</unit>
			<unit id="120" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.richtextblock.blocks.aspx)</data>
					<data id="id3">[</data>
					<data id="id4">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.documents.paragraph.aspx)</data>
				</originalData>
				<segment state="initial">
					<source>The content property of RichTextBlock is the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Blocks</pc> property, which supports paragraph based text via the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Paragraph</pc> element.</source>
					<target>The content property of RichTextBlock is the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Blocks</pc> property, which supports paragraph based text via the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Paragraph</pc> element.</target>
				</segment>
			</unit>
			<unit id="121" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>It doesn't have a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Text</pc> property that you can use to easily access the control's text content in your app.</source>
					<target>It doesn't have a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Text</pc> property that you can use to easily access the control's text content in your app.</target>
				</segment>
			</unit>
			<unit id="122" translate="yes">
				<segment state="initial">
					<source>However, RichTextBlock provides several unique features that TextBlock doesn’t provide.</source>
					<target>However, RichTextBlock provides several unique features that TextBlock doesn’t provide.</target>
				</segment>
			</unit>
			<unit id="123" translate="yes">
				<segment state="initial">
					<source>RichTextBlock supports:</source>
					<target>RichTextBlock supports:</target>
				</segment>
			</unit>
			<unit id="124" translate="yes">
				<segment state="initial">
					<source>Multiple paragraphs.</source>
					<target>Multiple paragraphs.</target>
				</segment>
			</unit>
			<unit id="125" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.richtextblock.textindent.aspx)</data>
				</originalData>
				<segment state="initial">
					<source>Set the indentation for paragraphs by setting the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">TextIndent</pc> property.</source>
					<target>Set the indentation for paragraphs by setting the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">TextIndent</pc> property.</target>
				</segment>
			</unit>
			<unit id="126" translate="yes">
				<segment state="initial">
					<source>Inline UI elements.</source>
					<target>Inline UI elements.</target>
				</segment>
			</unit>
			<unit id="127" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.documents.inlineuicontainer.aspx)</data>
				</originalData>
				<segment state="initial">
					<source>Use an <pc dataRefEnd="id2" dataRefStart="id1" id="p1">InlineUIContainer</pc> to display UI elements, such as images, inline with your text.</source>
					<target>Use an <pc dataRefEnd="id2" dataRefStart="id1" id="p1">InlineUIContainer</pc> to display UI elements, such as images, inline with your text.</target>
				</segment>
			</unit>
			<unit id="128" translate="yes">
				<segment state="initial">
					<source>Overflow containers.</source>
					<target>Overflow containers.</target>
				</segment>
			</unit>
			<unit id="129" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.richtextblockoverflow.aspx)</data>
				</originalData>
				<segment state="initial">
					<source>Use <pc dataRefEnd="id2" dataRefStart="id1" id="p1">RichTextBlockOverflow</pc> elements to create multi-column text layouts.</source>
					<target>Use <pc dataRefEnd="id2" dataRefStart="id1" id="p1">RichTextBlockOverflow</pc> elements to create multi-column text layouts.</target>
				</segment>
			</unit>
			<unit id="130" translate="yes">
				<segment state="initial">
					<source>Paragraphs</source>
					<target>Paragraphs</target>
				</segment>
			</unit>
			<unit id="131" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.documents.paragraph.aspx)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>You use <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Paragraph</pc></pc> elements to define the blocks of text to display within a RichTextBlock control.</source>
					<target>You use <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Paragraph</pc></pc> elements to define the blocks of text to display within a RichTextBlock control.</target>
				</segment>
			</unit>
			<unit id="132" translate="yes">
				<segment state="initial">
					<source>Every RichTextBlock should include at least one Paragraph.</source>
					<target>Every RichTextBlock should include at least one Paragraph.</target>
				</segment>
			</unit>
			<unit id="133" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.richtextblock.textindent.aspx)</data>
				</originalData>
				<segment state="initial">
					<source>You can set the indent amount for all paragraphs in a RichTextBlock by setting the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">RichTextBlock.TextIndent</pc> property.</source>
					<target>You can set the indent amount for all paragraphs in a RichTextBlock by setting the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">RichTextBlock.TextIndent</pc> property.</target>
				</segment>
			</unit>
			<unit id="134" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.documents.paragraph.textindent.aspx)</data>
				</originalData>
				<segment state="initial">
					<source>You can override this setting for specific paragraphs in a RichTextBlock by setting the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Paragraph.TextIndent</pc> property to a different value.</source>
					<target>You can override this setting for specific paragraphs in a RichTextBlock by setting the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Paragraph.TextIndent</pc> property to a different value.</target>
				</segment>
			</unit>
			<unit id="135" translate="yes">
				<segment state="initial">
					<source>Inline UI elements</source>
					<target>Inline UI elements</target>
				</segment>
			</unit>
			<unit id="136" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.documents.inlineuicontainer.aspx)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">InlineUIContainer</pc></pc> class lets you embed any UIElement inline with your text.</source>
					<target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">InlineUIContainer</pc></pc> class lets you embed any UIElement inline with your text.</target>
				</segment>
			</unit>
			<unit id="137" translate="yes">
				<segment state="initial">
					<source>A common scenario is to place an Image inline with your text, but you can also use interactive elements, like a Button or CheckBox.</source>
					<target>A common scenario is to place an Image inline with your text, but you can also use interactive elements, like a Button or CheckBox.</target>
				</segment>
			</unit>
			<unit id="138" translate="yes">
				<segment state="initial">
					<source>If you want to embed more than one element inline in the same position, consider using a panel as the single InlineUIContainer child, and then place the multiple elements within that panel.</source>
					<target>If you want to embed more than one element inline in the same position, consider using a panel as the single InlineUIContainer child, and then place the multiple elements within that panel.</target>
				</segment>
			</unit>
			<unit id="139" translate="yes">
				<segment state="initial">
					<source>This example shows how to use an InlineUIContainer to insert an image into a RichTextBlock.</source>
					<target>This example shows how to use an InlineUIContainer to insert an image into a RichTextBlock.</target>
				</segment>
			</unit>
			<unit id="140" translate="yes">
				<segment state="initial">
					<source>Overflow containers</source>
					<target>Overflow containers</target>
				</segment>
			</unit>
			<unit id="141" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.richtextblockoverflow.aspx)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>You can use a RichTextBlock with <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">RichTextBlockOverflow</pc></pc> elements to create multi-column or other advanced page layouts.</source>
					<target>You can use a RichTextBlock with <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">RichTextBlockOverflow</pc></pc> elements to create multi-column or other advanced page layouts.</target>
				</segment>
			</unit>
			<unit id="142" translate="yes">
				<segment state="initial">
					<source>The content for a RichTextBlockOverflow element always comes from a RichTextBlock element.</source>
					<target>The content for a RichTextBlockOverflow element always comes from a RichTextBlock element.</target>
				</segment>
			</unit>
			<unit id="143" translate="yes">
				<segment state="initial">
					<source>You link RichTextBlockOverflow elements by setting them as the OverflowContentTarget of a RichTextBlock or another RichTextBlockOverflow.</source>
					<target>You link RichTextBlockOverflow elements by setting them as the OverflowContentTarget of a RichTextBlock or another RichTextBlockOverflow.</target>
				</segment>
			</unit>
			<unit id="144" translate="yes">
				<segment state="initial">
					<source>Here's a simple example that creates a two column layout.</source>
					<target>Here's a simple example that creates a two column layout.</target>
				</segment>
			</unit>
			<unit id="145" translate="yes">
				<segment state="initial">
					<source>See the Examples section for a more complex example.</source>
					<target>See the Examples section for a more complex example.</target>
				</segment>
			</unit>
			<unit id="146" translate="yes">
				<segment state="initial">
					<source>Formatting text</source>
					<target>Formatting text</target>
				</segment>
			</unit>
			<unit id="147" translate="yes">
				<segment state="initial">
					<source>Although the RichTextBlock stores plain text, you can apply various formatting options to customize how the text is rendered in your app.</source>
					<target>Although the RichTextBlock stores plain text, you can apply various formatting options to customize how the text is rendered in your app.</target>
				</segment>
			</unit>
			<unit id="148" translate="yes">
				<segment state="initial">
					<source>You can set standard control properties like FontFamily, FontSize, FontStyle, Foreground, and CharacterSpacing to change the look of the text.</source>
					<target>You can set standard control properties like FontFamily, FontSize, FontStyle, Foreground, and CharacterSpacing to change the look of the text.</target>
				</segment>
			</unit>
			<unit id="149" translate="yes">
				<segment state="initial">
					<source>You can also use inline text elements and Typography attached properties to format your text.</source>
					<target>You can also use inline text elements and Typography attached properties to format your text.</target>
				</segment>
			</unit>
			<unit id="150" translate="yes">
				<segment state="initial">
					<source>These options affect only how the RichTextBlock displays the text locally, so if you copy and paste the text into a rich text control, for example, no formatting is applied.</source>
					<target>These options affect only how the RichTextBlock displays the text locally, so if you copy and paste the text into a rich text control, for example, no formatting is applied.</target>
				</segment>
			</unit>
			<unit id="151" translate="yes">
				<segment state="initial">
					<source>Inline elements</source>
					<target>Inline elements</target>
				</segment>
			</unit>
			<unit id="152" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.documents.aspx)</data>
				</originalData>
				<segment state="initial">
					<source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Windows.UI.Xaml.Documents</pc> namespace provides a variety of inline text elements that you can use to format your text, such as Bold, Italic, Run, Span, and LineBreak.</source>
					<target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Windows.UI.Xaml.Documents</pc> namespace provides a variety of inline text elements that you can use to format your text, such as Bold, Italic, Run, Span, and LineBreak.</target>
				</segment>
			</unit>
			<unit id="153" translate="yes">
				<segment state="initial">
					<source>A typical way to apply formatting to sections of text is to place the text in a Run or Span element, and then set properties on that element.</source>
					<target>A typical way to apply formatting to sections of text is to place the text in a Run or Span element, and then set properties on that element.</target>
				</segment>
			</unit>
			<unit id="154" translate="yes">
				<segment state="initial">
					<source>Here's a Paragraph with the first phrase shown in bold, blue, 16pt text.</source>
					<target>Here's a Paragraph with the first phrase shown in bold, blue, 16pt text.</target>
				</segment>
			</unit>
			<unit id="155" translate="yes">
				<segment state="initial">
					<source>Typography</source>
					<target>Typography</target>
				</segment>
			</unit>
			<unit id="156" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.documents.typography.aspx)</data>
				</originalData>
				<segment state="initial">
					<source>The attached properties of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Typography</pc> class provide access to a set of Microsoft OpenType typography properties.</source>
					<target>The attached properties of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Typography</pc> class provide access to a set of Microsoft OpenType typography properties.</target>
				</segment>
			</unit>
			<unit id="157" translate="yes">
				<segment state="initial">
					<source>You can set these attached properties either on the RichTextBlock, or on individual inline text elements, as shown here.</source>
					<target>You can set these attached properties either on the RichTextBlock, or on individual inline text elements, as shown here.</target>
				</segment>
			</unit>
			<unit id="158" translate="yes">
				<segment state="initial">
					<source>Recommendations</source>
					<target>Recommendations</target>
				</segment>
			</unit>
			<unit id="159" translate="yes">
				<segment state="initial">
					<source>See Typography and Guidelines for fonts.</source>
					<target>See Typography and Guidelines for fonts.</target>
				</segment>
			</unit>
			<unit id="160" translate="yes">
				<segment state="initial">
					<source>\[This article contains information that is specific to Universal Windows Platform (UWP) apps and Windows 10.</source>
					<target>\[This article contains information that is specific to Universal Windows Platform (UWP) apps and Windows 10.</target>
				</segment>
			</unit>
			<unit id="161" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://go.microsoft.com/fwlink/p/?linkid=258743)</data>
				</originalData>
				<segment state="initial">
					<source>For Windows 8.1 guidance, please download the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Windows 8.1 guidelines PDF</pc>.\]</source>
					<target>For Windows 8.1 guidance, please download the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Windows 8.1 guidelines PDF</pc>.\]</target>
				</segment>
			</unit>
			<unit id="162" translate="yes">
				<segment state="initial">
					<source>Related articles</source>
					<target>Related articles</target>
				</segment>
			</unit>
			<unit id="163" translate="yes">
				<segment state="initial">
					<source>Text controls</source>
					<target>Text controls</target>
				</segment>
			</unit>
			<unit id="164" translate="yes">
				<segment state="initial">
					<source>For designers</source>
					<target>For designers</target>
				</segment>
			</unit>
			<unit id="165" translate="yes">
				<segment state="initial">
					<source>Guidelines for spell checking</source>
					<target>Guidelines for spell checking</target>
				</segment>
			</unit>
			<unit id="166" translate="yes">
				<segment state="initial">
					<source>Adding search</source>
					<target>Adding search</target>
				</segment>
			</unit>
			<unit id="167" translate="yes">
				<segment state="initial">
					<source>Guidelines for text input</source>
					<target>Guidelines for text input</target>
				</segment>
			</unit>
			<unit id="168" translate="yes">
				<segment state="initial">
					<source>For developers (XAML)</source>
					<target>For developers (XAML)</target>
				</segment>
			</unit>
			<unit id="169" translate="yes">
				<segment state="initial">
					<source>TextBox class</source>
					<target>TextBox class</target>
				</segment>
			</unit>
			<unit id="170" translate="yes">
				<segment state="initial">
					<source>Windows.UI.Xaml.Controls PasswordBox class</source>
					<target>Windows.UI.Xaml.Controls PasswordBox class</target>
				</segment>
			</unit>
			<unit id="171" translate="yes">
				<segment state="initial">
					<source>For developers (other)</source>
					<target>For developers (other)</target>
				</segment>
			</unit>
			<unit id="172" translate="yes">
				<segment state="initial">
					<source>String.Length property</source>
					<target>String.Length property</target>
				</segment>
			</unit>
		</group>
	</file>
</xliff>