<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="de-de" version="2.0" xml:space="preserve" xmlns="urn:oasis:names:tc:xliff:document:2.0">
	<file id="1">
		<mda:metadata>
			<mda:metaGroup>
				<mda:meta type="tool-id">mdxliff</mda:meta>
				<mda:meta type="tool-name">mdxliff</mda:meta>
				<mda:meta type="tool-version">1.0-2eb3c86</mda:meta>
				<mda:meta type="tool-company">Microsoft</mda:meta>
			</mda:metaGroup>
		<mda:metaGroup><mda:meta type="olfilehash">485e11a9ed0e80863e8a3676540f7d27eaa479a1</mda:meta><mda:meta type="olfilepath">wdg-cpub-test\ndolci2\input-and-devices\touch-interactions.md</mda:meta><mda:meta type="oltranslationpriority"></mda:meta><mda:meta type="oltranslationtype">Human Translation</mda:meta><mda:meta type="olskeletonhash">991d859bd0b3651629bcc9291cefe0210f4c0501</mda:meta><mda:meta type="olxliffhash">fd97619c7a0f2bc0578d4dee7f91d046a25c7322</mda:meta></mda:metaGroup></mda:metadata>
		<group id="content">
			<unit id="101" translate="yes">
				<segment state="initial">
					<source>Create Universal Windows Platform (UWP) apps with intuitive and distinctive user interaction experiences that are optimized for touch but are functionally consistent across input devices.</source>
					<target>Create Universal Windows Platform (UWP) apps with intuitive and distinctive user interaction experiences that are optimized for touch but are functionally consistent across input devices.</target>
				</segment>
			</unit>
			<unit id="102" translate="yes">
				<segment state="initial">
					<source>Touch interactions</source>
					<target>Touch interactions</target>
				</segment>
			</unit>
			<unit id="103" translate="yes">
				<segment state="initial">
					<source>Touch interactions</source>
					<target>Touch interactions</target>
				</segment>
			</unit>
			<unit id="104" translate="yes">
				<segment state="initial">
					<source>\[ Updated for UWP apps on Windows 10.</source>
					<target>\[ Updated for UWP apps on Windows 10.</target>
				</segment>
			</unit>
			<unit id="105" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](http://go.microsoft.com/fwlink/p/?linkid=619132)</data>
				</originalData>
				<segment state="initial">
					<source>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</source>
					<target>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</target>
				</segment>
			</unit>
			<unit id="106" translate="yes">
				<segment state="initial">
					<source>Design your app with the expectation that touch will be the primary input method of your users.</source>
					<target>Design your app with the expectation that touch will be the primary input method of your users.</target>
				</segment>
			</unit>
			<unit id="107" translate="yes">
				<segment state="initial">
					<source>If you use UWP controls, support for touchpad, mouse, and pen/stylus requires no additional programming, because UWP apps provide this for free.</source>
					<target>If you use UWP controls, support for touchpad, mouse, and pen/stylus requires no additional programming, because UWP apps provide this for free.</target>
				</segment>
			</unit>
			<unit id="108" translate="yes">
				<segment state="initial">
					<source>However, keep in mind that a UI optimized for touch is not always superior to a traditional UI.</source>
					<target>However, keep in mind that a UI optimized for touch is not always superior to a traditional UI.</target>
				</segment>
			</unit>
			<unit id="109" translate="yes">
				<segment state="initial">
					<source>Both provide advantages and disadvantages that are unique to a technology and application.</source>
					<target>Both provide advantages and disadvantages that are unique to a technology and application.</target>
				</segment>
			</unit>
			<unit id="110" translate="yes">
				<segment state="initial">
					<source>In the move to a touch-first UI, it is important to understand the core differences between touch (including touchpad), pen/stylus, mouse, and keyboard input.</source>
					<target>In the move to a touch-first UI, it is important to understand the core differences between touch (including touchpad), pen/stylus, mouse, and keyboard input.</target>
				</segment>
			</unit>
			<unit id="111" translate="yes">
				<segment state="initial">
					<source>Important APIs</source>
					<target>Important APIs</target>
				</segment>
			</unit>
			<unit id="112" translate="yes">
				<segment state="initial">
					<source>Windows.UI.Xaml.Input</source>
					<target>Windows.UI.Xaml.Input</target>
				</segment>
			</unit>
			<unit id="113" translate="yes">
				<segment state="initial">
					<source>Windows.UI.Core</source>
					<target>Windows.UI.Core</target>
				</segment>
			</unit>
			<unit id="114" translate="yes">
				<segment state="initial">
					<source>Windows.Devices.Input</source>
					<target>Windows.Devices.Input</target>
				</segment>
			</unit>
			<unit id="115" translate="yes">
				<segment state="initial">
					<source>Many devices have multi-touch screens that support using one or more fingers (or touch contacts) as input.</source>
					<target>Many devices have multi-touch screens that support using one or more fingers (or touch contacts) as input.</target>
				</segment>
			</unit>
			<unit id="116" translate="yes">
				<segment state="initial">
					<source>The touch contacts, and their movement, are interpreted as touch gestures and manipulations to support various user interactions.</source>
					<target>The touch contacts, and their movement, are interpreted as touch gestures and manipulations to support various user interactions.</target>
				</segment>
			</unit>
			<unit id="117" translate="yes">
				<segment state="initial">
					<source>The Universal Windows Platform (UWP) includes a number of different mechanisms for handling touch input, enabling you to create an immersive experience that your users can explore with confidence.</source>
					<target>The Universal Windows Platform (UWP) includes a number of different mechanisms for handling touch input, enabling you to create an immersive experience that your users can explore with confidence.</target>
				</segment>
			</unit>
			<unit id="118" translate="yes">
				<segment state="initial">
					<source>Here, we cover the basics of using touch input in a UWP app.</source>
					<target>Here, we cover the basics of using touch input in a UWP app.</target>
				</segment>
			</unit>
			<unit id="119" translate="yes">
				<segment state="initial">
					<source>Touch interactions require three things:</source>
					<target>Touch interactions require three things:</target>
				</segment>
			</unit>
			<unit id="120" translate="yes">
				<segment state="initial">
					<source>A touch-sensitive display.</source>
					<target>A touch-sensitive display.</target>
				</segment>
			</unit>
			<unit id="121" translate="yes">
				<segment state="initial">
					<source>The direct contact (or proximity to, if the display has proximity sensors and supports hover detection) of one or more fingers on that display.</source>
					<target>The direct contact (or proximity to, if the display has proximity sensors and supports hover detection) of one or more fingers on that display.</target>
				</segment>
			</unit>
			<unit id="122" translate="yes">
				<segment state="initial">
					<source>Movement of the touch contacts (or lack thereof, based on a time threshold).</source>
					<target>Movement of the touch contacts (or lack thereof, based on a time threshold).</target>
				</segment>
			</unit>
			<unit id="123" translate="yes">
				<segment state="initial">
					<source>The input data provided by the touch sensor can be:</source>
					<target>The input data provided by the touch sensor can be:</target>
				</segment>
			</unit>
			<unit id="124" translate="yes">
				<segment state="initial">
					<source>Interpreted as a physical gesture for direct manipulation of one or more UI elements (such as panning, rotating, resizing, or moving).</source>
					<target>Interpreted as a physical gesture for direct manipulation of one or more UI elements (such as panning, rotating, resizing, or moving).</target>
				</segment>
			</unit>
			<unit id="125" translate="yes">
				<segment state="initial">
					<source>In contrast, interacting with an element through its properties window, dialog box, or other UI affordance is considered indirect manipulation.</source>
					<target>In contrast, interacting with an element through its properties window, dialog box, or other UI affordance is considered indirect manipulation.</target>
				</segment>
			</unit>
			<unit id="126" translate="yes">
				<segment state="initial">
					<source>Recognized as an alternative input method, such as mouse or pen.</source>
					<target>Recognized as an alternative input method, such as mouse or pen.</target>
				</segment>
			</unit>
			<unit id="127" translate="yes">
				<segment state="initial">
					<source>Used to complement or modify aspects of other input methods, such as smudging an ink stroke drawn with a pen.</source>
					<target>Used to complement or modify aspects of other input methods, such as smudging an ink stroke drawn with a pen.</target>
				</segment>
			</unit>
			<unit id="128" translate="yes">
				<segment state="initial">
					<source>Touch input typically involves the direct manipulation of an element on the screen.</source>
					<target>Touch input typically involves the direct manipulation of an element on the screen.</target>
				</segment>
			</unit>
			<unit id="129" translate="yes">
				<segment state="initial">
					<source>The element responds immediately to any touch contact within its hit test area, and reacts appropriately to any subsequent movement of the touch contacts, including removal.</source>
					<target>The element responds immediately to any touch contact within its hit test area, and reacts appropriately to any subsequent movement of the touch contacts, including removal.</target>
				</segment>
			</unit>
			<unit id="130" translate="yes">
				<segment state="initial">
					<source>Custom touch gestures and interactions should be designed carefully.</source>
					<target>Custom touch gestures and interactions should be designed carefully.</target>
				</segment>
			</unit>
			<unit id="131" translate="yes">
				<segment state="initial">
					<source>They should be intuitive, responsive, and discoverable, and they should let users explore your app with confidence.</source>
					<target>They should be intuitive, responsive, and discoverable, and they should let users explore your app with confidence.</target>
				</segment>
			</unit>
			<unit id="132" translate="yes">
				<segment state="initial">
					<source>Ensure that app functionality is exposed consistently across every supported input device type.</source>
					<target>Ensure that app functionality is exposed consistently across every supported input device type.</target>
				</segment>
			</unit>
			<unit id="133" translate="yes">
				<segment state="initial">
					<source>If necessary, use some form of indirect input mode, such as text input for keyboard interactions, or UI affordances for mouse and pen.</source>
					<target>If necessary, use some form of indirect input mode, such as text input for keyboard interactions, or UI affordances for mouse and pen.</target>
				</segment>
			</unit>
			<unit id="134" translate="yes">
				<segment state="initial">
					<source>Remember that traditional input devices (such as mouse and keyboard), are familiar and appealing to many users.</source>
					<target>Remember that traditional input devices (such as mouse and keyboard), are familiar and appealing to many users.</target>
				</segment>
			</unit>
			<unit id="135" translate="yes">
				<segment state="initial">
					<source>They can offer speed, accuracy, and tactile feedback that touch might not.</source>
					<target>They can offer speed, accuracy, and tactile feedback that touch might not.</target>
				</segment>
			</unit>
			<unit id="136" translate="yes">
				<segment state="initial">
					<source>Providing unique and distinctive interaction experiences for all input devices will support the widest range of capabilities and preferences, appeal to the broadest possible audience, and attract more customers to your app.</source>
					<target>Providing unique and distinctive interaction experiences for all input devices will support the widest range of capabilities and preferences, appeal to the broadest possible audience, and attract more customers to your app.</target>
				</segment>
			</unit>
			<unit id="137" translate="yes">
				<segment state="initial">
					<source>Compare touch interaction requirements</source>
					<target>Compare touch interaction requirements</target>
				</segment>
			</unit>
			<unit id="138" translate="yes">
				<segment state="initial">
					<source>The following table shows some of the differences between input devices that you should consider when you design touch-optimized UWP apps.</source>
					<target>The following table shows some of the differences between input devices that you should consider when you design touch-optimized UWP apps.</target>
				</segment>
			</unit>
			<unit id="139" translate="yes">
				<segment state="initial">
					<source>Factor</source>
					<target>Factor</target>
				</segment>
			</unit>
			<unit id="140" translate="yes">
				<segment state="initial">
					<source>Touch interactions</source>
					<target>Touch interactions</target>
				</segment>
			</unit>
			<unit id="141" translate="yes">
				<segment state="initial">
					<source>Mouse, keyboard, pen/stylus interactions</source>
					<target>Mouse, keyboard, pen/stylus interactions</target>
				</segment>
			</unit>
			<unit id="142" translate="yes">
				<segment state="initial">
					<source>Touchpad</source>
					<target>Touchpad</target>
				</segment>
			</unit>
			<unit id="143" translate="yes">
				<segment state="initial">
					<source>Precision</source>
					<target>Precision</target>
				</segment>
			</unit>
			<unit id="144" translate="yes">
				<segment state="initial">
					<source>The contact area of a fingertip is greater than a single x-y coordinate, which increases the chances of unintended command activations.</source>
					<target>The contact area of a fingertip is greater than a single x-y coordinate, which increases the chances of unintended command activations.</target>
				</segment>
			</unit>
			<unit id="145" translate="yes">
				<segment state="initial">
					<source>The mouse and pen/stylus supply a precise x-y coordinate.</source>
					<target>The mouse and pen/stylus supply a precise x-y coordinate.</target>
				</segment>
			</unit>
			<unit id="146" translate="yes">
				<segment state="initial">
					<source>Same as mouse.</source>
					<target>Same as mouse.</target>
				</segment>
			</unit>
			<unit id="147" translate="yes">
				<segment state="initial">
					<source>The shape  of the contact area changes throughout the movement.</source>
					<target>The shape  of the contact area changes throughout the movement.</target>
				</segment>
			</unit>
			<unit id="148" translate="yes">
				<segment state="initial">
					<source>Mouse movements and pen/stylus strokes supply precise x-y coordinates.</source>
					<target>Mouse movements and pen/stylus strokes supply precise x-y coordinates.</target>
				</segment>
			</unit>
			<unit id="149" translate="yes">
				<segment state="initial">
					<source>Keyboard focus is explicit.</source>
					<target>Keyboard focus is explicit.</target>
				</segment>
			</unit>
			<unit id="150" translate="yes">
				<segment state="initial">
					<source>Same as mouse.</source>
					<target>Same as mouse.</target>
				</segment>
			</unit>
			<unit id="151" translate="yes">
				<segment state="initial">
					<source>There is no mouse cursor to assist with targeting.</source>
					<target>There is no mouse cursor to assist with targeting.</target>
				</segment>
			</unit>
			<unit id="152" translate="yes">
				<segment state="initial">
					<source>The mouse cursor, pen/stylus cursor, and keyboard focus all assist with targeting.</source>
					<target>The mouse cursor, pen/stylus cursor, and keyboard focus all assist with targeting.</target>
				</segment>
			</unit>
			<unit id="153" translate="yes">
				<segment state="initial">
					<source>Same as mouse.</source>
					<target>Same as mouse.</target>
				</segment>
			</unit>
			<unit id="154" translate="yes">
				<segment state="initial">
					<source>Human anatomy</source>
					<target>Human anatomy</target>
				</segment>
			</unit>
			<unit id="155" translate="yes">
				<segment state="initial">
					<source>Fingertip movements are imprecise, because a straight-line motion with one or more fingers is difficult.</source>
					<target>Fingertip movements are imprecise, because a straight-line motion with one or more fingers is difficult.</target>
				</segment>
			</unit>
			<unit id="156" translate="yes">
				<segment state="initial">
					<source>This is due to the curvature of hand joints and the number of joints involved in the motion.</source>
					<target>This is due to the curvature of hand joints and the number of joints involved in the motion.</target>
				</segment>
			</unit>
			<unit id="157" translate="yes">
				<segment state="initial">
					<source>It's easier to perform a straight-line motion with the mouse or pen/stylus because the hand that controls them travels a shorter physical distance than the cursor on the screen.</source>
					<target>It's easier to perform a straight-line motion with the mouse or pen/stylus because the hand that controls them travels a shorter physical distance than the cursor on the screen.</target>
				</segment>
			</unit>
			<unit id="158" translate="yes">
				<segment state="initial">
					<source>Same as mouse.</source>
					<target>Same as mouse.</target>
				</segment>
			</unit>
			<unit id="159" translate="yes">
				<segment state="initial">
					<source>Some areas on the touch surface of a display device can be difficult to reach due to finger posture and the user's grip on the device.</source>
					<target>Some areas on the touch surface of a display device can be difficult to reach due to finger posture and the user's grip on the device.</target>
				</segment>
			</unit>
			<unit id="160" translate="yes">
				<segment state="initial">
					<source>The mouse and pen/stylus can reach any part of the screen while any control should be accessible by the keyboard through tab order.</source>
					<target>The mouse and pen/stylus can reach any part of the screen while any control should be accessible by the keyboard through tab order.</target>
				</segment>
			</unit>
			<unit id="161" translate="yes">
				<segment state="initial">
					<source>Finger posture and grip can be an issue.</source>
					<target>Finger posture and grip can be an issue.</target>
				</segment>
			</unit>
			<unit id="162" translate="yes">
				<segment state="initial">
					<source>Objects might be obscured by one or more fingertips or the user's hand.</source>
					<target>Objects might be obscured by one or more fingertips or the user's hand.</target>
				</segment>
			</unit>
			<unit id="163" translate="yes">
				<segment state="initial">
					<source>This is known as occlusion.</source>
					<target>This is known as occlusion.</target>
				</segment>
			</unit>
			<unit id="164" translate="yes">
				<segment state="initial">
					<source>Indirect input devices do not cause  occlusion.</source>
					<target>Indirect input devices do not cause  occlusion.</target>
				</segment>
			</unit>
			<unit id="165" translate="yes">
				<segment state="initial">
					<source>Same as mouse.</source>
					<target>Same as mouse.</target>
				</segment>
			</unit>
			<unit id="166" translate="yes">
				<segment state="initial">
					<source>Object state</source>
					<target>Object state</target>
				</segment>
			</unit>
			<unit id="167" translate="yes">
				<segment state="initial">
					<source>Touch uses a two-state model: the touch surface of a display device  is either touched (on) or not (off).</source>
					<target>Touch uses a two-state model: the touch surface of a display device  is either touched (on) or not (off).</target>
				</segment>
			</unit>
			<unit id="168" translate="yes">
				<segment state="initial">
					<source>There is no hover state that can trigger additional visual feedback.</source>
					<target>There is no hover state that can trigger additional visual feedback.</target>
				</segment>
			</unit>
			<unit id="169" translate="yes">
				<segment state="initial">
					<source>A mouse, pen/stylus, and keyboard all expose a three-state model: up (off), down (on), and hover (focus).</source>
					<target>A mouse, pen/stylus, and keyboard all expose a three-state model: up (off), down (on), and hover (focus).</target>
				</segment>
			</unit>
			<unit id="170" translate="yes">
				<segment state="initial">
					<source>Hover lets users explore and learn through tooltips  associated with UI elements.</source>
					<target>Hover lets users explore and learn through tooltips  associated with UI elements.</target>
				</segment>
			</unit>
			<unit id="171" translate="yes">
				<segment state="initial">
					<source>Hover and focus effects  can relay which objects are interactive and also help with targeting.</source>
					<target>Hover and focus effects  can relay which objects are interactive and also help with targeting.</target>
				</segment>
			</unit>
			<unit id="172" translate="yes">
				<segment state="initial">
					<source>Same as mouse.</source>
					<target>Same as mouse.</target>
				</segment>
			</unit>
			<unit id="173" translate="yes">
				<segment state="initial">
					<source>Rich interaction</source>
					<target>Rich interaction</target>
				</segment>
			</unit>
			<unit id="174" translate="yes">
				<segment state="initial">
					<source>Supports multi-touch: multiple input points (fingertips) on a touch surface.</source>
					<target>Supports multi-touch: multiple input points (fingertips) on a touch surface.</target>
				</segment>
			</unit>
			<unit id="175" translate="yes">
				<segment state="initial">
					<source>Supports a single input point.</source>
					<target>Supports a single input point.</target>
				</segment>
			</unit>
			<unit id="176" translate="yes">
				<segment state="initial">
					<source>Same as touch.</source>
					<target>Same as touch.</target>
				</segment>
			</unit>
			<unit id="177" translate="yes">
				<segment state="initial">
					<source>Supports direct manipulation of objects through gestures such as tapping, dragging, sliding, pinching, and rotating.</source>
					<target>Supports direct manipulation of objects through gestures such as tapping, dragging, sliding, pinching, and rotating.</target>
				</segment>
			</unit>
			<unit id="178" translate="yes">
				<segment state="initial">
					<source>No support for direct manipulation as mouse, pen/stylus, and keyboard are indirect input devices.</source>
					<target>No support for direct manipulation as mouse, pen/stylus, and keyboard are indirect input devices.</target>
				</segment>
			</unit>
			<unit id="179" translate="yes">
				<segment state="initial">
					<source>Same as mouse.</source>
					<target>Same as mouse.</target>
				</segment>
			</unit>
			<unit id="180" translate="yes">
				<segment state="initial">
					<source>Note</source>
					<target>Note</target>
				</segment>
			</unit>
			<unit id="181" translate="yes">
				<segment state="initial">
					<source>Indirect input has had the benefit of more than 25 years of refinement.</source>
					<target>Indirect input has had the benefit of more than 25 years of refinement.</target>
				</segment>
			</unit>
			<unit id="182" translate="yes">
				<segment state="initial">
					<source>Features such as hover-triggered tooltips have been designed to solve UI exploration specifically for touchpad, mouse, pen/stylus, and keyboard input.</source>
					<target>Features such as hover-triggered tooltips have been designed to solve UI exploration specifically for touchpad, mouse, pen/stylus, and keyboard input.</target>
				</segment>
			</unit>
			<unit id="183" translate="yes">
				<segment state="initial">
					<source>UI features like this have been re-designed for the rich experience provided by touch input, without compromising the user experience for these other devices.</source>
					<target>UI features like this have been re-designed for the rich experience provided by touch input, without compromising the user experience for these other devices.</target>
				</segment>
			</unit>
			<unit id="184" translate="yes">
				<segment state="initial">
					<source>Use touch feedback</source>
					<target>Use touch feedback</target>
				</segment>
			</unit>
			<unit id="185" translate="yes">
				<segment state="initial">
					<source>Appropriate visual feedback during interactions with your app helps users recognize, learn, and adapt to how their interactions are interpreted by both the app and Windows 8.</source>
					<target>Appropriate visual feedback during interactions with your app helps users recognize, learn, and adapt to how their interactions are interpreted by both the app and Windows 8.</target>
				</segment>
			</unit>
			<unit id="186" translate="yes">
				<segment state="initial">
					<source>Visual feedback can indicate successful interactions, relay system status, improve the sense of control, reduce errors, help users understand the system and input device, and encourage interaction.</source>
					<target>Visual feedback can indicate successful interactions, relay system status, improve the sense of control, reduce errors, help users understand the system and input device, and encourage interaction.</target>
				</segment>
			</unit>
			<unit id="187" translate="yes">
				<segment state="initial">
					<source>Visual feedback is critical when the user relies on touch input for activities that require accuracy and precision based on location.</source>
					<target>Visual feedback is critical when the user relies on touch input for activities that require accuracy and precision based on location.</target>
				</segment>
			</unit>
			<unit id="188" translate="yes">
				<segment state="initial">
					<source>Display feedback whenever and wherever touch input is detected, to help the user understand any custom targeting rules that are defined by your app and its controls.</source>
					<target>Display feedback whenever and wherever touch input is detected, to help the user understand any custom targeting rules that are defined by your app and its controls.</target>
				</segment>
			</unit>
			<unit id="189" translate="yes">
				<segment state="initial">
					<source>Targeting</source>
					<target>Targeting</target>
				</segment>
			</unit>
			<unit id="190" translate="yes">
				<segment state="initial">
					<source>Targeting is optimized through:</source>
					<target>Targeting is optimized through:</target>
				</segment>
			</unit>
			<unit id="191" translate="yes">
				<segment state="initial">
					<source>Touch target sizes</source>
					<target>Touch target sizes</target>
				</segment>
			</unit>
			<unit id="192" translate="yes">
				<segment state="initial">
					<source>Clear size guidelines ensure that applications provide a comfortable UI that contains objects and controls that are easy and safe to target.</source>
					<target>Clear size guidelines ensure that applications provide a comfortable UI that contains objects and controls that are easy and safe to target.</target>
				</segment>
			</unit>
			<unit id="193" translate="yes">
				<segment state="initial">
					<source>Contact geometry</source>
					<target>Contact geometry</target>
				</segment>
			</unit>
			<unit id="194" translate="yes">
				<segment state="initial">
					<source>The entire contact area of the finger determines the most likely target object.</source>
					<target>The entire contact area of the finger determines the most likely target object.</target>
				</segment>
			</unit>
			<unit id="195" translate="yes">
				<segment state="initial">
					<source>Scrubbing</source>
					<target>Scrubbing</target>
				</segment>
			</unit>
			<unit id="196" translate="yes">
				<segment state="initial">
					<source>Items within a group are easily re-targeted by dragging the finger between them (for example, radio buttons).</source>
					<target>Items within a group are easily re-targeted by dragging the finger between them (for example, radio buttons).</target>
				</segment>
			</unit>
			<unit id="197" translate="yes">
				<segment state="initial">
					<source>The current item is activated when the touch is released.</source>
					<target>The current item is activated when the touch is released.</target>
				</segment>
			</unit>
			<unit id="198" translate="yes">
				<segment state="initial">
					<source>Rocking</source>
					<target>Rocking</target>
				</segment>
			</unit>
			<unit id="199" translate="yes">
				<segment state="initial">
					<source>Densely packed items (for example, hyperlinks) are easily re-targeted by pressing the finger down and, without sliding, rocking it back and forth over the items.</source>
					<target>Densely packed items (for example, hyperlinks) are easily re-targeted by pressing the finger down and, without sliding, rocking it back and forth over the items.</target>
				</segment>
			</unit>
			<unit id="200" translate="yes">
				<segment state="initial">
					<source>Due to occlusion, the current item is identified through a tooltip or the status bar and is activated when the touch is released.</source>
					<target>Due to occlusion, the current item is identified through a tooltip or the status bar and is activated when the touch is released.</target>
				</segment>
			</unit>
			<unit id="201" translate="yes">
				<segment state="initial">
					<source>Accuracy</source>
					<target>Accuracy</target>
				</segment>
			</unit>
			<unit id="202" translate="yes">
				<segment state="initial">
					<source>Design for sloppy interactions by using:</source>
					<target>Design for sloppy interactions by using:</target>
				</segment>
			</unit>
			<unit id="203" translate="yes">
				<segment state="initial">
					<source>Snap-points that can make it easier to stop at desired locations when users interact with content.</source>
					<target>Snap-points that can make it easier to stop at desired locations when users interact with content.</target>
				</segment>
			</unit>
			<unit id="204" translate="yes">
				<segment state="initial">
					<source>Directional "rails" that can assist with vertical or horizontal panning, even when the hand moves in a slight arc.</source>
					<target>Directional "rails" that can assist with vertical or horizontal panning, even when the hand moves in a slight arc.</target>
				</segment>
			</unit>
			<unit id="205" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](guidelines-for-panning.md)</data>
				</originalData>
				<segment state="initial">
					<source>For more information, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Guidelines for panning</pc>.</source>
					<target>For more information, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Guidelines for panning</pc>.</target>
				</segment>
			</unit>
			<unit id="206" translate="yes">
				<segment state="initial">
					<source>Occlusion</source>
					<target>Occlusion</target>
				</segment>
			</unit>
			<unit id="207" translate="yes">
				<segment state="initial">
					<source>Finger and hand occlusion is avoided through:</source>
					<target>Finger and hand occlusion is avoided through:</target>
				</segment>
			</unit>
			<unit id="208" translate="yes">
				<segment state="initial">
					<source>Size and positioning of UI</source>
					<target>Size and positioning of UI</target>
				</segment>
			</unit>
			<unit id="209" translate="yes">
				<segment state="initial">
					<source>Make UI elements big enough so that they cannot be completely covered by a fingertip contact area.</source>
					<target>Make UI elements big enough so that they cannot be completely covered by a fingertip contact area.</target>
				</segment>
			</unit>
			<unit id="210" translate="yes">
				<segment state="initial">
					<source>Position menus and pop-ups above the contact area whenever possible.</source>
					<target>Position menus and pop-ups above the contact area whenever possible.</target>
				</segment>
			</unit>
			<unit id="211" translate="yes">
				<segment state="initial">
					<source>Tooltips</source>
					<target>Tooltips</target>
				</segment>
			</unit>
			<unit id="212" translate="yes">
				<segment state="initial">
					<source>Show tooltips when a user maintains finger contact on an object.</source>
					<target>Show tooltips when a user maintains finger contact on an object.</target>
				</segment>
			</unit>
			<unit id="213" translate="yes">
				<segment state="initial">
					<source>This is useful for describing object functionality.</source>
					<target>This is useful for describing object functionality.</target>
				</segment>
			</unit>
			<unit id="214" translate="yes">
				<segment state="initial">
					<source>The user can drag the fingertip off the object to avoid invoking the tooltip.</source>
					<target>The user can drag the fingertip off the object to avoid invoking the tooltip.</target>
				</segment>
			</unit>
			<unit id="215" translate="yes">
				<segment state="initial">
					<source>For small objects, offset tooltips so they are not covered by the fingertip contact area.</source>
					<target>For small objects, offset tooltips so they are not covered by the fingertip contact area.</target>
				</segment>
			</unit>
			<unit id="216" translate="yes">
				<segment state="initial">
					<source>This is helpful for targeting.</source>
					<target>This is helpful for targeting.</target>
				</segment>
			</unit>
			<unit id="217" translate="yes">
				<segment state="initial">
					<source>Handles for precision</source>
					<target>Handles for precision</target>
				</segment>
			</unit>
			<unit id="218" translate="yes">
				<segment state="initial">
					<source>Where precision is required (for example, text selection), provide selection handles that are offset to improve accuracy.</source>
					<target>Where precision is required (for example, text selection), provide selection handles that are offset to improve accuracy.</target>
				</segment>
			</unit>
			<unit id="219" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](guidelines-for-textselection.md)</data>
				</originalData>
				<segment state="initial">
					<source>For more information, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Guidelines for selecting text and images (Windows Runtime apps)</pc>.</source>
					<target>For more information, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Guidelines for selecting text and images (Windows Runtime apps)</pc>.</target>
				</segment>
			</unit>
			<unit id="220" translate="yes">
				<segment state="initial">
					<source>Timing</source>
					<target>Timing</target>
				</segment>
			</unit>
			<unit id="221" translate="yes">
				<segment state="initial">
					<source>Avoid timed mode changes in favor of direct manipulation.</source>
					<target>Avoid timed mode changes in favor of direct manipulation.</target>
				</segment>
			</unit>
			<unit id="222" translate="yes">
				<segment state="initial">
					<source>Direct manipulation simulates the direct, real-time physical handling of an object.</source>
					<target>Direct manipulation simulates the direct, real-time physical handling of an object.</target>
				</segment>
			</unit>
			<unit id="223" translate="yes">
				<segment state="initial">
					<source>The object responds as the fingers are moved.</source>
					<target>The object responds as the fingers are moved.</target>
				</segment>
			</unit>
			<unit id="224" translate="yes">
				<segment state="initial">
					<source>A timed interaction, on the other hand, occurs after a touch interaction.</source>
					<target>A timed interaction, on the other hand, occurs after a touch interaction.</target>
				</segment>
			</unit>
			<unit id="225" translate="yes">
				<segment state="initial">
					<source>Timed interactions typically depend on invisible thresholds like time, distance, or speed to determine what command to perform.</source>
					<target>Timed interactions typically depend on invisible thresholds like time, distance, or speed to determine what command to perform.</target>
				</segment>
			</unit>
			<unit id="226" translate="yes">
				<segment state="initial">
					<source>Timed interactions have no visual feedback until the system performs the action.</source>
					<target>Timed interactions have no visual feedback until the system performs the action.</target>
				</segment>
			</unit>
			<unit id="227" translate="yes">
				<segment state="initial">
					<source>Direct manipulation provides a number of benefits over timed interactions:</source>
					<target>Direct manipulation provides a number of benefits over timed interactions:</target>
				</segment>
			</unit>
			<unit id="228" translate="yes">
				<segment state="initial">
					<source>Instant visual feedback during interactions make users feel more engaged, confident, and in control.</source>
					<target>Instant visual feedback during interactions make users feel more engaged, confident, and in control.</target>
				</segment>
			</unit>
			<unit id="229" translate="yes">
				<segment state="initial">
					<source>Direct manipulations make it safer to explore a system because they are reversible—users can easily step back through their actions in a logical and intuitive manner.</source>
					<target>Direct manipulations make it safer to explore a system because they are reversible—users can easily step back through their actions in a logical and intuitive manner.</target>
				</segment>
			</unit>
			<unit id="230" translate="yes">
				<segment state="initial">
					<source>Interactions that directly affect objects and mimic real world interactions are more intuitive, discoverable, and memorable.</source>
					<target>Interactions that directly affect objects and mimic real world interactions are more intuitive, discoverable, and memorable.</target>
				</segment>
			</unit>
			<unit id="231" translate="yes">
				<segment state="initial">
					<source>They don't rely on obscure or abstract interactions.</source>
					<target>They don't rely on obscure or abstract interactions.</target>
				</segment>
			</unit>
			<unit id="232" translate="yes">
				<segment state="initial">
					<source>Timed interactions can be difficult to perform, as users must reach arbitrary and invisible thresholds.</source>
					<target>Timed interactions can be difficult to perform, as users must reach arbitrary and invisible thresholds.</target>
				</segment>
			</unit>
			<unit id="233" translate="yes">
				<segment state="initial">
					<source>In addition, the following are strongly recommended:</source>
					<target>In addition, the following are strongly recommended:</target>
				</segment>
			</unit>
			<unit id="234" translate="yes">
				<segment state="initial">
					<source>Manipulations should not be distinguished by the number of fingers used.</source>
					<target>Manipulations should not be distinguished by the number of fingers used.</target>
				</segment>
			</unit>
			<unit id="235" translate="yes">
				<segment state="initial">
					<source>Interactions should support compound manipulations.</source>
					<target>Interactions should support compound manipulations.</target>
				</segment>
			</unit>
			<unit id="236" translate="yes">
				<segment state="initial">
					<source>For example, pinch to zoom while dragging the fingers to pan.</source>
					<target>For example, pinch to zoom while dragging the fingers to pan.</target>
				</segment>
			</unit>
			<unit id="237" translate="yes">
				<segment state="initial">
					<source>Interactions should not be distinguished by time.</source>
					<target>Interactions should not be distinguished by time.</target>
				</segment>
			</unit>
			<unit id="238" translate="yes">
				<segment state="initial">
					<source>The same interaction should have the same outcome regardless of the time taken to perform it.</source>
					<target>The same interaction should have the same outcome regardless of the time taken to perform it.</target>
				</segment>
			</unit>
			<unit id="239" translate="yes">
				<segment state="initial">
					<source>Time-based activations introduce mandatory delays for users and detract from both the immersive nature of direct manipulation and the perception of system responsiveness.</source>
					<target>Time-based activations introduce mandatory delays for users and detract from both the immersive nature of direct manipulation and the perception of system responsiveness.</target>
				</segment>
			</unit>
			<unit id="240" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  An exception to this is where you use specific timed interactions to assist in learning and exploration (for example, press and hold).</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  An exception to this is where you use specific timed interactions to assist in learning and exploration (for example, press and hold).</target>
				</segment>
			</unit>
			<unit id="241" translate="yes">
				<segment state="initial">
					<source>Appropriate descriptions and visual cues have a great effect on the use of advanced interactions.</source>
					<target>Appropriate descriptions and visual cues have a great effect on the use of advanced interactions.</target>
				</segment>
			</unit>
			<unit id="242" translate="yes">
				<segment state="initial">
					<source>App views</source>
					<target>App views</target>
				</segment>
			</unit>
			<unit id="243" translate="yes">
				<segment state="initial">
					<source>Tweak the user interaction experience through the pan/scroll and zoom settings of your app views.</source>
					<target>Tweak the user interaction experience through the pan/scroll and zoom settings of your app views.</target>
				</segment>
			</unit>
			<unit id="244" translate="yes">
				<segment state="initial">
					<source>An app view dictates how a user accesses and manipulates your app and its content.</source>
					<target>An app view dictates how a user accesses and manipulates your app and its content.</target>
				</segment>
			</unit>
			<unit id="245" translate="yes">
				<segment state="initial">
					<source>Views also provide behaviors such as inertia, content boundary bounce, and snap points.</source>
					<target>Views also provide behaviors such as inertia, content boundary bounce, and snap points.</target>
				</segment>
			</unit>
			<unit id="246" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br209527)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Pan and scroll settings of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ScrollViewer</pc></pc> control dictate how users navigate within a single view, when the content of the view doesn't fit within the viewport.</source>
					<target>Pan and scroll settings of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ScrollViewer</pc></pc> control dictate how users navigate within a single view, when the content of the view doesn't fit within the viewport.</target>
				</segment>
			</unit>
			<unit id="247" translate="yes">
				<segment state="initial">
					<source>A single view can be, for example, a page of a magazine or book, the folder structure of a computer, a library of documents, or a photo album.</source>
					<target>A single view can be, for example, a page of a magazine or book, the folder structure of a computer, a library of documents, or a photo album.</target>
				</segment>
			</unit>
			<unit id="248" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br209527)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/hh702601)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>Zoom settings apply to both optical zoom (supported by the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ScrollViewer</pc></pc> control) and the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Semantic Zoom</pc></pc> control.</source>
					<target>Zoom settings apply to both optical zoom (supported by the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ScrollViewer</pc></pc> control) and the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Semantic Zoom</pc></pc> control.</target>
				</segment>
			</unit>
			<unit id="249" translate="yes">
				<segment state="initial">
					<source>Semantic Zoom is a touch-optimized technique for presenting and navigating large sets of related data or content within a single view.</source>
					<target>Semantic Zoom is a touch-optimized technique for presenting and navigating large sets of related data or content within a single view.</target>
				</segment>
			</unit>
			<unit id="250" translate="yes">
				<segment state="initial">
					<source>It works by using two distinct modes of classification, or zoom levels.</source>
					<target>It works by using two distinct modes of classification, or zoom levels.</target>
				</segment>
			</unit>
			<unit id="251" translate="yes">
				<segment state="initial">
					<source>This is analogous to panning and scrolling within a single view.</source>
					<target>This is analogous to panning and scrolling within a single view.</target>
				</segment>
			</unit>
			<unit id="252" translate="yes">
				<segment state="initial">
					<source>Panning and scrolling can be used in conjunction with Semantic Zoom.</source>
					<target>Panning and scrolling can be used in conjunction with Semantic Zoom.</target>
				</segment>
			</unit>
			<unit id="253" translate="yes">
				<segment state="initial">
					<source>Use app views and events to modify the pan/scroll and zoom behaviors.</source>
					<target>Use app views and events to modify the pan/scroll and zoom behaviors.</target>
				</segment>
			</unit>
			<unit id="254" translate="yes">
				<segment state="initial">
					<source>This can provide a smoother interaction experience than is possible through the handling of pointer and gesture events.</source>
					<target>This can provide a smoother interaction experience than is possible through the handling of pointer and gesture events.</target>
				</segment>
			</unit>
			<unit id="255" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/mt228348)</data>
				</originalData>
				<segment state="initial">
					<source>For more info about app views, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Controls, layouts, and text</pc>.</source>
					<target>For more info about app views, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Controls, layouts, and text</pc>.</target>
				</segment>
			</unit>
			<unit id="256" translate="yes">
				<segment state="initial">
					<source>Custom touch interactions</source>
					<target>Custom touch interactions</target>
				</segment>
			</unit>
			<unit id="257" translate="yes">
				<segment state="initial">
					<source>If you implement your own interaction support, keep in mind that users expect an intuitive experience involving direct interaction with the UI elements in your app.</source>
					<target>If you implement your own interaction support, keep in mind that users expect an intuitive experience involving direct interaction with the UI elements in your app.</target>
				</segment>
			</unit>
			<unit id="258" translate="yes">
				<segment state="initial">
					<source>We recommend that you model your custom interactions on the platform control libraries to keep things consistent and discoverable.</source>
					<target>We recommend that you model your custom interactions on the platform control libraries to keep things consistent and discoverable.</target>
				</segment>
			</unit>
			<unit id="259" translate="yes">
				<segment state="initial">
					<source>The controls in these libraries provide the full user interaction experience, including standard interactions, animated physics effects, visual feedback, and accessibility.</source>
					<target>The controls in these libraries provide the full user interaction experience, including standard interactions, animated physics effects, visual feedback, and accessibility.</target>
				</segment>
			</unit>
			<unit id="260" translate="yes">
				<segment state="initial">
					<source>Create custom interactions only if there is a clear, well-defined requirement and basic interactions don't support your scenario.</source>
					<target>Create custom interactions only if there is a clear, well-defined requirement and basic interactions don't support your scenario.</target>
				</segment>
			</unit>
			<unit id="261" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br208911)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>To provide customized touch support, you can handle various <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">UIElement</pc></pc> events.</source>
					<target>To provide customized touch support, you can handle various <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">UIElement</pc></pc> events.</target>
				</segment>
			</unit>
			<unit id="262" translate="yes">
				<segment state="initial">
					<source>These events are grouped into three levels of abstraction.</source>
					<target>These events are grouped into three levels of abstraction.</target>
				</segment>
			</unit>
			<unit id="263" translate="yes">
				<segment state="initial">
					<source>Static gesture events are triggered after an interaction is complete.</source>
					<target>Static gesture events are triggered after an interaction is complete.</target>
				</segment>
			</unit>
			<unit id="264" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br208985)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/br208922)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
					<data id="id9">[</data>
					<data id="id10">](https://msdn.microsoft.com/library/windows/apps/br208984)</data>
					<data id="id11">**</data>
					<data id="id12">**</data>
					<data id="id13">[</data>
					<data id="id14">](https://msdn.microsoft.com/library/windows/apps/br208928)</data>
					<data id="id15">**</data>
					<data id="id16">**</data>
				</originalData>
				<segment state="initial">
					<source>Gesture events include <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Tapped</pc></pc>, <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">DoubleTapped</pc></pc>, <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">RightTapped</pc></pc>, and <pc dataRefEnd="id14" dataRefStart="id13" id="p7"><pc dataRefEnd="id16" dataRefStart="id15" id="p8">Holding</pc></pc>.</source>
					<target>Gesture events include <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Tapped</pc></pc>, <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">DoubleTapped</pc></pc>, <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">RightTapped</pc></pc>, and <pc dataRefEnd="id14" dataRefStart="id13" id="p7"><pc dataRefEnd="id16" dataRefStart="id15" id="p8">Holding</pc></pc>.</target>
				</segment>
			</unit>
			<unit id="265" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br208939)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/br208931)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
					<data id="id9">[</data>
					<data id="id10">](https://msdn.microsoft.com/library/windows/apps/br208937)</data>
					<data id="id11">**</data>
					<data id="id12">**</data>
					<data id="id13">[</data>
					<data id="id14">](https://msdn.microsoft.com/library/windows/apps/br208935)</data>
					<data id="id15">**</data>
					<data id="id16">**</data>
					<data id="id17">**</data>
					<data id="id18">**</data>
				</originalData>
				<segment state="initial">
					<source>You can disable gesture events on specific elements by setting <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">IsTapEnabled</pc></pc>, <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">IsDoubleTapEnabled</pc></pc>, <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">IsRightTapEnabled</pc></pc>, and <pc dataRefEnd="id14" dataRefStart="id13" id="p7"><pc dataRefEnd="id16" dataRefStart="id15" id="p8">IsHoldingEnabled</pc></pc> to <pc dataRefEnd="id18" dataRefStart="id17" id="p9">false</pc>.</source>
					<target>You can disable gesture events on specific elements by setting <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">IsTapEnabled</pc></pc>, <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">IsDoubleTapEnabled</pc></pc>, <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">IsRightTapEnabled</pc></pc>, and <pc dataRefEnd="id14" dataRefStart="id13" id="p7"><pc dataRefEnd="id16" dataRefStart="id15" id="p8">IsHoldingEnabled</pc></pc> to <pc dataRefEnd="id18" dataRefStart="id17" id="p9">false</pc>.</target>
				</segment>
			</unit>
			<unit id="266" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br208971)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/br208970)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>Pointer events such as <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">PointerPressed</pc></pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">PointerMoved</pc></pc> provide low-level details for each touch contact, including pointer motion and the ability to distinguish press and release events.</source>
					<target>Pointer events such as <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">PointerPressed</pc></pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">PointerMoved</pc></pc> provide low-level details for each touch contact, including pointer motion and the ability to distinguish press and release events.</target>
				</segment>
			</unit>
			<unit id="267" translate="yes">
				<segment state="initial">
					<source>A pointer is a generic input type with a unified event mechanism.</source>
					<target>A pointer is a generic input type with a unified event mechanism.</target>
				</segment>
			</unit>
			<unit id="268" translate="yes">
				<segment state="initial">
					<source>It exposes basic info, such as screen position, on the active input source, which can be touch, touchpad, mouse, or pen.</source>
					<target>It exposes basic info, such as screen position, on the active input source, which can be touch, touchpad, mouse, or pen.</target>
				</segment>
			</unit>
			<unit id="269" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br208950)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Manipulation gesture events, such as <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ManipulationStarted</pc></pc>, indicate an ongoing interaction.</source>
					<target>Manipulation gesture events, such as <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ManipulationStarted</pc></pc>, indicate an ongoing interaction.</target>
				</segment>
			</unit>
			<unit id="270" translate="yes">
				<segment state="initial">
					<source>They start firing when the user touches an element and continue until the user lifts their finger(s), or the manipulation is canceled.</source>
					<target>They start firing when the user touches an element and continue until the user lifts their finger(s), or the manipulation is canceled.</target>
				</segment>
			</unit>
			<unit id="271" translate="yes">
				<segment state="initial">
					<source>Manipulation events include multi-touch interactions such as zooming, panning, or rotating, and interactions that use inertia and velocity data such as dragging.</source>
					<target>Manipulation events include multi-touch interactions such as zooming, panning, or rotating, and interactions that use inertia and velocity data such as dragging.</target>
				</segment>
			</unit>
			<unit id="272" translate="yes">
				<segment state="initial">
					<source>The information provided by the manipulation events doesn't identify the form of the interaction that was performed, but rather includes data such as position, translation delta, and velocity.</source>
					<target>The information provided by the manipulation events doesn't identify the form of the interaction that was performed, but rather includes data such as position, translation delta, and velocity.</target>
				</segment>
			</unit>
			<unit id="273" translate="yes">
				<segment state="initial">
					<source>You can use this touch data to determine the type of interaction that should be performed.</source>
					<target>You can use this touch data to determine the type of interaction that should be performed.</target>
				</segment>
			</unit>
			<unit id="274" translate="yes">
				<segment state="initial">
					<source>Here is the basic set of touch gestures supported by the UWP.</source>
					<target>Here is the basic set of touch gestures supported by the UWP.</target>
				</segment>
			</unit>
			<unit id="275" translate="yes">
				<segment state="initial">
					<source>Name</source>
					<target>Name</target>
				</segment>
			</unit>
			<unit id="276" translate="yes">
				<segment state="initial">
					<source>Type</source>
					<target>Type</target>
				</segment>
			</unit>
			<unit id="277" translate="yes">
				<segment state="initial">
					<source>Description</source>
					<target>Description</target>
				</segment>
			</unit>
			<unit id="278" translate="yes">
				<segment state="initial">
					<source>Tap</source>
					<target>Tap</target>
				</segment>
			</unit>
			<unit id="279" translate="yes">
				<segment state="initial">
					<source>Static gesture</source>
					<target>Static gesture</target>
				</segment>
			</unit>
			<unit id="280" translate="yes">
				<segment state="initial">
					<source>One finger touches the screen and lifts up.</source>
					<target>One finger touches the screen and lifts up.</target>
				</segment>
			</unit>
			<unit id="281" translate="yes">
				<segment state="initial">
					<source>Press and hold</source>
					<target>Press and hold</target>
				</segment>
			</unit>
			<unit id="282" translate="yes">
				<segment state="initial">
					<source>Static gesture</source>
					<target>Static gesture</target>
				</segment>
			</unit>
			<unit id="283" translate="yes">
				<segment state="initial">
					<source>One finger touches the screen and stays in place.</source>
					<target>One finger touches the screen and stays in place.</target>
				</segment>
			</unit>
			<unit id="284" translate="yes">
				<segment state="initial">
					<source>Slide</source>
					<target>Slide</target>
				</segment>
			</unit>
			<unit id="285" translate="yes">
				<segment state="initial">
					<source>Manipulation gesture</source>
					<target>Manipulation gesture</target>
				</segment>
			</unit>
			<unit id="286" translate="yes">
				<segment state="initial">
					<source>One or more fingers touch the screen and move in the same direction.</source>
					<target>One or more fingers touch the screen and move in the same direction.</target>
				</segment>
			</unit>
			<unit id="287" translate="yes">
				<segment state="initial">
					<source>Swipe</source>
					<target>Swipe</target>
				</segment>
			</unit>
			<unit id="288" translate="yes">
				<segment state="initial">
					<source>Manipulation gesture</source>
					<target>Manipulation gesture</target>
				</segment>
			</unit>
			<unit id="289" translate="yes">
				<segment state="initial">
					<source>One or more fingers touch the screen and move a short distance in the same direction.</source>
					<target>One or more fingers touch the screen and move a short distance in the same direction.</target>
				</segment>
			</unit>
			<unit id="290" translate="yes">
				<segment state="initial">
					<source>Turn</source>
					<target>Turn</target>
				</segment>
			</unit>
			<unit id="291" translate="yes">
				<segment state="initial">
					<source>Manipulation gesture</source>
					<target>Manipulation gesture</target>
				</segment>
			</unit>
			<unit id="292" translate="yes">
				<segment state="initial">
					<source>Two or more fingers touch the screen and move in a clockwise or counter-clockwise arc.</source>
					<target>Two or more fingers touch the screen and move in a clockwise or counter-clockwise arc.</target>
				</segment>
			</unit>
			<unit id="293" translate="yes">
				<segment state="initial">
					<source>Pinch</source>
					<target>Pinch</target>
				</segment>
			</unit>
			<unit id="294" translate="yes">
				<segment state="initial">
					<source>Manipulation gesture</source>
					<target>Manipulation gesture</target>
				</segment>
			</unit>
			<unit id="295" translate="yes">
				<segment state="initial">
					<source>Two or more fingers touch the screen and move closer together.</source>
					<target>Two or more fingers touch the screen and move closer together.</target>
				</segment>
			</unit>
			<unit id="296" translate="yes">
				<segment state="initial">
					<source>Stretch</source>
					<target>Stretch</target>
				</segment>
			</unit>
			<unit id="297" translate="yes">
				<segment state="initial">
					<source>Manipulation gesture</source>
					<target>Manipulation gesture</target>
				</segment>
			</unit>
			<unit id="298" translate="yes">
				<segment state="initial">
					<source>Two or more fingers touch the screen and move farther apart.</source>
					<target>Two or more fingers touch the screen and move farther apart.</target>
				</segment>
			</unit>
			<unit id="299" translate="yes">
				<segment state="initial">
					<source>Gesture events</source>
					<target>Gesture events</target>
				</segment>
			</unit>
			<unit id="300" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/mt185406)</data>
				</originalData>
				<segment state="initial">
					<source>For details about individual controls, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Controls list</pc>.</source>
					<target>For details about individual controls, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Controls list</pc>.</target>
				</segment>
			</unit>
			<unit id="301" translate="yes">
				<segment state="initial">
					<source>Pointer events</source>
					<target>Pointer events</target>
				</segment>
			</unit>
			<unit id="302" translate="yes">
				<segment state="initial">
					<source>Pointer events are raised by a variety of active input sources, including touch, touchpad, pen, and mouse (they replace traditional mouse events.)</source>
					<target>Pointer events are raised by a variety of active input sources, including touch, touchpad, pen, and mouse (they replace traditional mouse events.)</target>
				</segment>
			</unit>
			<unit id="303" translate="yes">
				<segment state="initial">
					<source>Pointer events are based on a single input point (finger, pen tip, mouse cursor) and do not support velocity-based interactions.</source>
					<target>Pointer events are based on a single input point (finger, pen tip, mouse cursor) and do not support velocity-based interactions.</target>
				</segment>
			</unit>
			<unit id="304" translate="yes">
				<segment state="initial">
					<source>Here is a list of pointer events and their related event argument.</source>
					<target>Here is a list of pointer events and their related event argument.</target>
				</segment>
			</unit>
			<unit id="305" translate="yes">
				<segment state="initial">
					<source>Event or class</source>
					<target>Event or class</target>
				</segment>
			</unit>
			<unit id="306" translate="yes">
				<segment state="initial">
					<source>Description</source>
					<target>Description</target>
				</segment>
			</unit>
			<unit id="307" translate="yes">
				<segment state="initial">
					<source>PointerPressed</source>
					<target>PointerPressed</target>
				</segment>
			</unit>
			<unit id="308" translate="yes">
				<segment state="initial">
					<source>Occurs when a single finger touches the screen.</source>
					<target>Occurs when a single finger touches the screen.</target>
				</segment>
			</unit>
			<unit id="309" translate="yes">
				<segment state="initial">
					<source>PointerReleased</source>
					<target>PointerReleased</target>
				</segment>
			</unit>
			<unit id="310" translate="yes">
				<segment state="initial">
					<source>Occurs when that same touch contact is lifted.</source>
					<target>Occurs when that same touch contact is lifted.</target>
				</segment>
			</unit>
			<unit id="311" translate="yes">
				<segment state="initial">
					<source>PointerMoved</source>
					<target>PointerMoved</target>
				</segment>
			</unit>
			<unit id="312" translate="yes">
				<segment state="initial">
					<source>Occurs when the pointer is dragged across the screen.</source>
					<target>Occurs when the pointer is dragged across the screen.</target>
				</segment>
			</unit>
			<unit id="313" translate="yes">
				<segment state="initial">
					<source>PointerEntered</source>
					<target>PointerEntered</target>
				</segment>
			</unit>
			<unit id="314" translate="yes">
				<segment state="initial">
					<source>Occurs when a pointer enters the hit test area of an element.</source>
					<target>Occurs when a pointer enters the hit test area of an element.</target>
				</segment>
			</unit>
			<unit id="315" translate="yes">
				<segment state="initial">
					<source>PointerExited</source>
					<target>PointerExited</target>
				</segment>
			</unit>
			<unit id="316" translate="yes">
				<segment state="initial">
					<source>Occurs when a pointer exits the hit test area of an element.</source>
					<target>Occurs when a pointer exits the hit test area of an element.</target>
				</segment>
			</unit>
			<unit id="317" translate="yes">
				<segment state="initial">
					<source>PointerCanceled</source>
					<target>PointerCanceled</target>
				</segment>
			</unit>
			<unit id="318" translate="yes">
				<segment state="initial">
					<source>Occurs when a touch contact is abnormally lost.</source>
					<target>Occurs when a touch contact is abnormally lost.</target>
				</segment>
			</unit>
			<unit id="319" translate="yes">
				<segment state="initial">
					<source>PointerCaptureLost</source>
					<target>PointerCaptureLost</target>
				</segment>
			</unit>
			<unit id="320" translate="yes">
				<segment state="initial">
					<source>Occurs when a pointer capture is taken by another element.</source>
					<target>Occurs when a pointer capture is taken by another element.</target>
				</segment>
			</unit>
			<unit id="321" translate="yes">
				<segment state="initial">
					<source>PointerWheelChanged</source>
					<target>PointerWheelChanged</target>
				</segment>
			</unit>
			<unit id="322" translate="yes">
				<segment state="initial">
					<source>Occurs when the delta value of a mouse wheel changes.</source>
					<target>Occurs when the delta value of a mouse wheel changes.</target>
				</segment>
			</unit>
			<unit id="323" translate="yes">
				<segment state="initial">
					<source>PointerRoutedEventArgs</source>
					<target>PointerRoutedEventArgs</target>
				</segment>
			</unit>
			<unit id="324" translate="yes">
				<segment state="initial">
					<source>Provides data for all pointer events.</source>
					<target>Provides data for all pointer events.</target>
				</segment>
			</unit>
			<unit id="325" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br208971)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/br208972)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
					<data id="id9">[</data>
					<data id="id10">](https://msdn.microsoft.com/library/windows/apps/br208969)</data>
					<data id="id11">**</data>
					<data id="id12">**</data>
					<data id="id13">[</data>
					<data id="id14">](https://msdn.microsoft.com/library/windows/apps/br243371)</data>
					<data id="id15">**</data>
					<data id="id16">**</data>
				</originalData>
				<segment state="initial">
					<source>The following example shows how to use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">PointerPressed</pc></pc>, <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">PointerReleased</pc></pc>, and <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">PointerExited</pc></pc> events to handle a tap interaction on a <pc dataRefEnd="id14" dataRefStart="id13" id="p7"><pc dataRefEnd="id16" dataRefStart="id15" id="p8">Rectangle</pc></pc> object.</source>
					<target>The following example shows how to use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">PointerPressed</pc></pc>, <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">PointerReleased</pc></pc>, and <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">PointerExited</pc></pc> events to handle a tap interaction on a <pc dataRefEnd="id14" dataRefStart="id13" id="p7"><pc dataRefEnd="id16" dataRefStart="id15" id="p8">Rectangle</pc></pc> object.</target>
				</segment>
			</unit>
			<unit id="326" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br243371)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">`touchRectangle`</data>
				</originalData>
				<segment state="initial">
					<source>First, a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Rectangle</pc></pc> named <ph dataRef="id5" id="ph1" /> is created in Extensible Application Markup Language (XAML).</source>
					<target>First, a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Rectangle</pc></pc> named <ph dataRef="id5" id="ph1" /> is created in Extensible Application Markup Language (XAML).</target>
				</segment>
			</unit>
			<unit id="327" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br208971)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/br208972)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
					<data id="id9">[</data>
					<data id="id10">](https://msdn.microsoft.com/library/windows/apps/br208969)</data>
					<data id="id11">**</data>
					<data id="id12">**</data>
				</originalData>
				<segment state="initial">
					<source>Next, listeners for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">PointerPressed</pc></pc>, <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">PointerReleased</pc></pc>, and <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">PointerExited</pc></pc> events are specified.</source>
					<target>Next, listeners for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">PointerPressed</pc></pc>, <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">PointerReleased</pc></pc>, and <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">PointerExited</pc></pc> events are specified.</target>
				</segment>
			</unit>
			<unit id="328" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br208971)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/br208718)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
					<data id="id9">[</data>
					<data id="id10">](https://msdn.microsoft.com/library/windows/apps/br208751)</data>
					<data id="id11">**</data>
					<data id="id12">**</data>
					<data id="id13">[</data>
					<data id="id14">](https://msdn.microsoft.com/library/windows/apps/br243371)</data>
					<data id="id15">**</data>
					<data id="id16">**</data>
					<data id="id17">[</data>
					<data id="id18">](https://msdn.microsoft.com/library/windows/apps/br208972)</data>
					<data id="id19">**</data>
					<data id="id20">**</data>
					<data id="id21">[</data>
					<data id="id22">](https://msdn.microsoft.com/library/windows/apps/br208969)</data>
					<data id="id23">**</data>
					<data id="id24">**</data>
					<data id="id25">**</data>
					<data id="id26">**</data>
					<data id="id27">**</data>
					<data id="id28">**</data>
				</originalData>
				<segment state="initial">
					<source>Finally, the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">PointerPressed</pc></pc> event handler increases the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Height</pc></pc> and <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">Width</pc></pc> of the <pc dataRefEnd="id14" dataRefStart="id13" id="p7"><pc dataRefEnd="id16" dataRefStart="id15" id="p8">Rectangle</pc></pc>, while the <pc dataRefEnd="id18" dataRefStart="id17" id="p9"><pc dataRefEnd="id20" dataRefStart="id19" id="p10">PointerReleased</pc></pc> and <pc dataRefEnd="id22" dataRefStart="id21" id="p11"><pc dataRefEnd="id24" dataRefStart="id23" id="p12">PointerExited</pc></pc> event handlers set the <pc dataRefEnd="id26" dataRefStart="id25" id="p13">Height</pc> and <pc dataRefEnd="id28" dataRefStart="id27" id="p14">Width</pc> back to their starting values.</source>
					<target>Finally, the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">PointerPressed</pc></pc> event handler increases the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Height</pc></pc> and <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">Width</pc></pc> of the <pc dataRefEnd="id14" dataRefStart="id13" id="p7"><pc dataRefEnd="id16" dataRefStart="id15" id="p8">Rectangle</pc></pc>, while the <pc dataRefEnd="id18" dataRefStart="id17" id="p9"><pc dataRefEnd="id20" dataRefStart="id19" id="p10">PointerReleased</pc></pc> and <pc dataRefEnd="id22" dataRefStart="id21" id="p11"><pc dataRefEnd="id24" dataRefStart="id23" id="p12">PointerExited</pc></pc> event handlers set the <pc dataRefEnd="id26" dataRefStart="id25" id="p13">Height</pc> and <pc dataRefEnd="id28" dataRefStart="id27" id="p14">Width</pc> back to their starting values.</target>
				</segment>
			</unit>
			<unit id="329" translate="yes">
				<segment state="initial">
					<source>Manipulation events</source>
					<target>Manipulation events</target>
				</segment>
			</unit>
			<unit id="330" translate="yes">
				<segment state="initial">
					<source>Use manipulation events if you need to support multiple finger interactions in your app, or interactions that require velocity data.</source>
					<target>Use manipulation events if you need to support multiple finger interactions in your app, or interactions that require velocity data.</target>
				</segment>
			</unit>
			<unit id="331" translate="yes">
				<segment state="initial">
					<source>You can use manipulation events to detect interactions such as drag, zoom, and hold.</source>
					<target>You can use manipulation events to detect interactions such as drag, zoom, and hold.</target>
				</segment>
			</unit>
			<unit id="332" translate="yes">
				<segment state="initial">
					<source>Here is a list of manipulation events and related event arguments.</source>
					<target>Here is a list of manipulation events and related event arguments.</target>
				</segment>
			</unit>
			<unit id="333" translate="yes">
				<segment state="initial">
					<source>Event or class</source>
					<target>Event or class</target>
				</segment>
			</unit>
			<unit id="334" translate="yes">
				<segment state="initial">
					<source>Description</source>
					<target>Description</target>
				</segment>
			</unit>
			<unit id="335" translate="yes">
				<segment state="initial">
					<source>ManipulationStarting event</source>
					<target>ManipulationStarting event</target>
				</segment>
			</unit>
			<unit id="336" translate="yes">
				<segment state="initial">
					<source>Occurs when the manipulation processor is first created.</source>
					<target>Occurs when the manipulation processor is first created.</target>
				</segment>
			</unit>
			<unit id="337" translate="yes">
				<segment state="initial">
					<source>ManipulationStarted event</source>
					<target>ManipulationStarted event</target>
				</segment>
			</unit>
			<unit id="338" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br208911)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Occurs when an input device begins a manipulation on the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">UIElement</pc></pc>.</source>
					<target>Occurs when an input device begins a manipulation on the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">UIElement</pc></pc>.</target>
				</segment>
			</unit>
			<unit id="339" translate="yes">
				<segment state="initial">
					<source>ManipulationDelta event</source>
					<target>ManipulationDelta event</target>
				</segment>
			</unit>
			<unit id="340" translate="yes">
				<segment state="initial">
					<source>Occurs when the input device changes position during a manipulation.</source>
					<target>Occurs when the input device changes position during a manipulation.</target>
				</segment>
			</unit>
			<unit id="341" translate="yes">
				<segment state="initial">
					<source>ManipulationInertiaStarting event</source>
					<target>ManipulationInertiaStarting event</target>
				</segment>
			</unit>
			<unit id="342" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br208911)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Occurs when the input device loses contact with the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">UIElement</pc></pc> object during a manipulation and inertia begins.</source>
					<target>Occurs when the input device loses contact with the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">UIElement</pc></pc> object during a manipulation and inertia begins.</target>
				</segment>
			</unit>
			<unit id="343" translate="yes">
				<segment state="initial">
					<source>ManipulationCompleted event</source>
					<target>ManipulationCompleted event</target>
				</segment>
			</unit>
			<unit id="344" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br208911)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Occurs when a manipulation and inertia on the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">UIElement</pc></pc> are complete.</source>
					<target>Occurs when a manipulation and inertia on the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">UIElement</pc></pc> are complete.</target>
				</segment>
			</unit>
			<unit id="345" translate="yes">
				<segment state="initial">
					<source>ManipulationStartingRoutedEventArgs</source>
					<target>ManipulationStartingRoutedEventArgs</target>
				</segment>
			</unit>
			<unit id="346" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br208951)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Provides data for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ManipulationStarting</pc></pc> event.</source>
					<target>Provides data for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ManipulationStarting</pc></pc> event.</target>
				</segment>
			</unit>
			<unit id="347" translate="yes">
				<segment state="initial">
					<source>ManipulationStartedRoutedEventArgs</source>
					<target>ManipulationStartedRoutedEventArgs</target>
				</segment>
			</unit>
			<unit id="348" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br208950)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Provides data for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ManipulationStarted</pc></pc> event.</source>
					<target>Provides data for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ManipulationStarted</pc></pc> event.</target>
				</segment>
			</unit>
			<unit id="349" translate="yes">
				<segment state="initial">
					<source>ManipulationDeltaRoutedEventArgs</source>
					<target>ManipulationDeltaRoutedEventArgs</target>
				</segment>
			</unit>
			<unit id="350" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br208946)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Provides data for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ManipulationDelta</pc></pc> event.</source>
					<target>Provides data for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ManipulationDelta</pc></pc> event.</target>
				</segment>
			</unit>
			<unit id="351" translate="yes">
				<segment state="initial">
					<source>ManipulationInertiaStartingRoutedEventArgs</source>
					<target>ManipulationInertiaStartingRoutedEventArgs</target>
				</segment>
			</unit>
			<unit id="352" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br208947)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Provides data for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ManipulationInertiaStarting</pc></pc> event.</source>
					<target>Provides data for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ManipulationInertiaStarting</pc></pc> event.</target>
				</segment>
			</unit>
			<unit id="353" translate="yes">
				<segment state="initial">
					<source>ManipulationVelocities</source>
					<target>ManipulationVelocities</target>
				</segment>
			</unit>
			<unit id="354" translate="yes">
				<segment state="initial">
					<source>Describes the speed at which manipulations occur.</source>
					<target>Describes the speed at which manipulations occur.</target>
				</segment>
			</unit>
			<unit id="355" translate="yes">
				<segment state="initial">
					<source>ManipulationCompletedRoutedEventArgs</source>
					<target>ManipulationCompletedRoutedEventArgs</target>
				</segment>
			</unit>
			<unit id="356" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br208945)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Provides data for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ManipulationCompleted</pc></pc> event.</source>
					<target>Provides data for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ManipulationCompleted</pc></pc> event.</target>
				</segment>
			</unit>
			<unit id="357" translate="yes">
				<segment state="initial">
					<source>A gesture consists of a series of manipulation events.</source>
					<target>A gesture consists of a series of manipulation events.</target>
				</segment>
			</unit>
			<unit id="358" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br208950)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Each gesture starts with a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ManipulationStarted</pc></pc> event, such as when a user touches the screen.</source>
					<target>Each gesture starts with a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ManipulationStarted</pc></pc> event, such as when a user touches the screen.</target>
				</segment>
			</unit>
			<unit id="359" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br208946)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Next, one or more <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ManipulationDelta</pc></pc> events are fired.</source>
					<target>Next, one or more <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ManipulationDelta</pc></pc> events are fired.</target>
				</segment>
			</unit>
			<unit id="360" translate="yes">
				<segment state="initial">
					<source>For example, if you touch the screen and then drag your finger across the screen.</source>
					<target>For example, if you touch the screen and then drag your finger across the screen.</target>
				</segment>
			</unit>
			<unit id="361" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br208945)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Finally, a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ManipulationCompleted</pc></pc> event is raised when the interaction finishes.</source>
					<target>Finally, a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ManipulationCompleted</pc></pc> event is raised when the interaction finishes.</target>
				</segment>
			</unit>
			<unit id="362" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  If you don't have a touch-screen monitor, you can test your manipulation event code in the simulator using a mouse and mouse wheel interface.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  If you don't have a touch-screen monitor, you can test your manipulation event code in the simulator using a mouse and mouse wheel interface.</target>
				</segment>
			</unit>
			<unit id="363" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br208946)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/br243371)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>The following example shows how to use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ManipulationDelta</pc></pc> events to handle a slide interaction on a <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Rectangle</pc></pc> and move it across the screen.</source>
					<target>The following example shows how to use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ManipulationDelta</pc></pc> events to handle a slide interaction on a <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Rectangle</pc></pc> and move it across the screen.</target>
				</segment>
			</unit>
			<unit id="364" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br243371)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">`touchRectangle`</data>
					<data id="id6">[</data>
					<data id="id7">](https://msdn.microsoft.com/library/windows/apps/br208718)</data>
					<data id="id8">**</data>
					<data id="id9">**</data>
					<data id="id10">[</data>
					<data id="id11">](https://msdn.microsoft.com/library/windows/apps/br208751)</data>
					<data id="id12">**</data>
					<data id="id13">**</data>
				</originalData>
				<segment state="initial">
					<source>First, a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Rectangle</pc></pc> named <ph dataRef="id5" id="ph1" /> is created in XAML with a <pc dataRefEnd="id7" dataRefStart="id6" id="p3"><pc dataRefEnd="id9" dataRefStart="id8" id="p4">Height</pc></pc> and <pc dataRefEnd="id11" dataRefStart="id10" id="p5"><pc dataRefEnd="id13" dataRefStart="id12" id="p6">Width</pc></pc> of 200.</source>
					<target>First, a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Rectangle</pc></pc> named <ph dataRef="id5" id="ph1" /> is created in XAML with a <pc dataRefEnd="id7" dataRefStart="id6" id="p3"><pc dataRefEnd="id9" dataRefStart="id8" id="p4">Height</pc></pc> and <pc dataRefEnd="id11" dataRefStart="id10" id="p5"><pc dataRefEnd="id13" dataRefStart="id12" id="p6">Width</pc></pc> of 200.</target>
				</segment>
			</unit>
			<unit id="365" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br243027)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">`dragTranslation`</data>
					<data id="id6">[</data>
					<data id="id7">](https://msdn.microsoft.com/library/windows/apps/br243371)</data>
					<data id="id8">**</data>
					<data id="id9">**</data>
				</originalData>
				<segment state="initial">
					<source>Next, a global <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">TranslateTransform</pc></pc> named <ph dataRef="id5" id="ph1" /> is created for translating the <pc dataRefEnd="id7" dataRefStart="id6" id="p3"><pc dataRefEnd="id9" dataRefStart="id8" id="p4">Rectangle</pc></pc>.</source>
					<target>Next, a global <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">TranslateTransform</pc></pc> named <ph dataRef="id5" id="ph1" /> is created for translating the <pc dataRefEnd="id7" dataRefStart="id6" id="p3"><pc dataRefEnd="id9" dataRefStart="id8" id="p4">Rectangle</pc></pc>.</target>
				</segment>
			</unit>
			<unit id="366" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br208946)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
					<data id="id7">`dragTranslation`</data>
					<data id="id8">[</data>
					<data id="id9">](https://msdn.microsoft.com/library/windows/apps/br208980)</data>
					<data id="id10">**</data>
					<data id="id11">**</data>
					<data id="id12">**</data>
					<data id="id13">**</data>
				</originalData>
				<segment state="initial">
					<source>A <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ManipulationDelta</pc></pc> event listener is specified on the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Rectangle</pc>, and <ph dataRef="id7" id="ph1" /> is added to the <pc dataRefEnd="id9" dataRefStart="id8" id="p4"><pc dataRefEnd="id11" dataRefStart="id10" id="p5">RenderTransform</pc></pc> of the <pc dataRefEnd="id13" dataRefStart="id12" id="p6">Rectangle</pc>.</source>
					<target>A <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ManipulationDelta</pc></pc> event listener is specified on the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Rectangle</pc>, and <ph dataRef="id7" id="ph1" /> is added to the <pc dataRefEnd="id9" dataRefStart="id8" id="p4"><pc dataRefEnd="id11" dataRefStart="id10" id="p5">RenderTransform</pc></pc> of the <pc dataRefEnd="id13" dataRefStart="id12" id="p6">Rectangle</pc>.</target>
				</segment>
			</unit>
			<unit id="367" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br208946)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/br243371)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
					<data id="id9">[</data>
					<data id="id10">](https://msdn.microsoft.com/library/windows/apps/br243027)</data>
					<data id="id11">**</data>
					<data id="id12">**</data>
					<data id="id13">[</data>
					<data id="id14">](https://msdn.microsoft.com/library/windows/apps/hh702058)</data>
					<data id="id15">**</data>
					<data id="id16">**</data>
				</originalData>
				<segment state="initial">
					<source>Finally, in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ManipulationDelta</pc></pc> event handler, the position of the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Rectangle</pc></pc> is updated by using the <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">TranslateTransform</pc></pc> on the <pc dataRefEnd="id14" dataRefStart="id13" id="p7"><pc dataRefEnd="id16" dataRefStart="id15" id="p8">Delta</pc></pc> property.</source>
					<target>Finally, in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ManipulationDelta</pc></pc> event handler, the position of the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Rectangle</pc></pc> is updated by using the <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">TranslateTransform</pc></pc> on the <pc dataRefEnd="id14" dataRefStart="id13" id="p7"><pc dataRefEnd="id16" dataRefStart="id15" id="p8">Delta</pc></pc> property.</target>
				</segment>
			</unit>
			<unit id="368" translate="yes">
				<segment state="initial">
					<source>Routed events</source>
					<target>Routed events</target>
				</segment>
			</unit>
			<unit id="369" translate="yes">
				<originalData>
					<data id="id1">*</data>
					<data id="id2">*</data>
				</originalData>
				<segment state="initial">
					<source>All of the pointer events, gesture events and manipulation events mentioned here are implemented as <pc dataRefEnd="id2" dataRefStart="id1" id="p1">routed events</pc>.</source>
					<target>All of the pointer events, gesture events and manipulation events mentioned here are implemented as <pc dataRefEnd="id2" dataRefStart="id1" id="p1">routed events</pc>.</target>
				</segment>
			</unit>
			<unit id="370" translate="yes">
				<segment state="initial">
					<source>This means that the event can potentially be handled by objects other than the one that originally raised the event.</source>
					<target>This means that the event can potentially be handled by objects other than the one that originally raised the event.</target>
				</segment>
			</unit>
			<unit id="371" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br208911)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/br227503)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>Successive parents in an object tree, such as the parent containers of a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">UIElement</pc></pc> or the root <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Page</pc></pc> of your app, can choose to handle these events even if the original element does not.</source>
					<target>Successive parents in an object tree, such as the parent containers of a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">UIElement</pc></pc> or the root <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Page</pc></pc> of your app, can choose to handle these events even if the original element does not.</target>
				</segment>
			</unit>
			<unit id="372" translate="yes">
				<segment state="initial">
					<source>Conversely, any object that does handle the event can mark the event handled so that it no longer reaches any parent element.</source>
					<target>Conversely, any object that does handle the event can mark the event handled so that it no longer reaches any parent element.</target>
				</segment>
			</unit>
			<unit id="373" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/hh758286)</data>
				</originalData>
				<segment state="initial">
					<source>For more info about the routed event concept and how it affects how you write handlers for routed events, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Events and routed events overview</pc>.</source>
					<target>For more info about the routed event concept and how it affects how you write handlers for routed events, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Events and routed events overview</pc>.</target>
				</segment>
			</unit>
			<unit id="374" translate="yes">
				<segment state="initial">
					<source>Dos and don'ts</source>
					<target>Dos and don'ts</target>
				</segment>
			</unit>
			<unit id="375" translate="yes">
				<segment state="initial">
					<source>Design applications with touch interaction as the primary expected input method.</source>
					<target>Design applications with touch interaction as the primary expected input method.</target>
				</segment>
			</unit>
			<unit id="376" translate="yes">
				<segment state="initial">
					<source>Provide visual feedback for interactions of all types (touch, pen, stylus, mouse, etc.)</source>
					<target>Provide visual feedback for interactions of all types (touch, pen, stylus, mouse, etc.)</target>
				</segment>
			</unit>
			<unit id="377" translate="yes">
				<segment state="initial">
					<source>Optimize targeting by adjusting touch target size, contact geometry, scrubbing and rocking.</source>
					<target>Optimize targeting by adjusting touch target size, contact geometry, scrubbing and rocking.</target>
				</segment>
			</unit>
			<unit id="378" translate="yes">
				<segment state="initial">
					<source>Optimize accuracy through the use of snap points and directional "rails".</source>
					<target>Optimize accuracy through the use of snap points and directional "rails".</target>
				</segment>
			</unit>
			<unit id="379" translate="yes">
				<segment state="initial">
					<source>Provide tooltips and handles to help improve touch accuracy for tightly packed UI items.</source>
					<target>Provide tooltips and handles to help improve touch accuracy for tightly packed UI items.</target>
				</segment>
			</unit>
			<unit id="380" translate="yes">
				<segment state="initial">
					<source>Don't use timed interactions whenever possible (example of appropriate use: touch and hold).</source>
					<target>Don't use timed interactions whenever possible (example of appropriate use: touch and hold).</target>
				</segment>
			</unit>
			<unit id="381" translate="yes">
				<segment state="initial">
					<source>Don't use the number of fingers used to distinguish the manipulation whenever possible.</source>
					<target>Don't use the number of fingers used to distinguish the manipulation whenever possible.</target>
				</segment>
			</unit>
			<unit id="382" translate="yes">
				<segment state="initial">
					<source>Related articles</source>
					<target>Related articles</target>
				</segment>
			</unit>
			<unit id="383" translate="yes">
				<segment state="initial">
					<source>Handle pointer input</source>
					<target>Handle pointer input</target>
				</segment>
			</unit>
			<unit id="384" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](identify-input-devices.md)</data>
					<data id="id3">
</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Identify input devices</pc><ph dataRef="id3" id="ph1" /><pc dataRefEnd="id5" dataRefStart="id4" id="p2">Samples</pc></source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Identify input devices</pc><ph dataRef="id3" id="ph1" /><pc dataRefEnd="id5" dataRefStart="id4" id="p2">Samples</pc></target>
				</segment>
			</unit>
			<unit id="385" translate="yes">
				<segment state="initial">
					<source>Basic input sample</source>
					<target>Basic input sample</target>
				</segment>
			</unit>
			<unit id="386" translate="yes">
				<segment state="initial">
					<source>Low latency input sample</source>
					<target>Low latency input sample</target>
				</segment>
			</unit>
			<unit id="387" translate="yes">
				<segment state="initial">
					<source>User interaction mode sample</source>
					<target>User interaction mode sample</target>
				</segment>
			</unit>
			<unit id="388" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](http://go.microsoft.com/fwlink/p/?LinkID=619895)</data>
					<data id="id3">
</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Focus visuals sample</pc><ph dataRef="id3" id="ph1" /><pc dataRefEnd="id5" dataRefStart="id4" id="p2">Archive Samples</pc></source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Focus visuals sample</pc><ph dataRef="id3" id="ph1" /><pc dataRefEnd="id5" dataRefStart="id4" id="p2">Archive Samples</pc></target>
				</segment>
			</unit>
			<unit id="389" translate="yes">
				<segment state="initial">
					<source>Input: Device capabilities sample</source>
					<target>Input: Device capabilities sample</target>
				</segment>
			</unit>
			<unit id="390" translate="yes">
				<segment state="initial">
					<source>Input: XAML user input events sample</source>
					<target>Input: XAML user input events sample</target>
				</segment>
			</unit>
			<unit id="391" translate="yes">
				<segment state="initial">
					<source>XAML scrolling, panning, and zooming sample</source>
					<target>XAML scrolling, panning, and zooming sample</target>
				</segment>
			</unit>
			<unit id="392" translate="yes">
				<segment state="initial">
					<source>Input: Gestures and manipulations with GestureRecognizer</source>
					<target>Input: Gestures and manipulations with GestureRecognizer</target>
				</segment>
			</unit>
		</group>
	</file>
</xliff>