<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="de-de" version="2.0" xml:space="preserve" xmlns="urn:oasis:names:tc:xliff:document:2.0">
	<file id="1">
		<mda:metadata>
			<mda:metaGroup>
				<mda:meta type="tool-id">mdxliff</mda:meta>
				<mda:meta type="tool-name">mdxliff</mda:meta>
				<mda:meta type="tool-version">1.0-2eb3c86</mda:meta>
				<mda:meta type="tool-company">Microsoft</mda:meta>
			</mda:metaGroup>
		<mda:metaGroup><mda:meta type="olfilehash">c89f6ce329999b80f1db978fcbecaf26ac6581ac</mda:meta><mda:meta type="olfilepath">wdg-cpub-test\ndolci\devices-sensors\build-a-device-selector.md</mda:meta><mda:meta type="oltranslationpriority"></mda:meta><mda:meta type="oltranslationtype">Human Translation</mda:meta><mda:meta type="olskeletonhash">945286932de253b2de8d11028444320006343efd</mda:meta><mda:meta type="olxliffhash">8db34cffb837871544e00e810ecbb99c2398302d</mda:meta></mda:metaGroup></mda:metadata>
		<group id="content">
			<unit id="101" translate="yes">
				<segment state="initial">
					<source>Build a device selector</source>
					<target>Build a device selector</target>
				</segment>
			</unit>
			<unit id="102" translate="yes">
				<segment state="initial">
					<source>\[ Updated for UWP apps on Windows 10.</source>
					<target>\[ Updated for UWP apps on Windows 10.</target>
				</segment>
			</unit>
			<unit id="103" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](http://go.microsoft.com/fwlink/p/?linkid=619132)</data>
				</originalData>
				<segment state="initial">
					<source>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</source>
					<target>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</target>
				</segment>
			</unit>
			<unit id="104" translate="yes">
				<segment state="initial">
					<source>Important APIs</source>
					<target>Important APIs</target>
				</segment>
			</unit>
			<unit id="105" translate="yes">
				<segment state="initial">
					<source>Windows.Devices.Enumeration</source>
					<target>Windows.Devices.Enumeration</target>
				</segment>
			</unit>
			<unit id="106" translate="yes">
				<segment state="initial">
					<source>Building a device selector will enable you to limit the devices you are searching through when enumerating devices.</source>
					<target>Building a device selector will enable you to limit the devices you are searching through when enumerating devices.</target>
				</segment>
			</unit>
			<unit id="107" translate="yes">
				<segment state="initial">
					<source>This will enable you to only get relevant results and will also improve the performance of the system.</source>
					<target>This will enable you to only get relevant results and will also improve the performance of the system.</target>
				</segment>
			</unit>
			<unit id="108" translate="yes">
				<segment state="initial">
					<source>In most scenarios you get a device selector from a device stack.</source>
					<target>In most scenarios you get a device selector from a device stack.</target>
				</segment>
			</unit>
			<unit id="109" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/Dn264015)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>For example, you might use <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">GetDeviceSelector</pc></pc> for devices discovered over USB.</source>
					<target>For example, you might use <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">GetDeviceSelector</pc></pc> for devices discovered over USB.</target>
				</segment>
			</unit>
			<unit id="110" translate="yes">
				<segment state="initial">
					<source>These device selectors return an Advanced Query Syntax (AQS) string.</source>
					<target>These device selectors return an Advanced Query Syntax (AQS) string.</target>
				</segment>
			</unit>
			<unit id="111" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/desktop/Bb266512)</data>
				</originalData>
				<segment state="initial">
					<source>If you are not familiar with the AQS format, you can read more at <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Using Advanced Query Syntax Programmatically</pc>.</source>
					<target>If you are not familiar with the AQS format, you can read more at <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Using Advanced Query Syntax Programmatically</pc>.</target>
				</segment>
			</unit>
			<unit id="112" translate="yes">
				<segment state="initial">
					<source>Building the filter string</source>
					<target>Building the filter string</target>
				</segment>
			</unit>
			<unit id="113" translate="yes">
				<segment state="initial">
					<source>There are some cases where you need to enumerate devices and a provided device selector is not available for your scenario.</source>
					<target>There are some cases where you need to enumerate devices and a provided device selector is not available for your scenario.</target>
				</segment>
			</unit>
			<unit id="114" translate="yes">
				<segment state="initial">
					<source>A device selector is an AQS filter string that contains the following information.</source>
					<target>A device selector is an AQS filter string that contains the following information.</target>
				</segment>
			</unit>
			<unit id="115" translate="yes">
				<segment state="initial">
					<source>Before creating a filter string, you need to know some key pieces of information about the devices you want to enumerate.</source>
					<target>Before creating a filter string, you need to know some key pieces of information about the devices you want to enumerate.</target>
				</segment>
			</unit>
			<unit id="116" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/Dn948991)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">DeviceInformationKind</pc></pc> of the devices you are interested in.</source>
					<target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">DeviceInformationKind</pc></pc> of the devices you are interested in.</target>
				</segment>
			</unit>
			<unit id="117" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">[</data>
					<data id="id4">](enumerate-devices.md)</data>
				</originalData>
				<segment state="initial">
					<source>For more information about how <pc dataRefEnd="id2" dataRefStart="id1" id="p1">DeviceInformationKind</pc> impacts enumerating devices, see <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Enumerate devices</pc>.</source>
					<target>For more information about how <pc dataRefEnd="id2" dataRefStart="id1" id="p1">DeviceInformationKind</pc> impacts enumerating devices, see <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Enumerate devices</pc>.</target>
				</segment>
			</unit>
			<unit id="118" translate="yes">
				<segment state="initial">
					<source>How to build an AQS filter string, which is explained in this topic.</source>
					<target>How to build an AQS filter string, which is explained in this topic.</target>
				</segment>
			</unit>
			<unit id="119" translate="yes">
				<segment state="initial">
					<source>The properties you are interested in.</source>
					<target>The properties you are interested in.</target>
				</segment>
			</unit>
			<unit id="120" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/Dn948991)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>The available properties will depend upon the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">DeviceInformationKind</pc></pc>.</source>
					<target>The available properties will depend upon the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">DeviceInformationKind</pc></pc>.</target>
				</segment>
			</unit>
			<unit id="121" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](device-information-properties.md)</data>
				</originalData>
				<segment state="initial">
					<source>See <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Device information properties</pc> for more information.</source>
					<target>See <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Device information properties</pc> for more information.</target>
				</segment>
			</unit>
			<unit id="122" translate="yes">
				<segment state="initial">
					<source>The protocols you are querying over.</source>
					<target>The protocols you are querying over.</target>
				</segment>
			</unit>
			<unit id="123" translate="yes">
				<segment state="initial">
					<source>This is only needed if you are searching for devices over a wireless or wired network.</source>
					<target>This is only needed if you are searching for devices over a wireless or wired network.</target>
				</segment>
			</unit>
			<unit id="124" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](enumerate-devices-over-a-network.md)</data>
				</originalData>
				<segment state="initial">
					<source>For more information about doing this, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Enumerate devices over a network</pc>.</source>
					<target>For more information about doing this, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Enumerate devices over a network</pc>.</target>
				</segment>
			</unit>
			<unit id="125" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/BR225459)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>When using the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.Devices.Enumeration</pc></pc> APIs, you frequently combine the device selector with the device kind that you are interested in.</source>
					<target>When using the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.Devices.Enumeration</pc></pc> APIs, you frequently combine the device selector with the device kind that you are interested in.</target>
				</segment>
			</unit>
			<unit id="126" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/Dn948991)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>The available list of device kinds is defined by the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">DeviceInformationKind</pc></pc> enumeration.</source>
					<target>The available list of device kinds is defined by the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">DeviceInformationKind</pc></pc> enumeration.</target>
				</segment>
			</unit>
			<unit id="127" translate="yes">
				<segment state="initial">
					<source>This combination of factors helps you to limit the devices that are available to the ones that you are interested in.</source>
					<target>This combination of factors helps you to limit the devices that are available to the ones that you are interested in.</target>
				</segment>
			</unit>
			<unit id="128" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source>If you do not specify the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">DeviceInformationKind</pc>, or the method you are using does not provide a <pc dataRefEnd="id4" dataRefStart="id3" id="p2">DeviceInformationKind</pc> parameter, the default kind is <pc dataRefEnd="id6" dataRefStart="id5" id="p3">DeviceInterface</pc>.</source>
					<target>If you do not specify the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">DeviceInformationKind</pc>, or the method you are using does not provide a <pc dataRefEnd="id4" dataRefStart="id3" id="p2">DeviceInformationKind</pc> parameter, the default kind is <pc dataRefEnd="id6" dataRefStart="id5" id="p3">DeviceInterface</pc>.</target>
				</segment>
			</unit>
			<unit id="129" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/BR225459)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.Devices.Enumeration</pc></pc> APIs use canonical AQS syntax, but not all of the operators are supported.</source>
					<target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.Devices.Enumeration</pc></pc> APIs use canonical AQS syntax, but not all of the operators are supported.</target>
				</segment>
			</unit>
			<unit id="130" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](device-information-properties.md)</data>
				</originalData>
				<segment state="initial">
					<source>For a list of properties that are available when you are constructing your filter string, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Device information properties</pc>.</source>
					<target>For a list of properties that are available when you are constructing your filter string, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Device information properties</pc>.</target>
				</segment>
			</unit>
			<unit id="131" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">`{GUID} PID`</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Caution</pc>  Custom properties that are defined using the <ph dataRef="id3" id="ph1" /> format cannot be used when constructing your AQS filter string.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Caution</pc>  Custom properties that are defined using the <ph dataRef="id3" id="ph1" /> format cannot be used when constructing your AQS filter string.</target>
				</segment>
			</unit>
			<unit id="132" translate="yes">
				<segment state="initial">
					<source>This is because the property type is derived from the well-known property name.</source>
					<target>This is because the property type is derived from the well-known property name.</target>
				</segment>
			</unit>
			<unit id="133" translate="yes">
				<segment state="initial">
					<source>The following table lists the AQS operators and what types of parameters they support.</source>
					<target>The following table lists the AQS operators and what types of parameters they support.</target>
				</segment>
			</unit>
			<unit id="134" translate="yes">
				<segment state="initial">
					<source>Operator</source>
					<target>Operator</target>
				</segment>
			</unit>
			<unit id="135" translate="yes">
				<segment state="initial">
					<source>Supported types</source>
					<target>Supported types</target>
				</segment>
			</unit>
			<unit id="136" translate="yes">
				<segment state="initial">
					<source>COP\_EQUAL</source>
					<target>COP\_EQUAL</target>
				</segment>
			</unit>
			<unit id="137" translate="yes">
				<segment state="initial">
					<source>String, boolean, GUID, UInt16, UInt32</source>
					<target>String, boolean, GUID, UInt16, UInt32</target>
				</segment>
			</unit>
			<unit id="138" translate="yes">
				<segment state="initial">
					<source>COP\_NOTEQUAL</source>
					<target>COP\_NOTEQUAL</target>
				</segment>
			</unit>
			<unit id="139" translate="yes">
				<segment state="initial">
					<source>String, boolean, GUID, UInt16, UInt32</source>
					<target>String, boolean, GUID, UInt16, UInt32</target>
				</segment>
			</unit>
			<unit id="140" translate="yes">
				<segment state="initial">
					<source>COP\_LESSTHAN</source>
					<target>COP\_LESSTHAN</target>
				</segment>
			</unit>
			<unit id="141" translate="yes">
				<segment state="initial">
					<source>UInt16, UInt32</source>
					<target>UInt16, UInt32</target>
				</segment>
			</unit>
			<unit id="142" translate="yes">
				<segment state="initial">
					<source>COP\_GREATERTHAN</source>
					<target>COP\_GREATERTHAN</target>
				</segment>
			</unit>
			<unit id="143" translate="yes">
				<segment state="initial">
					<source>UInt16, UInt32</source>
					<target>UInt16, UInt32</target>
				</segment>
			</unit>
			<unit id="144" translate="yes">
				<segment state="initial">
					<source>COP\_LESSTHANOREQUAL</source>
					<target>COP\_LESSTHANOREQUAL</target>
				</segment>
			</unit>
			<unit id="145" translate="yes">
				<segment state="initial">
					<source>UInt16, UInt32</source>
					<target>UInt16, UInt32</target>
				</segment>
			</unit>
			<unit id="146" translate="yes">
				<segment state="initial">
					<source>COP\_GREATERTHANOREQUAL</source>
					<target>COP\_GREATERTHANOREQUAL</target>
				</segment>
			</unit>
			<unit id="147" translate="yes">
				<segment state="initial">
					<source>UInt16, UInt32</source>
					<target>UInt16, UInt32</target>
				</segment>
			</unit>
			<unit id="148" translate="yes">
				<segment state="initial">
					<source>COP\_VALUE\_CONTAINS</source>
					<target>COP\_VALUE\_CONTAINS</target>
				</segment>
			</unit>
			<unit id="149" translate="yes">
				<segment state="initial">
					<source>String, string array, boolean array, GUID array, UInt16 array, UInt32 array</source>
					<target>String, string array, boolean array, GUID array, UInt16 array, UInt32 array</target>
				</segment>
			</unit>
			<unit id="150" translate="yes">
				<segment state="initial">
					<source>COP\_VALUE\_NOTCONTAINS</source>
					<target>COP\_VALUE\_NOTCONTAINS</target>
				</segment>
			</unit>
			<unit id="151" translate="yes">
				<segment state="initial">
					<source>String, string array, boolean array, GUID array, UInt16 array, UInt32 array</source>
					<target>String, string array, boolean array, GUID array, UInt16 array, UInt32 array</target>
				</segment>
			</unit>
			<unit id="152" translate="yes">
				<segment state="initial">
					<source>COP\_VALUE\_STARTSWITH</source>
					<target>COP\_VALUE\_STARTSWITH</target>
				</segment>
			</unit>
			<unit id="153" translate="yes">
				<segment state="initial">
					<source>String</source>
					<target>String</target>
				</segment>
			</unit>
			<unit id="154" translate="yes">
				<segment state="initial">
					<source>COP\_VALUE\_ENDSWITH</source>
					<target>COP\_VALUE\_ENDSWITH</target>
				</segment>
			</unit>
			<unit id="155" translate="yes">
				<segment state="initial">
					<source>String</source>
					<target>String</target>
				</segment>
			</unit>
			<unit id="156" translate="yes">
				<segment state="initial">
					<source>COP\_DOSWILDCARDS</source>
					<target>COP\_DOSWILDCARDS</target>
				</segment>
			</unit>
			<unit id="157" translate="yes">
				<segment state="initial">
					<source>Not supported</source>
					<target>Not supported</target>
				</segment>
			</unit>
			<unit id="158" translate="yes">
				<segment state="initial">
					<source>COP\_WORD\_EQUAL</source>
					<target>COP\_WORD\_EQUAL</target>
				</segment>
			</unit>
			<unit id="159" translate="yes">
				<segment state="initial">
					<source>Not supported</source>
					<target>Not supported</target>
				</segment>
			</unit>
			<unit id="160" translate="yes">
				<segment state="initial">
					<source>COP\_WORD\_STARTSWITH</source>
					<target>COP\_WORD\_STARTSWITH</target>
				</segment>
			</unit>
			<unit id="161" translate="yes">
				<segment state="initial">
					<source>Not supported</source>
					<target>Not supported</target>
				</segment>
			</unit>
			<unit id="162" translate="yes">
				<segment state="initial">
					<source>COP\_APPLICATION\_SPECIFIC</source>
					<target>COP\_APPLICATION\_SPECIFIC</target>
				</segment>
			</unit>
			<unit id="163" translate="yes">
				<segment state="initial">
					<source>Not supported</source>
					<target>Not supported</target>
				</segment>
			</unit>
			<unit id="164" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Tip</pc>  You can specify <pc dataRefEnd="id4" dataRefStart="id3" id="p2">NULL</pc> for <pc dataRefEnd="id6" dataRefStart="id5" id="p3">COP\_EQUAL</pc> or <pc dataRefEnd="id8" dataRefStart="id7" id="p4">COP\_NOTEQUAL</pc>.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Tip</pc>  You can specify <pc dataRefEnd="id4" dataRefStart="id3" id="p2">NULL</pc> for <pc dataRefEnd="id6" dataRefStart="id5" id="p3">COP\_EQUAL</pc> or <pc dataRefEnd="id8" dataRefStart="id7" id="p4">COP\_NOTEQUAL</pc>.</target>
				</segment>
			</unit>
			<unit id="165" translate="yes">
				<segment state="initial">
					<source>This translates to a property with no value, or that the value does not exist.</source>
					<target>This translates to a property with no value, or that the value does not exist.</target>
				</segment>
			</unit>
			<unit id="166" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>In AQS, you specify <pc dataRefEnd="id2" dataRefStart="id1" id="p1">NULL</pc> by using empty brackets \[\].</source>
					<target>In AQS, you specify <pc dataRefEnd="id2" dataRefStart="id1" id="p1">NULL</pc> by using empty brackets \[\].</target>
				</segment>
			</unit>
			<unit id="167" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Important</pc>  When using the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">COP\_VALUE\_CONTAINS</pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3">COP\_VALUE\_NOTCONTAINS</pc> operators, they behave differently with strings and string arrays.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Important</pc>  When using the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">COP\_VALUE\_CONTAINS</pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3">COP\_VALUE\_NOTCONTAINS</pc> operators, they behave differently with strings and string arrays.</target>
				</segment>
			</unit>
			<unit id="168" translate="yes">
				<segment state="initial">
					<source>In the case of a string, the system will perform a case-insensitive search to see if the device contains the indicated string as a substring.</source>
					<target>In the case of a string, the system will perform a case-insensitive search to see if the device contains the indicated string as a substring.</target>
				</segment>
			</unit>
			<unit id="169" translate="yes">
				<segment state="initial">
					<source>In the case of a string array, substrings are not searched.</source>
					<target>In the case of a string array, substrings are not searched.</target>
				</segment>
			</unit>
			<unit id="170" translate="yes">
				<segment state="initial">
					<source>With the string array, the array is searched to see if it contains the entire specified string.</source>
					<target>With the string array, the array is searched to see if it contains the entire specified string.</target>
				</segment>
			</unit>
			<unit id="171" translate="yes">
				<segment state="initial">
					<source>It is not possible to search a string array to see if the elements in the array contain a substring.</source>
					<target>It is not possible to search a string array to see if the elements in the array contain a substring.</target>
				</segment>
			</unit>
			<unit id="172" translate="yes">
				<segment state="initial">
					<source>If you cannot create a single AQS filter string that will scope your results appropriately, you can filter your results after you receive them.</source>
					<target>If you cannot create a single AQS filter string that will scope your results appropriately, you can filter your results after you receive them.</target>
				</segment>
			</unit>
			<unit id="173" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/BR225459)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>However, if you choose to do this, we recommend limiting the results from your initial AQS filter string as much as possible when you provide it to the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.Devices.Enumeration</pc></pc> APIs.</source>
					<target>However, if you choose to do this, we recommend limiting the results from your initial AQS filter string as much as possible when you provide it to the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.Devices.Enumeration</pc></pc> APIs.</target>
				</segment>
			</unit>
			<unit id="174" translate="yes">
				<segment state="initial">
					<source>This will help improve the performance of your application.</source>
					<target>This will help improve the performance of your application.</target>
				</segment>
			</unit>
			<unit id="175" translate="yes">
				<segment state="initial">
					<source>AQS string examples</source>
					<target>AQS string examples</target>
				</segment>
			</unit>
			<unit id="176" translate="yes">
				<segment state="initial">
					<source>The following examples demonstrate how the AQS syntax can be used to limit the devices you want to enumerate.</source>
					<target>The following examples demonstrate how the AQS syntax can be used to limit the devices you want to enumerate.</target>
				</segment>
			</unit>
			<unit id="177" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/Dn948991)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>All of these filter strings are paired up with a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">DeviceInformationKind</pc></pc> to create a complete filter.</source>
					<target>All of these filter strings are paired up with a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">DeviceInformationKind</pc></pc> to create a complete filter.</target>
				</segment>
			</unit>
			<unit id="178" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>If no kind is specified, remember that the default kind is <pc dataRefEnd="id2" dataRefStart="id1" id="p1">DeviceInterface</pc>.</source>
					<target>If no kind is specified, remember that the default kind is <pc dataRefEnd="id2" dataRefStart="id1" id="p1">DeviceInterface</pc>.</target>
				</segment>
			</unit>
			<unit id="179" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/Dn948991)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source>When this filter is paired with a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">DeviceInformationKind</pc></pc> of <pc dataRefEnd="id6" dataRefStart="id5" id="p3">DeviceInterface</pc>, it enumerates all objects that contain the Audio Capture interface class and that are currently enabled.</source>
					<target>When this filter is paired with a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">DeviceInformationKind</pc></pc> of <pc dataRefEnd="id6" dataRefStart="id5" id="p3">DeviceInterface</pc>, it enumerates all objects that contain the Audio Capture interface class and that are currently enabled.</target>
				</segment>
			</unit>
			<unit id="180" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">=</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1"><ph dataRef="id3" id="ph1" /></pc> translates to <pc dataRefEnd="id5" dataRefStart="id4" id="p2">COP\_EQUALS</pc>.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1"><ph dataRef="id3" id="ph1" /></pc> translates to <pc dataRefEnd="id5" dataRefStart="id4" id="p2">COP\_EQUALS</pc>.</target>
				</segment>
			</unit>
			<unit id="181" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/Dn948991)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source>When this filter is paired with a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">DeviceInformationKind</pc></pc> of <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Device</pc>, it enumerates all objects that have at least one hardware id of GenCdRom.</source>
					<target>When this filter is paired with a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">DeviceInformationKind</pc></pc> of <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Device</pc>, it enumerates all objects that have at least one hardware id of GenCdRom.</target>
				</segment>
			</unit>
			<unit id="182" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">~~</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1"><ph dataRef="id3" id="ph1" /></pc> translates to <pc dataRefEnd="id5" dataRefStart="id4" id="p2">COP\_VALUE\_CONTAINS</pc>.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1"><ph dataRef="id3" id="ph1" /></pc> translates to <pc dataRefEnd="id5" dataRefStart="id4" id="p2">COP\_VALUE\_CONTAINS</pc>.</target>
				</segment>
			</unit>
			<unit id="183" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/Dn948991)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source>When this filter is paired with a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">DeviceInformationKind</pc></pc> of <pc dataRefEnd="id6" dataRefStart="id5" id="p3">DeviceContainer</pc>, it enumerates all objects that have a model name containing the substring Microsoft.</source>
					<target>When this filter is paired with a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">DeviceInformationKind</pc></pc> of <pc dataRefEnd="id6" dataRefStart="id5" id="p3">DeviceContainer</pc>, it enumerates all objects that have a model name containing the substring Microsoft.</target>
				</segment>
			</unit>
			<unit id="184" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">~~</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1"><ph dataRef="id3" id="ph1" /></pc> translates to <pc dataRefEnd="id5" dataRefStart="id4" id="p2">COP\_VALUE\_CONTAINS</pc>.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1"><ph dataRef="id3" id="ph1" /></pc> translates to <pc dataRefEnd="id5" dataRefStart="id4" id="p2">COP\_VALUE\_CONTAINS</pc>.</target>
				</segment>
			</unit>
			<unit id="185" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/Dn948991)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source>When this filter is paired with a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">DeviceInformationKind</pc></pc> of <pc dataRefEnd="id6" dataRefStart="id5" id="p3">DeviceInterface</pc>, it enumerates all objects that have a name starting with the substring Microsoft.</source>
					<target>When this filter is paired with a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">DeviceInformationKind</pc></pc> of <pc dataRefEnd="id6" dataRefStart="id5" id="p3">DeviceInterface</pc>, it enumerates all objects that have a name starting with the substring Microsoft.</target>
				</segment>
			</unit>
			<unit id="186" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">~&amp;lt;</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1"><ph dataRef="id3" id="ph1" /></pc> translates to <pc dataRefEnd="id5" dataRefStart="id4" id="p2">COP\_STARTSWITH</pc>.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1"><ph dataRef="id3" id="ph1" /></pc> translates to <pc dataRefEnd="id5" dataRefStart="id4" id="p2">COP\_STARTSWITH</pc>.</target>
				</segment>
			</unit>
			<unit id="187" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/Dn948991)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>When this filter is paired with a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">DeviceInformationKind</pc></pc> of <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Device</pc>, it enumerates all objects that have a <pc dataRefEnd="id8" dataRefStart="id7" id="p4">System.Devices.IpAddress</pc> property set.</source>
					<target>When this filter is paired with a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">DeviceInformationKind</pc></pc> of <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Device</pc>, it enumerates all objects that have a <pc dataRefEnd="id8" dataRefStart="id7" id="p4">System.Devices.IpAddress</pc> property set.</target>
				</segment>
			</unit>
			<unit id="188" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">&amp;lt;&amp;gt;</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
					<data id="id7">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1"><ph dataRef="id3" id="ph1" />\[\]</pc> translates to <pc dataRefEnd="id5" dataRefStart="id4" id="p2">COP\_NOTEQUALS</pc> combined with a <pc dataRefEnd="id7" dataRefStart="id6" id="p3">NULL</pc> value.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1"><ph dataRef="id3" id="ph1" />\[\]</pc> translates to <pc dataRefEnd="id5" dataRefStart="id4" id="p2">COP\_NOTEQUALS</pc> combined with a <pc dataRefEnd="id7" dataRefStart="id6" id="p3">NULL</pc> value.</target>
				</segment>
			</unit>
			<unit id="189" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/Dn948991)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>When this filter is paired with a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">DeviceInformationKind</pc></pc> of <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Device</pc>, it enumerates all objects that do not have a <pc dataRefEnd="id8" dataRefStart="id7" id="p4">System.Devices.IpAddress</pc> property set.</source>
					<target>When this filter is paired with a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">DeviceInformationKind</pc></pc> of <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Device</pc>, it enumerates all objects that do not have a <pc dataRefEnd="id8" dataRefStart="id7" id="p4">System.Devices.IpAddress</pc> property set.</target>
				</segment>
			</unit>
			<unit id="190" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">=\[\]</pc> translates to <pc dataRefEnd="id4" dataRefStart="id3" id="p2">COP\_EQUALS</pc> combined with a <pc dataRefEnd="id6" dataRefStart="id5" id="p3">NULL</pc> value.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">=\[\]</pc> translates to <pc dataRefEnd="id4" dataRefStart="id3" id="p2">COP\_EQUALS</pc> combined with a <pc dataRefEnd="id6" dataRefStart="id5" id="p3">NULL</pc> value.</target>
				</segment>
			</unit>
		</group>
	</file>
</xliff>