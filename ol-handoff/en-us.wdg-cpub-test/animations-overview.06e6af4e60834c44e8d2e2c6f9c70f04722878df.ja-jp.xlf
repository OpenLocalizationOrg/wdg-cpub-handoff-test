<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="ja-jp" version="2.0" xml:space="preserve" xmlns="urn:oasis:names:tc:xliff:document:2.0">
	<file id="1">
		<mda:metadata>
			<mda:metaGroup>
				<mda:meta type="tool-id">mdxliff</mda:meta>
				<mda:meta type="tool-name">mdxliff</mda:meta>
				<mda:meta type="tool-version">1.0-2eb3c86</mda:meta>
				<mda:meta type="tool-company">Microsoft</mda:meta>
			</mda:metaGroup>
		<mda:metaGroup><mda:meta type="olfilehash">2fa0ffa67d6c2903b99534c4726dfde5073a6c1c</mda:meta><mda:meta type="olfilepath">wdg-cpub-test\ndolci1\graphics\animations-overview.md</mda:meta><mda:meta type="oltranslationpriority"></mda:meta><mda:meta type="oltranslationtype">Human Translation</mda:meta><mda:meta type="olskeletonhash">182b495465a54fce445f81032d9c246c2e0baf15</mda:meta><mda:meta type="olxliffhash">784c0f8803a328d501145f1615103ac00a42ea0f</mda:meta></mda:metaGroup></mda:metadata>
		<group id="content">
			<unit id="101" translate="yes">
				<segment state="initial">
					<source>Animations overview</source>
					<target>Animations overview</target>
				</segment>
			</unit>
			<unit id="102" translate="yes">
				<segment state="initial">
					<source>Use the animations from the Windows Runtime animation library to integrate the Windows look and feel into your app.</source>
					<target>Use the animations from the Windows Runtime animation library to integrate the Windows look and feel into your app.</target>
				</segment>
			</unit>
			<unit id="103" translate="yes">
				<segment state="initial">
					<source>Animations overview</source>
					<target>Animations overview</target>
				</segment>
			</unit>
			<unit id="104" translate="yes">
				<segment state="initial">
					<source>\[ Updated for UWP apps on Windows 10.</source>
					<target>\[ Updated for UWP apps on Windows 10.</target>
				</segment>
			</unit>
			<unit id="105" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](http://go.microsoft.com/fwlink/p/?linkid=619132)</data>
				</originalData>
				<segment state="initial">
					<source>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</source>
					<target>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</target>
				</segment>
			</unit>
			<unit id="106" translate="yes">
				<segment state="initial">
					<source>Animations in the Windows Runtime can enhance your app by adding movement and interactivity.</source>
					<target>Animations in the Windows Runtime can enhance your app by adding movement and interactivity.</target>
				</segment>
			</unit>
			<unit id="107" translate="yes">
				<segment state="initial">
					<source>By using the animations from the Windows Runtime animation library, you can integrate the Windows look and feel into your app.</source>
					<target>By using the animations from the Windows Runtime animation library, you can integrate the Windows look and feel into your app.</target>
				</segment>
			</unit>
			<unit id="108" translate="yes">
				<segment state="initial">
					<source>This topic provides a summary of the animations and examples of typical scenarios where each is used.</source>
					<target>This topic provides a summary of the animations and examples of typical scenarios where each is used.</target>
				</segment>
			</unit>
			<unit id="109" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Tip</pc>  The Windows Runtime controls for XAML include certain types of animations as built-in behaviors that come from an animation library.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Tip</pc>  The Windows Runtime controls for XAML include certain types of animations as built-in behaviors that come from an animation library.</target>
				</segment>
			</unit>
			<unit id="110" translate="yes">
				<segment state="initial">
					<source>By using these controls in your app, you can get the animated look and feel without having to program it yourself.</source>
					<target>By using these controls in your app, you can get the animated look and feel without having to program it yourself.</target>
				</segment>
			</unit>
			<unit id="111" translate="yes">
				<segment state="initial">
					<source>Animations from the Windows Runtime animation library provide these benefits:</source>
					<target>Animations from the Windows Runtime animation library provide these benefits:</target>
				</segment>
			</unit>
			<unit id="112" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/Dn611854)</data>
				</originalData>
				<segment state="initial">
					<source>Motions that align to the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Guidelines for animations</pc></source>
					<target>Motions that align to the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Guidelines for animations</pc></target>
				</segment>
			</unit>
			<unit id="113" translate="yes">
				<segment state="initial">
					<source>Fast, fluid transitions between UI states that inform but do not distract the user</source>
					<target>Fast, fluid transitions between UI states that inform but do not distract the user</target>
				</segment>
			</unit>
			<unit id="114" translate="yes">
				<segment state="initial">
					<source>Visual behavior that indicates transitions within an app to the user</source>
					<target>Visual behavior that indicates transitions within an app to the user</target>
				</segment>
			</unit>
			<unit id="115" translate="yes">
				<segment state="initial">
					<source>For example, when the user adds an item to a list, instead of the new item instantly appearing in the list, the new item animates into place.</source>
					<target>For example, when the user adds an item to a list, instead of the new item instantly appearing in the list, the new item animates into place.</target>
				</segment>
			</unit>
			<unit id="116" translate="yes">
				<segment state="initial">
					<source>The other items in the list animate to their new positions over a short period of time, making room for the added item.</source>
					<target>The other items in the list animate to their new positions over a short period of time, making room for the added item.</target>
				</segment>
			</unit>
			<unit id="117" translate="yes">
				<segment state="initial">
					<source>The transition behavior here makes the control interaction more apparent to the user.</source>
					<target>The transition behavior here makes the control interaction more apparent to the user.</target>
				</segment>
			</unit>
			<unit id="118" translate="yes">
				<segment state="initial">
					<source>The animation library does not provide animations for every possible scenario.</source>
					<target>The animation library does not provide animations for every possible scenario.</target>
				</segment>
			</unit>
			<unit id="119" translate="yes">
				<segment state="initial">
					<source>There are cases where you might wish to create a custom animation in XAML.</source>
					<target>There are cases where you might wish to create a custom animation in XAML.</target>
				</segment>
			</unit>
			<unit id="120" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](storyboarded-animations.md)</data>
				</originalData>
				<segment state="initial">
					<source>For more info, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Storyboarded animations</pc>.</source>
					<target>For more info, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Storyboarded animations</pc>.</target>
				</segment>
			</unit>
			<unit id="121" translate="yes">
				<segment state="initial">
					<source>Types of animations</source>
					<target>Types of animations</target>
				</segment>
			</unit>
			<unit id="122" translate="yes">
				<segment state="initial">
					<source>The Windows Runtime animation system and the animation library serve the larger goal of enabling controls and other parts of UI to have an animated behavior.</source>
					<target>The Windows Runtime animation system and the animation library serve the larger goal of enabling controls and other parts of UI to have an animated behavior.</target>
				</segment>
			</unit>
			<unit id="123" translate="yes">
				<segment state="initial">
					<source>There are several distinct types of animations.</source>
					<target>There are several distinct types of animations.</target>
				</segment>
			</unit>
			<unit id="124" translate="yes">
				<originalData>
					<data id="id1">*</data>
					<data id="id2">*</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Theme transitions</pc> are applied automatically when certain conditions change in the UI, involving controls or elements from the predefined Windows Runtime XAML UI types.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Theme transitions</pc> are applied automatically when certain conditions change in the UI, involving controls or elements from the predefined Windows Runtime XAML UI types.</target>
				</segment>
			</unit>
			<unit id="125" translate="yes">
				<originalData>
					<data id="id1">*</data>
					<data id="id2">*</data>
				</originalData>
				<segment state="initial">
					<source>These are termed <pc dataRefEnd="id2" dataRefStart="id1" id="p1">theme transitions</pc> because the animations support the Windows look and feel, and define what all apps do for particular UI scenarios when they change from one interaction mode to another.</source>
					<target>These are termed <pc dataRefEnd="id2" dataRefStart="id1" id="p1">theme transitions</pc> because the animations support the Windows look and feel, and define what all apps do for particular UI scenarios when they change from one interaction mode to another.</target>
				</segment>
			</unit>
			<unit id="126" translate="yes">
				<segment state="initial">
					<source>The theme transitions are part of the animation library.</source>
					<target>The theme transitions are part of the animation library.</target>
				</segment>
			</unit>
			<unit id="127" translate="yes">
				<originalData>
					<data id="id1">*</data>
					<data id="id2">*</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Theme animations</pc> are animations to one or more properties of predefined Windows Runtime XAML UI types.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Theme animations</pc> are animations to one or more properties of predefined Windows Runtime XAML UI types.</target>
				</segment>
			</unit>
			<unit id="128" translate="yes">
				<segment state="initial">
					<source>Theme animations differ from theme transitions because theme animations target one specific element and exist in specific visual states within a control, whereas the theme transitions are assigned to properties of the control that exist outside of the visual states and influence the transitions between those states.</source>
					<target>Theme animations differ from theme transitions because theme animations target one specific element and exist in specific visual states within a control, whereas the theme transitions are assigned to properties of the control that exist outside of the visual states and influence the transitions between those states.</target>
				</segment>
			</unit>
			<unit id="129" translate="yes">
				<segment state="initial">
					<source>Many of the Windows Runtime XAML controls include theme animations within storyboards that are part of their control template, with the animations triggered by visual states.</source>
					<target>Many of the Windows Runtime XAML controls include theme animations within storyboards that are part of their control template, with the animations triggered by visual states.</target>
				</segment>
			</unit>
			<unit id="130" translate="yes">
				<segment state="initial">
					<source>So long as you're not modifying the templates, you'll have those built-in theme animations available for the controls in your UI.</source>
					<target>So long as you're not modifying the templates, you'll have those built-in theme animations available for the controls in your UI.</target>
				</segment>
			</unit>
			<unit id="131" translate="yes">
				<segment state="initial">
					<source>However, if you do replace templates, then you'll be removing the built-in control theme animations too.</source>
					<target>However, if you do replace templates, then you'll be removing the built-in control theme animations too.</target>
				</segment>
			</unit>
			<unit id="132" translate="yes">
				<segment state="initial">
					<source>To get them back, you must define a storyboard that includes theme animations within the control's set of visual states.</source>
					<target>To get them back, you must define a storyboard that includes theme animations within the control's set of visual states.</target>
				</segment>
			</unit>
			<unit id="133" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/BR210491)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>You can also run theme animations from storyboards that aren't within visual states and start them with the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Begin</pc></pc> method, but that's less common.</source>
					<target>You can also run theme animations from storyboards that aren't within visual states and start them with the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Begin</pc></pc> method, but that's less common.</target>
				</segment>
			</unit>
			<unit id="134" translate="yes">
				<segment state="initial">
					<source>Theme animations are part of the animation library.</source>
					<target>Theme animations are part of the animation library.</target>
				</segment>
			</unit>
			<unit id="135" translate="yes">
				<originalData>
					<data id="id1">*</data>
					<data id="id2">*</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Visual transitions</pc> are applied when a control transitions from one of its defined visual states to another state.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Visual transitions</pc> are applied when a control transitions from one of its defined visual states to another state.</target>
				</segment>
			</unit>
			<unit id="136" translate="yes">
				<segment state="initial">
					<source>These are custom animations that you write, and are typically related to the custom template you write for a control and the visual state definitions within that template.</source>
					<target>These are custom animations that you write, and are typically related to the custom template you write for a control and the visual state definitions within that template.</target>
				</segment>
			</unit>
			<unit id="137" translate="yes">
				<segment state="initial">
					<source>The animation only runs during the time between states, and that's typically a short amount of time, a few seconds at most.</source>
					<target>The animation only runs during the time between states, and that's typically a short amount of time, a few seconds at most.</target>
				</segment>
			</unit>
			<unit id="138" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/xaml/JJ819808#VisualTransition)</data>
				</originalData>
				<segment state="initial">
					<source>For more info, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">"VisualTransition" section of Storyboarded animations for visual states</pc>.</source>
					<target>For more info, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">"VisualTransition" section of Storyboarded animations for visual states</pc>.</target>
				</segment>
			</unit>
			<unit id="139" translate="yes">
				<originalData>
					<data id="id1">*</data>
					<data id="id2">*</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Storyboarded animations</pc> are applied when they are specifically started by your app code, or by code that comes with a component like a control that you've included.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Storyboarded animations</pc> are applied when they are specifically started by your app code, or by code that comes with a component like a control that you've included.</target>
				</segment>
			</unit>
			<unit id="140" translate="yes">
				<segment state="initial">
					<source>Storyboarded animations can change the value of any Windows Runtime dependency property over time.</source>
					<target>Storyboarded animations can change the value of any Windows Runtime dependency property over time.</target>
				</segment>
			</unit>
			<unit id="141" translate="yes">
				<segment state="initial">
					<source>Storyboarded animations aren't limited to UI scenarios; in fact it might be useful to think of them as a state machine technique, if you're familiar with that concept.</source>
					<target>Storyboarded animations aren't limited to UI scenarios; in fact it might be useful to think of them as a state machine technique, if you're familiar with that concept.</target>
				</segment>
			</unit>
			<unit id="142" translate="yes">
				<segment state="initial">
					<source>A storyboarded animation is not limited to the transition time between visual states; it could be run at any time regardless of a control state change, and the animation can potentially run continuously.</source>
					<target>A storyboarded animation is not limited to the transition time between visual states; it could be run at any time regardless of a control state change, and the animation can potentially run continuously.</target>
				</segment>
			</unit>
			<unit id="143" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](storyboarded-animations.md)</data>
				</originalData>
				<segment state="initial">
					<source>For more info, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Storyboarded animations</pc>.</source>
					<target>For more info, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Storyboarded animations</pc>.</target>
				</segment>
			</unit>
			<unit id="144" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/Mt185583)</data>
				</originalData>
				<segment state="initial">
					<source>For more info about dependency properties and where they exist, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Dependency properties overview</pc>.</source>
					<target>For more info about dependency properties and where they exist, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Dependency properties overview</pc>.</target>
				</segment>
			</unit>
			<unit id="145" translate="yes">
				<segment state="initial">
					<source>Animations available in the library</source>
					<target>Animations available in the library</target>
				</segment>
			</unit>
			<unit id="146" translate="yes">
				<segment state="initial">
					<source>The following animations are supplied in the animation library.</source>
					<target>The following animations are supplied in the animation library.</target>
				</segment>
			</unit>
			<unit id="147" translate="yes">
				<segment state="initial">
					<source>Click on the name of an animation to learn more about their main usage scenarios, how to define them, and to see an example of the animation.</source>
					<target>Click on the name of an animation to learn more about their main usage scenarios, how to define them, and to see an example of the animation.</target>
				</segment>
			</unit>
			<unit id="148" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](./animations-overview.md#content-transition-and-entrance-transition)</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Content and entrance transition</pc>: Animates one piece or set of content into or out of view.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Content and entrance transition</pc>: Animates one piece or set of content into or out of view.</target>
				</segment>
			</unit>
			<unit id="149" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](./animations-overview.md#fade-in-out-and-crossfade)</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Fade in/out, and crossfade</pc>: Shows transient elements or controls, or refreshes a content area.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Fade in/out, and crossfade</pc>: Shows transient elements or controls, or refreshes a content area.</target>
				</segment>
			</unit>
			<unit id="150" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](./animations-overview.md#pointer-up-down)</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Pointer up/down</pc>: Gives visual feedback of a tap or click on a tile.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Pointer up/down</pc>: Gives visual feedback of a tap or click on a tile.</target>
				</segment>
			</unit>
			<unit id="151" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](./animations-overview.md#reposition)</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Reposition</pc>: Moves an element into a new position.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Reposition</pc>: Moves an element into a new position.</target>
				</segment>
			</unit>
			<unit id="152" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](./animations-overview.md#show-hide-popup)</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Show/hide popup</pc>: Displays contextual UI on top of the view.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Show/hide popup</pc>: Displays contextual UI on top of the view.</target>
				</segment>
			</unit>
			<unit id="153" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](./animations-overview.md#show-hide-edge-ui)</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Show/hide edge UI</pc>: Slides edge-based UI, including large UI such as a panel, into or out of view.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Show/hide edge UI</pc>: Slides edge-based UI, including large UI such as a panel, into or out of view.</target>
				</segment>
			</unit>
			<unit id="154" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](./animations-overview.md#list-item-changes)</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">List item changes</pc>: Adds or deletes an item from a list, or reordering of the items.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">List item changes</pc>: Adds or deletes an item from a list, or reordering of the items.</target>
				</segment>
			</unit>
			<unit id="155" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](./animations-overview.md#drag-drop)</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Drag/drop</pc>: Gives visual feedback during a drag-and-drop operation.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Drag/drop</pc>: Gives visual feedback during a drag-and-drop operation.</target>
				</segment>
			</unit>
			<unit id="156" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](./animations-overview.md#swipe-gestures)</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Swipe gestures</pc>: Hints that a tile supports the swipe interaction, or indicates swipe-selected state</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Swipe gestures</pc>: Hints that a tile supports the swipe interaction, or indicates swipe-selected state</target>
				</segment>
			</unit>
			<unit id="157" translate="yes">
				<segment state="initial">
					<source>Content transition and entrance transition</source>
					<target>Content transition and entrance transition</target>
				</segment>
			</unit>
			<unit id="158" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/BR243103)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Use content transition animations (<pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ContentThemeTransition</pc></pc>) to move a piece or a set of content into or out of the current view.</source>
					<target>Use content transition animations (<pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ContentThemeTransition</pc></pc>) to move a piece or a set of content into or out of the current view.</target>
				</segment>
			</unit>
			<unit id="159" translate="yes">
				<segment state="initial">
					<source>For example, the content transition animations show content that was not ready to display when the page was first loaded, or when the content changes on a section of a page.</source>
					<target>For example, the content transition animations show content that was not ready to display when the page was first loaded, or when the content changes on a section of a page.</target>
				</segment>
			</unit>
			<unit id="160" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/BR210288)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>The XAML animation library doesn't have a concept of an animation that applies to the entire page when the page is loaded, but it does have a separate transition (<pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">EntranceThemeTransition</pc></pc>) that can apply to content when the page containing the content is first loaded and that part of content is rendered.</source>
					<target>The XAML animation library doesn't have a concept of an animation that applies to the entire page when the page is loaded, but it does have a separate transition (<pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">EntranceThemeTransition</pc></pc>) that can apply to content when the page containing the content is first loaded and that part of content is rendered.</target>
				</segment>
			</unit>
			<unit id="161" translate="yes">
				<segment state="initial">
					<source>Thus the first appearance of content can offer different feedback than a change to content does.</source>
					<target>Thus the first appearance of content can offer different feedback than a change to content does.</target>
				</segment>
			</unit>
			<unit id="162" translate="yes">
				<segment state="initial">
					<source>Fade in/out, and crossfade</source>
					<target>Fade in/out, and crossfade</target>
				</segment>
			</unit>
			<unit id="163" translate="yes">
				<segment state="initial">
					<source>Use fade in and fade out animations to show or hide transient UI or controls.</source>
					<target>Use fade in and fade out animations to show or hide transient UI or controls.</target>
				</segment>
			</unit>
			<unit id="164" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/BR210298)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/BR210302)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>In XAML these are represented as <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">FadeInThemeAnimation</pc></pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">FadeOutThemeAnimation</pc></pc>.</source>
					<target>In XAML these are represented as <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">FadeInThemeAnimation</pc></pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">FadeOutThemeAnimation</pc></pc>.</target>
				</segment>
			</unit>
			<unit id="165" translate="yes">
				<segment state="initial">
					<source>One example is in an app bar in which new controls can appear due to user interaction.</source>
					<target>One example is in an app bar in which new controls can appear due to user interaction.</target>
				</segment>
			</unit>
			<unit id="166" translate="yes">
				<segment state="initial">
					<source>Another example is a transient scroll bar or panning indicator that is faded out after no user input has been detected for some amount of time.</source>
					<target>Another example is a transient scroll bar or panning indicator that is faded out after no user input has been detected for some amount of time.</target>
				</segment>
			</unit>
			<unit id="167" translate="yes">
				<segment state="initial">
					<source>Apps should also use the fade in animation when they transition from a placeholder item to the final item as content loads dynamically.</source>
					<target>Apps should also use the fade in animation when they transition from a placeholder item to the final item as content loads dynamically.</target>
				</segment>
			</unit>
			<unit id="168" translate="yes">
				<segment state="initial">
					<source>Use a crossfade animation to smooth the transition when an item's state is changing; for example, when the app refreshes the current contents of a view.</source>
					<target>Use a crossfade animation to smooth the transition when an item's state is changing; for example, when the app refreshes the current contents of a view.</target>
				</segment>
			</unit>
			<unit id="169" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/BR212661)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/BR210298)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
					<data id="id9">[</data>
					<data id="id10">](https://msdn.microsoft.com/library/windows/apps/BR210302)</data>
					<data id="id11">**</data>
					<data id="id12">**</data>
				</originalData>
				<segment state="initial">
					<source>The XAML animation library does not supply a dedicated crossfade animation (no equivalent for <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">crossFade</pc></pc>), but you can achieve the same result using <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">FadeInThemeAnimation</pc></pc> and <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">FadeOutThemeAnimation</pc></pc> with overlapped timing.</source>
					<target>The XAML animation library does not supply a dedicated crossfade animation (no equivalent for <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">crossFade</pc></pc>), but you can achieve the same result using <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">FadeInThemeAnimation</pc></pc> and <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">FadeOutThemeAnimation</pc></pc> with overlapped timing.</target>
				</segment>
			</unit>
			<unit id="170" translate="yes">
				<segment state="initial">
					<source>Pointer up/down</source>
					<target>Pointer up/down</target>
				</segment>
			</unit>
			<unit id="171" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/Hh969168)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/Hh969164)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>Use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">PointerUpThemeAnimation</pc></pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">PointerDownThemeAnimation</pc></pc> animations to give the user feedback for a successful tap or click on a tile.</source>
					<target>Use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">PointerUpThemeAnimation</pc></pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">PointerDownThemeAnimation</pc></pc> animations to give the user feedback for a successful tap or click on a tile.</target>
				</segment>
			</unit>
			<unit id="172" translate="yes">
				<segment state="initial">
					<source>For example, when a user clicks or taps down on a tile, the pointer down animation is played.</source>
					<target>For example, when a user clicks or taps down on a tile, the pointer down animation is played.</target>
				</segment>
			</unit>
			<unit id="173" translate="yes">
				<segment state="initial">
					<source>Once the click or tap has been released, the pointer up animation is played.</source>
					<target>Once the click or tap has been released, the pointer up animation is played.</target>
				</segment>
			</unit>
			<unit id="174" translate="yes">
				<segment state="initial">
					<source>Reposition</source>
					<target>Reposition</target>
				</segment>
			</unit>
			<unit id="175" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/BR210421)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/BR210429)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>Use the reposition animations (<pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">RepositionThemeAnimation</pc></pc> or <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">RepositionThemeTransition</pc></pc>) to move an element into a new position.</source>
					<target>Use the reposition animations (<pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">RepositionThemeAnimation</pc></pc> or <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">RepositionThemeTransition</pc></pc>) to move an element into a new position.</target>
				</segment>
			</unit>
			<unit id="176" translate="yes">
				<segment state="initial">
					<source>For example, moving the headers in a headerd items control uses the reposition animation.</source>
					<target>For example, moving the headers in a headerd items control uses the reposition animation.</target>
				</segment>
			</unit>
			<unit id="177" translate="yes">
				<segment state="initial">
					<source>Show/hide popup</source>
					<target>Show/hide popup</target>
				</segment>
			</unit>
			<unit id="178" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/BR210383)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/BR210391)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
					<data id="id9">[</data>
					<data id="id10">](https://msdn.microsoft.com/library/windows/apps/BR227842)</data>
					<data id="id11">**</data>
					<data id="id12">**</data>
				</originalData>
				<segment state="initial">
					<source>Use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">PopInThemeAnimation</pc></pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">PopOutThemeAnimation</pc></pc> when you show and hide a <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">Popup</pc></pc> or similar contextual UI on top of the current view.</source>
					<target>Use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">PopInThemeAnimation</pc></pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">PopOutThemeAnimation</pc></pc> when you show and hide a <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">Popup</pc></pc> or similar contextual UI on top of the current view.</target>
				</segment>
			</unit>
			<unit id="179" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/Hh969172)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">PopupThemeTransition</pc></pc> is a theme transition that's useful feedback if you want to light dismiss a popup.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">PopupThemeTransition</pc></pc> is a theme transition that's useful feedback if you want to light dismiss a popup.</target>
				</segment>
			</unit>
			<unit id="180" translate="yes">
				<segment state="initial">
					<source>Show/hide edge UI</source>
					<target>Show/hide edge UI</target>
				</segment>
			</unit>
			<unit id="181" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/Hh702324)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">EdgeUIThemeTransition</pc></pc> animation to slide small, edge-based UI into and out of view.</source>
					<target>Use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">EdgeUIThemeTransition</pc></pc> animation to slide small, edge-based UI into and out of view.</target>
				</segment>
			</unit>
			<unit id="182" translate="yes">
				<segment state="initial">
					<source>For example, use these animations when you show a custom app bar at the top or bottom of the screen or a UI surface for errors and warnings at the top of the screen.</source>
					<target>For example, use these animations when you show a custom app bar at the top or bottom of the screen or a UI surface for errors and warnings at the top of the screen.</target>
				</segment>
			</unit>
			<unit id="183" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/Hh969160)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">PaneThemeTransition</pc></pc> animation to show and hide a pane or panel.</source>
					<target>Use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">PaneThemeTransition</pc></pc> animation to show and hide a pane or panel.</target>
				</segment>
			</unit>
			<unit id="184" translate="yes">
				<segment state="initial">
					<source>This is for large edge-based UI such as a custom keyboard or a task pane.</source>
					<target>This is for large edge-based UI such as a custom keyboard or a task pane.</target>
				</segment>
			</unit>
			<unit id="185" translate="yes">
				<segment state="initial">
					<source>List item changes</source>
					<target>List item changes</target>
				</segment>
			</unit>
			<unit id="186" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/BR243047)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">AddDeleteThemeTransition</pc></pc> animation to add animated behavior when you add or delete an item in an existing list.</source>
					<target>Use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">AddDeleteThemeTransition</pc></pc> animation to add animated behavior when you add or delete an item in an existing list.</target>
				</segment>
			</unit>
			<unit id="187" translate="yes">
				<segment state="initial">
					<source>For add, the transition will first reposition existing items in the list to make space for the new items, and then add the new items.</source>
					<target>For add, the transition will first reposition existing items in the list to make space for the new items, and then add the new items.</target>
				</segment>
			</unit>
			<unit id="188" translate="yes">
				<segment state="initial">
					<source>For delete, the transition removes items from a list and, if necessary, repositions the remaining list items once the deleted items have been removed.</source>
					<target>For delete, the transition removes items from a list and, if necessary, repositions the remaining list items once the deleted items have been removed.</target>
				</segment>
			</unit>
			<unit id="189" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/BR210409)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>There's also a separate <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ReorderThemeTransition</pc></pc> that you apply if an item changes position in a list.</source>
					<target>There's also a separate <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ReorderThemeTransition</pc></pc> that you apply if an item changes position in a list.</target>
				</segment>
			</unit>
			<unit id="190" translate="yes">
				<segment state="initial">
					<source>This is animated differently than deleting an item and adding it in a new place with the associated delete/add animations.</source>
					<target>This is animated differently than deleting an item and adding it in a new place with the associated delete/add animations.</target>
				</segment>
			</unit>
			<unit id="191" translate="yes">
				<segment state="initial">
					<source>Drag/drop</source>
					<target>Drag/drop</target>
				</segment>
			</unit>
			<unit id="192" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/BR243173)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/BR243177)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
					<data id="id9">[</data>
					<data id="id10">](https://msdn.microsoft.com/library/windows/apps/BR243185)</data>
					<data id="id11">**</data>
					<data id="id12">**</data>
				</originalData>
				<segment state="initial">
					<source>Use the drag animations (<pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">DragItemThemeAnimation</pc></pc>, <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">DragOverThemeAnimation</pc></pc>) and drop animation (<pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">DropTargetItemThemeAnimation</pc></pc>) to give visual feedback when the user drags or drops an item.</source>
					<target>Use the drag animations (<pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">DragItemThemeAnimation</pc></pc>, <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">DragOverThemeAnimation</pc></pc>) and drop animation (<pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">DropTargetItemThemeAnimation</pc></pc>) to give visual feedback when the user drags or drops an item.</target>
				</segment>
			</unit>
			<unit id="193" translate="yes">
				<segment state="initial">
					<source>When active, the animations show the user that the list can be rearranged around a dropped item.</source>
					<target>When active, the animations show the user that the list can be rearranged around a dropped item.</target>
				</segment>
			</unit>
			<unit id="194" translate="yes">
				<segment state="initial">
					<source>It is helpful for users to know where the item will be placed in a list if it is dropped at the current location.</source>
					<target>It is helpful for users to know where the item will be placed in a list if it is dropped at the current location.</target>
				</segment>
			</unit>
			<unit id="195" translate="yes">
				<segment state="initial">
					<source>The animations give visual feedback that an item being dragged can be dropped between two other items in the list and that those items will move out of the way.</source>
					<target>The animations give visual feedback that an item being dragged can be dropped between two other items in the list and that those items will move out of the way.</target>
				</segment>
			</unit>
			<unit id="196" translate="yes">
				<segment state="initial">
					<source>Swipe gestures</source>
					<target>Swipe gestures</target>
				</segment>
			</unit>
			<unit id="197" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/Hh702489)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SwipeHintThemeAnimation</pc></pc> animation to show that a tile supports the swipe interaction.</source>
					<target>Use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SwipeHintThemeAnimation</pc></pc> animation to show that a tile supports the swipe interaction.</target>
				</segment>
			</unit>
			<unit id="198" translate="yes">
				<segment state="initial">
					<source>Users can swipe downwards to select a tile.</source>
					<target>Users can swipe downwards to select a tile.</target>
				</segment>
			</unit>
			<unit id="199" translate="yes">
				<segment state="initial">
					<source>If a user does not know if they can swipe on a tile, a press and hold gesture on the tile will play the swipe hint animation to suggest that the user should interact with the tile through a swipe.</source>
					<target>If a user does not know if they can swipe on a tile, a press and hold gesture on the tile will play the swipe hint animation to suggest that the user should interact with the tile through a swipe.</target>
				</segment>
			</unit>
			<unit id="200" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/Hh702477)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SwipeBackThemeAnimation</pc></pc> animation to show that the tile has been selected, and to return the tile to its rest location.</source>
					<target>Use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SwipeBackThemeAnimation</pc></pc> animation to show that the tile has been selected, and to return the tile to its rest location.</target>
				</segment>
			</unit>
			<unit id="201" translate="yes">
				<segment state="initial">
					<source>Using animations with custom controls</source>
					<target>Using animations with custom controls</target>
				</segment>
			</unit>
			<unit id="202" translate="yes">
				<segment state="initial">
					<source>The following table summarizes our recommendations for which animation you should use when you create a custom version of these Windows Runtime controls:</source>
					<target>The following table summarizes our recommendations for which animation you should use when you create a custom version of these Windows Runtime controls:</target>
				</segment>
			</unit>
			<unit id="203" translate="yes">
				<segment state="initial">
					<source>UI type</source>
					<target>UI type</target>
				</segment>
			</unit>
			<unit id="204" translate="yes">
				<segment state="initial">
					<source>Recommended animation</source>
					<target>Recommended animation</target>
				</segment>
			</unit>
			<unit id="205" translate="yes">
				<segment state="initial">
					<source>Dialog box</source>
					<target>Dialog box</target>
				</segment>
			</unit>
			<unit id="206" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/BR210298)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/BR210302)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">FadeInThemeAnimation</pc></pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">FadeOutThemeAnimation</pc></pc></source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">FadeInThemeAnimation</pc></pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">FadeOutThemeAnimation</pc></pc></target>
				</segment>
			</unit>
			<unit id="207" translate="yes">
				<segment state="initial">
					<source>Flyout</source>
					<target>Flyout</target>
				</segment>
			</unit>
			<unit id="208" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/en-us/library/windows/apps/windows.ui.xaml.media.animation.popinthemeanimation.popinthemeanimation.aspx)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.media.animation.popoutthemeanimation.popoutthemeanimation)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">PopInThemeAnimation</pc></pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">PopOutThemeAnimation</pc></pc></source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">PopInThemeAnimation</pc></pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">PopOutThemeAnimation</pc></pc></target>
				</segment>
			</unit>
			<unit id="209" translate="yes">
				<segment state="initial">
					<source>Tooltip</source>
					<target>Tooltip</target>
				</segment>
			</unit>
			<unit id="210" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/BR210298)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/BR210302)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">FadeInThemeAnimation</pc></pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">FadeOutThemeAnimation</pc></pc></source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">FadeInThemeAnimation</pc></pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">FadeOutThemeAnimation</pc></pc></target>
				</segment>
			</unit>
			<unit id="211" translate="yes">
				<segment state="initial">
					<source>Context menu</source>
					<target>Context menu</target>
				</segment>
			</unit>
			<unit id="212" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/en-us/library/windows/apps/windows.ui.xaml.media.animation.popinthemeanimation.popinthemeanimation.aspx)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.media.animation.popoutthemeanimation.popoutthemeanimation)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">PopInThemeAnimation</pc></pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">PopOutThemeAnimation</pc></pc></source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">PopInThemeAnimation</pc></pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">PopOutThemeAnimation</pc></pc></target>
				</segment>
			</unit>
			<unit id="213" translate="yes">
				<segment state="initial">
					<source>Command bar</source>
					<target>Command bar</target>
				</segment>
			</unit>
			<unit id="214" translate="yes">
				<segment state="initial">
					<source>EdgeUIThemeTransition</source>
					<target>EdgeUIThemeTransition</target>
				</segment>
			</unit>
			<unit id="215" translate="yes">
				<segment state="initial">
					<source>Task pane or edge-based panel</source>
					<target>Task pane or edge-based panel</target>
				</segment>
			</unit>
			<unit id="216" translate="yes">
				<segment state="initial">
					<source>PaneThemeTransition</source>
					<target>PaneThemeTransition</target>
				</segment>
			</unit>
			<unit id="217" translate="yes">
				<segment state="initial">
					<source>Contents of any UI container</source>
					<target>Contents of any UI container</target>
				</segment>
			</unit>
			<unit id="218" translate="yes">
				<segment state="initial">
					<source>ContentThemeTransition</source>
					<target>ContentThemeTransition</target>
				</segment>
			</unit>
			<unit id="219" translate="yes">
				<segment state="initial">
					<source>For controls or if no other animation applies</source>
					<target>For controls or if no other animation applies</target>
				</segment>
			</unit>
			<unit id="220" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/en-us/library/windows/apps/windows.ui.xaml.media.animation.fadeinthemeanimation.fadeinthemeanimation.aspx)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/BR210302)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">FadeInThemeAnimation</pc></pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">FadeOutThemeAnimation</pc></pc></source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">FadeInThemeAnimation</pc></pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">FadeOutThemeAnimation</pc></pc></target>
				</segment>
			</unit>
			<unit id="221" translate="yes">
				<segment state="initial">
					<source>Transition animation examples</source>
					<target>Transition animation examples</target>
				</segment>
			</unit>
			<unit id="222" translate="yes">
				<segment state="initial">
					<source>Ideally, your app uses animations to enhance the user interface or to make it more attractive without annoying your users.</source>
					<target>Ideally, your app uses animations to enhance the user interface or to make it more attractive without annoying your users.</target>
				</segment>
			</unit>
			<unit id="223" translate="yes">
				<segment state="initial">
					<source>One way you can do this is to apply animated transitions to UI so that when something enters or leaves the screen or otherwise changes, the animation draws the attention of the user to the change.</source>
					<target>One way you can do this is to apply animated transitions to UI so that when something enters or leaves the screen or otherwise changes, the animation draws the attention of the user to the change.</target>
				</segment>
			</unit>
			<unit id="224" translate="yes">
				<segment state="initial">
					<source>For example, your buttons may rapidly fade in and out of view rather than just appear and disappear.</source>
					<target>For example, your buttons may rapidly fade in and out of view rather than just appear and disappear.</target>
				</segment>
			</unit>
			<unit id="225" translate="yes">
				<segment state="initial">
					<source>We created a number of APIs that can be used to create recommended or typical animation transitions that are consistent.</source>
					<target>We created a number of APIs that can be used to create recommended or typical animation transitions that are consistent.</target>
				</segment>
			</unit>
			<unit id="226" translate="yes">
				<segment state="initial">
					<source>The example here shows how to apply an animation to a button so that it swiftly slides into view.</source>
					<target>The example here shows how to apply an animation to a button so that it swiftly slides into view.</target>
				</segment>
			</unit>
			<unit id="227" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/BR210288)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>In this code, we add the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">EntranceThemeTransition</pc></pc> object to the transition collection of the button.</source>
					<target>In this code, we add the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">EntranceThemeTransition</pc></pc> object to the transition collection of the button.</target>
				</segment>
			</unit>
			<unit id="228" translate="yes">
				<segment state="initial">
					<source>Now, when the button is first rendered, it swiftly slides into view rather than just appear.</source>
					<target>Now, when the button is first rendered, it swiftly slides into view rather than just appear.</target>
				</segment>
			</unit>
			<unit id="229" translate="yes">
				<segment state="initial">
					<source>You can set a few properties on the animation object in order to adjust how far it slides and from what direction, but it's really meant to be a simple API for a specific scenario, that is, to make an eye-catching entrance.</source>
					<target>You can set a few properties on the animation object in order to adjust how far it slides and from what direction, but it's really meant to be a simple API for a specific scenario, that is, to make an eye-catching entrance.</target>
				</segment>
			</unit>
			<unit id="230" translate="yes">
				<segment state="initial">
					<source>You can also define transition animation themes in the style resources of your app, allowing you to apply the effect uniformly.</source>
					<target>You can also define transition animation themes in the style resources of your app, allowing you to apply the effect uniformly.</target>
				</segment>
			</unit>
			<unit id="231" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/BR208849)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>This example is equivalent to the previous one, only it is applied using a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Style</pc></pc>:</source>
					<target>This example is equivalent to the previous one, only it is applied using a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Style</pc></pc>:</target>
				</segment>
			</unit>
			<unit id="232" translate="yes">
				<segment state="initial">
					<source>The previous examples apply a theme transition to an individual control, however, theme transitions are even more interesting when you apply them to a container of objects.</source>
					<target>The previous examples apply a theme transition to an individual control, however, theme transitions are even more interesting when you apply them to a container of objects.</target>
				</segment>
			</unit>
			<unit id="233" translate="yes">
				<segment state="initial">
					<source>When you do this, all the child objects of the container take part in the transition.</source>
					<target>When you do this, all the child objects of the container take part in the transition.</target>
				</segment>
			</unit>
			<unit id="234" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/BR210288)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/BR242704)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>In the following example, an <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">EntranceThemeTransition</pc></pc> is applied to a <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Grid</pc></pc> of rectangles.</source>
					<target>In the following example, an <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">EntranceThemeTransition</pc></pc> is applied to a <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Grid</pc></pc> of rectangles.</target>
				</segment>
			</unit>
			<unit id="235" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/BR242704)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>The child rectangles of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Grid</pc></pc> transition into view one after the other in a visually pleasing way rather than all at once as would be the case if you applied this animation to the rectangles individually.</source>
					<target>The child rectangles of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Grid</pc></pc> transition into view one after the other in a visually pleasing way rather than all at once as would be the case if you applied this animation to the rectangles individually.</target>
				</segment>
			</unit>
			<unit id="236" translate="yes">
				<segment state="initial">
					<source>Here's a video that demonstrates this animation:</source>
					<target>Here's a video that demonstrates this animation:</target>
				</segment>
			</unit>
			<unit id="237" translate="yes">
				<segment state="initial">
					<source>Animation showing child rectangle transitioning into view</source>
					<target>Animation showing child rectangle transitioning into view</target>
				</segment>
			</unit>
			<unit id="238" translate="yes">
				<segment state="initial">
					<source>Child objects of a container can also re-flow when one or more of those children change position.</source>
					<target>Child objects of a container can also re-flow when one or more of those children change position.</target>
				</segment>
			</unit>
			<unit id="239" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/BR210429)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>In the following example, we apply a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">RepositionThemeTransition</pc></pc> to a grid of rectangles.</source>
					<target>In the following example, we apply a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">RepositionThemeTransition</pc></pc> to a grid of rectangles.</target>
				</segment>
			</unit>
			<unit id="240" translate="yes">
				<segment state="initial">
					<source>When you remove one of the rectangles, all the other rectangles re-flow into their new position.</source>
					<target>When you remove one of the rectangles, all the other rectangles re-flow into their new position.</target>
				</segment>
			</unit>
			<unit id="241" translate="yes">
				<segment state="initial">
					<source>This video demonstrates the animation that runs for the rectangles being removed:</source>
					<target>This video demonstrates the animation that runs for the rectangles being removed:</target>
				</segment>
			</unit>
			<unit id="242" translate="yes">
				<segment state="initial">
					<source>You can apply multiple transition animations to a single object or object container.</source>
					<target>You can apply multiple transition animations to a single object or object container.</target>
				</segment>
			</unit>
			<unit id="243" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/BR210429)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/BR210288)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>For example, if you want the list of rectangles to animate into view and also animate when they change position, you can apply the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">RepositionThemeTransition</pc></pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">EntranceThemeTransition</pc></pc> like this:</source>
					<target>For example, if you want the list of rectangles to animate into view and also animate when they change position, you can apply the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">RepositionThemeTransition</pc></pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">EntranceThemeTransition</pc></pc> like this:</target>
				</segment>
			</unit>
			<unit id="244" translate="yes">
				<segment state="initial">
					<source>There are several transition effects to create animations on your UI elements as they are added, removed, reordered, and so on.</source>
					<target>There are several transition effects to create animations on your UI elements as they are added, removed, reordered, and so on.</target>
				</segment>
			</unit>
			<unit id="245" translate="yes">
				<segment state="initial">
					<source>The names of these APIs all contain "ThemeTransition":</source>
					<target>The names of these APIs all contain "ThemeTransition":</target>
				</segment>
			</unit>
			<unit id="246" translate="yes">
				<segment state="initial">
					<source>API</source>
					<target>API</target>
				</segment>
			</unit>
			<unit id="247" translate="yes">
				<segment state="initial">
					<source>Description</source>
					<target>Description</target>
				</segment>
			</unit>
			<unit id="248" translate="yes">
				<segment state="initial">
					<source>AddDeleteThemeTransition</source>
					<target>AddDeleteThemeTransition</target>
				</segment>
			</unit>
			<unit id="249" translate="yes">
				<segment state="initial">
					<source>Provides the animated transition behavior for when controls add or delete children or content.</source>
					<target>Provides the animated transition behavior for when controls add or delete children or content.</target>
				</segment>
			</unit>
			<unit id="250" translate="yes">
				<segment state="initial">
					<source>Typically the control is an item container.</source>
					<target>Typically the control is an item container.</target>
				</segment>
			</unit>
			<unit id="251" translate="yes">
				<segment state="initial">
					<source>ContentThemeTransition</source>
					<target>ContentThemeTransition</target>
				</segment>
			</unit>
			<unit id="252" translate="yes">
				<segment state="initial">
					<source>Provides the animated transition behavior for when the content of a control is changing.</source>
					<target>Provides the animated transition behavior for when the content of a control is changing.</target>
				</segment>
			</unit>
			<unit id="253" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/BR243047)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>You can apply this in addition to <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">AddDeleteThemeTransition</pc></pc>.</source>
					<target>You can apply this in addition to <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">AddDeleteThemeTransition</pc></pc>.</target>
				</segment>
			</unit>
			<unit id="254" translate="yes">
				<segment state="initial">
					<source>EdgeUIThemeTransition</source>
					<target>EdgeUIThemeTransition</target>
				</segment>
			</unit>
			<unit id="255" translate="yes">
				<segment state="initial">
					<source>Provides the animated transition behavior for a (small) edge UI transition.</source>
					<target>Provides the animated transition behavior for a (small) edge UI transition.</target>
				</segment>
			</unit>
			<unit id="256" translate="yes">
				<segment state="initial">
					<source>EntranceThemeTransition</source>
					<target>EntranceThemeTransition</target>
				</segment>
			</unit>
			<unit id="257" translate="yes">
				<segment state="initial">
					<source>Provides the animated transition behavior for when controls first appear.</source>
					<target>Provides the animated transition behavior for when controls first appear.</target>
				</segment>
			</unit>
			<unit id="258" translate="yes">
				<segment state="initial">
					<source>PaneThemeTransition</source>
					<target>PaneThemeTransition</target>
				</segment>
			</unit>
			<unit id="259" translate="yes">
				<segment state="initial">
					<source>Provides the animated transition behavior for a panel (large edge UI) UI transition.</source>
					<target>Provides the animated transition behavior for a panel (large edge UI) UI transition.</target>
				</segment>
			</unit>
			<unit id="260" translate="yes">
				<segment state="initial">
					<source>PopupThemeTransition</source>
					<target>PopupThemeTransition</target>
				</segment>
			</unit>
			<unit id="261" translate="yes">
				<segment state="initial">
					<source>Provides the animated transition behavior that applies to pop-in components of controls (for example, tooltip-like UI on an object) as they appear.</source>
					<target>Provides the animated transition behavior that applies to pop-in components of controls (for example, tooltip-like UI on an object) as they appear.</target>
				</segment>
			</unit>
			<unit id="262" translate="yes">
				<segment state="initial">
					<source>ReorderThemeTransition</source>
					<target>ReorderThemeTransition</target>
				</segment>
			</unit>
			<unit id="263" translate="yes">
				<segment state="initial">
					<source>Provides the animated transition behavior for when list-view controls items change order.</source>
					<target>Provides the animated transition behavior for when list-view controls items change order.</target>
				</segment>
			</unit>
			<unit id="264" translate="yes">
				<segment state="initial">
					<source>Typically this happens as a result of a drag-drop operation.</source>
					<target>Typically this happens as a result of a drag-drop operation.</target>
				</segment>
			</unit>
			<unit id="265" translate="yes">
				<segment state="initial">
					<source>Different controls and themes can have varying characteristics for the animations.</source>
					<target>Different controls and themes can have varying characteristics for the animations.</target>
				</segment>
			</unit>
			<unit id="266" translate="yes">
				<segment state="initial">
					<source>RepositionThemeTransition</source>
					<target>RepositionThemeTransition</target>
				</segment>
			</unit>
			<unit id="267" translate="yes">
				<segment state="initial">
					<source>Provides the animated transition behavior for when controls change position.</source>
					<target>Provides the animated transition behavior for when controls change position.</target>
				</segment>
			</unit>
			<unit id="268" translate="yes">
				<segment state="initial">
					<source>Theme animation examples</source>
					<target>Theme animation examples</target>
				</segment>
			</unit>
			<unit id="269" translate="yes">
				<segment state="initial">
					<source>Transition animations are simple to apply.</source>
					<target>Transition animations are simple to apply.</target>
				</segment>
			</unit>
			<unit id="270" translate="yes">
				<segment state="initial">
					<source>But you may want to have a bit more control over the timing and order of your animation effects.</source>
					<target>But you may want to have a bit more control over the timing and order of your animation effects.</target>
				</segment>
			</unit>
			<unit id="271" translate="yes">
				<segment state="initial">
					<source>You can use theme animations to enable more control while still using a consistent theme for how your animation behaves.</source>
					<target>You can use theme animations to enable more control while still using a consistent theme for how your animation behaves.</target>
				</segment>
			</unit>
			<unit id="272" translate="yes">
				<segment state="initial">
					<source>Theme animations also require less markup than custom animations.</source>
					<target>Theme animations also require less markup than custom animations.</target>
				</segment>
			</unit>
			<unit id="273" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/BR210302)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Here, we use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">FadeOutThemeAnimation</pc></pc> to make a rectangle fade out of view.</source>
					<target>Here, we use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">FadeOutThemeAnimation</pc></pc> to make a rectangle fade out of view.</target>
				</segment>
			</unit>
			<unit id="274" translate="yes">
				<segment state="initial">
					<source>Unlike transition animations, a theme animation doesn't have a built-in trigger (the transition) that runs it automatically.</source>
					<target>Unlike transition animations, a theme animation doesn't have a built-in trigger (the transition) that runs it automatically.</target>
				</segment>
			</unit>
			<unit id="275" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/BR210490)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>You must use a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Storyboard</pc></pc> to contain a theme animation when you define it in XAML.</source>
					<target>You must use a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Storyboard</pc></pc> to contain a theme animation when you define it in XAML.</target>
				</segment>
			</unit>
			<unit id="276" translate="yes">
				<segment state="initial">
					<source>You can also change the default behavior of the animation.</source>
					<target>You can also change the default behavior of the animation.</target>
				</segment>
			</unit>
			<unit id="277" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/BR243207)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/BR210302)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>For example, you can slow down the fade-out by increasing the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Duration</pc></pc> time value on the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">FadeOutThemeAnimation</pc></pc>.</source>
					<target>For example, you can slow down the fade-out by increasing the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Duration</pc></pc> time value on the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">FadeOutThemeAnimation</pc></pc>.</target>
				</segment>
			</unit>
			<unit id="278" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">[</data>
					<data id="id4">](https://msdn.microsoft.com/library/windows/apps/BR210490)</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  For purposes of showing basic animation techniques, we're using app code to start the animation by calling methods of <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">Storyboard</pc></pc>.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  For purposes of showing basic animation techniques, we're using app code to start the animation by calling methods of <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">Storyboard</pc></pc>.</target>
				</segment>
			</unit>
			<unit id="279" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">[</data>
					<data id="id4">](https://msdn.microsoft.com/library/windows/apps/BR210491)</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
					<data id="id7">[</data>
					<data id="id8">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.media.animation.storyboard.stop)</data>
					<data id="id9">**</data>
					<data id="id10">**</data>
					<data id="id11">[</data>
					<data id="id12">](https://msdn.microsoft.com/en-us/library/windows/apps/windows.ui.xaml.media.animation.storyboard.pause.aspx)</data>
					<data id="id13">**</data>
					<data id="id14">**</data>
					<data id="id15">[</data>
					<data id="id16">](https://msdn.microsoft.com/en-us/library/windows/apps/windows.ui.xaml.media.animation.storyboard.resume.aspx)</data>
					<data id="id17">**</data>
					<data id="id18">**</data>
					<data id="id19">**</data>
					<data id="id20">**</data>
				</originalData>
				<segment state="initial">
					<source>You can control how the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Storyboard</pc> animations run using the <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">Begin</pc></pc>, <pc dataRefEnd="id8" dataRefStart="id7" id="p4"><pc dataRefEnd="id10" dataRefStart="id9" id="p5">Stop</pc></pc>, <pc dataRefEnd="id12" dataRefStart="id11" id="p6"><pc dataRefEnd="id14" dataRefStart="id13" id="p7">Pause</pc></pc>, and <pc dataRefEnd="id16" dataRefStart="id15" id="p8"><pc dataRefEnd="id18" dataRefStart="id17" id="p9">Resume</pc></pc> <pc dataRefEnd="id20" dataRefStart="id19" id="p10">Storyboard</pc> methods.</source>
					<target>You can control how the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Storyboard</pc> animations run using the <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">Begin</pc></pc>, <pc dataRefEnd="id8" dataRefStart="id7" id="p4"><pc dataRefEnd="id10" dataRefStart="id9" id="p5">Stop</pc></pc>, <pc dataRefEnd="id12" dataRefStart="id11" id="p6"><pc dataRefEnd="id14" dataRefStart="id13" id="p7">Pause</pc></pc>, and <pc dataRefEnd="id16" dataRefStart="id15" id="p8"><pc dataRefEnd="id18" dataRefStart="id17" id="p9">Resume</pc></pc> <pc dataRefEnd="id20" dataRefStart="id19" id="p10">Storyboard</pc> methods.</target>
				</segment>
			</unit>
			<unit id="280" translate="yes">
				<segment state="initial">
					<source>However, that's not typically how you include library animations in apps.</source>
					<target>However, that's not typically how you include library animations in apps.</target>
				</segment>
			</unit>
			<unit id="281" translate="yes">
				<segment state="initial">
					<source>Rather, you usually integrate the library animations into the XAML styles and templates applied to controls or elements.</source>
					<target>Rather, you usually integrate the library animations into the XAML styles and templates applied to controls or elements.</target>
				</segment>
			</unit>
			<unit id="282" translate="yes">
				<segment state="initial">
					<source>Learning about templates and visual states is a little more involved.</source>
					<target>Learning about templates and visual states is a little more involved.</target>
				</segment>
			</unit>
			<unit id="283" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/xaml/JJ819808)</data>
				</originalData>
				<segment state="initial">
					<source>But we do cover how you'd use library animations in visual states as part of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Storyboarded animations for visual states</pc> topic.</source>
					<target>But we do cover how you'd use library animations in visual states as part of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Storyboarded animations for visual states</pc> topic.</target>
				</segment>
			</unit>
			<unit id="284" translate="yes">
				<segment state="initial">
					<source>You can apply several other theme animations to your UI elements to create animation effects.</source>
					<target>You can apply several other theme animations to your UI elements to create animation effects.</target>
				</segment>
			</unit>
			<unit id="285" translate="yes">
				<segment state="initial">
					<source>The names of these API all contain "ThemeAnimation":</source>
					<target>The names of these API all contain "ThemeAnimation":</target>
				</segment>
			</unit>
			<unit id="286" translate="yes">
				<segment state="initial">
					<source>API</source>
					<target>API</target>
				</segment>
			</unit>
			<unit id="287" translate="yes">
				<segment state="initial">
					<source>Description</source>
					<target>Description</target>
				</segment>
			</unit>
			<unit id="288" translate="yes">
				<segment state="initial">
					<source>DragItemThemeAnimation</source>
					<target>DragItemThemeAnimation</target>
				</segment>
			</unit>
			<unit id="289" translate="yes">
				<segment state="initial">
					<source>Represents the preconfigured animation that applies to item elements being dragged.</source>
					<target>Represents the preconfigured animation that applies to item elements being dragged.</target>
				</segment>
			</unit>
			<unit id="290" translate="yes">
				<segment state="initial">
					<source>DragOverThemeAnimation</source>
					<target>DragOverThemeAnimation</target>
				</segment>
			</unit>
			<unit id="291" translate="yes">
				<segment state="initial">
					<source>Represents the preconfigured animation that applies to the elements underneath an element being dragged.</source>
					<target>Represents the preconfigured animation that applies to the elements underneath an element being dragged.</target>
				</segment>
			</unit>
			<unit id="292" translate="yes">
				<segment state="initial">
					<source>DropTargetItemThemeAnimation</source>
					<target>DropTargetItemThemeAnimation</target>
				</segment>
			</unit>
			<unit id="293" translate="yes">
				<segment state="initial">
					<source>The preconfigured animation that applies to potential drop target elements.</source>
					<target>The preconfigured animation that applies to potential drop target elements.</target>
				</segment>
			</unit>
			<unit id="294" translate="yes">
				<segment state="initial">
					<source>FadeInThemeAnimation</source>
					<target>FadeInThemeAnimation</target>
				</segment>
			</unit>
			<unit id="295" translate="yes">
				<segment state="initial">
					<source>The preconfigured opacity animation that applies to controls when they first appear.</source>
					<target>The preconfigured opacity animation that applies to controls when they first appear.</target>
				</segment>
			</unit>
			<unit id="296" translate="yes">
				<segment state="initial">
					<source>FadeOutThemeAnimation</source>
					<target>FadeOutThemeAnimation</target>
				</segment>
			</unit>
			<unit id="297" translate="yes">
				<segment state="initial">
					<source>The preconfigured opacity animation that applies to controls when they are removed from UI or hidden.</source>
					<target>The preconfigured opacity animation that applies to controls when they are removed from UI or hidden.</target>
				</segment>
			</unit>
			<unit id="298" translate="yes">
				<segment state="initial">
					<source>PointerDownThemeAnimation</source>
					<target>PointerDownThemeAnimation</target>
				</segment>
			</unit>
			<unit id="299" translate="yes">
				<segment state="initial">
					<source>The preconfigured animation for user action that taps or clicks an item or element.</source>
					<target>The preconfigured animation for user action that taps or clicks an item or element.</target>
				</segment>
			</unit>
			<unit id="300" translate="yes">
				<segment state="initial">
					<source>PointerUpThemeAnimation</source>
					<target>PointerUpThemeAnimation</target>
				</segment>
			</unit>
			<unit id="301" translate="yes">
				<segment state="initial">
					<source>The preconfigured animation for user action that runs after a user taps down on an item or element and the action is released.</source>
					<target>The preconfigured animation for user action that runs after a user taps down on an item or element and the action is released.</target>
				</segment>
			</unit>
			<unit id="302" translate="yes">
				<segment state="initial">
					<source>PopInThemeAnimation</source>
					<target>PopInThemeAnimation</target>
				</segment>
			</unit>
			<unit id="303" translate="yes">
				<segment state="initial">
					<source>The preconfigured animation that applies to pop-in components of controls as they appear.</source>
					<target>The preconfigured animation that applies to pop-in components of controls as they appear.</target>
				</segment>
			</unit>
			<unit id="304" translate="yes">
				<segment state="initial">
					<source>This animation combines opacity and translation.</source>
					<target>This animation combines opacity and translation.</target>
				</segment>
			</unit>
			<unit id="305" translate="yes">
				<segment state="initial">
					<source>PopOutThemeAnimation</source>
					<target>PopOutThemeAnimation</target>
				</segment>
			</unit>
			<unit id="306" translate="yes">
				<segment state="initial">
					<source>The preconfigured animation that applies to pop-in components of controls as they are closed or removed.</source>
					<target>The preconfigured animation that applies to pop-in components of controls as they are closed or removed.</target>
				</segment>
			</unit>
			<unit id="307" translate="yes">
				<segment state="initial">
					<source>This animation combines opacity and translation.</source>
					<target>This animation combines opacity and translation.</target>
				</segment>
			</unit>
			<unit id="308" translate="yes">
				<segment state="initial">
					<source>RepositionThemeAnimation</source>
					<target>RepositionThemeAnimation</target>
				</segment>
			</unit>
			<unit id="309" translate="yes">
				<segment state="initial">
					<source>The preconfigured animation for an object as it is repositioned.</source>
					<target>The preconfigured animation for an object as it is repositioned.</target>
				</segment>
			</unit>
			<unit id="310" translate="yes">
				<segment state="initial">
					<source>SplitCloseThemeAnimation</source>
					<target>SplitCloseThemeAnimation</target>
				</segment>
			</unit>
			<unit id="311" translate="yes">
				<segment state="initial">
					<source>The preconfigured animation that conceals a target UI using a split animation.</source>
					<target>The preconfigured animation that conceals a target UI using a split animation.</target>
				</segment>
			</unit>
			<unit id="312" translate="yes">
				<segment state="initial">
					<source>SplitOpenThemeAnimation</source>
					<target>SplitOpenThemeAnimation</target>
				</segment>
			</unit>
			<unit id="313" translate="yes">
				<segment state="initial">
					<source>The preconfigured animation that reveals a target UI using a split animation.</source>
					<target>The preconfigured animation that reveals a target UI using a split animation.</target>
				</segment>
			</unit>
			<unit id="314" translate="yes">
				<segment state="initial">
					<source>SwipeBackThemeAnimation</source>
					<target>SwipeBackThemeAnimation</target>
				</segment>
			</unit>
			<unit id="315" translate="yes">
				<segment state="initial">
					<source>The preconfigured animation that applies to controls when an element slides back into its layout slot after a swipe interaction.</source>
					<target>The preconfigured animation that applies to controls when an element slides back into its layout slot after a swipe interaction.</target>
				</segment>
			</unit>
			<unit id="316" translate="yes">
				<segment state="initial">
					<source>SwipeHintThemeAnimation</source>
					<target>SwipeHintThemeAnimation</target>
				</segment>
			</unit>
			<unit id="317" translate="yes">
				<segment state="initial">
					<source>The preconfigured animation that indicates that a swipe gesture is now possible.</source>
					<target>The preconfigured animation that indicates that a swipe gesture is now possible.</target>
				</segment>
			</unit>
			<unit id="318" translate="yes">
				<segment state="initial">
					<source>Create your own animations</source>
					<target>Create your own animations</target>
				</segment>
			</unit>
			<unit id="319" translate="yes">
				<segment state="initial">
					<source>When theme animations are not enough for your needs, you can create your own animations.</source>
					<target>When theme animations are not enough for your needs, you can create your own animations.</target>
				</segment>
			</unit>
			<unit id="320" translate="yes">
				<segment state="initial">
					<source>You animate objects by animating one or more of their property values.</source>
					<target>You animate objects by animating one or more of their property values.</target>
				</segment>
			</unit>
			<unit id="321" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/BR242932)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>For example, you can animate the width of a rectangle, the angle of a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">RotateTransform</pc></pc>, or the color value of a button.</source>
					<target>For example, you can animate the width of a rectangle, the angle of a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">RotateTransform</pc></pc>, or the color value of a button.</target>
				</segment>
			</unit>
			<unit id="322" translate="yes">
				<segment state="initial">
					<source>We term this type of custom animation a storyboarded animation, to distinguish it from the library animations that the Windows Runtime already provides as a preconfigured animation type.</source>
					<target>We term this type of custom animation a storyboarded animation, to distinguish it from the library animations that the Windows Runtime already provides as a preconfigured animation type.</target>
				</segment>
			</unit>
			<unit id="323" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/BR243136)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
					<data id="id7">[</data>
					<data id="id8">](https://msdn.microsoft.com/library/windows/apps/BR210490)</data>
					<data id="id9">**</data>
					<data id="id10">**</data>
				</originalData>
				<segment state="initial">
					<source>For storyboarded animations, you use an animation that can change values of a particular type (for example <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">DoubleAnimation</pc></pc> to animate a <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Double</pc>) and put that animation within a <pc dataRefEnd="id8" dataRefStart="id7" id="p4"><pc dataRefEnd="id10" dataRefStart="id9" id="p5">Storyboard</pc></pc> to control it.</source>
					<target>For storyboarded animations, you use an animation that can change values of a particular type (for example <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">DoubleAnimation</pc></pc> to animate a <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Double</pc>) and put that animation within a <pc dataRefEnd="id8" dataRefStart="id7" id="p4"><pc dataRefEnd="id10" dataRefStart="id9" id="p5">Storyboard</pc></pc> to control it.</target>
				</segment>
			</unit>
			<unit id="324" translate="yes">
				<originalData>
					<data id="id1">*</data>
					<data id="id2">*</data>
				</originalData>
				<segment state="initial">
					<source>In order to be animated, the property you are animating must be a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">dependency property</pc>.</source>
					<target>In order to be animated, the property you are animating must be a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">dependency property</pc>.</target>
				</segment>
			</unit>
			<unit id="325" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/Mt185583)</data>
				</originalData>
				<segment state="initial">
					<source>For more info about dependency properties, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Dependency properties overview</pc>.</source>
					<target>For more info about dependency properties, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Dependency properties overview</pc>.</target>
				</segment>
			</unit>
			<unit id="326" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](storyboarded-animations.md)</data>
				</originalData>
				<segment state="initial">
					<source>For more info on creating custom storyboarded animations, including how to target and control them, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Storyboarded animations</pc>.</source>
					<target>For more info on creating custom storyboarded animations, including how to target and control them, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Storyboarded animations</pc>.</target>
				</segment>
			</unit>
			<unit id="327" translate="yes">
				<segment state="initial">
					<source>The biggest area of app UI definition in XAML where you'll define custom storyboarded animations is if you are defining visual states for controls in XAML.</source>
					<target>The biggest area of app UI definition in XAML where you'll define custom storyboarded animations is if you are defining visual states for controls in XAML.</target>
				</segment>
			</unit>
			<unit id="328" translate="yes">
				<segment state="initial">
					<source>You'll be doing this either because you are creating a new control class, or because you are re-templating an existing control that has visual states in its control template.</source>
					<target>You'll be doing this either because you are creating a new control class, or because you are re-templating an existing control that has visual states in its control template.</target>
				</segment>
			</unit>
			<unit id="329" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/xaml/JJ819808)</data>
				</originalData>
				<segment state="initial">
					<source>For more info, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Storyboarded animations for visual states</pc>.</source>
					<target>For more info, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Storyboarded animations for visual states</pc>.</target>
				</segment>
			</unit>
			<unit id="330" translate="yes">
				<segment state="initial">
					<source>These animations aren't usually transitions over time at all, they happen instantaneously, and are really more of a technique for defining a set of property changes for a state.</source>
					<target>These animations aren't usually transitions over time at all, they happen instantaneously, and are really more of a technique for defining a set of property changes for a state.</target>
				</segment>
			</unit>
			<unit id="331" translate="yes">
				<segment state="initial">
					<source>They don't necessarily apply a visually animated behavior to a UI, although as you'll see the visual states for controls often include the library animations themselves.</source>
					<target>They don't necessarily apply a visually animated behavior to a UI, although as you'll see the visual states for controls often include the library animations themselves.</target>
				</segment>
			</unit>
			<unit id="332" translate="yes">
				<segment state="initial">
					<source>In this case the theme animations do apply a change over time, though it's usually a short duration.</source>
					<target>In this case the theme animations do apply a change over time, though it's usually a short duration.</target>
				</segment>
			</unit>
		</group>
	</file>
</xliff>