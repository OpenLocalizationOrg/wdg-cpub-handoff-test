<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="it-it" version="2.0" xml:space="preserve" xmlns="urn:oasis:names:tc:xliff:document:2.0">
	<file id="1">
		<mda:metadata>
			<mda:metaGroup>
				<mda:meta type="tool-id">mdxliff</mda:meta>
				<mda:meta type="tool-name">mdxliff</mda:meta>
				<mda:meta type="tool-version">1.0-2eb3c86</mda:meta>
				<mda:meta type="tool-company">Microsoft</mda:meta>
			</mda:metaGroup>
		<mda:metaGroup><mda:meta type="olfilehash">9531b80885d860cdf8bf306ed7a3e1674f4daa58</mda:meta><mda:meta type="olfilepath">wdg-cpub-test\ndolci2\input-and-devices\respond-to-the-presence-of-the-touch-keyboard.md</mda:meta><mda:meta type="oltranslationpriority"></mda:meta><mda:meta type="oltranslationtype">Human Translation</mda:meta><mda:meta type="olskeletonhash">2663fc18b0f83dbd42db790e9bf7dce7ac9ac009</mda:meta><mda:meta type="olxliffhash">a366982da3d87bcea1c57daa4c74dcb61b00261e</mda:meta></mda:metaGroup></mda:metadata>
		<group id="content">
			<unit id="101" translate="yes">
				<segment state="initial">
					<source>Learn how to tailor the UI of your app when showing or hiding the touch keyboard.</source>
					<target>Learn how to tailor the UI of your app when showing or hiding the touch keyboard.</target>
				</segment>
			</unit>
			<unit id="102" translate="yes">
				<segment state="initial">
					<source>Respond to the presence of the touch keyboard</source>
					<target>Respond to the presence of the touch keyboard</target>
				</segment>
			</unit>
			<unit id="103" translate="yes">
				<segment state="initial">
					<source>Respond to the presence of the touch keyboard</source>
					<target>Respond to the presence of the touch keyboard</target>
				</segment>
			</unit>
			<unit id="104" translate="yes">
				<segment state="initial">
					<source>\[ Updated for UWP apps on Windows 10.</source>
					<target>\[ Updated for UWP apps on Windows 10.</target>
				</segment>
			</unit>
			<unit id="105" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](http://go.microsoft.com/fwlink/p/?linkid=619132)</data>
				</originalData>
				<segment state="initial">
					<source>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</source>
					<target>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</target>
				</segment>
			</unit>
			<unit id="106" translate="yes">
				<segment state="initial">
					<source>Important APIs</source>
					<target>Important APIs</target>
				</segment>
			</unit>
			<unit id="107" translate="yes">
				<segment state="initial">
					<source>AutomationPeer</source>
					<target>AutomationPeer</target>
				</segment>
			</unit>
			<unit id="108" translate="yes">
				<segment state="initial">
					<source>InputPane</source>
					<target>InputPane</target>
				</segment>
			</unit>
			<unit id="109" translate="yes">
				<segment state="initial">
					<source>Learn how to tailor the UI of your app when showing or hiding the touch keyboard.</source>
					<target>Learn how to tailor the UI of your app when showing or hiding the touch keyboard.</target>
				</segment>
			</unit>
			<unit id="110" translate="yes">
				<segment state="initial">
					<source>the touch keyboard in default layout mode</source>
					<target>the touch keyboard in default layout mode</target>
				</segment>
			</unit>
			<unit id="111" translate="yes">
				<segment state="initial">
					<source>The\\ touch\\ keyboard\\ in\\ default\\ layout\\ mode</source>
					<target>The\\ touch\\ keyboard\\ in\\ default\\ layout\\ mode</target>
				</segment>
			</unit>
			<unit id="112" translate="yes">
				<segment state="initial">
					<source>The touch keyboard enables text entry for devices that support touch.</source>
					<target>The touch keyboard enables text entry for devices that support touch.</target>
				</segment>
			</unit>
			<unit id="113" translate="yes">
				<segment state="initial">
					<source>Universal Windows Platform (UWP) text input controls invoke the touch keyboard by default when a user taps on an editable input field.</source>
					<target>Universal Windows Platform (UWP) text input controls invoke the touch keyboard by default when a user taps on an editable input field.</target>
				</segment>
			</unit>
			<unit id="114" translate="yes">
				<segment state="initial">
					<source>The touch keyboard typically remains visible while the user navigates between controls in a form, but this behavior can vary based on the other control types within the form.</source>
					<target>The touch keyboard typically remains visible while the user navigates between controls in a form, but this behavior can vary based on the other control types within the form.</target>
				</segment>
			</unit>
			<unit id="115" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br209185)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>To support corresponding touch keyboard behavior in a custom text input control that does not derive from a standard text input control, you must use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">AutomationPeer</pc></pc> class to expose your controls to Microsoft UI Automation and implement the correct UI Automation control patterns.</source>
					<target>To support corresponding touch keyboard behavior in a custom text input control that does not derive from a standard text input control, you must use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">AutomationPeer</pc></pc> class to expose your controls to Microsoft UI Automation and implement the correct UI Automation control patterns.</target>
				</segment>
			</unit>
			<unit id="116" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/mt244347)</data>
					<data id="id3">[</data>
					<data id="id4">](https://msdn.microsoft.com/library/windows/apps/mt297667)</data>
				</originalData>
				<segment state="initial">
					<source>See <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Keyboard accessibility</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Custom automation peers</pc>.</source>
					<target>See <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Keyboard accessibility</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Custom automation peers</pc>.</target>
				</segment>
			</unit>
			<unit id="117" translate="yes">
				<segment state="initial">
					<source>Once this support has been added to your custom control, you can respond appropriately to the presence of the touch keyboard.</source>
					<target>Once this support has been added to your custom control, you can respond appropriately to the presence of the touch keyboard.</target>
				</segment>
			</unit>
			<unit id="118" translate="yes">
				<segment state="initial">
					<source>Prerequisites:</source>
					<target>Prerequisites:</target>
				</segment>
			</unit>
			<unit id="119" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](keyboard-interactions.md)</data>
				</originalData>
				<segment state="initial">
					<source>This topic builds on <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Keyboard interactions</pc>.</source>
					<target>This topic builds on <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Keyboard interactions</pc>.</target>
				</segment>
			</unit>
			<unit id="120" translate="yes">
				<segment state="initial">
					<source>You should have a basic understanding of standard keyboard interactions, handling keyboard input and events, and UI Automation.</source>
					<target>You should have a basic understanding of standard keyboard interactions, handling keyboard input and events, and UI Automation.</target>
				</segment>
			</unit>
			<unit id="121" translate="yes">
				<segment state="initial">
					<source>If you're new to developing Universal Windows Platform (UWP) apps, have a look through these topics to get familiar with the technologies discussed here.</source>
					<target>If you're new to developing Universal Windows Platform (UWP) apps, have a look through these topics to get familiar with the technologies discussed here.</target>
				</segment>
			</unit>
			<unit id="122" translate="yes">
				<segment state="initial">
					<source>Create your first app</source>
					<target>Create your first app</target>
				</segment>
			</unit>
			<unit id="123" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/mt185584)</data>
				</originalData>
				<segment state="initial">
					<source>Learn about events with <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Events and routed events overview</pc></source>
					<target>Learn about events with <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Events and routed events overview</pc></target>
				</segment>
			</unit>
			<unit id="124" translate="yes">
				<segment state="initial">
					<source>User experience guidelines:</source>
					<target>User experience guidelines:</target>
				</segment>
			</unit>
			<unit id="125" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/hh972345)</data>
				</originalData>
				<segment state="initial">
					<source>For helpful tips about designing a useful and engaging app optimized for keyboard input, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Keyboard design guidelines</pc> .</source>
					<target>For helpful tips about designing a useful and engaging app optimized for keyboard input, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Keyboard design guidelines</pc> .</target>
				</segment>
			</unit>
			<unit id="126" translate="yes">
				<segment state="initial">
					<source>Touch keyboard and a custom UI</source>
					<target>Touch keyboard and a custom UI</target>
				</segment>
			</unit>
			<unit id="127" translate="yes">
				<segment state="initial">
					<source>Here are a few basic recommendations for custom text input controls.</source>
					<target>Here are a few basic recommendations for custom text input controls.</target>
				</segment>
			</unit>
			<unit id="128" translate="yes">
				<segment state="initial">
					<source>Display the touch keyboard throughout the entire interaction with your form.</source>
					<target>Display the touch keyboard throughout the entire interaction with your form.</target>
				</segment>
			</unit>
			<unit id="129" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br209182)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Ensure that your custom controls have the appropriate UI Automation <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">AutomationControlType</pc></pc> for the keyboard to persist when focus moves from a text input field while in the context of text entry.</source>
					<target>Ensure that your custom controls have the appropriate UI Automation <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">AutomationControlType</pc></pc> for the keyboard to persist when focus moves from a text input field while in the context of text entry.</target>
				</segment>
			</unit>
			<unit id="130" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>For example, if you have a menu that's opened in the middle of a text-entry scenario, and you want the keyboard to persist, the menu must have the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AutomationControlType</pc> of Menu.</source>
					<target>For example, if you have a menu that's opened in the middle of a text-entry scenario, and you want the keyboard to persist, the menu must have the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AutomationControlType</pc> of Menu.</target>
				</segment>
			</unit>
			<unit id="131" translate="yes">
				<segment state="initial">
					<source>Don't manipulate UI Automation properties to control the touch keyboard.</source>
					<target>Don't manipulate UI Automation properties to control the touch keyboard.</target>
				</segment>
			</unit>
			<unit id="132" translate="yes">
				<segment state="initial">
					<source>Other accessibility tools rely on the accuracy of UI Automation properties.</source>
					<target>Other accessibility tools rely on the accuracy of UI Automation properties.</target>
				</segment>
			</unit>
			<unit id="133" translate="yes">
				<segment state="initial">
					<source>Ensure that users can always see the input field that they're interacting with.</source>
					<target>Ensure that users can always see the input field that they're interacting with.</target>
				</segment>
			</unit>
			<unit id="134" translate="yes">
				<segment state="initial">
					<source>Because the touch keyboard occludes a large portion of the screen, the UWP ensures that the input field with focus scrolls into view as a user navigates through the controls on the form, including controls that are not currently in view.</source>
					<target>Because the touch keyboard occludes a large portion of the screen, the UWP ensures that the input field with focus scrolls into view as a user navigates through the controls on the form, including controls that are not currently in view.</target>
				</segment>
			</unit>
			<unit id="135" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br242262)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/br242260)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
					<data id="id9">[</data>
					<data id="id10">](https://msdn.microsoft.com/library/windows/apps/br242255)</data>
					<data id="id11">**</data>
					<data id="id12">**</data>
				</originalData>
				<segment state="initial">
					<source>When customizing your UI, provide similar behavior on the appearance of the touch keyboard by handling the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Showing</pc></pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Hiding</pc></pc> events exposed by the <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">InputPane</pc></pc> object.</source>
					<target>When customizing your UI, provide similar behavior on the appearance of the touch keyboard by handling the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Showing</pc></pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Hiding</pc></pc> events exposed by the <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">InputPane</pc></pc> object.</target>
				</segment>
			</unit>
			<unit id="136" translate="yes">
				<segment state="initial">
					<source>a form with and without the touch keyboard showing</source>
					<target>a form with and without the touch keyboard showing</target>
				</segment>
			</unit>
			<unit id="137" translate="yes">
				<segment state="initial">
					<source>In some cases, there are UI elements that should stay on the screen the entire time.</source>
					<target>In some cases, there are UI elements that should stay on the screen the entire time.</target>
				</segment>
			</unit>
			<unit id="138" translate="yes">
				<segment state="initial">
					<source>Design the UI so that the form controls are contained in a panning region and the important UI elements are static.</source>
					<target>Design the UI so that the form controls are contained in a panning region and the important UI elements are static.</target>
				</segment>
			</unit>
			<unit id="139" translate="yes">
				<segment state="initial">
					<source>For example:</source>
					<target>For example:</target>
				</segment>
			</unit>
			<unit id="140" translate="yes">
				<segment state="initial">
					<source>a form that contains areas that should always stay in view</source>
					<target>a form that contains areas that should always stay in view</target>
				</segment>
			</unit>
			<unit id="141" translate="yes">
				<segment state="initial">
					<source>Handling the Showing and Hiding events</source>
					<target>Handling the Showing and Hiding events</target>
				</segment>
			</unit>
			<unit id="142" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br242262)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/br242260)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>Here's an example of attaching event handlers for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">showing</pc></pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">hiding</pc></pc> events of the touch keyboard.</source>
					<target>Here's an example of attaching event handlers for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">showing</pc></pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">hiding</pc></pc> events of the touch keyboard.</target>
				</segment>
			</unit>
			<unit id="143" translate="yes">
				<segment state="initial">
					<source>Related articles</source>
					<target>Related articles</target>
				</segment>
			</unit>
			<unit id="144" translate="yes">
				<segment state="initial">
					<source>Keyboard interactions</source>
					<target>Keyboard interactions</target>
				</segment>
			</unit>
			<unit id="145" translate="yes">
				<segment state="initial">
					<source>Keyboard accessibility</source>
					<target>Keyboard accessibility</target>
				</segment>
			</unit>
			<unit id="146" translate="yes">
				<segment state="initial">
					<source>Custom automation peers</source>
					<target>Custom automation peers</target>
				</segment>
			</unit>
			<unit id="147" translate="yes">
				<segment state="initial">
					<source>Archive samples</source>
					<target>Archive samples</target>
				</segment>
			</unit>
			<unit id="148" translate="yes">
				<segment state="initial">
					<source>Input: Touch keyboard sample</source>
					<target>Input: Touch keyboard sample</target>
				</segment>
			</unit>
			<unit id="149" translate="yes">
				<segment state="initial">
					<source>Responding to the appearance of the on-screen keyboard sample</source>
					<target>Responding to the appearance of the on-screen keyboard sample</target>
				</segment>
			</unit>
			<unit id="150" translate="yes">
				<segment state="initial">
					<source>XAML text editing sample</source>
					<target>XAML text editing sample</target>
				</segment>
			</unit>
			<unit id="151" translate="yes">
				<segment state="initial">
					<source>XAML accessibility sample</source>
					<target>XAML accessibility sample</target>
				</segment>
			</unit>
		</group>
	</file>
</xliff>