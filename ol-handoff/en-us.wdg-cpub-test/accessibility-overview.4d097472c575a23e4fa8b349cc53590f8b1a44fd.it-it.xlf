<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="it-it" version="2.0" xml:space="preserve" xmlns="urn:oasis:names:tc:xliff:document:2.0">
	<file id="1">
		<mda:metadata>
			<mda:metaGroup>
				<mda:meta type="tool-id">mdxliff</mda:meta>
				<mda:meta type="tool-name">mdxliff</mda:meta>
				<mda:meta type="tool-version">1.0-2eb3c86</mda:meta>
				<mda:meta type="tool-company">Microsoft</mda:meta>
			</mda:metaGroup>
		<mda:metaGroup><mda:meta type="olfilehash">5664362e618659c6c59b4a30f16a3029c56f66ef</mda:meta><mda:meta type="olfilepath">wdg-cpub-test\ndolci2\accessibility\accessibility-overview.md</mda:meta><mda:meta type="oltranslationpriority"></mda:meta><mda:meta type="oltranslationtype">Human Translation</mda:meta><mda:meta type="olskeletonhash">5fb217b97a4805b6235512b13ca1c2c8ea426b49</mda:meta><mda:meta type="olxliffhash">0bcbbca5b43869b7656ea59eb9a16861e98b8b55</mda:meta></mda:metaGroup></mda:metadata>
		<group id="content">
			<unit id="101" translate="yes">
				<segment state="initial">
					<source>This article is an overview of the concepts and technologies related to accessibility scenarios for Universal Windows Platform (UWP) apps.</source>
					<target>This article is an overview of the concepts and technologies related to accessibility scenarios for Universal Windows Platform (UWP) apps.</target>
				</segment>
			</unit>
			<unit id="102" translate="yes">
				<segment state="initial">
					<source>Accessibility overview</source>
					<target>Accessibility overview</target>
				</segment>
			</unit>
			<unit id="103" translate="yes">
				<segment state="initial">
					<source>Accessibility overview</source>
					<target>Accessibility overview</target>
				</segment>
			</unit>
			<unit id="104" translate="yes">
				<segment state="initial">
					<source>\[ Updated for UWP apps on Windows 10.</source>
					<target>\[ Updated for UWP apps on Windows 10.</target>
				</segment>
			</unit>
			<unit id="105" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](http://go.microsoft.com/fwlink/p/?linkid=619132)</data>
				</originalData>
				<segment state="initial">
					<source>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</source>
					<target>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</target>
				</segment>
			</unit>
			<unit id="106" translate="yes">
				<segment state="initial">
					<source>This article is an overview of the concepts and technologies related to accessibility scenarios for Universal Windows Platform (UWP) apps.</source>
					<target>This article is an overview of the concepts and technologies related to accessibility scenarios for Universal Windows Platform (UWP) apps.</target>
				</segment>
			</unit>
			<unit id="107" translate="yes">
				<segment state="initial">
					<source>Accessibility and your app</source>
					<target>Accessibility and your app</target>
				</segment>
			</unit>
			<unit id="108" translate="yes">
				<segment state="initial">
					<source>There are many possible disabilities or impairments, including limitations in mobility, vision, color perception, hearing, speech, cognition, and literacy.</source>
					<target>There are many possible disabilities or impairments, including limitations in mobility, vision, color perception, hearing, speech, cognition, and literacy.</target>
				</segment>
			</unit>
			<unit id="109" translate="yes">
				<segment state="initial">
					<source>However, you can address most requirements by following the guidelines offered here.</source>
					<target>However, you can address most requirements by following the guidelines offered here.</target>
				</segment>
			</unit>
			<unit id="110" translate="yes">
				<segment state="initial">
					<source>This means providing:</source>
					<target>This means providing:</target>
				</segment>
			</unit>
			<unit id="111" translate="yes">
				<segment state="initial">
					<source>Support for keyboard interactions and screen readers.</source>
					<target>Support for keyboard interactions and screen readers.</target>
				</segment>
			</unit>
			<unit id="112" translate="yes">
				<segment state="initial">
					<source>Support for user customization, such as font, zoom setting (magnification), color, and high-contrast settings.</source>
					<target>Support for user customization, such as font, zoom setting (magnification), color, and high-contrast settings.</target>
				</segment>
			</unit>
			<unit id="113" translate="yes">
				<segment state="initial">
					<source>Alternatives or supplements for parts of your UI.</source>
					<target>Alternatives or supplements for parts of your UI.</target>
				</segment>
			</unit>
			<unit id="114" translate="yes">
				<segment state="initial">
					<source>Controls for XAML provide built-in keyboard support and support for assistive technologies such as screen readers, which take advantage of accessibility frameworks that already support UWP apps, HTML, and other UI technologies.</source>
					<target>Controls for XAML provide built-in keyboard support and support for assistive technologies such as screen readers, which take advantage of accessibility frameworks that already support UWP apps, HTML, and other UI technologies.</target>
				</segment>
			</unit>
			<unit id="115" translate="yes">
				<segment state="initial">
					<source>This built-in support enables a basic level of accessibility that you can customize with very little work, by setting just a handful of properties.</source>
					<target>This built-in support enables a basic level of accessibility that you can customize with very little work, by setting just a handful of properties.</target>
				</segment>
			</unit>
			<unit id="116" translate="yes">
				<originalData>
					<data id="id1">*</data>
					<data id="id2">*</data>
				</originalData>
				<segment state="initial">
					<source>If you are creating your own custom XAML components and controls, you can also add similar support to those controls by using the concept of an <pc dataRefEnd="id2" dataRefStart="id1" id="p1">automation peer</pc>.</source>
					<target>If you are creating your own custom XAML components and controls, you can also add similar support to those controls by using the concept of an <pc dataRefEnd="id2" dataRefStart="id1" id="p1">automation peer</pc>.</target>
				</segment>
			</unit>
			<unit id="117" translate="yes">
				<segment state="initial">
					<source>In addition, data binding, style, and template features make it easy to implement support for dynamic changes to display settings and text for alternative UIs.</source>
					<target>In addition, data binding, style, and template features make it easy to implement support for dynamic changes to display settings and text for alternative UIs.</target>
				</segment>
			</unit>
			<unit id="118" translate="yes">
				<segment state="initial">
					<source>UI Automation</source>
					<target>UI Automation</target>
				</segment>
			</unit>
			<unit id="119" translate="yes">
				<segment state="initial">
					<source>Accessibility support comes primarily from the integrated support for the Microsoft UI Automation framework.</source>
					<target>Accessibility support comes primarily from the integrated support for the Microsoft UI Automation framework.</target>
				</segment>
			</unit>
			<unit id="120" translate="yes">
				<segment state="initial">
					<source>That support is provided through base classes and the built-in behavior of the class implementation for control types, and an interface representation of the UI Automation provider API.</source>
					<target>That support is provided through base classes and the built-in behavior of the class implementation for control types, and an interface representation of the UI Automation provider API.</target>
				</segment>
			</unit>
			<unit id="121" translate="yes">
				<segment state="initial">
					<source>Each control class uses the UI Automation concepts of automation peers and automation patterns that report the control's role and content to UI Automation clients.</source>
					<target>Each control class uses the UI Automation concepts of automation peers and automation patterns that report the control's role and content to UI Automation clients.</target>
				</segment>
			</unit>
			<unit id="122" translate="yes">
				<segment state="initial">
					<source>The app is treated as a top-level window by UI Automation, and through the UI Automation framework all the accessibility-relevant content within that app window is available to a UI Automation client.</source>
					<target>The app is treated as a top-level window by UI Automation, and through the UI Automation framework all the accessibility-relevant content within that app window is available to a UI Automation client.</target>
				</segment>
			</unit>
			<unit id="123" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/desktop/Ee684076)</data>
				</originalData>
				<segment state="initial">
					<source>For more info about UI Automation, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">UI Automation Overview</pc>.</source>
					<target>For more info about UI Automation, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">UI Automation Overview</pc>.</target>
				</segment>
			</unit>
			<unit id="124" translate="yes">
				<segment state="initial">
					<source>Assistive technology</source>
					<target>Assistive technology</target>
				</segment>
			</unit>
			<unit id="125" translate="yes">
				<segment state="initial">
					<source>Many user accessibility needs are met by assistive technology products installed by the user or by tools and settings provided by the operating system.</source>
					<target>Many user accessibility needs are met by assistive technology products installed by the user or by tools and settings provided by the operating system.</target>
				</segment>
			</unit>
			<unit id="126" translate="yes">
				<segment state="initial">
					<source>This includes functionality such as screen readers, screen magnification, and high-contrast settings.</source>
					<target>This includes functionality such as screen readers, screen magnification, and high-contrast settings.</target>
				</segment>
			</unit>
			<unit id="127" translate="yes">
				<segment state="initial">
					<source>Assistive technology products include a wide variety of software and hardware.</source>
					<target>Assistive technology products include a wide variety of software and hardware.</target>
				</segment>
			</unit>
			<unit id="128" translate="yes">
				<segment state="initial">
					<source>These products work through the standard keyboard interface and accessibility frameworks that report information about the content and structure of a UI to screen readers and other assistive technologies.</source>
					<target>These products work through the standard keyboard interface and accessibility frameworks that report information about the content and structure of a UI to screen readers and other assistive technologies.</target>
				</segment>
			</unit>
			<unit id="129" translate="yes">
				<segment state="initial">
					<source>Examples of assistive technology products include:</source>
					<target>Examples of assistive technology products include:</target>
				</segment>
			</unit>
			<unit id="130" translate="yes">
				<segment state="initial">
					<source>The On-Screen Keyboard, which enables people to use a pointer in place of a keyboard to type text.</source>
					<target>The On-Screen Keyboard, which enables people to use a pointer in place of a keyboard to type text.</target>
				</segment>
			</unit>
			<unit id="131" translate="yes">
				<segment state="initial">
					<source>Voice-recognition software, which converts spoken words into typed text.</source>
					<target>Voice-recognition software, which converts spoken words into typed text.</target>
				</segment>
			</unit>
			<unit id="132" translate="yes">
				<segment state="initial">
					<source>Screen readers, which convert text into spoken words or other forms such as Braille.</source>
					<target>Screen readers, which convert text into spoken words or other forms such as Braille.</target>
				</segment>
			</unit>
			<unit id="133" translate="yes">
				<segment state="initial">
					<source>The Narrator screen reader, which is specifically part of Windows.</source>
					<target>The Narrator screen reader, which is specifically part of Windows.</target>
				</segment>
			</unit>
			<unit id="134" translate="yes">
				<segment state="initial">
					<source>Narrator has a touch mode, which can perform screen reading tasks by processing touch gestures, for when there is no keyboard available.</source>
					<target>Narrator has a touch mode, which can perform screen reading tasks by processing touch gestures, for when there is no keyboard available.</target>
				</segment>
			</unit>
			<unit id="135" translate="yes">
				<segment state="initial">
					<source>Programs or settings that adjust the display or areas of it, for example high contrast themes, dots per inch (dpi) settings of the display, or the Magnifier tool.</source>
					<target>Programs or settings that adjust the display or areas of it, for example high contrast themes, dots per inch (dpi) settings of the display, or the Magnifier tool.</target>
				</segment>
			</unit>
			<unit id="136" translate="yes">
				<segment state="initial">
					<source>Apps that have good keyboard and screen reader support usually work well with various assistive technology products.</source>
					<target>Apps that have good keyboard and screen reader support usually work well with various assistive technology products.</target>
				</segment>
			</unit>
			<unit id="137" translate="yes">
				<segment state="initial">
					<source>In many cases, a UWP app works with these products without additional modification of information or structure.</source>
					<target>In many cases, a UWP app works with these products without additional modification of information or structure.</target>
				</segment>
			</unit>
			<unit id="138" translate="yes">
				<segment state="initial">
					<source>However, you may want to modify some settings for optimal accessibility experience or to implement additional support.</source>
					<target>However, you may want to modify some settings for optimal accessibility experience or to implement additional support.</target>
				</segment>
			</unit>
			<unit id="139" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](accessibility-testing.md)</data>
				</originalData>
				<segment state="initial">
					<source>Some of the options that you can use for testing basic accessibility scenarios with assistive technologies are listed in <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Accessibility testing</pc>.</source>
					<target>Some of the options that you can use for testing basic accessibility scenarios with assistive technologies are listed in <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Accessibility testing</pc>.</target>
				</segment>
			</unit>
			<unit id="140" translate="yes">
				<segment state="initial">
					<source>Screen reader support and basic accessibility information</source>
					<target>Screen reader support and basic accessibility information</target>
				</segment>
			</unit>
			<unit id="141" translate="yes">
				<segment state="initial">
					<source>Screen readers provide access to the text in an app by rendering it in some other format, such as spoken language or Braille output.</source>
					<target>Screen readers provide access to the text in an app by rendering it in some other format, such as spoken language or Braille output.</target>
				</segment>
			</unit>
			<unit id="142" translate="yes">
				<segment state="initial">
					<source>The exact behavior of a screen reader depends on the software and on the user's configuration of it.</source>
					<target>The exact behavior of a screen reader depends on the software and on the user's configuration of it.</target>
				</segment>
			</unit>
			<unit id="143" translate="yes">
				<segment state="initial">
					<source>For example, some screen readers read the entire app UI when the user starts or switches to the app being viewed, which enables the user to receive all of the available informational content before attempting to navigate it.</source>
					<target>For example, some screen readers read the entire app UI when the user starts or switches to the app being viewed, which enables the user to receive all of the available informational content before attempting to navigate it.</target>
				</segment>
			</unit>
			<unit id="144" translate="yes">
				<segment state="initial">
					<source>Some screen readers also read the text associated with an individual control when it receives focus during tab navigation.</source>
					<target>Some screen readers also read the text associated with an individual control when it receives focus during tab navigation.</target>
				</segment>
			</unit>
			<unit id="145" translate="yes">
				<segment state="initial">
					<source>This enables users to orient themselves as they navigate among the input controls of an application.</source>
					<target>This enables users to orient themselves as they navigate among the input controls of an application.</target>
				</segment>
			</unit>
			<unit id="146" translate="yes">
				<segment state="initial">
					<source>Narrator is an example of a screen reader that provides both behaviors, depending on user choice.</source>
					<target>Narrator is an example of a screen reader that provides both behaviors, depending on user choice.</target>
				</segment>
			</unit>
			<unit id="147" translate="yes">
				<originalData>
					<data id="id1">*</data>
					<data id="id2">*</data>
				</originalData>
				<segment state="initial">
					<source>The most important information that a screen reader or any other assistive technology needs in order to help users understand or navigate an app is an <pc dataRefEnd="id2" dataRefStart="id1" id="p1">accessible name</pc> for the element parts of the app.</source>
					<target>The most important information that a screen reader or any other assistive technology needs in order to help users understand or navigate an app is an <pc dataRefEnd="id2" dataRefStart="id1" id="p1">accessible name</pc> for the element parts of the app.</target>
				</segment>
			</unit>
			<unit id="148" translate="yes">
				<segment state="initial">
					<source>In many cases, a control or element already has an accessible name that is calculated from other property values that you have otherwise provided.</source>
					<target>In many cases, a control or element already has an accessible name that is calculated from other property values that you have otherwise provided.</target>
				</segment>
			</unit>
			<unit id="149" translate="yes">
				<segment state="initial">
					<source>The most common case in which you can use an already-calculated name is with an element that supports and displays inner text.</source>
					<target>The most common case in which you can use an already-calculated name is with an element that supports and displays inner text.</target>
				</segment>
			</unit>
			<unit id="150" translate="yes">
				<segment state="initial">
					<source>For other elements, you sometimes need to account for other ways to provide an accessible name by following best practices for element structure.</source>
					<target>For other elements, you sometimes need to account for other ways to provide an accessible name by following best practices for element structure.</target>
				</segment>
			</unit>
			<unit id="151" translate="yes">
				<segment state="initial">
					<source>And sometimes you need to provide a name that is explicitly intended as the accessible name for app accessibility.</source>
					<target>And sometimes you need to provide a name that is explicitly intended as the accessible name for app accessibility.</target>
				</segment>
			</unit>
			<unit id="152" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](basic-accessibility-information.md)</data>
				</originalData>
				<segment state="initial">
					<source>For a listing of how many of these calculated values work in common UI elements, and for more info about accessible names in general, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Basic accessibility information</pc>.</source>
					<target>For a listing of how many of these calculated values work in common UI elements, and for more info about accessible names in general, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Basic accessibility information</pc>.</target>
				</segment>
			</unit>
			<unit id="153" translate="yes">
				<segment state="initial">
					<source>There are several other automation properties available (including the keyboard properties described in the next section).</source>
					<target>There are several other automation properties available (including the keyboard properties described in the next section).</target>
				</segment>
			</unit>
			<unit id="154" translate="yes">
				<segment state="initial">
					<source>However, not all screen readers support all automation properties.</source>
					<target>However, not all screen readers support all automation properties.</target>
				</segment>
			</unit>
			<unit id="155" translate="yes">
				<segment state="initial">
					<source>In general, you should set all appropriate automation properties and test to provide the widest possible support for screen readers.</source>
					<target>In general, you should set all appropriate automation properties and test to provide the widest possible support for screen readers.</target>
				</segment>
			</unit>
			<unit id="156" translate="yes">
				<segment state="initial">
					<source>Keyboard support</source>
					<target>Keyboard support</target>
				</segment>
			</unit>
			<unit id="157" translate="yes">
				<segment state="initial">
					<source>To provide good keyboard support, you must ensure that every part of your application can be used with a keyboard.</source>
					<target>To provide good keyboard support, you must ensure that every part of your application can be used with a keyboard.</target>
				</segment>
			</unit>
			<unit id="158" translate="yes">
				<segment state="initial">
					<source>If your app uses mostly the standard controls and doesn't use any custom controls, you are most of the way there already.</source>
					<target>If your app uses mostly the standard controls and doesn't use any custom controls, you are most of the way there already.</target>
				</segment>
			</unit>
			<unit id="159" translate="yes">
				<segment state="initial">
					<source>The basic XAML control model provides built-in keyboard support including tab navigation, text input, and control-specific support.</source>
					<target>The basic XAML control model provides built-in keyboard support including tab navigation, text input, and control-specific support.</target>
				</segment>
			</unit>
			<unit id="160" translate="yes">
				<segment state="initial">
					<source>The elements that serve as layout containers (such as panels) use the layout order to establish a default tab order.</source>
					<target>The elements that serve as layout containers (such as panels) use the layout order to establish a default tab order.</target>
				</segment>
			</unit>
			<unit id="161" translate="yes">
				<segment state="initial">
					<source>That order is often the correct tab order to use for an accessible representation of the UI.</source>
					<target>That order is often the correct tab order to use for an accessible representation of the UI.</target>
				</segment>
			</unit>
			<unit id="162" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/BR242868)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/BR242705)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>If you use <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ListBox</pc></pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">GridView</pc></pc> controls to display data, they provide built-in arrow-key navigation.</source>
					<target>If you use <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ListBox</pc></pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">GridView</pc></pc> controls to display data, they provide built-in arrow-key navigation.</target>
				</segment>
			</unit>
			<unit id="163" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/BR209265)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Or if you use a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Button</pc></pc> control, it already handles the Spacebar or Enter keys for button activation.</source>
					<target>Or if you use a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Button</pc></pc> control, it already handles the Spacebar or Enter keys for button activation.</target>
				</segment>
			</unit>
			<unit id="164" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](keyboard-accessibility.md)</data>
				</originalData>
				<segment state="initial">
					<source>For more info about all the aspects of keyboard support, including tab order and key-based activation or navigation, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Keyboard accessibility</pc>.</source>
					<target>For more info about all the aspects of keyboard support, including tab order and key-based activation or navigation, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Keyboard accessibility</pc>.</target>
				</segment>
			</unit>
			<unit id="165" translate="yes">
				<segment state="initial">
					<source>Media and captioning</source>
					<target>Media and captioning</target>
				</segment>
			</unit>
			<unit id="166" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/BR242926)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>You typically display audiovisual media through a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">MediaElement</pc></pc> object.</source>
					<target>You typically display audiovisual media through a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">MediaElement</pc></pc> object.</target>
				</segment>
			</unit>
			<unit id="167" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>You can use <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaElement</pc> APIs to control the media playback.</source>
					<target>You can use <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaElement</pc> APIs to control the media playback.</target>
				</segment>
			</unit>
			<unit id="168" translate="yes">
				<segment state="initial">
					<source>For accessibility purposes, provide controls that enable users to play, pause, and stop the media as needed.</source>
					<target>For accessibility purposes, provide controls that enable users to play, pause, and stop the media as needed.</target>
				</segment>
			</unit>
			<unit id="169" translate="yes">
				<segment state="initial">
					<source>Sometimes, media includes additional components that are intended for accessibility, such as captioning or alternative audio tracks that include narrative descriptions.</source>
					<target>Sometimes, media includes additional components that are intended for accessibility, such as captioning or alternative audio tracks that include narrative descriptions.</target>
				</segment>
			</unit>
			<unit id="170" translate="yes">
				<segment state="initial">
					<source>Accessible text</source>
					<target>Accessible text</target>
				</segment>
			</unit>
			<unit id="171" translate="yes">
				<segment state="initial">
					<source>Three main aspects of text are relevant to accessibility:</source>
					<target>Three main aspects of text are relevant to accessibility:</target>
				</segment>
			</unit>
			<unit id="172" translate="yes">
				<segment state="initial">
					<source>Tools must determine whether the text is to be read as part of a tab-sequence traversal or only as part of an overall document representation.</source>
					<target>Tools must determine whether the text is to be read as part of a tab-sequence traversal or only as part of an overall document representation.</target>
				</segment>
			</unit>
			<unit id="173" translate="yes">
				<segment state="initial">
					<source>You can help control this determination by choosing the appropriate element for displaying the text or by adjusting properties of those text elements.</source>
					<target>You can help control this determination by choosing the appropriate element for displaying the text or by adjusting properties of those text elements.</target>
				</segment>
			</unit>
			<unit id="174" translate="yes">
				<segment state="initial">
					<source>Each text element has a specific purpose, and that purpose often has a corresponding UI Automation role.</source>
					<target>Each text element has a specific purpose, and that purpose often has a corresponding UI Automation role.</target>
				</segment>
			</unit>
			<unit id="175" translate="yes">
				<segment state="initial">
					<source>Using the wrong element can result in reporting the wrong role to UI Automation and creating a confusing experience for an assistive technology user.</source>
					<target>Using the wrong element can result in reporting the wrong role to UI Automation and creating a confusing experience for an assistive technology user.</target>
				</segment>
			</unit>
			<unit id="176" translate="yes">
				<segment state="initial">
					<source>Many users have sight limitations that make it difficult for them to read text unless it has adequate contrast against the background.</source>
					<target>Many users have sight limitations that make it difficult for them to read text unless it has adequate contrast against the background.</target>
				</segment>
			</unit>
			<unit id="177" translate="yes">
				<segment state="initial">
					<source>How this impacts the user is not intuitive for app designers who do not have that sight limitation.</source>
					<target>How this impacts the user is not intuitive for app designers who do not have that sight limitation.</target>
				</segment>
			</unit>
			<unit id="178" translate="yes">
				<segment state="initial">
					<source>For example, for color-blind users, poor color choices in the design can prevent some users from being able to read the text.</source>
					<target>For example, for color-blind users, poor color choices in the design can prevent some users from being able to read the text.</target>
				</segment>
			</unit>
			<unit id="179" translate="yes">
				<segment state="initial">
					<source>Accessibility recommendations that were originally made for web content define standards for contrast that can avoid these problems in apps as well.</source>
					<target>Accessibility recommendations that were originally made for web content define standards for contrast that can avoid these problems in apps as well.</target>
				</segment>
			</unit>
			<unit id="180" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](accessible-text-requirements.md)</data>
				</originalData>
				<segment state="initial">
					<source>For more info, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Accessible text requirements</pc>.</source>
					<target>For more info, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Accessible text requirements</pc>.</target>
				</segment>
			</unit>
			<unit id="181" translate="yes">
				<segment state="initial">
					<source>Many users have difficulty reading text that is simply too small.</source>
					<target>Many users have difficulty reading text that is simply too small.</target>
				</segment>
			</unit>
			<unit id="182" translate="yes">
				<segment state="initial">
					<source>You can prevent this issue by making the text in your app's UI reasonably large in the first place.</source>
					<target>You can prevent this issue by making the text in your app's UI reasonably large in the first place.</target>
				</segment>
			</unit>
			<unit id="183" translate="yes">
				<segment state="initial">
					<source>However, that's challenging for apps that display large quantities of text, or text interspersed with other visual elements.</source>
					<target>However, that's challenging for apps that display large quantities of text, or text interspersed with other visual elements.</target>
				</segment>
			</unit>
			<unit id="184" translate="yes">
				<segment state="initial">
					<source>In such cases, make sure that the app correctly interacts with the system features that can scale up the display, so that any text in apps scales up along with it.</source>
					<target>In such cases, make sure that the app correctly interacts with the system features that can scale up the display, so that any text in apps scales up along with it.</target>
				</segment>
			</unit>
			<unit id="185" translate="yes">
				<segment state="initial">
					<source>(Some users change dpi values as an accessibility option.</source>
					<target>(Some users change dpi values as an accessibility option.</target>
				</segment>
			</unit>
			<unit id="186" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
					<data id="id9"> / </data>
					<data id="id10">**</data>
					<data id="id11">**</data>
				</originalData>
				<segment state="initial">
					<source>That option is available from <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Make things on the screen larger</pc> in <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Ease of Access</pc>, which redirects to a <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Control Panel</pc> UI for <pc dataRefEnd="id8" dataRefStart="id7" id="p4">Appearance and Personalization</pc><ph dataRef="id9" id="ph1" /><pc dataRefEnd="id11" dataRefStart="id10" id="p5">Display</pc>.)</source>
					<target>That option is available from <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Make things on the screen larger</pc> in <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Ease of Access</pc>, which redirects to a <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Control Panel</pc> UI for <pc dataRefEnd="id8" dataRefStart="id7" id="p4">Appearance and Personalization</pc><ph dataRef="id9" id="ph1" /><pc dataRefEnd="id11" dataRefStart="id10" id="p5">Display</pc>.)</target>
				</segment>
			</unit>
			<unit id="187" translate="yes">
				<segment state="initial">
					<source>Supporting high-contrast themes</source>
					<target>Supporting high-contrast themes</target>
				</segment>
			</unit>
			<unit id="188" translate="yes">
				<segment state="initial">
					<source>UI controls use a visual representation that is defined as part of a XAML resource dictionary of themes.</source>
					<target>UI controls use a visual representation that is defined as part of a XAML resource dictionary of themes.</target>
				</segment>
			</unit>
			<unit id="189" translate="yes">
				<segment state="initial">
					<source>One or more of these themes is specifically used when the system is set for high contrast.</source>
					<target>One or more of these themes is specifically used when the system is set for high contrast.</target>
				</segment>
			</unit>
			<unit id="190" translate="yes">
				<segment state="initial">
					<source>When the user switches to high contrast, by looking up the appropriate theme from a resource dictionary dynamically, all your UI controls will use an appropriate high-contrast theme too.</source>
					<target>When the user switches to high contrast, by looking up the appropriate theme from a resource dictionary dynamically, all your UI controls will use an appropriate high-contrast theme too.</target>
				</segment>
			</unit>
			<unit id="191" translate="yes">
				<segment state="initial">
					<source>Just make sure that you haven't disabled the themes by specifying an explicit style or using another styling technique that prevents the high-contrast themes from loading and overriding your style changes.</source>
					<target>Just make sure that you haven't disabled the themes by specifying an explicit style or using another styling technique that prevents the high-contrast themes from loading and overriding your style changes.</target>
				</segment>
			</unit>
			<unit id="192" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](high-contrast-themes.md)</data>
				</originalData>
				<segment state="initial">
					<source>For more info, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">High-contrast themes</pc>.</source>
					<target>For more info, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">High-contrast themes</pc>.</target>
				</segment>
			</unit>
			<unit id="193" translate="yes">
				<segment state="initial">
					<source>Design for alternative UI</source>
					<target>Design for alternative UI</target>
				</segment>
			</unit>
			<unit id="194" translate="yes">
				<segment state="initial">
					<source>When you design your apps, consider how they may be used by people with limited mobility, vision, and hearing.</source>
					<target>When you design your apps, consider how they may be used by people with limited mobility, vision, and hearing.</target>
				</segment>
			</unit>
			<unit id="195" translate="yes">
				<segment state="initial">
					<source>Because assistive technology products make extensive use of standard UI, it is particularly important to provide good keyboard and screen-reader support even if you make no other adjustments for accessibility.</source>
					<target>Because assistive technology products make extensive use of standard UI, it is particularly important to provide good keyboard and screen-reader support even if you make no other adjustments for accessibility.</target>
				</segment>
			</unit>
			<unit id="196" translate="yes">
				<segment state="initial">
					<source>In many cases, you can convey essential information by using multiple techniques to widen your audience.</source>
					<target>In many cases, you can convey essential information by using multiple techniques to widen your audience.</target>
				</segment>
			</unit>
			<unit id="197" translate="yes">
				<segment state="initial">
					<source>For example, you can highlight information using both icon and color information to help users who are color blind, and you can display visual alerts along with sound effects to help users who are hearing impaired.</source>
					<target>For example, you can highlight information using both icon and color information to help users who are color blind, and you can display visual alerts along with sound effects to help users who are hearing impaired.</target>
				</segment>
			</unit>
			<unit id="198" translate="yes">
				<segment state="initial">
					<source>If necessary, you can provide alternative, accessible user interface elements that completely remove nonessential elements and animations, and provide other simplifications to streamline the user experience.</source>
					<target>If necessary, you can provide alternative, accessible user interface elements that completely remove nonessential elements and animations, and provide other simplifications to streamline the user experience.</target>
				</segment>
			</unit>
			<unit id="199" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/BR227647)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>The following code example demonstrates how to display one <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">UserControl</pc></pc> instance in place of another depending on a user setting.</source>
					<target>The following code example demonstrates how to display one <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">UserControl</pc></pc> instance in place of another depending on a user setting.</target>
				</segment>
			</unit>
			<unit id="200" translate="yes">
				<segment state="initial">
					<source>XAML</source>
					<target>XAML</target>
				</segment>
			</unit>
			<unit id="201" translate="yes">
				<segment state="initial">
					<source>VB</source>
					<target>VB</target>
				</segment>
			</unit>
			<unit id="202" translate="yes">
				<segment state="initial">
					<source>C</source>
					<target>C</target>
				</segment>
			</unit>
			<unit id="203" translate="yes">
				<segment state="initial">
					<source>Verification and publishing</source>
					<target>Verification and publishing</target>
				</segment>
			</unit>
			<unit id="204" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](accessibility-in-the-store.md)</data>
				</originalData>
				<segment state="initial">
					<source>For more info about accessibility declarations and publishing your app, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Accessibility in the Store</pc>.</source>
					<target>For more info about accessibility declarations and publishing your app, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Accessibility in the Store</pc>.</target>
				</segment>
			</unit>
			<unit id="205" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  Declaring the app as accessible is only relevant to the Windows Store.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  Declaring the app as accessible is only relevant to the Windows Store.</target>
				</segment>
			</unit>
			<unit id="206" translate="yes">
				<segment state="initial">
					<source>Assistive technology support in custom controls</source>
					<target>Assistive technology support in custom controls</target>
				</segment>
			</unit>
			<unit id="207" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/BR209185)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>When you create a custom control, we recommend that you also implement or extend one or more <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">AutomationPeer</pc></pc> subclasses to provide accessibility support.</source>
					<target>When you create a custom control, we recommend that you also implement or extend one or more <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">AutomationPeer</pc></pc> subclasses to provide accessibility support.</target>
				</segment>
			</unit>
			<unit id="208" translate="yes">
				<segment state="initial">
					<source>In some cases, so long as you use the same peer class as was used by the base control class, the automation support for your derived class is adequate at a basic level.</source>
					<target>In some cases, so long as you use the same peer class as was used by the base control class, the automation support for your derived class is adequate at a basic level.</target>
				</segment>
			</unit>
			<unit id="209" translate="yes">
				<segment state="initial">
					<source>However, you should test this, and implementing a peer is still recommended as a best practice so that the peer can correctly report the class name of your new control class.</source>
					<target>However, you should test this, and implementing a peer is still recommended as a best practice so that the peer can correctly report the class name of your new control class.</target>
				</segment>
			</unit>
			<unit id="210" translate="yes">
				<segment state="initial">
					<source>Implementing a custom automation peer has a few steps involved.</source>
					<target>Implementing a custom automation peer has a few steps involved.</target>
				</segment>
			</unit>
			<unit id="211" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](custom-automation-peers.md)</data>
				</originalData>
				<segment state="initial">
					<source>For more info, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Custom automation peers</pc>.</source>
					<target>For more info, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Custom automation peers</pc>.</target>
				</segment>
			</unit>
			<unit id="212" translate="yes">
				<segment state="initial">
					<source>Assistive technology support in apps that support XAML / Microsoft DirectX interop</source>
					<target>Assistive technology support in apps that support XAML / Microsoft DirectX interop</target>
				</segment>
			</unit>
			<unit id="213" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/Dn252834)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/Hh702041)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>Microsoft DirectX content that's hosted in a XAML UI (using <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SwapChainPanel</pc></pc> or <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">SurfaceImageSource</pc></pc>) is not accessible by default.</source>
					<target>Microsoft DirectX content that's hosted in a XAML UI (using <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SwapChainPanel</pc></pc> or <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">SurfaceImageSource</pc></pc>) is not accessible by default.</target>
				</segment>
			</unit>
			<unit id="214" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](http://go.microsoft.com/fwlink/p/?LinkID=309155)</data>
				</originalData>
				<segment state="initial">
					<source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">XAML SwapChainPanel DirectX interop sample</pc> shows how to create UI Automation peers for the hosted DirectX content.</source>
					<target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">XAML SwapChainPanel DirectX interop sample</pc> shows how to create UI Automation peers for the hosted DirectX content.</target>
				</segment>
			</unit>
			<unit id="215" translate="yes">
				<segment state="initial">
					<source>This technique makes the hosted content accessible through UI Automation.</source>
					<target>This technique makes the hosted content accessible through UI Automation.</target>
				</segment>
			</unit>
			<unit id="216" translate="yes">
				<segment state="initial">
					<source>Related topics</source>
					<target>Related topics</target>
				</segment>
			</unit>
			<unit id="217" translate="yes">
				<segment state="initial">
					<source>Windows.UI.Xaml.Automation</source>
					<target>Windows.UI.Xaml.Automation</target>
				</segment>
			</unit>
			<unit id="218" translate="yes">
				<segment state="initial">
					<source>Design for accessibility</source>
					<target>Design for accessibility</target>
				</segment>
			</unit>
			<unit id="219" translate="yes">
				<segment state="initial">
					<source>XAML accessibility sample</source>
					<target>XAML accessibility sample</target>
				</segment>
			</unit>
		</group>
	</file>
</xliff>