<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="it-it" version="2.0" xml:space="preserve" xmlns="urn:oasis:names:tc:xliff:document:2.0">
	<file id="1">
		<mda:metadata>
			<mda:metaGroup>
				<mda:meta type="tool-id">mdxliff</mda:meta>
				<mda:meta type="tool-name">mdxliff</mda:meta>
				<mda:meta type="tool-version">1.0-2eb3c86</mda:meta>
				<mda:meta type="tool-company">Microsoft</mda:meta>
			</mda:metaGroup>
		<mda:metaGroup><mda:meta type="olfilehash">c20c735d38e6baabe2f8bc0c7c682706d3946ed9</mda:meta><mda:meta type="olfilepath">wdg-cpub-test\ndolciTestTDReach\audio-video-camera\capture-photos-and-video-with-mediacapture.md</mda:meta><mda:meta type="oltranslationpriority"></mda:meta><mda:meta type="oltranslationtype">Human Translation</mda:meta><mda:meta type="olskeletonhash">aa6a50347411477437352380a659139254b2b515</mda:meta><mda:meta type="olxliffhash">06cf3dba9a2fa1a0f618d240194af09948be327f</mda:meta></mda:metaGroup></mda:metadata>
		<group id="content">
			<unit id="101" translate="yes">
				<segment state="initial">
					<source>This article describes the steps for capturing photos and video using the MediaCapture API, including initializing and shutting down the MediaCapture and handling changes in device orientation.</source>
					<target>This article describes the steps for capturing photos and video using the MediaCapture API, including initializing and shutting down the MediaCapture and handling changes in device orientation.</target>
				</segment>
			</unit>
			<unit id="102" translate="yes">
				<segment state="initial">
					<source>Capture photos and video with MediaCapture</source>
					<target>Capture photos and video with MediaCapture</target>
				</segment>
			</unit>
			<unit id="103" translate="yes">
				<segment state="initial">
					<source>Capture photos and video with MediaCapture</source>
					<target>Capture photos and video with MediaCapture</target>
				</segment>
			</unit>
			<unit id="104" translate="yes">
				<segment state="initial">
					<source>\[ Updated for UWP apps on Windows 10.</source>
					<target>\[ Updated for UWP apps on Windows 10.</target>
				</segment>
			</unit>
			<unit id="105" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](http://go.microsoft.com/fwlink/p/?linkid=619132)</data>
				</originalData>
				<segment state="initial">
					<source>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</source>
					<target>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</target>
				</segment>
			</unit>
			<unit id="106" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br241124)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source>This article describes the steps for capturing photos and video using the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">MediaCapture</pc></pc> API, including initializing and shutting down the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">MediaCapture</pc> and handling changes in device orientation.</source>
					<target>This article describes the steps for capturing photos and video using the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">MediaCapture</pc></pc> API, including initializing and shutting down the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">MediaCapture</pc> and handling changes in device orientation.</target>
				</segment>
			</unit>
			<unit id="107" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaCapture</pc> is provided to support apps that require low-level control of the media capture process and that implement scenarios that require advanced capture capabilities.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaCapture</pc> is provided to support apps that require low-level control of the media capture process and that implement scenarios that require advanced capture capabilities.</target>
				</segment>
			</unit>
			<unit id="108" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>Using <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaCapture</pc> also requires you to provide your own capture UI.</source>
					<target>Using <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaCapture</pc> also requires you to provide your own capture UI.</target>
				</segment>
			</unit>
			<unit id="109" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br241030)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>If your app only needs to capture a photo or video and is unconcerned with advanced capture techniques, the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CameraCaptureUI</pc></pc> makes it easy to capture a photo or video with only a few lines of code.</source>
					<target>If your app only needs to capture a photo or video and is unconcerned with advanced capture techniques, the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CameraCaptureUI</pc></pc> makes it easy to capture a photo or video with only a few lines of code.</target>
				</segment>
			</unit>
			<unit id="110" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](capture-photos-and-video-with-cameracaptureui.md)</data>
				</originalData>
				<segment state="initial">
					<source>For more information, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Capture photos and video with CameraCaptureUI</pc>.</source>
					<target>For more information, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Capture photos and video with CameraCaptureUI</pc>.</target>
				</segment>
			</unit>
			<unit id="111" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](http://go.microsoft.com/fwlink/?LinkId=619479)</data>
				</originalData>
				<segment state="initial">
					<source>The code in this article was adapted from the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">CameraStarterKit sample</pc>.</source>
					<target>The code in this article was adapted from the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">CameraStarterKit sample</pc>.</target>
				</segment>
			</unit>
			<unit id="112" translate="yes">
				<segment state="initial">
					<source>You can download the sample to see the code used in context or to use the sample as a starting point for your own app.</source>
					<target>You can download the sample to see the code used in context or to use the sample as a starting point for your own app.</target>
				</segment>
			</unit>
			<unit id="113" translate="yes">
				<segment state="initial">
					<source>Configure your project</source>
					<target>Configure your project</target>
				</segment>
			</unit>
			<unit id="114" translate="yes">
				<segment state="initial">
					<source>Add capability declarations to the app manifest</source>
					<target>Add capability declarations to the app manifest</target>
				</segment>
			</unit>
			<unit id="115" translate="yes">
				<originalData>
					<data id="id1">*</data>
					<data id="id2">*</data>
					<data id="id3">*</data>
					<data id="id4">*</data>
				</originalData>
				<segment state="initial">
					<source>In order for your app to access a device's camera, you must declare that your app uses the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">webcam</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">microphone</pc> device capabilities.</source>
					<target>In order for your app to access a device's camera, you must declare that your app uses the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">webcam</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">microphone</pc> device capabilities.</target>
				</segment>
			</unit>
			<unit id="116" translate="yes">
				<originalData>
					<data id="id1">*</data>
					<data id="id2">*</data>
					<data id="id3">*</data>
					<data id="id4">*</data>
				</originalData>
				<segment state="initial">
					<source>If you want to save captured photos and videos to the users's Pictures or Videos library, you must also declare the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">picturesLibrary</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">videosLibrary</pc> capability.</source>
					<target>If you want to save captured photos and videos to the users's Pictures or Videos library, you must also declare the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">picturesLibrary</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">videosLibrary</pc> capability.</target>
				</segment>
			</unit>
			<unit id="117" translate="yes">
				<segment state="initial">
					<source>Add capabilities to the app manifest</source>
					<target>Add capabilities to the app manifest</target>
				</segment>
			</unit>
			<unit id="118" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>In Microsoft Visual Studio, in <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Solution Explorer</pc>, open the designer for the application manifest by double-clicking the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">package.appxmanifest</pc> item.</source>
					<target>In Microsoft Visual Studio, in <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Solution Explorer</pc>, open the designer for the application manifest by double-clicking the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">package.appxmanifest</pc> item.</target>
				</segment>
			</unit>
			<unit id="119" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>Select the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Capabilities</pc> tab.</source>
					<target>Select the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Capabilities</pc> tab.</target>
				</segment>
			</unit>
			<unit id="120" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Check the box for <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Webcam</pc> and the box for <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Microphone</pc>.</source>
					<target>Check the box for <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Webcam</pc> and the box for <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Microphone</pc>.</target>
				</segment>
			</unit>
			<unit id="121" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>For access to the Pictures and Videos library check the boxes for <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Pictures Library</pc> and the box for <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Videos Library</pc>.</source>
					<target>For access to the Pictures and Videos library check the boxes for <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Pictures Library</pc> and the box for <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Videos Library</pc>.</target>
				</segment>
			</unit>
			<unit id="122" translate="yes">
				<segment state="initial">
					<source>Add using directives for media capture-related APIs</source>
					<target>Add using directives for media capture-related APIs</target>
				</segment>
			</unit>
			<unit id="123" translate="yes">
				<segment state="initial">
					<source>The following code listing shows the namespaces that are referenced by the sample code in this article and describes what functionality each namespace provides.</source>
					<target>The following code listing shows the namespaces that are referenced by the sample code in this article and describes what functionality each namespace provides.</target>
				</segment>
			</unit>
			<unit id="124" translate="yes">
				<segment state="initial">
					<source>Using</source>
					<target>Using</target>
				</segment>
			</unit>
			<unit id="125" translate="yes">
				<segment state="initial">
					<source>Initialize the MediaCapture object</source>
					<target>Initialize the MediaCapture object</target>
				</segment>
			</unit>
			<unit id="126" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br241124)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/br226738)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">MediaCapture</pc></pc> class in the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Windows.Media.Capture</pc></pc> namespace is the fundamental interface for all media capture operations.</source>
					<target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">MediaCapture</pc></pc> class in the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Windows.Media.Capture</pc></pc> namespace is the fundamental interface for all media capture operations.</target>
				</segment>
			</unit>
			<unit id="127" translate="yes">
				<segment state="initial">
					<source>Apps typically declare a variable of this type scoped to a single page.</source>
					<target>Apps typically declare a variable of this type scoped to a single page.</target>
				</segment>
			</unit>
			<unit id="128" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>Your app needs to track the current state of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaCapture</pc>, so you should declare boolean variables for the initialization, previewing, and recording state of the object.</source>
					<target>Your app needs to track the current state of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaCapture</pc>, so you should declare boolean variables for the initialization, previewing, and recording state of the object.</target>
				</segment>
			</unit>
			<unit id="129" translate="yes">
				<segment state="initial">
					<source>MediaCaptureVariables</source>
					<target>MediaCaptureVariables</target>
				</segment>
			</unit>
			<unit id="130" translate="yes">
				<segment state="initial">
					<source>To help orient the preview video correctly, create member variables to track whether the camera is external and whether the app is currently mirroring the preview stream.</source>
					<target>To help orient the preview video correctly, create member variables to track whether the camera is external and whether the app is currently mirroring the preview stream.</target>
				</segment>
			</unit>
			<unit id="131" translate="yes">
				<segment state="initial">
					<source>Your app should mirror the preview stream when you think the video feed is capturing the user because that is a more natural user experience.</source>
					<target>Your app should mirror the preview stream when you think the video feed is capturing the user because that is a more natural user experience.</target>
				</segment>
			</unit>
			<unit id="132" translate="yes">
				<segment state="initial">
					<source>PreviewVariables</source>
					<target>PreviewVariables</target>
				</segment>
			</unit>
			<unit id="133" translate="yes">
				<segment state="initial">
					<source>The following example method initializes the media capture object.</source>
					<target>The following example method initializes the media capture object.</target>
				</segment>
			</unit>
			<unit id="134" translate="yes">
				<segment state="initial">
					<source>First, the code searches for a video capture device that can be used for media capture.</source>
					<target>First, the code searches for a video capture device that can be used for media capture.</target>
				</segment>
			</unit>
			<unit id="135" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>Once found, the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaCapture</pc> object is initialized and handlers for its events are registered.</source>
					<target>Once found, the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaCapture</pc> object is initialized and handlers for its events are registered.</target>
				</segment>
			</unit>
			<unit id="136" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/desktop/hh802710)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Next a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">MediaCaptureInitializationSettings</pc></pc> object is created using the ID of the video capture device.</source>
					<target>Next a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">MediaCaptureInitializationSettings</pc></pc> object is created using the ID of the video capture device.</target>
				</segment>
			</unit>
			<unit id="137" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">[</data>
					<data id="id4">](https://msdn.microsoft.com/library/windows/apps/br226598)</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaCapture</pc> is then initialized with a call to <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">InitializeAsync</pc></pc>.</source>
					<target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaCapture</pc> is then initialized with a call to <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">InitializeAsync</pc></pc>.</target>
				</segment>
			</unit>
			<unit id="138" translate="yes">
				<segment state="initial">
					<source>InitializeCameraAsync</source>
					<target>InitializeCameraAsync</target>
				</segment>
			</unit>
			<unit id="139" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br225432)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">DeviceInformation.FindAllAsync</pc></pc> method can be used to find all devices of a specified type.</source>
					<target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">DeviceInformation.FindAllAsync</pc></pc> method can be used to find all devices of a specified type.</target>
				</segment>
			</unit>
			<unit id="140" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>In this example, the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">DeviceClass.VideoCapture</pc> enumeration value is passed in to indicate that only video capture devices should be returned.</source>
					<target>In this example, the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">DeviceClass.VideoCapture</pc> enumeration value is passed in to indicate that only video capture devices should be returned.</target>
				</segment>
			</unit>
			<unit id="141" translate="yes">
				<segment state="initial">
					<source>Note that a video capture device is used for capturing both photos and videos.</source>
					<target>Note that a video capture device is used for capturing both photos and videos.</target>
				</segment>
			</unit>
			<unit id="142" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">[</data>
					<data id="id4">](https://msdn.microsoft.com/library/windows/apps/br225395)</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
					<data id="id7">[</data>
					<data id="id8">](https://msdn.microsoft.com/library/windows/apps/br225393)</data>
					<data id="id9">**</data>
					<data id="id10">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">FindAllAsync</pc> returns a <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">DeviceInformationCollection</pc></pc> object that contains a <pc dataRefEnd="id8" dataRefStart="id7" id="p4"><pc dataRefEnd="id10" dataRefStart="id9" id="p5">DeviceInformation</pc></pc> object for each found device of the requested type.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">FindAllAsync</pc> returns a <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">DeviceInformationCollection</pc></pc> object that contains a <pc dataRefEnd="id8" dataRefStart="id7" id="p4"><pc dataRefEnd="id10" dataRefStart="id9" id="p5">DeviceInformation</pc></pc> object for each found device of the requested type.</target>
				</segment>
			</unit>
			<unit id="143" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">FirstOrDefault</pc> extension method from the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">System.Linq</pc> namespace provides an easy syntax for selecting an item from a list based on specified conditions.</source>
					<target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">FirstOrDefault</pc> extension method from the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">System.Linq</pc> namespace provides an easy syntax for selecting an item from a list based on specified conditions.</target>
				</segment>
			</unit>
			<unit id="144" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">[</data>
					<data id="id4">](https://msdn.microsoft.com/library/windows/apps/br229906)</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>The first call attempts to select the first <pc dataRefEnd="id2" dataRefStart="id1" id="p1">DeviceInformation</pc> in the list that has an <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">EnclosureLocation.Panel</pc></pc> value of <pc dataRefEnd="id8" dataRefStart="id7" id="p4">Panel.Back</pc>, indicating that the camera is on the back panel of the device's enclosure.</source>
					<target>The first call attempts to select the first <pc dataRefEnd="id2" dataRefStart="id1" id="p1">DeviceInformation</pc> in the list that has an <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">EnclosureLocation.Panel</pc></pc> value of <pc dataRefEnd="id8" dataRefStart="id7" id="p4">Panel.Back</pc>, indicating that the camera is on the back panel of the device's enclosure.</target>
				</segment>
			</unit>
			<unit id="145" translate="yes">
				<segment state="initial">
					<source>If the device does not have a camera on the back panel, the first available camera is used.</source>
					<target>If the device does not have a camera on the back panel, the first available camera is used.</target>
				</segment>
			</unit>
			<unit id="146" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br226573)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>If you do not specify a device ID when you initialize the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">MediaCaptureInitializationSettings</pc></pc>, the system will choose the first device in its internal list of devices.</source>
					<target>If you do not specify a device ID when you initialize the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">MediaCaptureInitializationSettings</pc></pc>, the system will choose the first device in its internal list of devices.</target>
				</segment>
			</unit>
			<unit id="147" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br226598)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>The call to <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">MediaCapture.InitializeAsync</pc></pc> initializes the object to use the specified capture device.</source>
					<target>The call to <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">MediaCapture.InitializeAsync</pc></pc> initializes the object to use the specified capture device.</target>
				</segment>
			</unit>
			<unit id="148" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>This call is made inside a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">try</pc> block because it will throw an <pc dataRefEnd="id4" dataRefStart="id3" id="p2">UnauthorizedAccessException</pc> if the user has denied the calling app access to the camera.</source>
					<target>This call is made inside a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">try</pc> block because it will throw an <pc dataRefEnd="id4" dataRefStart="id3" id="p2">UnauthorizedAccessException</pc> if the user has denied the calling app access to the camera.</target>
				</segment>
			</unit>
			<unit id="149" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>If the call succeeds, the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">\_isInitialized</pc> variable is set to true so that subsequent method calls can determine if the capture device has been initialized.</source>
					<target>If the call succeeds, the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">\_isInitialized</pc> variable is set to true so that subsequent method calls can determine if the capture device has been initialized.</target>
				</segment>
			</unit>
			<unit id="150" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Important</pc> On some device families, a user consent prompt is displayed to the user before your app is granted access to the device's camera.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Important</pc> On some device families, a user consent prompt is displayed to the user before your app is granted access to the device's camera.</target>
				</segment>
			</unit>
			<unit id="151" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br226598)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>For this reason, you must only call <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">MediaCapture.InitializeAsync</pc></pc> from the main UI thread.</source>
					<target>For this reason, you must only call <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">MediaCapture.InitializeAsync</pc></pc> from the main UI thread.</target>
				</segment>
			</unit>
			<unit id="152" translate="yes">
				<segment state="initial">
					<source>Attempting to initialize the camera from another thread may result in initialization failure.</source>
					<target>Attempting to initialize the camera from another thread may result in initialization failure.</target>
				</segment>
			</unit>
			<unit id="153" translate="yes">
				<segment state="initial">
					<source>If the initialization of the capture device is successful, variables are set to reflect whether the capture device is external, or if it is on the front panel of the device.</source>
					<target>If the initialization of the capture device is successful, variables are set to reflect whether the capture device is external, or if it is on the front panel of the device.</target>
				</segment>
			</unit>
			<unit id="154" translate="yes">
				<segment state="initial">
					<source>These values will be used to orient the capture preview correctly for the user.</source>
					<target>These values will be used to orient the capture preview correctly for the user.</target>
				</segment>
			</unit>
			<unit id="155" translate="yes">
				<segment state="initial">
					<source>Finally, the UI is updated to reflect that capture is available and the preview stream from the capture device is started.</source>
					<target>Finally, the UI is updated to reflect that capture is available and the preview stream from the capture device is started.</target>
				</segment>
			</unit>
			<unit id="156" translate="yes">
				<segment state="initial">
					<source>All of these tasks are performed in helper methods that will be described later in this article.</source>
					<target>All of these tasks are performed in helper methods that will be described later in this article.</target>
				</segment>
			</unit>
			<unit id="157" translate="yes">
				<segment state="initial">
					<source>Start the capture preview</source>
					<target>Start the capture preview</target>
				</segment>
			</unit>
			<unit id="158" translate="yes">
				<segment state="initial">
					<source>For the user to be able to see what they are capturing, you need to provide a preview of what the video capture device is currently seeing in your UI.</source>
					<target>For the user to be able to see what they are capturing, you need to provide a preview of what the video capture device is currently seeing in your UI.</target>
				</segment>
			</unit>
			<unit id="159" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Important</pc> You must start the capture preview in order for the capture device to enable auto focus, auto exposure, and auto white balance.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Important</pc> You must start the capture preview in order for the capture device to enable auto focus, auto exposure, and auto white balance.</target>
				</segment>
			</unit>
			<unit id="160" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br209278)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CaptureElement</pc></pc> control is provided to enable capture preview.</source>
					<target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CaptureElement</pc></pc> control is provided to enable capture preview.</target>
				</segment>
			</unit>
			<unit id="161" translate="yes">
				<segment state="initial">
					<source>The following shows example XAML code that defines the capture element.</source>
					<target>The following shows example XAML code that defines the capture element.</target>
				</segment>
			</unit>
			<unit id="162" translate="yes">
				<segment state="initial">
					<source>CaptureElement</source>
					<target>CaptureElement</target>
				</segment>
			</unit>
			<unit id="163" translate="yes">
				<segment state="initial">
					<source>Users expect that the screen will stay on while they are previewing the video capture screen and not turn off due to inactivity.</source>
					<target>Users expect that the screen will stay on while they are previewing the video capture screen and not turn off due to inactivity.</target>
				</segment>
			</unit>
			<unit id="164" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br241816)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>To enable this, you must create a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">DisplayRequest</pc></pc> object.</source>
					<target>To enable this, you must create a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">DisplayRequest</pc></pc> object.</target>
				</segment>
			</unit>
			<unit id="165" translate="yes">
				<segment state="initial">
					<source>Declare this variable with page scope so that it persists throughout the capture session.</source>
					<target>Declare this variable with page scope so that it persists throughout the capture session.</target>
				</segment>
			</unit>
			<unit id="166" translate="yes">
				<segment state="initial">
					<source>DisplayRequest</source>
					<target>DisplayRequest</target>
				</segment>
			</unit>
			<unit id="167" translate="yes">
				<segment state="initial">
					<source>The following method starts up the media capture preview.</source>
					<target>The following method starts up the media capture preview.</target>
				</segment>
			</unit>
			<unit id="168" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br241818)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/br241816)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>First, it requests that the display remain active by calling <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">RequestActive</pc></pc> on the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">DisplayRequest</pc></pc>.</source>
					<target>First, it requests that the display remain active by calling <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">RequestActive</pc></pc> on the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">DisplayRequest</pc></pc>.</target>
				</segment>
			</unit>
			<unit id="169" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br226613)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Next, the preview is started by calling <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">StartPreviewAsync</pc></pc>.</source>
					<target>Next, the preview is started by calling <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">StartPreviewAsync</pc></pc>.</target>
				</segment>
			</unit>
			<unit id="170" translate="yes">
				<segment state="initial">
					<source>StartPreviewAsync</source>
					<target>StartPreviewAsync</target>
				</segment>
			</unit>
			<unit id="171" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br241818)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">RequestActive</pc></pc> method is called on the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">DisplayRequest</pc> object to request that the system leave the screen on.</source>
					<target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">RequestActive</pc></pc> method is called on the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">DisplayRequest</pc> object to request that the system leave the screen on.</target>
				</segment>
			</unit>
			<unit id="172" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br227419)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Source</pc></pc> property of the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">CaptureElement</pc> is set to the app's <pc dataRefEnd="id8" dataRefStart="id7" id="p4">MediaCapture</pc> object to define the source of the preview.</source>
					<target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Source</pc></pc> property of the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">CaptureElement</pc> is set to the app's <pc dataRefEnd="id8" dataRefStart="id7" id="p4">MediaCapture</pc> object to define the source of the preview.</target>
				</segment>
			</unit>
			<unit id="173" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br208716)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">FlowDirection</pc></pc> property is provided by the XAML framework to support bi-directional user interfaces.</source>
					<target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">FlowDirection</pc></pc> property is provided by the XAML framework to support bi-directional user interfaces.</target>
				</segment>
			</unit>
			<unit id="174" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">[</data>
					<data id="id4">](https://msdn.microsoft.com/library/windows/apps/br242397)</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source>Setting the flow direction of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">CaptureElement</pc> to <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">FlowDirection.RightToLeft</pc></pc> causes the preview video to be flipped horizontally.</source>
					<target>Setting the flow direction of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">CaptureElement</pc> to <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">FlowDirection.RightToLeft</pc></pc> causes the preview video to be flipped horizontally.</target>
				</segment>
			</unit>
			<unit id="175" translate="yes">
				<segment state="initial">
					<source>This is used when the capture device is on the front panel of the device so that the preview in the correct direction from the user's perspective.</source>
					<target>This is used when the capture device is on the front panel of the device so that the preview in the correct direction from the user's perspective.</target>
				</segment>
			</unit>
			<unit id="176" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br226613)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">StartPreviewAsync</pc></pc> method starts the display of the preview stream within the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">CaptureElement</pc>.</source>
					<target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">StartPreviewAsync</pc></pc> method starts the display of the preview stream within the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">CaptureElement</pc>.</target>
				</segment>
			</unit>
			<unit id="177" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>If the preview is started successfully, the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">\_isPreviewing</pc> variable is set to allow other parts of the app to know that the app is currently previewing, and the helper method for setting the preview rotation is called.</source>
					<target>If the preview is started successfully, the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">\_isPreviewing</pc> variable is set to allow other parts of the app to know that the app is currently previewing, and the helper method for setting the preview rotation is called.</target>
				</segment>
			</unit>
			<unit id="178" translate="yes">
				<segment state="initial">
					<source>This method is defined in the next section.</source>
					<target>This method is defined in the next section.</target>
				</segment>
			</unit>
			<unit id="179" translate="yes">
				<segment state="initial">
					<source>Detect screen and device orientation</source>
					<target>Detect screen and device orientation</target>
				</segment>
			</unit>
			<unit id="180" translate="yes">
				<segment state="initial">
					<source>There are several areas of a media capture app that, when running on a mobile device like a phone or a tablet, are impacted by the current orientation of the device.</source>
					<target>There are several areas of a media capture app that, when running on a mobile device like a phone or a tablet, are impacted by the current orientation of the device.</target>
				</segment>
			</unit>
			<unit id="181" translate="yes">
				<segment state="initial">
					<source>These areas include properly rotating the preview stream from the camera and properly encoding captured images and videos so that, when viewed by the user, they are correctly oriented.</source>
					<target>These areas include properly rotating the preview stream from the camera and properly encoding captured images and videos so that, when viewed by the user, they are correctly oriented.</target>
				</segment>
			</unit>
			<unit id="182" translate="yes">
				<segment state="initial">
					<source>The term "display orientation" refers to the way the system rotates the XAML page on the device to keep it upright for the user.</source>
					<target>The term "display orientation" refers to the way the system rotates the XAML page on the device to keep it upright for the user.</target>
				</segment>
			</unit>
			<unit id="183" translate="yes">
				<segment state="initial">
					<source>"Device orientation" refers to the orientation of the device in world space and, therefore, the orientation of the physical camera device in world space.</source>
					<target>"Device orientation" refers to the orientation of the device in world space and, therefore, the orientation of the physical camera device in world space.</target>
				</segment>
			</unit>
			<unit id="184" translate="yes">
				<segment state="initial">
					<source>Both kinds of orientation a relevant to a media capture app.</source>
					<target>Both kinds of orientation a relevant to a media capture app.</target>
				</segment>
			</unit>
			<unit id="185" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn264258)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>To handle display orientation, declare and initialize a page-scoped variable for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">DisplayInformation</pc></pc> class.</source>
					<target>To handle display orientation, declare and initialize a page-scoped variable for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">DisplayInformation</pc></pc> class.</target>
				</segment>
			</unit>
			<unit id="186" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br226142)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Declare another variable of type <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">DisplayOrientations</pc></pc> to track the current orientation of the display.</source>
					<target>Declare another variable of type <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">DisplayOrientations</pc></pc> to track the current orientation of the display.</target>
				</segment>
			</unit>
			<unit id="187" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br206400)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/br206399)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>Declare a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SimpleOrientationSensor</pc></pc> variable and a <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">SimpleOrientation</pc></pc> variable to track device orientation.</source>
					<target>Declare a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SimpleOrientationSensor</pc></pc> variable and a <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">SimpleOrientation</pc></pc> variable to track device orientation.</target>
				</segment>
			</unit>
			<unit id="188" translate="yes">
				<segment state="initial">
					<source>DisplayInformationAndOrientation</source>
					<target>DisplayInformationAndOrientation</target>
				</segment>
			</unit>
			<unit id="189" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn264268)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/br206407)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>The following helper methods register and unregister event handlers for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">DisplayInformation.OrientationChanged</pc></pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">SimpleOrientationSensor.OrientationChanged</pc></pc> events and initialize the tracking variables with the current orientation.</source>
					<target>The following helper methods register and unregister event handlers for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">DisplayInformation.OrientationChanged</pc></pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">SimpleOrientationSensor.OrientationChanged</pc></pc> events and initialize the tracking variables with the current orientation.</target>
				</segment>
			</unit>
			<unit id="190" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br206400)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Note that not all devices have a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SimpleOrientationSensor</pc></pc>, so you should check before registering the handler or attempting to get the current orientation.</source>
					<target>Note that not all devices have a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SimpleOrientationSensor</pc></pc>, so you should check before registering the handler or attempting to get the current orientation.</target>
				</segment>
			</unit>
			<unit id="191" translate="yes">
				<segment state="initial">
					<source>RegisterOrientationEventHandlers</source>
					<target>RegisterOrientationEventHandlers</target>
				</segment>
			</unit>
			<unit id="192" translate="yes">
				<segment state="initial">
					<source>UnregisterOrientationEventHandlers</source>
					<target>UnregisterOrientationEventHandlers</target>
				</segment>
			</unit>
			<unit id="193" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>In the event handler for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">SimpleOrientationSensor.OrientationChanged</pc> event, update the device orientation variable with the current orientation.</source>
					<target>In the event handler for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">SimpleOrientationSensor.OrientationChanged</pc> event, update the device orientation variable with the current orientation.</target>
				</segment>
			</unit>
			<unit id="194" translate="yes">
				<segment state="initial">
					<source>You should not update the orientation if the device is facing up or down.</source>
					<target>You should not update the orientation if the device is facing up or down.</target>
				</segment>
			</unit>
			<unit id="195" translate="yes">
				<segment state="initial">
					<source>SimpleOrientationChanged</source>
					<target>SimpleOrientationChanged</target>
				</segment>
			</unit>
			<unit id="196" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>In the event handler for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">DisplayInformation.OrientationChanged</pc> event, update the display orientation variable with the current orientation.</source>
					<target>In the event handler for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">DisplayInformation.OrientationChanged</pc> event, update the display orientation variable with the current orientation.</target>
				</segment>
			</unit>
			<unit id="197" translate="yes">
				<segment state="initial">
					<source>If the video preview of the capture device is currently being displayed, update the rotation of the preview video stream.</source>
					<target>If the video preview of the capture device is currently being displayed, update the rotation of the preview video stream.</target>
				</segment>
			</unit>
			<unit id="198" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">SetPreviewRotationAsync</pc> helper method is described in the following section.</source>
					<target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">SetPreviewRotationAsync</pc> helper method is described in the following section.</target>
				</segment>
			</unit>
			<unit id="199" translate="yes">
				<segment state="initial">
					<source>DisplayOrientationChanged</source>
					<target>DisplayOrientationChanged</target>
				</segment>
			</unit>
			<unit id="200" translate="yes">
				<segment state="initial">
					<source>Set the media capture preview rotation</source>
					<target>Set the media capture preview rotation</target>
				</segment>
			</unit>
			<unit id="201" translate="yes">
				<segment state="initial">
					<source>Users expect for UI controls to rotate when the orientation of their mobile device changes, so that the text in the UI is vertically aligned and readable.</source>
					<target>Users expect for UI controls to rotate when the orientation of their mobile device changes, so that the text in the UI is vertically aligned and readable.</target>
				</segment>
			</unit>
			<unit id="202" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>For the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">CaptureElement</pc> control, however, users typically do not want the orientation of the video preview to rotate when the device does.</source>
					<target>For the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">CaptureElement</pc> control, however, users typically do not want the orientation of the video preview to rotate when the device does.</target>
				</segment>
			</unit>
			<unit id="203" translate="yes">
				<segment state="initial">
					<source>In order to provide the expected user experience, you should rotate the preview stream to match the orientation of the device.</source>
					<target>In order to provide the expected user experience, you should rotate the preview stream to match the orientation of the device.</target>
				</segment>
			</unit>
			<unit id="204" translate="yes">
				<segment state="initial">
					<source>The preview stream orientation must be expressed in degrees.</source>
					<target>The preview stream orientation must be expressed in degrees.</target>
				</segment>
			</unit>
			<unit id="205" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br226142)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>The following helper method to converts the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">DisplayOrientations</pc></pc> enumeration values into degrees.</source>
					<target>The following helper method to converts the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">DisplayOrientations</pc></pc> enumeration values into degrees.</target>
				</segment>
			</unit>
			<unit id="206" translate="yes">
				<segment state="initial">
					<source>ConvertDisplayOrientationToDegrees</source>
					<target>ConvertDisplayOrientationToDegrees</target>
				</segment>
			</unit>
			<unit id="207" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br206399)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/br206400)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>And this helper method converts a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SimpleOrientation</pc></pc> enumeration value, which is used by the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">SimpleOrientationSensor</pc></pc> to express the rotation of the device, into degrees.</source>
					<target>And this helper method converts a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SimpleOrientation</pc></pc> enumeration value, which is used by the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">SimpleOrientationSensor</pc></pc> to express the rotation of the device, into degrees.</target>
				</segment>
			</unit>
			<unit id="208" translate="yes">
				<segment state="initial">
					<source>ConvertDeviceOrientationToDegrees</source>
					<target>ConvertDeviceOrientationToDegrees</target>
				</segment>
			</unit>
			<unit id="209" translate="yes">
				<segment state="initial">
					<source>At a low-level, the rotation of a stream is actually performed by the Microsoft Media Foundation framework.</source>
					<target>At a low-level, the rotation of a stream is actually performed by the Microsoft Media Foundation framework.</target>
				</segment>
			</unit>
			<unit id="210" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/desktop/hh162880)</data>
				</originalData>
				<segment state="initial">
					<source>The rotation is specified using the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MF\_MT\_VIDEO\_ROTATION</pc> attribute.</source>
					<target>The rotation is specified using the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MF\_MT\_VIDEO\_ROTATION</pc> attribute.</target>
				</segment>
			</unit>
			<unit id="211" translate="yes">
				<segment state="initial">
					<source>Since this is a Windows Runtime app, the rotation is specified using the GUID for the attribute, rather than the attribute name.</source>
					<target>Since this is a Windows Runtime app, the rotation is specified using the GUID for the attribute, rather than the attribute name.</target>
				</segment>
			</unit>
			<unit id="212" translate="yes">
				<segment state="initial">
					<source>Define the following GUID to identify the video rotation attribute.</source>
					<target>Define the following GUID to identify the video rotation attribute.</target>
				</segment>
			</unit>
			<unit id="213" translate="yes">
				<segment state="initial">
					<source>RotationKey</source>
					<target>RotationKey</target>
				</segment>
			</unit>
			<unit id="214" translate="yes">
				<segment state="initial">
					<source>The following method sets the rotation of the preview stream.</source>
					<target>The following method sets the rotation of the preview stream.</target>
				</segment>
			</unit>
			<unit id="215" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br211995)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/br226825)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">GetMediaStreamProperties</pc></pc> method of the media capture's <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">VideoDeviceController</pc></pc> returns a property set made up of key/value pairs.</source>
					<target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">GetMediaStreamProperties</pc></pc> method of the media capture's <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">VideoDeviceController</pc></pc> returns a property set made up of key/value pairs.</target>
				</segment>
			</unit>
			<unit id="216" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br226640)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">MediaStreamType.VideoPreview</pc></pc> is specified to indicate that we want the properties for the video preview stream, as opposed to the video recording stream or the audio stream.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">MediaStreamType.VideoPreview</pc></pc> is specified to indicate that we want the properties for the video preview stream, as opposed to the video recording stream or the audio stream.</target>
				</segment>
			</unit>
			<unit id="217" translate="yes">
				<segment state="initial">
					<source>The property set is a general purpose interface for setting stream properties, but for this task the video rotation GUID defined above is added as the property key and the desired orientation of the video stream, in degrees, is specified as the value.</source>
					<target>The property set is a general purpose interface for setting stream properties, but for this task the video rotation GUID defined above is added as the property key and the desired orientation of the video stream, in degrees, is specified as the value.</target>
				</segment>
			</unit>
			<unit id="218" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn297781)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SetEncodingPropertiesAsync</pc></pc> updates the encoding properties with the new values.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SetEncodingPropertiesAsync</pc></pc> updates the encoding properties with the new values.</target>
				</segment>
			</unit>
			<unit id="219" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>Once again, <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaStreamType.VideoPreview</pc> is specified to indicate that the properies being set are for the video preview stream.</source>
					<target>Once again, <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaStreamType.VideoPreview</pc> is specified to indicate that the properies being set are for the video preview stream.</target>
				</segment>
			</unit>
			<unit id="220" translate="yes">
				<segment state="initial">
					<source>SetPreviewRotation</source>
					<target>SetPreviewRotation</target>
				</segment>
			</unit>
			<unit id="221" translate="yes">
				<segment state="initial">
					<source>For devices with external cameras, the user does not expect for the camera stream to be rotated when the device rotates.</source>
					<target>For devices with external cameras, the user does not expect for the camera stream to be rotated when the device rotates.</target>
				</segment>
			</unit>
			<unit id="222" translate="yes">
				<segment state="initial">
					<source>If the preview is being mirrored for a camera on the front panel, the rotation direction must be inverted to match the rotation of the device.</source>
					<target>If the preview is being mirrored for a camera on the front panel, the rotation direction must be inverted to match the rotation of the device.</target>
				</segment>
			</unit>
			<unit id="223" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn264259)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/br226142)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>Some devices, typically phones, support setting <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">DisplayInformation.AutoRotationPreferences</pc></pc> to an orientation value such as <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">DisplayOrientations.Landscape</pc></pc> to force the display to rotate with the device.</source>
					<target>Some devices, typically phones, support setting <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">DisplayInformation.AutoRotationPreferences</pc></pc> to an orientation value such as <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">DisplayOrientations.Landscape</pc></pc> to force the display to rotate with the device.</target>
				</segment>
			</unit>
			<unit id="224" translate="yes">
				<segment state="initial">
					<source>You should set this value because it provides a good experience on devices that support it, but you should still implement the above pattern in your app to support devices that don't support auto-rotation preferences.</source>
					<target>You should set this value because it provides a good experience on devices that support it, but you should still implement the above pattern in your app to support devices that don't support auto-rotation preferences.</target>
				</segment>
			</unit>
			<unit id="225" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br226611)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>In previous releases, the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SetPreviewRotation</pc></pc> method was the only way to rotate the preview stream.</source>
					<target>In previous releases, the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SetPreviewRotation</pc></pc> method was the only way to rotate the preview stream.</target>
				</segment>
			</unit>
			<unit id="226" translate="yes">
				<segment state="initial">
					<source>This method is still present in the API surface to support existing apps, but this method inefficient and should not be used for new apps.</source>
					<target>This method is still present in the API surface to support existing apps, but this method inefficient and should not be used for new apps.</target>
				</segment>
			</unit>
			<unit id="227" translate="yes">
				<segment state="initial">
					<source>Capture a photo</source>
					<target>Capture a photo</target>
				</segment>
			</unit>
			<unit id="228" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/hh700840)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/br241720)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>The following method captures a photo using the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CapturePhotoToStreamAsync</pc></pc> method and passing in the requested encoding properties and an <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">InMemoryRandomAccessStream</pc></pc> object that will contain the output of the capture operation.</source>
					<target>The following method captures a photo using the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CapturePhotoToStreamAsync</pc></pc> method and passing in the requested encoding properties and an <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">InMemoryRandomAccessStream</pc></pc> object that will contain the output of the capture operation.</target>
				</segment>
			</unit>
			<unit id="229" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/hh700993)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/hh700994)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ImageEncodingProperties</pc></pc> class provides helper methods, like <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">CreateJpeg</pc></pc>, to generate encoding properties for the file types supported by media capture.</source>
					<target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ImageEncodingProperties</pc></pc> class provides helper methods, like <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">CreateJpeg</pc></pc>, to generate encoding properties for the file types supported by media capture.</target>
				</segment>
			</unit>
			<unit id="230" translate="yes">
				<segment state="initial">
					<source>TakePhotoAsync</source>
					<target>TakePhotoAsync</target>
				</segment>
			</unit>
			<unit id="231" translate="yes">
				<segment state="initial">
					<source>Before saving the photo to a file, you need to determine the correct orientation of the photo.</source>
					<target>Before saving the photo to a file, you need to determine the correct orientation of the photo.</target>
				</segment>
			</unit>
			<unit id="232" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaCapture</pc> object doesn't know about the device's orientation and so it encodes the captured photo data as if the capture device is in its default orientation.</source>
					<target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaCapture</pc> object doesn't know about the device's orientation and so it encodes the captured photo data as if the capture device is in its default orientation.</target>
				</segment>
			</unit>
			<unit id="233" translate="yes">
				<segment state="initial">
					<source>This can result in a negative user experience when the user is viewing the captured photo, as the photo will be oriented incorrectly.</source>
					<target>This can result in a negative user experience when the user is viewing the captured photo, as the photo will be oriented incorrectly.</target>
				</segment>
			</unit>
			<unit id="234" translate="yes">
				<segment state="initial">
					<source>The following helper methods determine the correct photo orientation and then save the file with the correct orientation.</source>
					<target>The following helper methods determine the correct photo orientation and then save the file with the correct orientation.</target>
				</segment>
			</unit>
			<unit id="235" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">GetCameraOrientation</pc> helper method starts with the current device orientation and then rotates that value depending on the native orientation of the device and the location of the camera on the device.</source>
					<target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">GetCameraOrientation</pc> helper method starts with the current device orientation and then rotates that value depending on the native orientation of the device and the location of the camera on the device.</target>
				</segment>
			</unit>
			<unit id="236" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>If the camera is mounted on the front panel of the device, as indicated in this example by the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">\_mirroringPreview</pc> variable, then the camera orientation should be inverted.</source>
					<target>If the camera is mounted on the front panel of the device, as indicated in this example by the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">\_mirroringPreview</pc> variable, then the camera orientation should be inverted.</target>
				</segment>
			</unit>
			<unit id="237" translate="yes">
				<segment state="initial">
					<source>GetCameraOrientation</source>
					<target>GetCameraOrientation</target>
				</segment>
			</unit>
			<unit id="238" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br206399)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/hh965476)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>The following helper method simply converts values from the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SimpleOrientation</pc></pc> enumeration values used by the orientation sensor to the equivalent <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">PhotoOrientation</pc></pc> value used by the bitmap encoder that will be used to save the file.</source>
					<target>The following helper method simply converts values from the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SimpleOrientation</pc></pc> enumeration values used by the orientation sensor to the equivalent <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">PhotoOrientation</pc></pc> value used by the bitmap encoder that will be used to save the file.</target>
				</segment>
			</unit>
			<unit id="239" translate="yes">
				<segment state="initial">
					<source>ConvertOrientationToPhotoOrientation</source>
					<target>ConvertOrientationToPhotoOrientation</target>
				</segment>
			</unit>
			<unit id="240" translate="yes">
				<segment state="initial">
					<source>Finally, the captured photo can be encoded and saved.</source>
					<target>Finally, the captured photo can be encoded and saved.</target>
				</segment>
			</unit>
			<unit id="241" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br226176)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Create a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">BitmapDecoder</pc></pc> object from the input stream containing the captured photo data.</source>
					<target>Create a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">BitmapDecoder</pc></pc> object from the input stream containing the captured photo data.</target>
				</segment>
			</unit>
			<unit id="242" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br227171)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Create a new <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">StorageFile</pc></pc> and open it for reading and writing.</source>
					<target>Create a new <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">StorageFile</pc></pc> and open it for reading and writing.</target>
				</segment>
			</unit>
			<unit id="243" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br226206)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Create a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">BitmapEncoder</pc></pc> object, passing in the output file and the decoder containing the image data.</source>
					<target>Create a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">BitmapEncoder</pc></pc> object, passing in the output file and the decoder containing the image data.</target>
				</segment>
			</unit>
			<unit id="244" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/hh974338)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Create a new <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">BitmapPropertySet</pc></pc> and add a new property.</source>
					<target>Create a new <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">BitmapPropertySet</pc></pc> and add a new property.</target>
				</segment>
			</unit>
			<unit id="245" translate="yes">
				<segment state="initial">
					<source>The key for the property, "System.Photo.Orientation" specifies that the property represents the orientation of the photo.</source>
					<target>The key for the property, "System.Photo.Orientation" specifies that the property represents the orientation of the photo.</target>
				</segment>
			</unit>
			<unit id="246" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/hh965476)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>The value is the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">PhotoOrientation</pc></pc> value that was previously calculated.</source>
					<target>The value is the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">PhotoOrientation</pc></pc> value that was previously calculated.</target>
				</segment>
			</unit>
			<unit id="247" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br226252)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/dn237883)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>Call <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SetPropertiesAsync</pc></pc> to update the properties on the encoder and then call <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">FlushAsync</pc></pc> to write the photo to the storage file.</source>
					<target>Call <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SetPropertiesAsync</pc></pc> to update the properties on the encoder and then call <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">FlushAsync</pc></pc> to write the photo to the storage file.</target>
				</segment>
			</unit>
			<unit id="248" translate="yes">
				<segment state="initial">
					<source>ReencodeAndSavePhotoAsync</source>
					<target>ReencodeAndSavePhotoAsync</target>
				</segment>
			</unit>
			<unit id="249" translate="yes">
				<segment state="initial">
					<source>Setting the "System.Photo.Orientation" bitmap property encodes the orientation of the photo into the metadata of the file.</source>
					<target>Setting the "System.Photo.Orientation" bitmap property encodes the orientation of the photo into the metadata of the file.</target>
				</segment>
			</unit>
			<unit id="250" translate="yes">
				<segment state="initial">
					<source>It does not cause the actual image data to be encoded differently.</source>
					<target>It does not cause the actual image data to be encoded differently.</target>
				</segment>
			</unit>
			<unit id="251" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](image-metadata.md)</data>
				</originalData>
				<segment state="initial">
					<source>For more information about embedding metadata into image files, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Image metadata</pc>.</source>
					<target>For more information about embedding metadata into image files, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Image metadata</pc>.</target>
				</segment>
			</unit>
			<unit id="252" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](imaging.md)</data>
				</originalData>
				<segment state="initial">
					<source>For more information about working with images, including encoding and decoding images, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Imaging</pc>.</source>
					<target>For more information about working with images, including encoding and decoding images, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Imaging</pc>.</target>
				</segment>
			</unit>
			<unit id="253" translate="yes">
				<segment state="initial">
					<source>Capture a video</source>
					<target>Capture a video</target>
				</segment>
			</unit>
			<unit id="254" translate="yes">
				<segment state="initial">
					<source>To start capturing video, first create a storage file to which the video will be recorded.</source>
					<target>To start capturing video, first create a storage file to which the video will be recorded.</target>
				</segment>
			</unit>
			<unit id="255" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/hh701026)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source>Next create the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">MediaEncodingProfile</pc></pc> that the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">MediaCapture</pc> will use to encode the video to the file.</source>
					<target>Next create the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">MediaEncodingProfile</pc></pc> that the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">MediaCapture</pc> will use to encode the video to the file.</target>
				</segment>
			</unit>
			<unit id="256" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">[</data>
					<data id="id4">](https://msdn.microsoft.com/library/windows/apps/hh701078)</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaEncodingProfile</pc> class provides methods, like <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">CreateMp4</pc></pc>, that create encoding profiles for the supported video formats.</source>
					<target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaEncodingProfile</pc> class provides methods, like <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">CreateMp4</pc></pc>, that create encoding profiles for the supported video formats.</target>
				</segment>
			</unit>
			<unit id="257" translate="yes">
				<segment state="initial">
					<source>Use the helper methods discussed previously to get the correct rotation for the video, in degrees.</source>
					<target>Use the helper methods discussed previously to get the correct rotation for the video, in degrees.</target>
				</segment>
			</unit>
			<unit id="258" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>Unlike the photo scenario, the video rotation information is encoded into the stream by the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaCapture</pc>.</source>
					<target>Unlike the photo scenario, the video rotation information is encoded into the stream by the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaCapture</pc>.</target>
				</segment>
			</unit>
			<unit id="259" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/hh701254)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Add the rotation information to the encoding profile by adding it to the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">VideoEncodingProperties.Properties</pc></pc> collection.</source>
					<target>Add the rotation information to the encoding profile by adding it to the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">VideoEncodingProperties.Properties</pc></pc> collection.</target>
				</segment>
			</unit>
			<unit id="260" translate="yes">
				<segment state="initial">
					<source>The previously defined GUID for video rotation is used as the key and the rotation, in degrees, is the value.</source>
					<target>The previously defined GUID for video rotation is used as the key and the rotation, in degrees, is the value.</target>
				</segment>
			</unit>
			<unit id="261" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/hh700863)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Finally, call <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">MediaCapture.StartRecordToStorageFileAsync</pc></pc>, specifying the encoding properties and the output file to begin recording.</source>
					<target>Finally, call <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">MediaCapture.StartRecordToStorageFileAsync</pc></pc>, specifying the encoding properties and the output file to begin recording.</target>
				</segment>
			</unit>
			<unit id="262" translate="yes">
				<segment state="initial">
					<source>StartRecordingAsync</source>
					<target>StartRecordingAsync</target>
				</segment>
			</unit>
			<unit id="263" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br226623)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>To stop recording, simply call <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">MediaCapture.StopRecordAsync</pc></pc>.</source>
					<target>To stop recording, simply call <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">MediaCapture.StopRecordAsync</pc></pc>.</target>
				</segment>
			</unit>
			<unit id="264" translate="yes">
				<segment state="initial">
					<source>StopRecordingAsync</source>
					<target>StopRecordingAsync</target>
				</segment>
			</unit>
			<unit id="265" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/hh973312)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source>A handler for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">MediaCapture.RecordLimitationExceeded</pc></pc> event was registered when the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">MediaCapture</pc> was initialized.</source>
					<target>A handler for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">MediaCapture.RecordLimitationExceeded</pc></pc> event was registered when the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">MediaCapture</pc> was initialized.</target>
				</segment>
			</unit>
			<unit id="266" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>In the handler, call the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">StopRecordingAsync</pc> method to stop video recording.</source>
					<target>In the handler, call the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">StopRecordingAsync</pc> method to stop video recording.</target>
				</segment>
			</unit>
			<unit id="267" translate="yes">
				<segment state="initial">
					<source>RecordLimitationExceeded</source>
					<target>RecordLimitationExceeded</target>
				</segment>
			</unit>
			<unit id="268" translate="yes">
				<segment state="initial">
					<source>Pause and resume video capture</source>
					<target>Pause and resume video capture</target>
				</segment>
			</unit>
			<unit id="269" translate="yes">
				<segment state="initial">
					<source>For some scenarios you may want to pause and resume an ongoing video capture rather than stopping the capture and starting a new one.</source>
					<target>For some scenarios you may want to pause and resume an ongoing video capture rather than stopping the capture and starting a new one.</target>
				</segment>
			</unit>
			<unit id="270" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn858102)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>To pause recording call <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">PauseRecordAsync</pc></pc>.</source>
					<target>To pause recording call <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">PauseRecordAsync</pc></pc>.</target>
				</segment>
			</unit>
			<unit id="271" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn926686)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>If you specify <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">MediaCapturePauseBehavior.RetainHardwareResources</pc></pc>, then on devices that don't support simultaneous video and photo capture, the app will be unable to capture photos while the video is paused.</source>
					<target>If you specify <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">MediaCapturePauseBehavior.RetainHardwareResources</pc></pc>, then on devices that don't support simultaneous video and photo capture, the app will be unable to capture photos while the video is paused.</target>
				</segment>
			</unit>
			<unit id="272" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](camera-profiles.md)</data>
				</originalData>
				<segment state="initial">
					<source>For information on determining if a device supports simultaneous photo and video capture, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Camera profiles</pc>.</source>
					<target>For information on determining if a device supports simultaneous photo and video capture, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Camera profiles</pc>.</target>
				</segment>
			</unit>
			<unit id="273" translate="yes">
				<segment state="initial">
					<source>PauseRecordingAsync</source>
					<target>PauseRecordingAsync</target>
				</segment>
			</unit>
			<unit id="274" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn858103)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>To resume a previously paused video capture, call <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ResumeRecordAsync</pc></pc>.</source>
					<target>To resume a previously paused video capture, call <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ResumeRecordAsync</pc></pc>.</target>
				</segment>
			</unit>
			<unit id="275" translate="yes">
				<segment state="initial">
					<source>ResumeRecordingAsync</source>
					<target>ResumeRecordingAsync</target>
				</segment>
			</unit>
			<unit id="276" translate="yes">
				<segment state="initial">
					<source>Clean up capture resources</source>
					<target>Clean up capture resources</target>
				</segment>
			</unit>
			<unit id="277" translate="yes">
				<segment state="initial">
					<source>It is very important that you shut down and release the media capture resources properly.</source>
					<target>It is very important that you shut down and release the media capture resources properly.</target>
				</segment>
			</unit>
			<unit id="278" translate="yes">
				<segment state="initial">
					<source>Failure to do so can cause unexpected camera behavior after your app closes, which results in a negative user experience for your app.</source>
					<target>Failure to do so can cause unexpected camera behavior after your app closes, which results in a negative user experience for your app.</target>
				</segment>
			</unit>
			<unit id="279" translate="yes">
				<segment state="initial">
					<source>The following sections walk through the different steps you should take to shut down the camera.</source>
					<target>The following sections walk through the different steps you should take to shut down the camera.</target>
				</segment>
			</unit>
			<unit id="280" translate="yes">
				<segment state="initial">
					<source>Shut down the capture preview</source>
					<target>Shut down the capture preview</target>
				</segment>
			</unit>
			<unit id="281" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br226622)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>To shut down the capture preview, first call <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">MediaCapture.StopPreviewAsync</pc></pc>.</source>
					<target>To shut down the capture preview, first call <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">MediaCapture.StopPreviewAsync</pc></pc>.</target>
				</segment>
			</unit>
			<unit id="282" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br227419)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/br242926)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>Set the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Source</pc></pc> property of your <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">MediaElement</pc></pc> to null.</source>
					<target>Set the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Source</pc></pc> property of your <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">MediaElement</pc></pc> to null.</target>
				</segment>
			</unit>
			<unit id="283" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br241819)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/br241816)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>Then, call the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">RequestRelease</pc></pc> on your <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">DisplayRequest</pc></pc> variable to allow the system to turn off the display when needed.</source>
					<target>Then, call the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">RequestRelease</pc></pc> on your <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">DisplayRequest</pc></pc> variable to allow the system to turn off the display when needed.</target>
				</segment>
			</unit>
			<unit id="284" translate="yes">
				<segment state="initial">
					<source>StopPreviewAsync</source>
					<target>StopPreviewAsync</target>
				</segment>
			</unit>
			<unit id="285" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/hh750317)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>You can't access the UI from a non-UI thread, so the setting the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaElement.Source</pc> property and calling <pc dataRefEnd="id4" dataRefStart="id3" id="p2">RequestRelease</pc> must be made using the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">CoreDispatcher.RunAsync</pc></pc> method so that the calls execute on the UI thread.</source>
					<target>You can't access the UI from a non-UI thread, so the setting the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaElement.Source</pc> property and calling <pc dataRefEnd="id4" dataRefStart="id3" id="p2">RequestRelease</pc> must be made using the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">CoreDispatcher.RunAsync</pc></pc> method so that the calls execute on the UI thread.</target>
				</segment>
			</unit>
			<unit id="286" translate="yes">
				<segment state="initial">
					<source>Shut down and dispose of the MediaCapture object</source>
					<target>Shut down and dispose of the MediaCapture object</target>
				</segment>
			</unit>
			<unit id="287" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>Before disposing of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaCapture</pc> object, stop any recording that is ongoing and stop the preview stream by calling the helper methods defined previously.</source>
					<target>Before disposing of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaCapture</pc> object, stop any recording that is ongoing and stop the preview stream by calling the helper methods defined previously.</target>
				</segment>
			</unit>
			<unit id="288" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">[</data>
					<data id="id4">](https://msdn.microsoft.com/library/windows/apps/dn278858)</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>Once this has been done, remove any event handlers registered with the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaCapture</pc>, then call <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">Dispose</pc></pc> to free any resources associated with the object and set the <pc dataRefEnd="id8" dataRefStart="id7" id="p4">MediaCapture</pc> variable to null</source>
					<target>Once this has been done, remove any event handlers registered with the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaCapture</pc>, then call <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">Dispose</pc></pc> to free any resources associated with the object and set the <pc dataRefEnd="id8" dataRefStart="id7" id="p4">MediaCapture</pc> variable to null</target>
				</segment>
			</unit>
			<unit id="289" translate="yes">
				<segment state="initial">
					<source>CleanupCameraAsync</source>
					<target>CleanupCameraAsync</target>
				</segment>
			</unit>
			<unit id="290" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">[</data>
					<data id="id4">](https://msdn.microsoft.com/library/windows/apps/br226593)</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source>You should call this method to shut down and dispose of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaCapture</pc> object from inside the handler for the <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">MediaCapture.Failed</pc></pc> event.</source>
					<target>You should call this method to shut down and dispose of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaCapture</pc> object from inside the handler for the <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">MediaCapture.Failed</pc></pc> event.</target>
				</segment>
			</unit>
			<unit id="291" translate="yes">
				<segment state="initial">
					<source>CaptureFailed</source>
					<target>CaptureFailed</target>
				</segment>
			</unit>
			<unit id="292" translate="yes">
				<segment state="initial">
					<source>Handle app lifetime and page navigation events</source>
					<target>Handle app lifetime and page navigation events</target>
				</segment>
			</unit>
			<unit id="293" translate="yes">
				<segment state="initial">
					<source>The app lifetime events give your app an opportunity to initialize and release resources.</source>
					<target>The app lifetime events give your app an opportunity to initialize and release resources.</target>
				</segment>
			</unit>
			<unit id="294" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>This is especially important with the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Application.Suspending</pc> event, where it is essential that your app properly disposes of media capture resources.</source>
					<target>This is especially important with the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Application.Suspending</pc> event, where it is essential that your app properly disposes of media capture resources.</target>
				</segment>
			</unit>
			<unit id="295" translate="yes">
				<segment state="initial">
					<source>You can register handlers for the application lifetime events in your page's constructor.</source>
					<target>You can register handlers for the application lifetime events in your page's constructor.</target>
				</segment>
			</unit>
			<unit id="296" translate="yes">
				<segment state="initial">
					<source>RegisterAppLifetimeEvents</source>
					<target>RegisterAppLifetimeEvents</target>
				</segment>
			</unit>
			<unit id="297" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>In the handler for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Application.Suspending</pc> event, you should unregister the handlers for the display and device orientation events and shut down the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">MediaCapture</pc> object.</source>
					<target>In the handler for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Application.Suspending</pc> event, you should unregister the handlers for the display and device orientation events and shut down the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">MediaCapture</pc> object.</target>
				</segment>
			</unit>
			<unit id="298" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn278720)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SystemMediaTransportControls.PropertyChanged</pc></pc> event unregistered here is needed for another application lifecycle-related task that is described later in this article.</source>
					<target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SystemMediaTransportControls.PropertyChanged</pc></pc> event unregistered here is needed for another application lifecycle-related task that is described later in this article.</target>
				</segment>
			</unit>
			<unit id="299" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">[</data>
					<data id="id4">](https://msdn.microsoft.com/library/windows/apps/br224690)</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Caution</pc> You must request a suspending deferral by calling <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">SuspendingOperation.GetDeferral</pc></pc> at the beginning of your suspending event handler.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Caution</pc> You must request a suspending deferral by calling <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">SuspendingOperation.GetDeferral</pc></pc> at the beginning of your suspending event handler.</target>
				</segment>
			</unit>
			<unit id="300" translate="yes">
				<segment state="initial">
					<source>This requests that the system wait for you to signal that the operation is complete before tearing down your app.</source>
					<target>This requests that the system wait for you to signal that the operation is complete before tearing down your app.</target>
				</segment>
			</unit>
			<unit id="301" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>This is necessary because the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaCapture</pc> shutdown operations are asynchronous, so the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Application.Suspending</pc> event handler may complete before the camera is properly shut down.</source>
					<target>This is necessary because the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaCapture</pc> shutdown operations are asynchronous, so the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Application.Suspending</pc> event handler may complete before the camera is properly shut down.</target>
				</segment>
			</unit>
			<unit id="302" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br224685)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>After your awaited asynchronous calls complete, you should release the deferral by calling <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SuspendingDeferral.Complete</pc></pc>.</source>
					<target>After your awaited asynchronous calls complete, you should release the deferral by calling <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SuspendingDeferral.Complete</pc></pc>.</target>
				</segment>
			</unit>
			<unit id="303" translate="yes">
				<segment state="initial">
					<source>Suspending</source>
					<target>Suspending</target>
				</segment>
			</unit>
			<unit id="304" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source>In the handler for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Application.Resuming</pc> event, you should register handlers for the display and device orientation events, register the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">SystemMediaTransportControls.PropertyChanged</pc> event, and initialize the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">MediaCapture</pc> object.</source>
					<target>In the handler for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Application.Resuming</pc> event, you should register handlers for the display and device orientation events, register the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">SystemMediaTransportControls.PropertyChanged</pc> event, and initialize the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">MediaCapture</pc> object.</target>
				</segment>
			</unit>
			<unit id="305" translate="yes">
				<segment state="initial">
					<source>Resuming</source>
					<target>Resuming</target>
				</segment>
			</unit>
			<unit id="306" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br227508)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">OnNavigatedTo</pc></pc> event gives an opportunity to initially register handlers for the display and device orientation events and initialize the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">MediaCapture</pc> object.</source>
					<target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">OnNavigatedTo</pc></pc> event gives an opportunity to initially register handlers for the display and device orientation events and initialize the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">MediaCapture</pc> object.</target>
				</segment>
			</unit>
			<unit id="307" translate="yes">
				<segment state="initial">
					<source>OnNavigatedTo</source>
					<target>OnNavigatedTo</target>
				</segment>
			</unit>
			<unit id="308" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br227509)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>If your app has multiple pages, you should clean up your media capture objects in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">OnNavigatingFrom</pc></pc> event handler.</source>
					<target>If your app has multiple pages, you should clean up your media capture objects in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">OnNavigatingFrom</pc></pc> event handler.</target>
				</segment>
			</unit>
			<unit id="309" translate="yes">
				<segment state="initial">
					<source>OnNavigatingFrom</source>
					<target>OnNavigatingFrom</target>
				</segment>
			</unit>
			<unit id="310" translate="yes">
				<segment state="initial">
					<source>For your app to behave properly on devices that support multiple simultaneous windows, you must respond when your app is minimized or restored.</source>
					<target>For your app to behave properly on devices that support multiple simultaneous windows, you must respond when your app is minimized or restored.</target>
				</segment>
			</unit>
			<unit id="311" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn278720)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>To do this, you must handle the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SystemMediaTransportControls.PropertyChanged</pc></pc> event.</source>
					<target>To do this, you must handle the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SystemMediaTransportControls.PropertyChanged</pc></pc> event.</target>
				</segment>
			</unit>
			<unit id="312" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn278677)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Initialize a member variable to store a reference to the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SystemMediaTransportControls</pc></pc> object for your app.</source>
					<target>Initialize a member variable to store a reference to the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SystemMediaTransportControls</pc></pc> object for your app.</target>
				</segment>
			</unit>
			<unit id="313" translate="yes">
				<segment state="initial">
					<source>DeclareSystemMediaTransportControls</source>
					<target>DeclareSystemMediaTransportControls</target>
				</segment>
			</unit>
			<unit id="314" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>The code to register and unregister the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">PropertyChanged</pc> event should be added to the app life cycle events as shown in the examples above.</source>
					<target>The code to register and unregister the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">PropertyChanged</pc> event should be added to the app life cycle events as shown in the examples above.</target>
				</segment>
			</unit>
			<unit id="315" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn278721)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>In the handler for the event, check to see if the property change that triggered the event was the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SystemMediaTransportControlsProperty.SoundLevel</pc></pc> property.</source>
					<target>In the handler for the event, check to see if the property change that triggered the event was the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SystemMediaTransportControlsProperty.SoundLevel</pc></pc> property.</target>
				</segment>
			</unit>
			<unit id="316" translate="yes">
				<segment state="initial">
					<source>If this was the property that changed, check the value of the property.</source>
					<target>If this was the property that changed, check the value of the property.</target>
				</segment>
			</unit>
			<unit id="317" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/hh700852)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>If the value is <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SoundLevel.Muted</pc></pc>, then your app was minimized and you should clean up your media capture resources appropriately.</source>
					<target>If the value is <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SoundLevel.Muted</pc></pc>, then your app was minimized and you should clean up your media capture resources appropriately.</target>
				</segment>
			</unit>
			<unit id="318" translate="yes">
				<segment state="initial">
					<source>Otherwise, the event signals that your app window was restored and you should reinitialize you media capture resources.</source>
					<target>Otherwise, the event signals that your app window was restored and you should reinitialize you media capture resources.</target>
				</segment>
			</unit>
			<unit id="319" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">[</data>
					<data id="id4">](https://msdn.microsoft.com/library/windows/apps/hh750317)</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">SoundLevel</pc> property must be accessed on the UI thread, so the code in this method is wrapped in a call to <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">Dispatcher.RunAsync</pc></pc>.</source>
					<target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">SoundLevel</pc> property must be accessed on the UI thread, so the code in this method is wrapped in a call to <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">Dispatcher.RunAsync</pc></pc>.</target>
				</segment>
			</unit>
			<unit id="320" translate="yes">
				<segment state="initial">
					<source>SystemMediaControlsPropertyChanged</source>
					<target>SystemMediaControlsPropertyChanged</target>
				</segment>
			</unit>
			<unit id="321" translate="yes">
				<segment state="initial">
					<source>Additional UI considerations for media capture</source>
					<target>Additional UI considerations for media capture</target>
				</segment>
			</unit>
			<unit id="322" translate="yes">
				<segment state="initial">
					<source>Set auto-rotation preferences</source>
					<target>Set auto-rotation preferences</target>
				</segment>
			</unit>
			<unit id="323" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn264259)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/br209278)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>As mentioned in the previous section on rotating the preview stream, some devices support setting <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">DisplayInformation.AutoRotationPreferences</pc></pc> to prevent the page, including the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">CaptureElement</pc></pc> that displays the preview, from rotating as the device is rotating.</source>
					<target>As mentioned in the previous section on rotating the preview stream, some devices support setting <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">DisplayInformation.AutoRotationPreferences</pc></pc> to prevent the page, including the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">CaptureElement</pc></pc> that displays the preview, from rotating as the device is rotating.</target>
				</segment>
			</unit>
			<unit id="324" translate="yes">
				<segment state="initial">
					<source>This provides a good user experience on devices that support it.</source>
					<target>This provides a good user experience on devices that support it.</target>
				</segment>
			</unit>
			<unit id="325" translate="yes">
				<segment state="initial">
					<source>Set this value when your app launches or when you begin displaying the preview.</source>
					<target>Set this value when your app launches or when you begin displaying the preview.</target>
				</segment>
			</unit>
			<unit id="326" translate="yes">
				<segment state="initial">
					<source>Note that you should still implement preview rotation handling for devices that don't support auto-rotation preferences.</source>
					<target>Note that you should still implement preview rotation handling for devices that don't support auto-rotation preferences.</target>
				</segment>
			</unit>
			<unit id="327" translate="yes">
				<segment state="initial">
					<source>SetAutoRotationPreferences</source>
					<target>SetAutoRotationPreferences</target>
				</segment>
			</unit>
			<unit id="328" translate="yes">
				<segment state="initial">
					<source>Handle UI element orientation</source>
					<target>Handle UI element orientation</target>
				</segment>
			</unit>
			<unit id="329" translate="yes">
				<segment state="initial">
					<source>Users typically expect for the UI elements in a camera app, such as the buttons for initiating photo or video capture, to rotate along with the video preview.</source>
					<target>Users typically expect for the UI elements in a camera app, such as the buttons for initiating photo or video capture, to rotate along with the video preview.</target>
				</segment>
			</unit>
			<unit id="330" translate="yes">
				<segment state="initial">
					<source>The following method illustrates the use of the previously defined orientation helper methods to properly orient the buttons in the camera UI.</source>
					<target>The following method illustrates the use of the previously defined orientation helper methods to properly orient the buttons in the camera UI.</target>
				</segment>
			</unit>
			<unit id="331" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn264268)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/br206407)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>You should call this method from the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">DisplayInformation.OrientationChanged</pc></pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">SimpleOrientationSensor.OrientationChanged</pc></pc> event handlers and when your app first launches.</source>
					<target>You should call this method from the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">DisplayInformation.OrientationChanged</pc></pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">SimpleOrientationSensor.OrientationChanged</pc></pc> event handlers and when your app first launches.</target>
				</segment>
			</unit>
			<unit id="332" translate="yes">
				<segment state="initial">
					<source>Your implementation my vary depending on your app's UI.</source>
					<target>Your implementation my vary depending on your app's UI.</target>
				</segment>
			</unit>
			<unit id="333" translate="yes">
				<segment state="initial">
					<source>UpdateButtonOrientation</source>
					<target>UpdateButtonOrientation</target>
				</segment>
			</unit>
			<unit id="334" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br226142)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>When your app is shutting down or if you navigate to a page that is unrelated to media capture, set the auto-rotation preference to <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">None</pc></pc> to allow the UI to rotate normally.</source>
					<target>When your app is shutting down or if you navigate to a page that is unrelated to media capture, set the auto-rotation preference to <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">None</pc></pc> to allow the UI to rotate normally.</target>
				</segment>
			</unit>
			<unit id="335" translate="yes">
				<segment state="initial">
					<source>RevertAutoRotationPreferences</source>
					<target>RevertAutoRotationPreferences</target>
				</segment>
			</unit>
			<unit id="336" translate="yes">
				<segment state="initial">
					<source>Support simultaneous photo and video capture</source>
					<target>Support simultaneous photo and video capture</target>
				</segment>
			</unit>
			<unit id="337" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br226738)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.Media.Capture</pc></pc> API allows you to capture photos and videos simultaneously on devices that support it.</source>
					<target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.Media.Capture</pc></pc> API allows you to capture photos and videos simultaneously on devices that support it.</target>
				</segment>
			</unit>
			<unit id="338" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn278843)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>For brevity, this example uses the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ConcurrentRecordAndPhotoSupported</pc></pc> property to determine if simultaneous video and photo capture is supported, but a more robust and recommended way to do this is to use camera profiles.</source>
					<target>For brevity, this example uses the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ConcurrentRecordAndPhotoSupported</pc></pc> property to determine if simultaneous video and photo capture is supported, but a more robust and recommended way to do this is to use camera profiles.</target>
				</segment>
			</unit>
			<unit id="339" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](camera-profiles.md)</data>
				</originalData>
				<segment state="initial">
					<source>For more information, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Camera profiles</pc>.</source>
					<target>For more information, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Camera profiles</pc>.</target>
				</segment>
			</unit>
			<unit id="340" translate="yes">
				<segment state="initial">
					<source>The following helper method updates the app's controls to match the current capture state of the app.</source>
					<target>The following helper method updates the app's controls to match the current capture state of the app.</target>
				</segment>
			</unit>
			<unit id="341" translate="yes">
				<segment state="initial">
					<source>Call this method whenever the capture state of your app changes, such as when video capture is started or stopped.</source>
					<target>Call this method whenever the capture state of your app changes, such as when video capture is started or stopped.</target>
				</segment>
			</unit>
			<unit id="342" translate="yes">
				<segment state="initial">
					<source>UpdateCaptureControls</source>
					<target>UpdateCaptureControls</target>
				</segment>
			</unit>
			<unit id="343" translate="yes">
				<segment state="initial">
					<source>Support mobile-specific UI features</source>
					<target>Support mobile-specific UI features</target>
				</segment>
			</unit>
			<unit id="344" translate="yes">
				<segment state="initial">
					<source>All of the code shown in this article will work in a Universal Windows app.</source>
					<target>All of the code shown in this article will work in a Universal Windows app.</target>
				</segment>
			</unit>
			<unit id="345" translate="yes">
				<segment state="initial">
					<source>With a few additional lines of code, you can take advantage of special UI features that are only present on mobile devices.</source>
					<target>With a few additional lines of code, you can take advantage of special UI features that are only present on mobile devices.</target>
				</segment>
			</unit>
			<unit id="346" translate="yes">
				<segment state="initial">
					<source>To use these features, you must add a reference to the Microsoft Mobile Extension SDK for Universal App Platform to your project.</source>
					<target>To use these features, you must add a reference to the Microsoft Mobile Extension SDK for Universal App Platform to your project.</target>
				</segment>
			</unit>
			<unit id="347" translate="yes">
				<segment state="initial">
					<source>To add a reference to the mobile extension SDK for hardware camera button support</source>
					<target>To add a reference to the mobile extension SDK for hardware camera button support</target>
				</segment>
			</unit>
			<unit id="348" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source>In <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Solution Explorer</pc>, right-click <pc dataRefEnd="id4" dataRefStart="id3" id="p2">References</pc> and select <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Add Reference...</pc></source>
					<target>In <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Solution Explorer</pc>, right-click <pc dataRefEnd="id4" dataRefStart="id3" id="p2">References</pc> and select <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Add Reference...</pc></target>
				</segment>
			</unit>
			<unit id="349" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Expand the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Windows Universal</pc> node and select <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Extensions</pc>.</source>
					<target>Expand the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Windows Universal</pc> node and select <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Extensions</pc>.</target>
				</segment>
			</unit>
			<unit id="350" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>Click the checkbox next to <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Microsoft Mobile Extension SDK for Universal App Platform</pc>.</source>
					<target>Click the checkbox next to <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Microsoft Mobile Extension SDK for Universal App Platform</pc>.</target>
				</segment>
			</unit>
			<unit id="351" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn633864)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Mobile devices have a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">StatusBar</pc></pc> control that provides the user with status information about the device.</source>
					<target>Mobile devices have a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">StatusBar</pc></pc> control that provides the user with status information about the device.</target>
				</segment>
			</unit>
			<unit id="352" translate="yes">
				<segment state="initial">
					<source>This control takes up space on the screen that can interfere with the media capture UI.</source>
					<target>This control takes up space on the screen that can interfere with the media capture UI.</target>
				</segment>
			</unit>
			<unit id="353" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn610339)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/dn949016)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>You can hide the status bar by calling <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">HideAsync</pc></pc>, but you must make this call from within a conditional block where you use the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">ApiInformation.IsTypePresent</pc></pc> method to determine if the API is available.</source>
					<target>You can hide the status bar by calling <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">HideAsync</pc></pc>, but you must make this call from within a conditional block where you use the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">ApiInformation.IsTypePresent</pc></pc> method to determine if the API is available.</target>
				</segment>
			</unit>
			<unit id="354" translate="yes">
				<segment state="initial">
					<source>This method will only return true on mobile devices that support the status bar.</source>
					<target>This method will only return true on mobile devices that support the status bar.</target>
				</segment>
			</unit>
			<unit id="355" translate="yes">
				<segment state="initial">
					<source>You should hide the status bar when your app launches or when you begin previewing from the camera.</source>
					<target>You should hide the status bar when your app launches or when you begin previewing from the camera.</target>
				</segment>
			</unit>
			<unit id="356" translate="yes">
				<segment state="initial">
					<source>HideStatusBar</source>
					<target>HideStatusBar</target>
				</segment>
			</unit>
			<unit id="357" translate="yes">
				<segment state="initial">
					<source>When your app is shutting down or when the user navigates away from the media capture page of your app, you make the control visible again.</source>
					<target>When your app is shutting down or when the user navigates away from the media capture page of your app, you make the control visible again.</target>
				</segment>
			</unit>
			<unit id="358" translate="yes">
				<segment state="initial">
					<source>ShowStatusBar</source>
					<target>ShowStatusBar</target>
				</segment>
			</unit>
			<unit id="359" translate="yes">
				<segment state="initial">
					<source>Some mobile devices have a dedicated hardware camera button that some users prefer over an on-screen control.</source>
					<target>Some mobile devices have a dedicated hardware camera button that some users prefer over an on-screen control.</target>
				</segment>
			</unit>
			<unit id="360" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn653805)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>To be notified when the hardware camera button is pressed, register a handler for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">HardwareButtons.CameraPressed</pc></pc> event.</source>
					<target>To be notified when the hardware camera button is pressed, register a handler for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">HardwareButtons.CameraPressed</pc></pc> event.</target>
				</segment>
			</unit>
			<unit id="361" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>Because this API is available on mobile devices only, you must again use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">IsTypePresent</pc> to make sure the API is supported on the current device before attempting to access it.</source>
					<target>Because this API is available on mobile devices only, you must again use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">IsTypePresent</pc> to make sure the API is supported on the current device before attempting to access it.</target>
				</segment>
			</unit>
			<unit id="362" translate="yes">
				<segment state="initial">
					<source>PhoneUsing</source>
					<target>PhoneUsing</target>
				</segment>
			</unit>
			<unit id="363" translate="yes">
				<segment state="initial">
					<source>RegisterCameraButtonHandler</source>
					<target>RegisterCameraButtonHandler</target>
				</segment>
			</unit>
			<unit id="364" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>In the handler for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">CameraPressed</pc> event, you can initiate a photo capture.</source>
					<target>In the handler for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">CameraPressed</pc> event, you can initiate a photo capture.</target>
				</segment>
			</unit>
			<unit id="365" translate="yes">
				<segment state="initial">
					<source>CameraPressed</source>
					<target>CameraPressed</target>
				</segment>
			</unit>
			<unit id="366" translate="yes">
				<segment state="initial">
					<source>When your app is shutting down or the user moves away from the media capture page of your app, unregister the hardware button handler.</source>
					<target>When your app is shutting down or the user moves away from the media capture page of your app, unregister the hardware button handler.</target>
				</segment>
			</unit>
			<unit id="367" translate="yes">
				<segment state="initial">
					<source>UnregisterCameraButtonHandler</source>
					<target>UnregisterCameraButtonHandler</target>
				</segment>
			</unit>
			<unit id="368" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc> This article is for Windows 10 developers writing Universal Windows Platform (UWP) apps.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc> This article is for Windows 10 developers writing Universal Windows Platform (UWP) apps.</target>
				</segment>
			</unit>
			<unit id="369" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](http://go.microsoft.com/fwlink/p/?linkid=619132)</data>
				</originalData>
				<segment state="initial">
					<source>If you're developing for Windows 8.x or Windows Phone 8.x, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archived documentation</pc>.</source>
					<target>If you're developing for Windows 8.x or Windows Phone 8.x, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archived documentation</pc>.</target>
				</segment>
			</unit>
			<unit id="370" translate="yes">
				<segment state="initial">
					<source>Related topics</source>
					<target>Related topics</target>
				</segment>
			</unit>
			<unit id="371" translate="yes">
				<segment state="initial">
					<source>Camera profiles</source>
					<target>Camera profiles</target>
				</segment>
			</unit>
			<unit id="372" translate="yes">
				<segment state="initial">
					<source>High Dynamic Range (HDR) photo capture</source>
					<target>High Dynamic Range (HDR) photo capture</target>
				</segment>
			</unit>
			<unit id="373" translate="yes">
				<segment state="initial">
					<source>Capture device controls for photo and video capture</source>
					<target>Capture device controls for photo and video capture</target>
				</segment>
			</unit>
			<unit id="374" translate="yes">
				<segment state="initial">
					<source>Capture device controls for video capture</source>
					<target>Capture device controls for video capture</target>
				</segment>
			</unit>
			<unit id="375" translate="yes">
				<segment state="initial">
					<source>Effects for video capture</source>
					<target>Effects for video capture</target>
				</segment>
			</unit>
			<unit id="376" translate="yes">
				<segment state="initial">
					<source>Scene analysis for media capture</source>
					<target>Scene analysis for media capture</target>
				</segment>
			</unit>
			<unit id="377" translate="yes">
				<segment state="initial">
					<source>Variable photo sequence</source>
					<target>Variable photo sequence</target>
				</segment>
			</unit>
			<unit id="378" translate="yes">
				<segment state="initial">
					<source>Get a preview frame</source>
					<target>Get a preview frame</target>
				</segment>
			</unit>
			<unit id="379" translate="yes">
				<segment state="initial">
					<source>CameraStarterKit sample</source>
					<target>CameraStarterKit sample</target>
				</segment>
			</unit>
		</group>
	</file>
</xliff>