<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="de-de" version="2.0" xml:space="preserve" xmlns="urn:oasis:names:tc:xliff:document:2.0">
	<file id="1">
		<mda:metadata>
			<mda:metaGroup>
				<mda:meta type="tool-id">mdxliff</mda:meta>
				<mda:meta type="tool-name">mdxliff</mda:meta>
				<mda:meta type="tool-version">1.0-2eb3c86</mda:meta>
				<mda:meta type="tool-company">Microsoft</mda:meta>
			</mda:metaGroup>
		<mda:metaGroup><mda:meta type="olfilehash">bdcd140f309a25a88794101f95b0faf76c842af6</mda:meta><mda:meta type="olfilepath">wdg-cpub-test\ndolci2\controls-and-patterns\search.md</mda:meta><mda:meta type="oltranslationpriority"></mda:meta><mda:meta type="oltranslationtype">Human Translation</mda:meta><mda:meta type="olskeletonhash">da578a7b8212511822ca9673342ca3670ac21f57</mda:meta><mda:meta type="olxliffhash">fe26a6eb8d812661d71a8091769654e9e212b83a</mda:meta></mda:metaGroup></mda:metadata>
		<group id="content">
			<unit id="101" translate="yes">
				<segment state="initial">
					<source>Search is one of the top ways users can find content in your app.</source>
					<target>Search is one of the top ways users can find content in your app.</target>
				</segment>
			</unit>
			<unit id="102" translate="yes">
				<segment state="initial">
					<source>The guidance in this article covers elements of the search experience, search scopes, implementation, and examples of search in context.</source>
					<target>The guidance in this article covers elements of the search experience, search scopes, implementation, and examples of search in context.</target>
				</segment>
			</unit>
			<unit id="103" translate="yes">
				<segment state="initial">
					<source>Search and find-in-page</source>
					<target>Search and find-in-page</target>
				</segment>
			</unit>
			<unit id="104" translate="yes">
				<segment state="initial">
					<source>Search and find-in-page</source>
					<target>Search and find-in-page</target>
				</segment>
			</unit>
			<unit id="105" translate="yes">
				<segment state="initial">
					<source>\[ Updated for UWP apps on Windows 10.</source>
					<target>\[ Updated for UWP apps on Windows 10.</target>
				</segment>
			</unit>
			<unit id="106" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](http://go.microsoft.com/fwlink/p/?linkid=619132)</data>
				</originalData>
				<segment state="initial">
					<source>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</source>
					<target>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</target>
				</segment>
			</unit>
			<unit id="107" translate="yes">
				<segment state="initial">
					<source>Important APIs</source>
					<target>Important APIs</target>
				</segment>
			</unit>
			<unit id="108" translate="yes">
				<segment state="initial">
					<source>AutoSuggestBox class (XAML)</source>
					<target>AutoSuggestBox class (XAML)</target>
				</segment>
			</unit>
			<unit id="109" translate="yes">
				<segment state="initial">
					<source>Search is one of the top ways users can find content in your app.</source>
					<target>Search is one of the top ways users can find content in your app.</target>
				</segment>
			</unit>
			<unit id="110" translate="yes">
				<segment state="initial">
					<source>The guidance in this article covers elements of the search experience, search scopes, implementation, and examples of search in context.</source>
					<target>The guidance in this article covers elements of the search experience, search scopes, implementation, and examples of search in context.</target>
				</segment>
			</unit>
			<unit id="111" translate="yes">
				<segment state="initial">
					<source>Elements of the search experience</source>
					<target>Elements of the search experience</target>
				</segment>
			</unit>
			<unit id="112" translate="yes">
				<segment state="initial">
					<source>Input.</source>
					<target>Input.</target>
				</segment>
			</unit>
			<unit id="113" translate="yes">
				<segment state="initial">
					<source>Text is the most common mode of search input and is the focus of this guidance.</source>
					<target>Text is the most common mode of search input and is the focus of this guidance.</target>
				</segment>
			</unit>
			<unit id="114" translate="yes">
				<segment state="initial">
					<source>Other common input modes include voice and camera, but these typically require the ability to interface with device hardware and may require additional controls or custom UI within the app.</source>
					<target>Other common input modes include voice and camera, but these typically require the ability to interface with device hardware and may require additional controls or custom UI within the app.</target>
				</segment>
			</unit>
			<unit id="115" translate="yes">
				<segment state="initial">
					<source>Zero input.</source>
					<target>Zero input.</target>
				</segment>
			</unit>
			<unit id="116" translate="yes">
				<segment state="initial">
					<source>Once the user has activated the input field, but before the user has entered text, you can display what's called a "zero input canvas."</source>
					<target>Once the user has activated the input field, but before the user has entered text, you can display what's called a "zero input canvas."</target>
				</segment>
			</unit>
			<unit id="117" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](auto-suggest-box.md)</data>
				</originalData>
				<segment state="initial">
					<source>The zero input canvas will commonly appear in the app canvas, so that <pc dataRefEnd="id2" dataRefStart="id1" id="p1">auto-suggest</pc> replaces this content when the user begins to input their query.</source>
					<target>The zero input canvas will commonly appear in the app canvas, so that <pc dataRefEnd="id2" dataRefStart="id1" id="p1">auto-suggest</pc> replaces this content when the user begins to input their query.</target>
				</segment>
			</unit>
			<unit id="118" translate="yes">
				<segment state="initial">
					<source>Recent search history, trending searches, contextual search suggestions, hints and tips are all good candidates for the zero input state.</source>
					<target>Recent search history, trending searches, contextual search suggestions, hints and tips are all good candidates for the zero input state.</target>
				</segment>
			</unit>
			<unit id="119" translate="yes">
				<segment state="initial">
					<source>example of cortana on a zero input canvas</source>
					<target>example of cortana on a zero input canvas</target>
				</segment>
			</unit>
			<unit id="120" translate="yes">
				<segment state="initial">
					<source>Query formulation/auto-suggest.</source>
					<target>Query formulation/auto-suggest.</target>
				</segment>
			</unit>
			<unit id="121" translate="yes">
				<segment state="initial">
					<source>Query formulation replaces zero input content as soon as the user begins to enter input.</source>
					<target>Query formulation replaces zero input content as soon as the user begins to enter input.</target>
				</segment>
			</unit>
			<unit id="122" translate="yes">
				<segment state="initial">
					<source>As the user enters a query string, they are provided with a continuously updated set of query suggestions or disambiguation options to help them expedite the input process and formulate an effective query.</source>
					<target>As the user enters a query string, they are provided with a continuously updated set of query suggestions or disambiguation options to help them expedite the input process and formulate an effective query.</target>
				</segment>
			</unit>
			<unit id="123" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](auto-suggest-box.md)</data>
				</originalData>
				<segment state="initial">
					<source>This behavior of query suggestions is built into the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">auto-suggest control</pc>, and is also a way to show the icon inside the search (like a microphone or a commit icon).</source>
					<target>This behavior of query suggestions is built into the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">auto-suggest control</pc>, and is also a way to show the icon inside the search (like a microphone or a commit icon).</target>
				</segment>
			</unit>
			<unit id="124" translate="yes">
				<segment state="initial">
					<source>Any behavior outside of this falls to the app.</source>
					<target>Any behavior outside of this falls to the app.</target>
				</segment>
			</unit>
			<unit id="125" translate="yes">
				<segment state="initial">
					<source>example of query/formulation auto-suggest</source>
					<target>example of query/formulation auto-suggest</target>
				</segment>
			</unit>
			<unit id="126" translate="yes">
				<segment state="initial">
					<source>Results set.</source>
					<target>Results set.</target>
				</segment>
			</unit>
			<unit id="127" translate="yes">
				<segment state="initial">
					<source>Search results commonly appear directly under the search input field.</source>
					<target>Search results commonly appear directly under the search input field.</target>
				</segment>
			</unit>
			<unit id="128" translate="yes">
				<segment state="initial">
					<source>While this isn't a requirement, the juxtaposition of input and results maintains context and provides the user with immediate access to edit the previous query or enter a new query.</source>
					<target>While this isn't a requirement, the juxtaposition of input and results maintains context and provides the user with immediate access to edit the previous query or enter a new query.</target>
				</segment>
			</unit>
			<unit id="129" translate="yes">
				<segment state="initial">
					<source>This connection can be further communicated by replacing the hint text with the query that created the results set.</source>
					<target>This connection can be further communicated by replacing the hint text with the query that created the results set.</target>
				</segment>
			</unit>
			<unit id="130" translate="yes">
				<segment state="initial">
					<source>One method to enable efficient access to both edit the previous query and enter a new query is to highlight the previous query when the field is reactivated.</source>
					<target>One method to enable efficient access to both edit the previous query and enter a new query is to highlight the previous query when the field is reactivated.</target>
				</segment>
			</unit>
			<unit id="131" translate="yes">
				<segment state="initial">
					<source>This way, any keystroke will replace the previous string, but the string is maintained so that the user can position a cursor to edit or append the previous string.</source>
					<target>This way, any keystroke will replace the previous string, but the string is maintained so that the user can position a cursor to edit or append the previous string.</target>
				</segment>
			</unit>
			<unit id="132" translate="yes">
				<segment state="initial">
					<source>The results set can appear in any form that best communicates the content.</source>
					<target>The results set can appear in any form that best communicates the content.</target>
				</segment>
			</unit>
			<unit id="133" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](lists.md)</data>
				</originalData>
				<segment state="initial">
					<source>A <pc dataRefEnd="id2" dataRefStart="id1" id="p1">list view</pc> provides a good deal of flexibility and is well-suited to most searches.</source>
					<target>A <pc dataRefEnd="id2" dataRefStart="id1" id="p1">list view</pc> provides a good deal of flexibility and is well-suited to most searches.</target>
				</segment>
			</unit>
			<unit id="134" translate="yes">
				<segment state="initial">
					<source>A grid view works well for images or other media, and a map can be used to communicate spatial distribution.</source>
					<target>A grid view works well for images or other media, and a map can be used to communicate spatial distribution.</target>
				</segment>
			</unit>
			<unit id="135" translate="yes">
				<segment state="initial">
					<source>Search scopes</source>
					<target>Search scopes</target>
				</segment>
			</unit>
			<unit id="136" translate="yes">
				<segment state="initial">
					<source>Search is a common feature, and users will encounter search UI in the shell and within many apps.</source>
					<target>Search is a common feature, and users will encounter search UI in the shell and within many apps.</target>
				</segment>
			</unit>
			<unit id="137" translate="yes">
				<segment state="initial">
					<source>Although search entry points tend to be similarly visualized, they can provide access to results that range from broad (web or device searches) to narrow (a user's contact list).</source>
					<target>Although search entry points tend to be similarly visualized, they can provide access to results that range from broad (web or device searches) to narrow (a user's contact list).</target>
				</segment>
			</unit>
			<unit id="138" translate="yes">
				<segment state="initial">
					<source>The search entry point should be juxtaposed against the content being searched.</source>
					<target>The search entry point should be juxtaposed against the content being searched.</target>
				</segment>
			</unit>
			<unit id="139" translate="yes">
				<segment state="initial">
					<source>Some common search scopes include:</source>
					<target>Some common search scopes include:</target>
				</segment>
			</unit>
			<unit id="140" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Global</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">contextual/refine.</pc></source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Global</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">contextual/refine.</pc></target>
				</segment>
			</unit>
			<unit id="141" translate="yes">
				<segment state="initial">
					<source>Search across multiple sources of cloud and local content.</source>
					<target>Search across multiple sources of cloud and local content.</target>
				</segment>
			</unit>
			<unit id="142" translate="yes">
				<segment state="initial">
					<source>Varied results include URLs, documents, media, actions, apps, and more.</source>
					<target>Varied results include URLs, documents, media, actions, apps, and more.</target>
				</segment>
			</unit>
			<unit id="143" translate="yes">
				<segment state="initial">
					<source>Web.</source>
					<target>Web.</target>
				</segment>
			</unit>
			<unit id="144" translate="yes">
				<segment state="initial">
					<source>Search a web index.</source>
					<target>Search a web index.</target>
				</segment>
			</unit>
			<unit id="145" translate="yes">
				<segment state="initial">
					<source>Results include pages, entities, and answers.</source>
					<target>Results include pages, entities, and answers.</target>
				</segment>
			</unit>
			<unit id="146" translate="yes">
				<segment state="initial">
					<source>My stuff.</source>
					<target>My stuff.</target>
				</segment>
			</unit>
			<unit id="147" translate="yes">
				<segment state="initial">
					<source>Search across device(s), cloud, social graphs, and more.</source>
					<target>Search across device(s), cloud, social graphs, and more.</target>
				</segment>
			</unit>
			<unit id="148" translate="yes">
				<segment state="initial">
					<source>Results are varied, but are constrained by the connection to user account(s).</source>
					<target>Results are varied, but are constrained by the connection to user account(s).</target>
				</segment>
			</unit>
			<unit id="149" translate="yes">
				<segment state="initial">
					<source>Use hint text to communicate search scope.</source>
					<target>Use hint text to communicate search scope.</target>
				</segment>
			</unit>
			<unit id="150" translate="yes">
				<segment state="initial">
					<source>Examples include:</source>
					<target>Examples include:</target>
				</segment>
			</unit>
			<unit id="151" translate="yes">
				<segment state="initial">
					<source>"Search Windows and the Web"</source>
					<target>"Search Windows and the Web"</target>
				</segment>
			</unit>
			<unit id="152" translate="yes">
				<segment state="initial">
					<source>"Search contacts list"</source>
					<target>"Search contacts list"</target>
				</segment>
			</unit>
			<unit id="153" translate="yes">
				<segment state="initial">
					<source>"Search mailbox"</source>
					<target>"Search mailbox"</target>
				</segment>
			</unit>
			<unit id="154" translate="yes">
				<segment state="initial">
					<source>"Search settings"</source>
					<target>"Search settings"</target>
				</segment>
			</unit>
			<unit id="155" translate="yes">
				<segment state="initial">
					<source>"Search for a place"</source>
					<target>"Search for a place"</target>
				</segment>
			</unit>
			<unit id="156" translate="yes">
				<segment state="initial">
					<source>example of search hint text</source>
					<target>example of search hint text</target>
				</segment>
			</unit>
			<unit id="157" translate="yes">
				<segment state="initial">
					<source>By effectively communicating the scope of a search input point, you can help to ensure that the user expectation will be met by the capabilities of the search you are performing and reduce the possibility of frustration.</source>
					<target>By effectively communicating the scope of a search input point, you can help to ensure that the user expectation will be met by the capabilities of the search you are performing and reduce the possibility of frustration.</target>
				</segment>
			</unit>
			<unit id="158" translate="yes">
				<segment state="initial">
					<source>Implementation</source>
					<target>Implementation</target>
				</segment>
			</unit>
			<unit id="159" translate="yes">
				<segment state="initial">
					<source>For most apps, it's best to have a text input field as the search entry point, which provides a prominent visual footprint.</source>
					<target>For most apps, it's best to have a text input field as the search entry point, which provides a prominent visual footprint.</target>
				</segment>
			</unit>
			<unit id="160" translate="yes">
				<segment state="initial">
					<source>In addition, hint text helps with discoverability and communicating the search scope.</source>
					<target>In addition, hint text helps with discoverability and communicating the search scope.</target>
				</segment>
			</unit>
			<unit id="161" translate="yes">
				<segment state="initial">
					<source>When search is a more secondary action, or when space is constrained, the search icon can serve as an entry point without the accompanying input field.</source>
					<target>When search is a more secondary action, or when space is constrained, the search icon can serve as an entry point without the accompanying input field.</target>
				</segment>
			</unit>
			<unit id="162" translate="yes">
				<segment state="initial">
					<source>When visualized as an icon, be sure that there's room for a modal search box, as seen in the below examples.</source>
					<target>When visualized as an icon, be sure that there's room for a modal search box, as seen in the below examples.</target>
				</segment>
			</unit>
			<unit id="163" translate="yes">
				<segment state="initial">
					<source>Before clicking search icon:</source>
					<target>Before clicking search icon:</target>
				</segment>
			</unit>
			<unit id="164" translate="yes">
				<segment state="initial">
					<source>example of a search icon and collapsed search box</source>
					<target>example of a search icon and collapsed search box</target>
				</segment>
			</unit>
			<unit id="165" translate="yes">
				<segment state="initial">
					<source>After clicking search icon:</source>
					<target>After clicking search icon:</target>
				</segment>
			</unit>
			<unit id="166" translate="yes">
				<segment state="initial">
					<source>example of a search icon and expanded search box</source>
					<target>example of a search icon and expanded search box</target>
				</segment>
			</unit>
			<unit id="167" translate="yes">
				<segment state="initial">
					<source>Search always uses a right-pointing magnifying glass glyph for the entry point.</source>
					<target>Search always uses a right-pointing magnifying glass glyph for the entry point.</target>
				</segment>
			</unit>
			<unit id="168" translate="yes">
				<segment state="initial">
					<source>The glyph to use is Segoe UI Symbol, hex character code 0xE0094, and usually at 15 epx font size.</source>
					<target>The glyph to use is Segoe UI Symbol, hex character code 0xE0094, and usually at 15 epx font size.</target>
				</segment>
			</unit>
			<unit id="169" translate="yes">
				<segment state="initial">
					<source>The search entry point can be placed in a number of different areas, and its placement communicates both search scope and context.</source>
					<target>The search entry point can be placed in a number of different areas, and its placement communicates both search scope and context.</target>
				</segment>
			</unit>
			<unit id="170" translate="yes">
				<segment state="initial">
					<source>Searches that gather results from across an experience or external to the app are typically located within top-level app chrome, such as global command bars or navigation.</source>
					<target>Searches that gather results from across an experience or external to the app are typically located within top-level app chrome, such as global command bars or navigation.</target>
				</segment>
			</unit>
			<unit id="171" translate="yes">
				<segment state="initial">
					<source>As the search scope becomes more narrow or contextual, the placement will typically be more directly associated with the content to be searched, such as on a canvas, as a list header, or within contextual command bars.</source>
					<target>As the search scope becomes more narrow or contextual, the placement will typically be more directly associated with the content to be searched, such as on a canvas, as a list header, or within contextual command bars.</target>
				</segment>
			</unit>
			<unit id="172" translate="yes">
				<segment state="initial">
					<source>In all cases, the connection between search input and results or filtered content should be visually clear.</source>
					<target>In all cases, the connection between search input and results or filtered content should be visually clear.</target>
				</segment>
			</unit>
			<unit id="173" translate="yes">
				<segment state="initial">
					<source>In the case of scrollable lists, it's helpful to always have search input be visible.</source>
					<target>In the case of scrollable lists, it's helpful to always have search input be visible.</target>
				</segment>
			</unit>
			<unit id="174" translate="yes">
				<segment state="initial">
					<source>We recommend making the search input sticky and have content scroll behind it.</source>
					<target>We recommend making the search input sticky and have content scroll behind it.</target>
				</segment>
			</unit>
			<unit id="175" translate="yes">
				<segment state="initial">
					<source>Zero input and query formulation functionality is optional for contextual/refine searches in which the list will be filtered in real-time by user input.</source>
					<target>Zero input and query formulation functionality is optional for contextual/refine searches in which the list will be filtered in real-time by user input.</target>
				</segment>
			</unit>
			<unit id="176" translate="yes">
				<originalData>
					<data id="id1">&amp;lt;</data>
					<data id="id2">&amp;gt;</data>
					<data id="id3">&amp;lt;</data>
					<data id="id4">&amp;gt;</data>
					<data id="id5">&amp;lt;</data>
					<data id="id6">&amp;gt;</data>
				</originalData>
				<segment state="initial">
					<source>Exceptions include cases where query formatting suggestions may be available, such as inbox filtering options (to:<ph dataRef="id1" id="ph1" />input string<ph dataRef="id2" id="ph2" />, from: <ph dataRef="id3" id="ph3" />input string<ph dataRef="id4" id="ph4" />, subject: <ph dataRef="id5" id="ph5" />input string<ph dataRef="id6" id="ph6" />, and so on).</source>
					<target>Exceptions include cases where query formatting suggestions may be available, such as inbox filtering options (to:<ph dataRef="id1" id="ph1" />input string<ph dataRef="id2" id="ph2" />, from: <ph dataRef="id3" id="ph3" />input string<ph dataRef="id4" id="ph4" />, subject: <ph dataRef="id5" id="ph5" />input string<ph dataRef="id6" id="ph6" />, and so on).</target>
				</segment>
			</unit>
			<unit id="177" translate="yes">
				<segment state="initial">
					<source>Example</source>
					<target>Example</target>
				</segment>
			</unit>
			<unit id="178" translate="yes">
				<segment state="initial">
					<source>The examples in this section show search placed in context.</source>
					<target>The examples in this section show search placed in context.</target>
				</segment>
			</unit>
			<unit id="179" translate="yes">
				<segment state="initial">
					<source>Search as an action in the Windows tool bar:</source>
					<target>Search as an action in the Windows tool bar:</target>
				</segment>
			</unit>
			<unit id="180" translate="yes">
				<segment state="initial">
					<source>an example of search as an action in the windows tool bar</source>
					<target>an example of search as an action in the windows tool bar</target>
				</segment>
			</unit>
			<unit id="181" translate="yes">
				<segment state="initial">
					<source>Search as an input on the app canvas:</source>
					<target>Search as an input on the app canvas:</target>
				</segment>
			</unit>
			<unit id="182" translate="yes">
				<segment state="initial">
					<source>example of search on an app canvas</source>
					<target>example of search on an app canvas</target>
				</segment>
			</unit>
			<unit id="183" translate="yes">
				<segment state="initial">
					<source>Search in a navigation pane:</source>
					<target>Search in a navigation pane:</target>
				</segment>
			</unit>
			<unit id="184" translate="yes">
				<segment state="initial">
					<source>example of search in a navigation menu</source>
					<target>example of search in a navigation menu</target>
				</segment>
			</unit>
			<unit id="185" translate="yes">
				<segment state="initial">
					<source>Inline search is best reserved for cases where search is infrequently accessed or is highly contextual:</source>
					<target>Inline search is best reserved for cases where search is infrequently accessed or is highly contextual:</target>
				</segment>
			</unit>
			<unit id="186" translate="yes">
				<segment state="initial">
					<source>example of inline search</source>
					<target>example of inline search</target>
				</segment>
			</unit>
			<unit id="187" translate="yes">
				<segment state="initial">
					<source>Guidelines for find-in-page</source>
					<target>Guidelines for find-in-page</target>
				</segment>
			</unit>
			<unit id="188" translate="yes">
				<segment state="initial">
					<source>Find-in-page enables users to find text matches in the current body of text.</source>
					<target>Find-in-page enables users to find text matches in the current body of text.</target>
				</segment>
			</unit>
			<unit id="189" translate="yes">
				<segment state="initial">
					<source>Document viewers, readers, and browsers are the most typical apps that provide find-in-page.</source>
					<target>Document viewers, readers, and browsers are the most typical apps that provide find-in-page.</target>
				</segment>
			</unit>
			<unit id="190" translate="yes">
				<segment state="initial">
					<source>Recommendations</source>
					<target>Recommendations</target>
				</segment>
			</unit>
			<unit id="191" translate="yes">
				<segment state="initial">
					<source>Place a command bar in your app with find-in-page functionality to let the user search for on-page text.</source>
					<target>Place a command bar in your app with find-in-page functionality to let the user search for on-page text.</target>
				</segment>
			</unit>
			<unit id="192" translate="yes">
				<segment state="initial">
					<source>For placement details, see the Examples section.</source>
					<target>For placement details, see the Examples section.</target>
				</segment>
			</unit>
			<unit id="193" translate="yes">
				<segment state="initial">
					<source>Apps that provide find-in-page should have all necessary controls in a command bar.</source>
					<target>Apps that provide find-in-page should have all necessary controls in a command bar.</target>
				</segment>
			</unit>
			<unit id="194" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>If your app includes a lot of functionality beyond find-in-page, you can provide a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Find</pc> button in the top-level command bar as an entry point to another command bar that contains all of your find-in-page controls.</source>
					<target>If your app includes a lot of functionality beyond find-in-page, you can provide a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Find</pc> button in the top-level command bar as an entry point to another command bar that contains all of your find-in-page controls.</target>
				</segment>
			</unit>
			<unit id="195" translate="yes">
				<segment state="initial">
					<source>The find-in-page command bar should remain visible when the user is interacting with the touch keyboard.</source>
					<target>The find-in-page command bar should remain visible when the user is interacting with the touch keyboard.</target>
				</segment>
			</unit>
			<unit id="196" translate="yes">
				<segment state="initial">
					<source>The touch keyboard appears when a user taps the input box.</source>
					<target>The touch keyboard appears when a user taps the input box.</target>
				</segment>
			</unit>
			<unit id="197" translate="yes">
				<segment state="initial">
					<source>The find-in-page command bar should move up, so it's not obscured by the touch keyboard.</source>
					<target>The find-in-page command bar should move up, so it's not obscured by the touch keyboard.</target>
				</segment>
			</unit>
			<unit id="198" translate="yes">
				<segment state="initial">
					<source>Find-in-page should remain available while the user interacts with the view.</source>
					<target>Find-in-page should remain available while the user interacts with the view.</target>
				</segment>
			</unit>
			<unit id="199" translate="yes">
				<segment state="initial">
					<source>Users need to interact with the in-view text while using find-in-page.</source>
					<target>Users need to interact with the in-view text while using find-in-page.</target>
				</segment>
			</unit>
			<unit id="200" translate="yes">
				<segment state="initial">
					<source>For example, users may want to zoom in or out of a document or pan the view to read the text.</source>
					<target>For example, users may want to zoom in or out of a document or pan the view to read the text.</target>
				</segment>
			</unit>
			<unit id="201" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>Once the user starts using find-in-page, the command bar should remain available with a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Close</pc> button to exit find-in-page.</source>
					<target>Once the user starts using find-in-page, the command bar should remain available with a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Close</pc> button to exit find-in-page.</target>
				</segment>
			</unit>
			<unit id="202" translate="yes">
				<segment state="initial">
					<source>Enable the keyboard shortcut (CTRL+F).</source>
					<target>Enable the keyboard shortcut (CTRL+F).</target>
				</segment>
			</unit>
			<unit id="203" translate="yes">
				<segment state="initial">
					<source>Implement the keyboard shortcut CTRL+F to enable the user to invoke the find-in-page command bar quickly.</source>
					<target>Implement the keyboard shortcut CTRL+F to enable the user to invoke the find-in-page command bar quickly.</target>
				</segment>
			</unit>
			<unit id="204" translate="yes">
				<segment state="initial">
					<source>Include the basics of find-in-page functionality.</source>
					<target>Include the basics of find-in-page functionality.</target>
				</segment>
			</unit>
			<unit id="205" translate="yes">
				<segment state="initial">
					<source>These are the UI elements that you need in order to implement find-in-page:</source>
					<target>These are the UI elements that you need in order to implement find-in-page:</target>
				</segment>
			</unit>
			<unit id="206" translate="yes">
				<segment state="initial">
					<source>Input box</source>
					<target>Input box</target>
				</segment>
			</unit>
			<unit id="207" translate="yes">
				<segment state="initial">
					<source>Previous and Next buttons</source>
					<target>Previous and Next buttons</target>
				</segment>
			</unit>
			<unit id="208" translate="yes">
				<segment state="initial">
					<source>A match count</source>
					<target>A match count</target>
				</segment>
			</unit>
			<unit id="209" translate="yes">
				<segment state="initial">
					<source>Close (desktop-only)</source>
					<target>Close (desktop-only)</target>
				</segment>
			</unit>
			<unit id="210" translate="yes">
				<segment state="initial">
					<source>The view should highlight matches and scroll to show the next match on screen.</source>
					<target>The view should highlight matches and scroll to show the next match on screen.</target>
				</segment>
			</unit>
			<unit id="211" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Users can move quickly through the document by using the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Previous</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Next</pc> buttons and by using scroll bars or direct manipulation with touch.</source>
					<target>Users can move quickly through the document by using the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Previous</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Next</pc> buttons and by using scroll bars or direct manipulation with touch.</target>
				</segment>
			</unit>
			<unit id="212" translate="yes">
				<segment state="initial">
					<source>Find-and-replace functionality should work alongside the basic find-in-page functionality.</source>
					<target>Find-and-replace functionality should work alongside the basic find-in-page functionality.</target>
				</segment>
			</unit>
			<unit id="213" translate="yes">
				<segment state="initial">
					<source>For apps that have find-and-replace, ensure that find-in-page doesn't interfere with find-and-replace functionality.</source>
					<target>For apps that have find-and-replace, ensure that find-in-page doesn't interfere with find-and-replace functionality.</target>
				</segment>
			</unit>
			<unit id="214" translate="yes">
				<segment state="initial">
					<source>Include a match counter to indicate to the user the number of text matches there are on the page.</source>
					<target>Include a match counter to indicate to the user the number of text matches there are on the page.</target>
				</segment>
			</unit>
			<unit id="215" translate="yes">
				<segment state="initial">
					<source>Enable the keyboard shortcut (CTRL+F).</source>
					<target>Enable the keyboard shortcut (CTRL+F).</target>
				</segment>
			</unit>
			<unit id="216" translate="yes">
				<segment state="initial">
					<source>Examples</source>
					<target>Examples</target>
				</segment>
			</unit>
			<unit id="217" translate="yes">
				<segment state="initial">
					<source>Provide an easy way to access the find-in-page feature.</source>
					<target>Provide an easy way to access the find-in-page feature.</target>
				</segment>
			</unit>
			<unit id="218" translate="yes">
				<segment state="initial">
					<source>In this example on a mobile UI, "Find on page" appears after two "Add to..." commands in an expandable menu:</source>
					<target>In this example on a mobile UI, "Find on page" appears after two "Add to..." commands in an expandable menu:</target>
				</segment>
			</unit>
			<unit id="219" translate="yes">
				<segment state="initial">
					<source>find-on-page example 1</source>
					<target>find-on-page example 1</target>
				</segment>
			</unit>
			<unit id="220" translate="yes">
				<segment state="initial">
					<source>After selecting find-in-page, the user enters a search term.</source>
					<target>After selecting find-in-page, the user enters a search term.</target>
				</segment>
			</unit>
			<unit id="221" translate="yes">
				<segment state="initial">
					<source>Text suggestions can appear when a search term is being entered:</source>
					<target>Text suggestions can appear when a search term is being entered:</target>
				</segment>
			</unit>
			<unit id="222" translate="yes">
				<segment state="initial">
					<source>find-on-page example 2</source>
					<target>find-on-page example 2</target>
				</segment>
			</unit>
			<unit id="223" translate="yes">
				<segment state="initial">
					<source>If there isn't a text match in the search, a "No results" text string should appear in the results box:</source>
					<target>If there isn't a text match in the search, a "No results" text string should appear in the results box:</target>
				</segment>
			</unit>
			<unit id="224" translate="yes">
				<segment state="initial">
					<source>find-on-page example 3</source>
					<target>find-on-page example 3</target>
				</segment>
			</unit>
			<unit id="225" translate="yes">
				<segment state="initial">
					<source>If there is a text match in the search, the first term should be highlighted in a distinct color, with succeeding matches in a more subtle tone of that same color palette, as seen in this example:</source>
					<target>If there is a text match in the search, the first term should be highlighted in a distinct color, with succeeding matches in a more subtle tone of that same color palette, as seen in this example:</target>
				</segment>
			</unit>
			<unit id="226" translate="yes">
				<segment state="initial">
					<source>find-on-page example 4</source>
					<target>find-on-page example 4</target>
				</segment>
			</unit>
			<unit id="227" translate="yes">
				<segment state="initial">
					<source>Find-in-page has a match counter:</source>
					<target>Find-in-page has a match counter:</target>
				</segment>
			</unit>
			<unit id="228" translate="yes">
				<segment state="initial">
					<source>example of find-in-page search counter</source>
					<target>example of find-in-page search counter</target>
				</segment>
			</unit>
			<unit id="229" translate="yes">
				<segment state="initial">
					<source>Implementing find-in-page</source>
					<target>Implementing find-in-page</target>
				</segment>
			</unit>
			<unit id="230" translate="yes">
				<segment state="initial">
					<source>Document viewers, readers, and browsers are the likeliest app types to provide find-in-page, and enable the user to have a full screen viewing/reading experience.</source>
					<target>Document viewers, readers, and browsers are the likeliest app types to provide find-in-page, and enable the user to have a full screen viewing/reading experience.</target>
				</segment>
			</unit>
			<unit id="231" translate="yes">
				<segment state="initial">
					<source>Find-in-page functionality is secondary and should be located in a command bar.</source>
					<target>Find-in-page functionality is secondary and should be located in a command bar.</target>
				</segment>
			</unit>
			<unit id="232" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](app-bars.md)</data>
				</originalData>
				<segment state="initial">
					<source>For more info about adding commands to your command bar, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Command bar</pc>.</source>
					<target>For more info about adding commands to your command bar, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Command bar</pc>.</target>
				</segment>
			</unit>
			<unit id="233" translate="yes">
				<segment state="initial">
					<source>Related articles</source>
					<target>Related articles</target>
				</segment>
			</unit>
			<unit id="234" translate="yes">
				<segment state="initial">
					<source>Auto-suggest box</source>
					<target>Auto-suggest box</target>
				</segment>
			</unit>
		</group>
	</file>
</xliff>