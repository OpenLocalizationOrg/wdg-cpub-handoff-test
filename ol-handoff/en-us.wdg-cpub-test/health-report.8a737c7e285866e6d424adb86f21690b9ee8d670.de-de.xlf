<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="de-de" version="2.0" xml:space="preserve" xmlns="urn:oasis:names:tc:xliff:document:2.0">
	<file id="1">
		<mda:metadata>
			<mda:metaGroup>
				<mda:meta type="tool-id">mdxliff</mda:meta>
				<mda:meta type="tool-name">mdxliff</mda:meta>
				<mda:meta type="tool-version">1.0-2eb3c86</mda:meta>
				<mda:meta type="tool-company">Microsoft</mda:meta>
			</mda:metaGroup>
		<mda:metaGroup><mda:meta type="olfilehash">2d26db360d05e861614fbd939888fbd379e5187e</mda:meta><mda:meta type="olfilepath">wdg-cpub-test\ndolci2\publish\health-report.md</mda:meta><mda:meta type="oltranslationpriority"></mda:meta><mda:meta type="oltranslationtype">Human Translation</mda:meta><mda:meta type="olskeletonhash">9da485379ca6696fe29568bb1d1c1a7a50a13663</mda:meta><mda:meta type="olxliffhash">433dd6dbaa43188ac46c401e575f7f42001753b4</mda:meta></mda:metaGroup></mda:metadata>
		<group id="content">
			<unit id="101" translate="yes">
				<segment state="initial">
					<source>The Health report in the Windows Dev Center dashboard lets you get data related to the performance and quality of your app, including crashes and unresponsive events.</source>
					<target>The Health report in the Windows Dev Center dashboard lets you get data related to the performance and quality of your app, including crashes and unresponsive events.</target>
				</segment>
			</unit>
			<unit id="102" translate="yes">
				<segment state="initial">
					<source>Health report</source>
					<target>Health report</target>
				</segment>
			</unit>
			<unit id="103" translate="yes">
				<segment state="initial">
					<source>Health report</source>
					<target>Health report</target>
				</segment>
			</unit>
			<unit id="104" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Health</pc> report in the Windows Dev Center dashboard lets you get data related to the performance and quality of your app, including crashes and unresponsive events.</source>
					<target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Health</pc> report in the Windows Dev Center dashboard lets you get data related to the performance and quality of your app, including crashes and unresponsive events.</target>
				</segment>
			</unit>
			<unit id="105" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](download-analytic-reports.md)</data>
				</originalData>
				<segment state="initial">
					<source>You can view this data in your dashboard, or <pc dataRefEnd="id2" dataRefStart="id1" id="p1">download the report</pc> to view offline.</source>
					<target>You can view this data in your dashboard, or <pc dataRefEnd="id2" dataRefStart="id1" id="p1">download the report</pc> to view offline.</target>
				</segment>
			</unit>
			<unit id="106" translate="yes">
				<segment state="initial">
					<source>Where applicable, you can view stack traces for further debugging.</source>
					<target>Where applicable, you can view stack traces for further debugging.</target>
				</segment>
			</unit>
			<unit id="107" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](../monetize/access-analytics-data-using-windows-store-services.md)</data>
				</originalData>
				<segment state="initial">
					<source>Alternatively, you can programmatically retrieve this data by using the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Windows Store analytics REST API</pc>.</source>
					<target>Alternatively, you can programmatically retrieve this data by using the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Windows Store analytics REST API</pc>.</target>
				</segment>
			</unit>
			<unit id="108" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  If you had previously published apps and viewed performance data in the earlier dashboards, you may notice an increased number of crashes and events reported here.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  If you had previously published apps and viewed performance data in the earlier dashboards, you may notice an increased number of crashes and events reported here.</target>
				</segment>
			</unit>
			<unit id="109" translate="yes">
				<segment state="initial">
					<source>This is because we are able to include more data in this report to give you a more complete picture.</source>
					<target>This is because we are able to include more data in this report to give you a more complete picture.</target>
				</segment>
			</unit>
			<unit id="110" translate="yes">
				<segment state="initial">
					<source>Apply filters</source>
					<target>Apply filters</target>
				</segment>
			</unit>
			<unit id="111" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>Near the top of the page, you can expand <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Apply filters</pc> to filter all of the data on this page by date range and/or by package version.</source>
					<target>Near the top of the page, you can expand <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Apply filters</pc> to filter all of the data on this page by date range and/or by package version.</target>
				</segment>
			</unit>
			<unit id="112" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Date</pc>: The default filter is <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Last 72 hours</pc>, but you can expand this up to <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Last 6 months</pc>.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Date</pc>: The default filter is <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Last 72 hours</pc>, but you can expand this up to <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Last 6 months</pc>.</target>
				</segment>
			</unit>
			<unit id="113" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Package version</pc>: The default setting is <pc dataRefEnd="id4" dataRefStart="id3" id="p2">All versions</pc>.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Package version</pc>: The default setting is <pc dataRefEnd="id4" dataRefStart="id3" id="p2">All versions</pc>.</target>
				</segment>
			</unit>
			<unit id="114" translate="yes">
				<segment state="initial">
					<source>If your app includes more than one package version, you can choose a specific one.</source>
					<target>If your app includes more than one package version, you can choose a specific one.</target>
				</segment>
			</unit>
			<unit id="115" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>The info in all of the charts listed below will reflect the period of time selected in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Apply filters</pc> section.</source>
					<target>The info in all of the charts listed below will reflect the period of time selected in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Apply filters</pc> section.</target>
				</segment>
			</unit>
			<unit id="116" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>By default this will include data for all of your package versions, unless you've used the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Apply filters</pc> to choose only one.</source>
					<target>By default this will include data for all of your package versions, unless you've used the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Apply filters</pc> to choose only one.</target>
				</segment>
			</unit>
			<unit id="117" translate="yes">
				<segment state="initial">
					<source>Total crashes and events</source>
					<target>Total crashes and events</target>
				</segment>
			</unit>
			<unit id="118" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Total crashes and events</pc> chart shows the number of daily crashes and events that customers experienced when using your app during the selected period of time.</source>
					<target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Total crashes and events</pc> chart shows the number of daily crashes and events that customers experienced when using your app during the selected period of time.</target>
				</segment>
			</unit>
			<unit id="119" translate="yes">
				<segment state="initial">
					<source>Each type of event that your app experienced is tracked separately: crashes, hangs, JavaScript exceptions, or memory failures.</source>
					<target>Each type of event that your app experienced is tracked separately: crashes, hangs, JavaScript exceptions, or memory failures.</target>
				</segment>
			</unit>
			<unit id="120" translate="yes">
				<segment state="initial">
					<source>You can optionally filter the results by market and/or by OS version.</source>
					<target>You can optionally filter the results by market and/or by OS version.</target>
				</segment>
			</unit>
			<unit id="121" translate="yes">
				<segment state="initial">
					<source>Crash and event breakdown</source>
					<target>Crash and event breakdown</target>
				</segment>
			</unit>
			<unit id="122" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Crash and event breakdown</pc> chart lets you see charts that track specific details related to the customers' configurations when a crash or unresponsive event occurred.</source>
					<target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Crash and event breakdown</pc> chart lets you see charts that track specific details related to the customers' configurations when a crash or unresponsive event occurred.</target>
				</segment>
			</unit>
			<unit id="123" translate="yes">
				<segment state="initial">
					<source>Click the section headings to see details about:</source>
					<target>Click the section headings to see details about:</target>
				</segment>
			</unit>
			<unit id="124" translate="yes">
				<segment state="initial">
					<source>OS version</source>
					<target>OS version</target>
				</segment>
			</unit>
			<unit id="125" translate="yes">
				<segment state="initial">
					<source>Device type</source>
					<target>Device type</target>
				</segment>
			</unit>
			<unit id="126" translate="yes">
				<segment state="initial">
					<source>Memory (MB)</source>
					<target>Memory (MB)</target>
				</segment>
			</unit>
			<unit id="127" translate="yes">
				<segment state="initial">
					<source>Mass storage (GB)</source>
					<target>Mass storage (GB)</target>
				</segment>
			</unit>
			<unit id="128" translate="yes">
				<segment state="initial">
					<source>CPU speed (GHz)</source>
					<target>CPU speed (GHz)</target>
				</segment>
			</unit>
			<unit id="129" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>You can optionally filter the results by <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Crash type</pc>: crashes, hangs, JavaScript exceptions, or memory failures.</source>
					<target>You can optionally filter the results by <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Crash type</pc>: crashes, hangs, JavaScript exceptions, or memory failures.</target>
				</segment>
			</unit>
			<unit id="130" translate="yes">
				<segment state="initial">
					<source>(The default setting is to show all crash types.)</source>
					<target>(The default setting is to show all crash types.)</target>
				</segment>
			</unit>
			<unit id="131" translate="yes">
				<segment state="initial">
					<source>Market</source>
					<target>Market</target>
				</segment>
			</unit>
			<unit id="132" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Market</pc> chart shows the total number of crashes and events over the selected period of time by market.</source>
					<target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Market</pc> chart shows the total number of crashes and events over the selected period of time by market.</target>
				</segment>
			</unit>
			<unit id="133" translate="yes">
				<segment state="initial">
					<source>By default, we show you the market which had the most acquisitions on top and continue downward from there.</source>
					<target>By default, we show you the market which had the most acquisitions on top and continue downward from there.</target>
				</segment>
			</unit>
			<unit id="134" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>You can reverse this order by toggling the arrow in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Crashes</pc> column of this chart.</source>
					<target>You can reverse this order by toggling the arrow in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Crashes</pc> column of this chart.</target>
				</segment>
			</unit>
			<unit id="135" translate="yes">
				<segment state="initial">
					<source>Failure log</source>
					<target>Failure log</target>
				</segment>
			</unit>
			<unit id="136" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>If you have included PDB symbol files, the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Failure log</pc> chart will show details related to occurrences of specific symbols, including the total number of crashes and the average daily number of crashes per symbol.</source>
					<target>If you have included PDB symbol files, the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Failure log</pc> chart will show details related to occurrences of specific symbols, including the total number of crashes and the average daily number of crashes per symbol.</target>
				</segment>
			</unit>
			<unit id="137" translate="yes">
				<segment state="initial">
					<source>This info is based on a percentage of your total events.</source>
					<target>This info is based on a percentage of your total events.</target>
				</segment>
			</unit>
			<unit id="138" translate="yes">
				<segment state="initial">
					<source>Near the top of the chart, we'll indicate what percentage of events was sampled to provide this data.</source>
					<target>Near the top of the chart, we'll indicate what percentage of events was sampled to provide this data.</target>
				</segment>
			</unit>
		</group>
	</file>
</xliff>