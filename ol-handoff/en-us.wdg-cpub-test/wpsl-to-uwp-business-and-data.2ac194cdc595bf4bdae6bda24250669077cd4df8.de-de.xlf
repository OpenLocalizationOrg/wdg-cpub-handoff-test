<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="de-de" version="2.0" xml:space="preserve" xmlns="urn:oasis:names:tc:xliff:document:2.0">
	<file id="1">
		<mda:metadata>
			<mda:metaGroup>
				<mda:meta type="tool-id">mdxliff</mda:meta>
				<mda:meta type="tool-name">mdxliff</mda:meta>
				<mda:meta type="tool-version">1.0-2eb3c86</mda:meta>
				<mda:meta type="tool-company">Microsoft</mda:meta>
			</mda:metaGroup>
		<mda:metaGroup><mda:meta type="olfilehash">3d65d8644039235c2dd987cab11dcfa22965815c</mda:meta><mda:meta type="olfilepath">wdg-cpub-test\ndolci1\porting\wpsl-to-uwp-business-and-data.md</mda:meta><mda:meta type="oltranslationpriority"></mda:meta><mda:meta type="oltranslationtype">Human Translation</mda:meta><mda:meta type="olskeletonhash">976f01bb0c87fcab41cc0c6272e6aa8d7caeb2b3</mda:meta><mda:meta type="olxliffhash">a6d2ad663ff01dcb33f0c72554701dcd37863bb7</mda:meta></mda:metaGroup></mda:metadata>
		<group id="content">
			<unit id="101" translate="yes">
				<segment state="initial">
					<source>Behind your UI are your business and data layers.</source>
					<target>Behind your UI are your business and data layers.</target>
				</segment>
			</unit>
			<unit id="102" translate="yes">
				<segment state="initial">
					<source>Porting Windows Phone Silverlight business and data layers to UWP</source>
					<target>Porting Windows Phone Silverlight business and data layers to UWP</target>
				</segment>
			</unit>
			<unit id="103" translate="yes">
				<segment state="initial">
					<source>Porting Windows Phone Silverlight business and data layers to UWP</source>
					<target>Porting Windows Phone Silverlight business and data layers to UWP</target>
				</segment>
			</unit>
			<unit id="104" translate="yes">
				<segment state="initial">
					<source>\[ Updated for UWP apps on Windows 10.</source>
					<target>\[ Updated for UWP apps on Windows 10.</target>
				</segment>
			</unit>
			<unit id="105" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](http://go.microsoft.com/fwlink/p/?linkid=619132)</data>
				</originalData>
				<segment state="initial">
					<source>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</source>
					<target>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</target>
				</segment>
			</unit>
			<unit id="106" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](wpsl-to-uwp-input-and-sensors.md)</data>
				</originalData>
				<segment state="initial">
					<source>The previous topic was <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Porting for I/O, device, and app model</pc>.</source>
					<target>The previous topic was <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Porting for I/O, device, and app model</pc>.</target>
				</segment>
			</unit>
			<unit id="107" translate="yes">
				<segment state="initial">
					<source>Behind your UI are your business and data layers.</source>
					<target>Behind your UI are your business and data layers.</target>
				</segment>
			</unit>
			<unit id="108" translate="yes">
				<segment state="initial">
					<source>The code in these layers calls operating system and .NET Framework APIs (for example, background processing, location, the camera, the file system, network, and other data access).</source>
					<target>The code in these layers calls operating system and .NET Framework APIs (for example, background processing, location, the camera, the file system, network, and other data access).</target>
				</segment>
			</unit>
			<unit id="109" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br211369)</data>
				</originalData>
				<segment state="initial">
					<source>The vast majority of those are <pc dataRefEnd="id2" dataRefStart="id1" id="p1">available to a Universal Windows Platform (UWP) app</pc>, so you can expect to be able to port much of this code without change.</source>
					<target>The vast majority of those are <pc dataRefEnd="id2" dataRefStart="id1" id="p1">available to a Universal Windows Platform (UWP) app</pc>, so you can expect to be able to port much of this code without change.</target>
				</segment>
			</unit>
			<unit id="110" translate="yes">
				<segment state="initial">
					<source>Asynchronous methods</source>
					<target>Asynchronous methods</target>
				</segment>
			</unit>
			<unit id="111" translate="yes">
				<segment state="initial">
					<source>One of the priorities of the Universal Windows Platform (UWP) is to enable you to build apps that are truly, and consistently, responsive.</source>
					<target>One of the priorities of the Universal Windows Platform (UWP) is to enable you to build apps that are truly, and consistently, responsive.</target>
				</segment>
			</unit>
			<unit id="112" translate="yes">
				<segment state="initial">
					<source>Animations are always smooth, and touch interactions such as panning and swiping are instantaneous and free of lag, making it feel like the UI is glued to your finger.</source>
					<target>Animations are always smooth, and touch interactions such as panning and swiping are instantaneous and free of lag, making it feel like the UI is glued to your finger.</target>
				</segment>
			</unit>
			<unit id="113" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>To achieve this, any UWP API that can't guarantee to complete within 50ms has been made asynchronous and its name suffixed with <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Async</pc>.</source>
					<target>To achieve this, any UWP API that can't guarantee to complete within 50ms has been made asynchronous and its name suffixed with <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Async</pc>.</target>
				</segment>
			</unit>
			<unit id="114" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>Your UI thread will return immediately from calling an <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Async</pc> method, and the work will take place on another thread.</source>
					<target>Your UI thread will return immediately from calling an <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Async</pc> method, and the work will take place on another thread.</target>
				</segment>
			</unit>
			<unit id="115" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Consuming an <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Async</pc> method is made very easy, syntactically, using the C# <pc dataRefEnd="id4" dataRefStart="id3" id="p2">await</pc> operator, JavaScript promise objects, and C++ continuations.</source>
					<target>Consuming an <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Async</pc> method is made very easy, syntactically, using the C# <pc dataRefEnd="id4" dataRefStart="id3" id="p2">await</pc> operator, JavaScript promise objects, and C++ continuations.</target>
				</segment>
			</unit>
			<unit id="116" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/mt187335)</data>
				</originalData>
				<segment state="initial">
					<source>For more info, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Asynchronous programming</pc>.</source>
					<target>For more info, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Asynchronous programming</pc>.</target>
				</segment>
			</unit>
			<unit id="117" translate="yes">
				<segment state="initial">
					<source>Background processing</source>
					<target>Background processing</target>
				</segment>
			</unit>
			<unit id="118" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>A Windows Phone Silverlight app can use a managed <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ScheduledTaskAgent</pc> object to perform a task while the app is not in the foreground.</source>
					<target>A Windows Phone Silverlight app can use a managed <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ScheduledTaskAgent</pc> object to perform a task while the app is not in the foreground.</target>
				</segment>
			</unit>
			<unit id="119" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br224768)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>A UWP app uses the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">BackgroundTaskBuilder</pc></pc> class to create and register a background task in a similar way.</source>
					<target>A UWP app uses the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">BackgroundTaskBuilder</pc></pc> class to create and register a background task in a similar way.</target>
				</segment>
			</unit>
			<unit id="120" translate="yes">
				<segment state="initial">
					<source>You define a class that implements the work of your background task.</source>
					<target>You define a class that implements the work of your background task.</target>
				</segment>
			</unit>
			<unit id="121" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br224811)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>The system runs your background task periodically, calling the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Run</pc></pc> method of your class to execute the work.</source>
					<target>The system runs your background task periodically, calling the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Run</pc></pc> method of your class to execute the work.</target>
				</segment>
			</unit>
			<unit id="122" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>In a UWP app, remember to set the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Background Tasks</pc> declaration in the app package manifest.</source>
					<target>In a UWP app, remember to set the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Background Tasks</pc> declaration in the app package manifest.</target>
				</segment>
			</unit>
			<unit id="123" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/mt299103)</data>
				</originalData>
				<segment state="initial">
					<source>For more info, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Support your app with background tasks</pc>.</source>
					<target>For more info, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Support your app with background tasks</pc>.</target>
				</segment>
			</unit>
			<unit id="124" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>To transfer large data files in the background, a Windows Phone Silverlight app uses the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">BackgroundTransferService</pc> class.</source>
					<target>To transfer large data files in the background, a Windows Phone Silverlight app uses the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">BackgroundTransferService</pc> class.</target>
				</segment>
			</unit>
			<unit id="125" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br207242)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>A UWP app uses APIs in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.Networking.BackgroundTransfer</pc></pc> namespace to do this.</source>
					<target>A UWP app uses APIs in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.Networking.BackgroundTransfer</pc></pc> namespace to do this.</target>
				</segment>
			</unit>
			<unit id="126" translate="yes">
				<segment state="initial">
					<source>The features use a similar pattern to initiate transfers, but the new API has improved capabilities and performance.</source>
					<target>The features use a similar pattern to initiate transfers, but the new API has improved capabilities and performance.</target>
				</segment>
			</unit>
			<unit id="127" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/xaml/hh452975)</data>
				</originalData>
				<segment state="initial">
					<source>For more info, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Transferring data in the background</pc>.</source>
					<target>For more info, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Transferring data in the background</pc>.</target>
				</segment>
			</unit>
			<unit id="128" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>A Windows Phone Silverlight app uses the managed classes in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Microsoft.Phone.BackgroundAudio</pc> namespace to play audio while the app is not in the foreground.</source>
					<target>A Windows Phone Silverlight app uses the managed classes in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Microsoft.Phone.BackgroundAudio</pc> namespace to play audio while the app is not in the foreground.</target>
				</segment>
			</unit>
			<unit id="129" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/mt282140)</data>
					<data id="id3">[</data>
					<data id="id4">](http://go.microsoft.com/fwlink/p/?linkid=619997)</data>
				</originalData>
				<segment state="initial">
					<source>The UWP uses the Windows Phone Store app model, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Background Audio</pc> and the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Background audio</pc> sample.</source>
					<target>The UWP uses the Windows Phone Store app model, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Background Audio</pc> and the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Background audio</pc> sample.</target>
				</segment>
			</unit>
			<unit id="130" translate="yes">
				<segment state="initial">
					<source>Cloud services, networking, and databases</source>
					<target>Cloud services, networking, and databases</target>
				</segment>
			</unit>
			<unit id="131" translate="yes">
				<segment state="initial">
					<source>Hosting data and app services in the cloud is possible using Azure.</source>
					<target>Hosting data and app services in the cloud is possible using Azure.</target>
				</segment>
			</unit>
			<unit id="132" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](http://go.microsoft.com/fwlink/p/?LinkID=403138)</data>
				</originalData>
				<segment state="initial">
					<source>See <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Getting Started with Mobile Services</pc>.</source>
					<target>See <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Getting Started with Mobile Services</pc>.</target>
				</segment>
			</unit>
			<unit id="133" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](http://azure.microsoft.com/documentation/articles/mobile-services-windows-store-dotnet-get-started-offline-data/)</data>
				</originalData>
				<segment state="initial">
					<source>For solutions that require both online and offline data see: <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Using offline data sync in Mobile Services</pc>.</source>
					<target>For solutions that require both online and offline data see: <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Using offline data sync in Mobile Services</pc>.</target>
				</segment>
			</unit>
			<unit id="134" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>The UWP has partial support for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">System.Net.HttpWebRequest</pc> class, but the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">System.Net.WebClient</pc> class is not supported.</source>
					<target>The UWP has partial support for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">System.Net.HttpWebRequest</pc> class, but the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">System.Net.WebClient</pc> class is not supported.</target>
				</segment>
			</unit>
			<unit id="135" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn298639)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/system.net.http.httpclient(v=vs.118).aspx)</data>
				</originalData>
				<segment state="initial">
					<source>The recommended, forward-looking alternative is the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.Web.Http.HttpClient</pc></pc> class (or <pc dataRefEnd="id6" dataRefStart="id5" id="p3">System.Net.Http.HttpClient</pc> if you need your code to be portable to other platforms that support .NET).</source>
					<target>The recommended, forward-looking alternative is the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.Web.Http.HttpClient</pc></pc> class (or <pc dataRefEnd="id6" dataRefStart="id5" id="p3">System.Net.Http.HttpClient</pc> if you need your code to be portable to other platforms that support .NET).</target>
				</segment>
			</unit>
			<unit id="136" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/system.net.http.httprequestmessage.aspx)</data>
				</originalData>
				<segment state="initial">
					<source>These APIs use <pc dataRefEnd="id2" dataRefStart="id1" id="p1">System.Net.Http.HttpRequestMessage</pc> to represent an HTTP request.</source>
					<target>These APIs use <pc dataRefEnd="id2" dataRefStart="id1" id="p1">System.Net.Http.HttpRequestMessage</pc> to represent an HTTP request.</target>
				</segment>
			</unit>
			<unit id="137" translate="yes">
				<segment state="initial">
					<source>UWP apps do not currently include built-in support for data-intensive scenarios such as line of business (LOB) scenarios.</source>
					<target>UWP apps do not currently include built-in support for data-intensive scenarios such as line of business (LOB) scenarios.</target>
				</segment>
			</unit>
			<unit id="138" translate="yes">
				<segment state="initial">
					<source>However, you can make use SQLite for local transactional database services.</source>
					<target>However, you can make use SQLite for local transactional database services.</target>
				</segment>
			</unit>
			<unit id="139" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://visualstudiogallery.msdn.microsoft.com/4913e7d5-96c9-4dde-a1a1-69820d615936)</data>
				</originalData>
				<segment state="initial">
					<source>For more info, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">SQLite</pc>.</source>
					<target>For more info, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">SQLite</pc>.</target>
				</segment>
			</unit>
			<unit id="140" translate="yes">
				<segment state="initial">
					<source>Pass absolute URIs, not relative URIs, to Windows Runtime types.</source>
					<target>Pass absolute URIs, not relative URIs, to Windows Runtime types.</target>
				</segment>
			</unit>
			<unit id="141" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/hh763341.aspx)</data>
				</originalData>
				<segment state="initial">
					<source>See <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Passing a URI to the Windows Runtime</pc>.</source>
					<target>See <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Passing a URI to the Windows Runtime</pc>.</target>
				</segment>
			</unit>
			<unit id="142" translate="yes">
				<segment state="initial">
					<source>Launchers and Choosers</source>
					<target>Launchers and Choosers</target>
				</segment>
			</unit>
			<unit id="143" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>With Launchers and Choosers (found in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Microsoft.Phone.Tasks</pc> namespace), a Windows Phone Silverlight app can interact with the operating system to perform common operations such as composing an email, choosing a photo, or sharing certain kinds of data with another app.</source>
					<target>With Launchers and Choosers (found in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Microsoft.Phone.Tasks</pc> namespace), a Windows Phone Silverlight app can interact with the operating system to perform common operations such as composing an email, choosing a photo, or sharing certain kinds of data with another app.</target>
				</segment>
			</unit>
			<unit id="144" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">[</data>
					<data id="id4">](wpsl-to-uwp-namespace-and-class-mappings.md)</data>
				</originalData>
				<segment state="initial">
					<source>Search for <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Microsoft.Phone.Tasks</pc> in the topic <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows Phone Silverlight to Windows 10 namespace and class mappings</pc> to find the equivalent UWP type.</source>
					<target>Search for <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Microsoft.Phone.Tasks</pc> in the topic <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows Phone Silverlight to Windows 10 namespace and class mappings</pc> to find the equivalent UWP type.</target>
				</segment>
			</unit>
			<unit id="145" translate="yes">
				<segment state="initial">
					<source>These range from similar mechanisms, called launchers and pickers, to implementing a contract for sharing data between apps.</source>
					<target>These range from similar mechanisms, called launchers and pickers, to implementing a contract for sharing data between apps.</target>
				</segment>
			</unit>
			<unit id="146" translate="yes">
				<segment state="initial">
					<source>A Windows Phone Silverlight app can be put into a dormant state or even tombstoned when using, for example, the photo Chooser task.</source>
					<target>A Windows Phone Silverlight app can be put into a dormant state or even tombstoned when using, for example, the photo Chooser task.</target>
				</segment>
			</unit>
			<unit id="147" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br207847)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>A UWP app remains active and running while using the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">FileOpenPicker</pc></pc> class.</source>
					<target>A UWP app remains active and running while using the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">FileOpenPicker</pc></pc> class.</target>
				</segment>
			</unit>
			<unit id="148" translate="yes">
				<segment state="initial">
					<source>Monetization (trial mode and in-app purchases)</source>
					<target>Monetization (trial mode and in-app purchases)</target>
				</segment>
			</unit>
			<unit id="149" translate="yes">
				<originalData>
					<data id="id1"> [</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/hh779765)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>A Windows Phone Silverlight app can use the UWP<pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CurrentApp</pc></pc> class for most of its trial mode and in-app purchase functionality, so that code doesn't need to be ported.</source>
					<target>A Windows Phone Silverlight app can use the UWP<pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CurrentApp</pc></pc> class for most of its trial mode and in-app purchase functionality, so that code doesn't need to be ported.</target>
				</segment>
			</unit>
			<unit id="150" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>But, a Windows Phone Silverlight app calls <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MarketplaceDetailTask.Show</pc> to offer the app for purchase:</source>
					<target>But, a Windows Phone Silverlight app calls <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MarketplaceDetailTask.Show</pc> to offer the app for purchase:</target>
				</segment>
			</unit>
			<unit id="151" translate="yes">
				<originalData>
					<data id="id1"> [</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/hh967813)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Port that code to call the UWP<pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">RequestAppPurchaseAsync</pc></pc> method:</source>
					<target>Port that code to call the UWP<pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">RequestAppPurchaseAsync</pc></pc> method:</target>
				</segment>
			</unit>
			<unit id="152" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/hh779766)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>If you have code that simulates your app purchase and in-app purchase features for testing purposes, then you can port that to use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CurrentAppSimulator</pc></pc> class instead.</source>
					<target>If you have code that simulates your app purchase and in-app purchase features for testing purposes, then you can port that to use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CurrentAppSimulator</pc></pc> class instead.</target>
				</segment>
			</unit>
			<unit id="153" translate="yes">
				<segment state="initial">
					<source>Notifications for tile or toast updates</source>
					<target>Notifications for tile or toast updates</target>
				</segment>
			</unit>
			<unit id="154" translate="yes">
				<segment state="initial">
					<source>Notifications are an extension of the push notification model for Windows Phone Silverlight apps.</source>
					<target>Notifications are an extension of the push notification model for Windows Phone Silverlight apps.</target>
				</segment>
			</unit>
			<unit id="155" translate="yes">
				<segment state="initial">
					<source>When you receive a notification from the Windows Push Notification Service (WNS), you can surface the info to the UI with a tile update or with a toast.</source>
					<target>When you receive a notification from the Windows Push Notification Service (WNS), you can surface the info to the UI with a tile update or with a toast.</target>
				</segment>
			</unit>
			<unit id="156" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](w8x-to-uwp-porting-xaml-and-ui.md#tiles-and-toasts)</data>
				</originalData>
				<segment state="initial">
					<source>For porting the UI side of your notification features, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Tiles and toasts</pc>.</source>
					<target>For porting the UI side of your notification features, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Tiles and toasts</pc>.</target>
				</segment>
			</unit>
			<unit id="157" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/xaml/hh868266)</data>
				</originalData>
				<segment state="initial">
					<source>For more details on the use of notifications in a UWP app, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Sending toast notifications</pc>.</source>
					<target>For more details on the use of notifications in a UWP app, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Sending toast notifications</pc>.</target>
				</segment>
			</unit>
			<unit id="158" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/xaml/hh868259)</data>
				</originalData>
				<segment state="initial">
					<source>For info and tutorials on using tiles, toasts, badges, banners, and notifications in a Windows Runtime app using C++, C#, or Visual Basic, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Working with tiles, badges, and toast notifications</pc>.</source>
					<target>For info and tutorials on using tiles, toasts, badges, banners, and notifications in a Windows Runtime app using C++, C#, or Visual Basic, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Working with tiles, badges, and toast notifications</pc>.</target>
				</segment>
			</unit>
			<unit id="159" translate="yes">
				<segment state="initial">
					<source>Storage (file access)</source>
					<target>Storage (file access)</target>
				</segment>
			</unit>
			<unit id="160" translate="yes">
				<segment state="initial">
					<source>Windows Phone Silverlight code that stores app settings as key-value pairs in isolated storage is easily ported.</source>
					<target>Windows Phone Silverlight code that stores app settings as key-value pairs in isolated storage is easily ported.</target>
				</segment>
			</unit>
			<unit id="161" translate="yes">
				<segment state="initial">
					<source>Here is a before-and-after example, first the Windows Phone Silverlight version:</source>
					<target>Here is a before-and-after example, first the Windows Phone Silverlight version:</target>
				</segment>
			</unit>
			<unit id="162" translate="yes">
				<segment state="initial">
					<source>And the UWP equivalent:</source>
					<target>And the UWP equivalent:</target>
				</segment>
			</unit>
			<unit id="163" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Although a subset of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Windows.Storage</pc> namespace is available to them, many Windows Phone Silverlight apps perform file i/o with the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">IsolatedStorageFile</pc> class because it has been supported for longer.</source>
					<target>Although a subset of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Windows.Storage</pc> namespace is available to them, many Windows Phone Silverlight apps perform file i/o with the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">IsolatedStorageFile</pc> class because it has been supported for longer.</target>
				</segment>
			</unit>
			<unit id="164" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>Assuming that <pc dataRefEnd="id2" dataRefStart="id1" id="p1">IsolatedStorageFile</pc> is being used, here's a before-and-after example of writing and reading a file, first the Windows Phone Silverlight version:</source>
					<target>Assuming that <pc dataRefEnd="id2" dataRefStart="id1" id="p1">IsolatedStorageFile</pc> is being used, here's a before-and-after example of writing and reading a file, first the Windows Phone Silverlight version:</target>
				</segment>
			</unit>
			<unit id="165" translate="yes">
				<segment state="initial">
					<source>And the same functionality using the UWP:</source>
					<target>And the same functionality using the UWP:</target>
				</segment>
			</unit>
			<unit id="166" translate="yes">
				<segment state="initial">
					<source>A Windows Phone Silverlight app has read-only access to the optional SD card.</source>
					<target>A Windows Phone Silverlight app has read-only access to the optional SD card.</target>
				</segment>
			</unit>
			<unit id="167" translate="yes">
				<segment state="initial">
					<source>A UWP app has read-write access to the SD card.</source>
					<target>A UWP app has read-write access to the SD card.</target>
				</segment>
			</unit>
			<unit id="168" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/mt188699)</data>
				</originalData>
				<segment state="initial">
					<source>For more info, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Access the SD card</pc>.</source>
					<target>For more info, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Access the SD card</pc>.</target>
				</segment>
			</unit>
			<unit id="169" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/mt188703)</data>
				</originalData>
				<segment state="initial">
					<source>For info about accessing photos, music, and video files in a UWP app, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Files and folders in the Music, Pictures, and Videos libraries</pc>.</source>
					<target>For info about accessing photos, music, and video files in a UWP app, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Files and folders in the Music, Pictures, and Videos libraries</pc>.</target>
				</segment>
			</unit>
			<unit id="170" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/mt185399)</data>
				</originalData>
				<segment state="initial">
					<source>For more info, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Files, folders, and libraries</pc>.</source>
					<target>For more info, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Files, folders, and libraries</pc>.</target>
				</segment>
			</unit>
			<unit id="171" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](wpsl-to-uwp-form-factors-and-ux.md)</data>
				</originalData>
				<segment state="initial">
					<source>The next topic is <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Porting for form factor and UX</pc>.</source>
					<target>The next topic is <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Porting for form factor and UX</pc>.</target>
				</segment>
			</unit>
			<unit id="172" translate="yes">
				<segment state="initial">
					<source>Related topics</source>
					<target>Related topics</target>
				</segment>
			</unit>
			<unit id="173" translate="yes">
				<segment state="initial">
					<source>Namespace and class mappings</source>
					<target>Namespace and class mappings</target>
				</segment>
			</unit>
		</group>
	</file>
</xliff>