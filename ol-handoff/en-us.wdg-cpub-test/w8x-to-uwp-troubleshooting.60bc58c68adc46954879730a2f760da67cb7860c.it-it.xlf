<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="it-it" version="2.0" xml:space="preserve" xmlns="urn:oasis:names:tc:xliff:document:2.0">
	<file id="1">
		<mda:metadata>
			<mda:metaGroup>
				<mda:meta type="tool-id">mdxliff</mda:meta>
				<mda:meta type="tool-name">mdxliff</mda:meta>
				<mda:meta type="tool-version">1.0-2eb3c86</mda:meta>
				<mda:meta type="tool-company">Microsoft</mda:meta>
			</mda:metaGroup>
		<mda:metaGroup><mda:meta type="olfilehash">8c9d7aeec7691cb25c00ce3f6c6cfa077a05efc4</mda:meta><mda:meta type="olfilepath">wdg-cpub-test\ndolci1\porting\w8x-to-uwp-troubleshooting.md</mda:meta><mda:meta type="oltranslationpriority"></mda:meta><mda:meta type="oltranslationtype">Human Translation</mda:meta><mda:meta type="olskeletonhash">6f97ed6a6ad1f020c851a80a83e76643410f8aa7</mda:meta><mda:meta type="olxliffhash">0222669f8d1d01bbdb55d1b68190befc07ef8b9b</mda:meta></mda:metaGroup></mda:metadata>
		<group id="content">
			<unit id="101" translate="yes">
				<segment state="initial">
					<source>We highly recommend reading to the end of this porting guide, but we also understand that you're eager to forge ahead and get to the stage where your project builds and runs.</source>
					<target>We highly recommend reading to the end of this porting guide, but we also understand that you're eager to forge ahead and get to the stage where your project builds and runs.</target>
				</segment>
			</unit>
			<unit id="102" translate="yes">
				<segment state="initial">
					<source>Troubleshooting porting Windows Runtime 8.x to UWP'</source>
					<target>Troubleshooting porting Windows Runtime 8.x to UWP'</target>
				</segment>
			</unit>
			<unit id="103" translate="yes">
				<segment state="initial">
					<source>Troubleshooting porting Windows Runtime 8.x to UWP</source>
					<target>Troubleshooting porting Windows Runtime 8.x to UWP</target>
				</segment>
			</unit>
			<unit id="104" translate="yes">
				<segment state="initial">
					<source>\[ Updated for UWP apps on Windows 10.</source>
					<target>\[ Updated for UWP apps on Windows 10.</target>
				</segment>
			</unit>
			<unit id="105" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](http://go.microsoft.com/fwlink/p/?linkid=619132)</data>
				</originalData>
				<segment state="initial">
					<source>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</source>
					<target>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</target>
				</segment>
			</unit>
			<unit id="106" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](w8x-to-uwp-porting-to-a-uwp-project.md)</data>
				</originalData>
				<segment state="initial">
					<source>The previous topic was <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Porting the project</pc>.</source>
					<target>The previous topic was <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Porting the project</pc>.</target>
				</segment>
			</unit>
			<unit id="107" translate="yes">
				<segment state="initial">
					<source>We highly recommend reading to the end of this porting guide, but we also understand that you're eager to forge ahead and get to the stage where your project builds and runs.</source>
					<target>We highly recommend reading to the end of this porting guide, but we also understand that you're eager to forge ahead and get to the stage where your project builds and runs.</target>
				</segment>
			</unit>
			<unit id="108" translate="yes">
				<segment state="initial">
					<source>To that end, you can make temporary progress by commenting or stubbing out any non-essential code, and then returning to pay off that debt later.</source>
					<target>To that end, you can make temporary progress by commenting or stubbing out any non-essential code, and then returning to pay off that debt later.</target>
				</segment>
			</unit>
			<unit id="109" translate="yes">
				<segment state="initial">
					<source>The table of troubleshooting symptoms and remedies in this topic may be helpful to you at this stage, although it's not a substitute for reading the next few topics.</source>
					<target>The table of troubleshooting symptoms and remedies in this topic may be helpful to you at this stage, although it's not a substitute for reading the next few topics.</target>
				</segment>
			</unit>
			<unit id="110" translate="yes">
				<segment state="initial">
					<source>You can always refer back to the table as you progress through the later topics.</source>
					<target>You can always refer back to the table as you progress through the later topics.</target>
				</segment>
			</unit>
			<unit id="111" translate="yes">
				<segment state="initial">
					<source>Tracking down issues</source>
					<target>Tracking down issues</target>
				</segment>
			</unit>
			<unit id="112" translate="yes">
				<segment state="initial">
					<source>XAML parse exceptions can be difficult to diagnose, particularly if there are no meaningful error messages within the exception.</source>
					<target>XAML parse exceptions can be difficult to diagnose, particularly if there are no meaningful error messages within the exception.</target>
				</segment>
			</unit>
			<unit id="113" translate="yes">
				<segment state="initial">
					<source>Make sure that the debugger is configured to catch first-chance exceptions (to try and catch the parsing exception early on).</source>
					<target>Make sure that the debugger is configured to catch first-chance exceptions (to try and catch the parsing exception early on).</target>
				</segment>
			</unit>
			<unit id="114" translate="yes">
				<segment state="initial">
					<source>You may be able to inspect the exception variable in the debugger to determine whether the HRESULT or message has any useful information.</source>
					<target>You may be able to inspect the exception variable in the debugger to determine whether the HRESULT or message has any useful information.</target>
				</segment>
			</unit>
			<unit id="115" translate="yes">
				<segment state="initial">
					<source>Also, check Visual Studio's output window for error messages output by the XAML parser.</source>
					<target>Also, check Visual Studio's output window for error messages output by the XAML parser.</target>
				</segment>
			</unit>
			<unit id="116" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>If your app terminates and all you know is that an unhandled exception was thrown during XAML markup parsing, then that could be the result of a reference to a missing resource (that is, a resource whose key exists for Universal 8.1 apps but not for Windows 10 apps, such as some system <pc dataRefEnd="id2" dataRefStart="id1" id="p1">TextBlock</pc> Style keys).</source>
					<target>If your app terminates and all you know is that an unhandled exception was thrown during XAML markup parsing, then that could be the result of a reference to a missing resource (that is, a resource whose key exists for Universal 8.1 apps but not for Windows 10 apps, such as some system <pc dataRefEnd="id2" dataRefStart="id1" id="p1">TextBlock</pc> Style keys).</target>
				</segment>
			</unit>
			<unit id="117" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>Or it could be an exception thrown inside a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">UserControl</pc>, a custom control, or a custom layout panel.</source>
					<target>Or it could be an exception thrown inside a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">UserControl</pc>, a custom control, or a custom layout panel.</target>
				</segment>
			</unit>
			<unit id="118" translate="yes">
				<segment state="initial">
					<source>A last resort is a binary split.</source>
					<target>A last resort is a binary split.</target>
				</segment>
			</unit>
			<unit id="119" translate="yes">
				<segment state="initial">
					<source>Remove about half of the markup from a Page and re-run the app.</source>
					<target>Remove about half of the markup from a Page and re-run the app.</target>
				</segment>
			</unit>
			<unit id="120" translate="yes">
				<originalData>
					<data id="id1">*</data>
					<data id="id2">*</data>
				</originalData>
				<segment state="initial">
					<source>You will then know whether the error is somewhere inside the half you removed (which you should now restore in any case) or in the half you did <pc dataRefEnd="id2" dataRefStart="id1" id="p1">not</pc> remove.</source>
					<target>You will then know whether the error is somewhere inside the half you removed (which you should now restore in any case) or in the half you did <pc dataRefEnd="id2" dataRefStart="id1" id="p1">not</pc> remove.</target>
				</segment>
			</unit>
			<unit id="121" translate="yes">
				<segment state="initial">
					<source>Repeat the process by splitting the half that contains the error, and so on, until you've zeroed in on the issue.</source>
					<target>Repeat the process by splitting the half that contains the error, and so on, until you've zeroed in on the issue.</target>
				</segment>
			</unit>
			<unit id="122" translate="yes">
				<segment state="initial">
					<source>TargetPlatformVersion</source>
					<target>TargetPlatformVersion</target>
				</segment>
			</unit>
			<unit id="123" translate="yes">
				<segment state="initial">
					<source>This section explains what to do if, on opening a Windows 10 project in Visual Studio, you see the message "Visual Studio update required.</source>
					<target>This section explains what to do if, on opening a Windows 10 project in Visual Studio, you see the message "Visual Studio update required.</target>
				</segment>
			</unit>
			<unit id="124" translate="yes">
				<originalData>
					<data id="id1">&lt;version&gt;</data>
				</originalData>
				<segment state="initial">
					<source>One or more projects require a platform SDK <ph dataRef="id1" id="ph1" /> that is either not installed or is included as part of a future update to Visual Studio."</source>
					<target>One or more projects require a platform SDK <ph dataRef="id1" id="ph1" /> that is either not installed or is included as part of a future update to Visual Studio."</target>
				</segment>
			</unit>
			<unit id="125" translate="yes">
				<segment state="initial">
					<source>First, determine the version number of the SDK for Windows 10 that you have installed.</source>
					<target>First, determine the version number of the SDK for Windows 10 that you have installed.</target>
				</segment>
			</unit>
			<unit id="126" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">&lt;versionfoldername&gt;</data>
					<data id="id4">*</data>
					<data id="id5">*</data>
					<data id="id6">&lt;versionfoldername&gt;</data>
				</originalData>
				<segment state="initial">
					<source>Navigate to <pc dataRefEnd="id2" dataRefStart="id1" id="p1">C:\\Program Files (x86)\\Windows Kits\\10\\Include\\<ph dataRef="id3" id="ph1" /></pc> and make a note of <pc dataRefEnd="id5" dataRefStart="id4" id="p2"><ph dataRef="id6" id="ph2" /></pc>, which will be in quad notation, "Major.Minor.Build.Revision".</source>
					<target>Navigate to <pc dataRefEnd="id2" dataRefStart="id1" id="p1">C:\\Program Files (x86)\\Windows Kits\\10\\Include\\<ph dataRef="id3" id="ph1" /></pc> and make a note of <pc dataRefEnd="id5" dataRefStart="id4" id="p2"><ph dataRef="id6" id="ph2" /></pc>, which will be in quad notation, "Major.Minor.Build.Revision".</target>
				</segment>
			</unit>
			<unit id="127" translate="yes">
				<originalData>
					<data id="id1">`TargetPlatformVersion`</data>
					<data id="id2">`TargetPlatformMinVersion`</data>
				</originalData>
				<segment state="initial">
					<source>Open your project file for edit and find the <ph dataRef="id1" id="ph1" /> and <ph dataRef="id2" id="ph2" /> elements.</source>
					<target>Open your project file for edit and find the <ph dataRef="id1" id="ph1" /> and <ph dataRef="id2" id="ph2" /> elements.</target>
				</segment>
			</unit>
			<unit id="128" translate="yes">
				<originalData>
					<data id="id1">*</data>
					<data id="id2">*</data>
					<data id="id3">&lt;versionfoldername&gt;</data>
				</originalData>
				<segment state="initial">
					<source>Edit them to look like this, replacing <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><ph dataRef="id3" id="ph1" /></pc> with the quad notation version number you found on disk:</source>
					<target>Edit them to look like this, replacing <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><ph dataRef="id3" id="ph1" /></pc> with the quad notation version number you found on disk:</target>
				</segment>
			</unit>
			<unit id="129" translate="yes">
				<segment state="initial">
					<source>Troubleshooting symptoms and remedies</source>
					<target>Troubleshooting symptoms and remedies</target>
				</segment>
			</unit>
			<unit id="130" translate="yes">
				<segment state="initial">
					<source>The remedy information in the table is intended to give you enough info to unblock yourself.</source>
					<target>The remedy information in the table is intended to give you enough info to unblock yourself.</target>
				</segment>
			</unit>
			<unit id="131" translate="yes">
				<segment state="initial">
					<source>You'll find further details about each of these issues as you read through later topics.</source>
					<target>You'll find further details about each of these issues as you read through later topics.</target>
				</segment>
			</unit>
			<unit id="132" translate="yes">
				<segment state="initial">
					<source>Symptom</source>
					<target>Symptom</target>
				</segment>
			</unit>
			<unit id="133" translate="yes">
				<segment state="initial">
					<source>Remedy</source>
					<target>Remedy</target>
				</segment>
			</unit>
			<unit id="134" translate="yes">
				<segment state="initial">
					<source>On opening a Windows 10 project in Visual Studio, you see the message "Visual Studio update required.</source>
					<target>On opening a Windows 10 project in Visual Studio, you see the message "Visual Studio update required.</target>
				</segment>
			</unit>
			<unit id="135" translate="yes">
				<originalData>
					<data id="id1">&amp;lt;</data>
					<data id="id2">&amp;gt;</data>
				</originalData>
				<segment state="initial">
					<source>One or more projects require a platform SDK <ph dataRef="id1" id="ph1" />version<ph dataRef="id2" id="ph2" /> that is either not installed or is included as part of a future update to Visual Studio."</source>
					<target>One or more projects require a platform SDK <ph dataRef="id1" id="ph1" />version<ph dataRef="id2" id="ph2" /> that is either not installed or is included as part of a future update to Visual Studio."</target>
				</segment>
			</unit>
			<unit id="136" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](#targetplatformversion)</data>
				</originalData>
				<segment state="initial">
					<source>See the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">TargetPlatformVersion</pc> section in this topic.</source>
					<target>See the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">TargetPlatformVersion</pc> section in this topic.</target>
				</segment>
			</unit>
			<unit id="137" translate="yes">
				<segment state="initial">
					<source>A System.InvalidCastException is thrown when InitializeComponent is called in a xaml.cs file.</source>
					<target>A System.InvalidCastException is thrown when InitializeComponent is called in a xaml.cs file.</target>
				</segment>
			</unit>
			<unit id="138" translate="yes">
				<segment state="initial">
					<source>This can happen when you have more than one xaml file (at least one of which is MRT-qualified) sharing the same xaml.cs file and elements have x:Name attributes that are inconsistent between the two xaml files.</source>
					<target>This can happen when you have more than one xaml file (at least one of which is MRT-qualified) sharing the same xaml.cs file and elements have x:Name attributes that are inconsistent between the two xaml files.</target>
				</segment>
			</unit>
			<unit id="139" translate="yes">
				<segment state="initial">
					<source>Try adding the same name to the same elements in both xaml files, or omit names altogether.</source>
					<target>Try adding the same name to the same elements in both xaml files, or omit names altogether.</target>
				</segment>
			</unit>
			<unit id="140" translate="yes">
				<segment state="initial">
					<source>When run on the device, the app terminates, or when launched from Visual Studio, you see the error “Unable to activate Windows Store app \[…\].</source>
					<target>When run on the device, the app terminates, or when launched from Visual Studio, you see the error “Unable to activate Windows Store app \[…\].</target>
				</segment>
			</unit>
			<unit id="141" translate="yes">
				<segment state="initial">
					<source>The activation request failed with error ‘Windows was unable to communicate with the target application.</source>
					<target>The activation request failed with error ‘Windows was unable to communicate with the target application.</target>
				</segment>
			</unit>
			<unit id="142" translate="yes">
				<segment state="initial">
					<source>This usually indicates that the target application’s process aborted.</source>
					<target>This usually indicates that the target application’s process aborted.</target>
				</segment>
			</unit>
			<unit id="143" translate="yes">
				<segment state="initial">
					<source>\[…\]”.</source>
					<target>\[…\]”.</target>
				</segment>
			</unit>
			<unit id="144" translate="yes">
				<segment state="initial">
					<source>The problem could be the imperative code running in your own Pages or in bound properties (or other types) during initialization.</source>
					<target>The problem could be the imperative code running in your own Pages or in bound properties (or other types) during initialization.</target>
				</segment>
			</unit>
			<unit id="145" translate="yes">
				<segment state="initial">
					<source>Or it could be happening while parsing the XAML file about to be displayed when the app terminated (if launching from Visual Studio, that will be the startup page).</source>
					<target>Or it could be happening while parsing the XAML file about to be displayed when the app terminated (if launching from Visual Studio, that will be the startup page).</target>
				</segment>
			</unit>
			<unit id="146" translate="yes">
				<segment state="initial">
					<source>Look for invalid resource keys, and/or try some of the guidance in the "Tracking down issues" section in this topic.</source>
					<target>Look for invalid resource keys, and/or try some of the guidance in the "Tracking down issues" section in this topic.</target>
				</segment>
			</unit>
			<unit id="147" translate="yes">
				<originalData>
					<data id="id1">*</data>
					<data id="id2">*</data>
					<data id="id3">&lt;resourcekey&gt;</data>
				</originalData>
				<segment state="initial">
					<source>The XAML parser or compiler, or a runtime exception, gives the error "<pc dataRefEnd="id2" dataRefStart="id1" id="p1">The resource "<ph dataRef="id3" id="ph1" />" could not be resolved.</pc>".</source>
					<target>The XAML parser or compiler, or a runtime exception, gives the error "<pc dataRefEnd="id2" dataRefStart="id1" id="p1">The resource "<ph dataRef="id3" id="ph1" />" could not be resolved.</pc>".</target>
				</segment>
			</unit>
			<unit id="148" translate="yes">
				<segment state="initial">
					<source>The resource key doesn't apply to Universal Windows Platform (UWP) apps (this is the case with some Windows Phone resources, for example).</source>
					<target>The resource key doesn't apply to Universal Windows Platform (UWP) apps (this is the case with some Windows Phone resources, for example).</target>
				</segment>
			</unit>
			<unit id="149" translate="yes">
				<segment state="initial">
					<source>Find the correct equivalent resource and update your markup.</source>
					<target>Find the correct equivalent resource and update your markup.</target>
				</segment>
			</unit>
			<unit id="150" translate="yes">
				<originalData>
					<data id="id1">`PhoneAccentBrush`</data>
				</originalData>
				<segment state="initial">
					<source>Examples you might encounter right away are system keys such as <ph dataRef="id1" id="ph1" />.</source>
					<target>Examples you might encounter right away are system keys such as <ph dataRef="id1" id="ph1" />.</target>
				</segment>
			</unit>
			<unit id="151" translate="yes">
				<originalData>
					<data id="id1">*</data>
					<data id="id2">*</data>
					<data id="id3">&lt;name&gt;</data>
					<data id="id4">*</data>
					<data id="id5">*</data>
					<data id="id6">&lt;name&gt;</data>
					<data id="id7">*</data>
					<data id="id8">*</data>
					<data id="id9">&lt;name&gt;</data>
				</originalData>
				<segment state="initial">
					<source>The C# compiler gives the error "<pc dataRefEnd="id2" dataRefStart="id1" id="p1">The type or namespace name '<ph dataRef="id3" id="ph1" />' could not be found \[...\]</pc>" or "<pc dataRefEnd="id5" dataRefStart="id4" id="p2">The type or namespace name '<ph dataRef="id6" id="ph2" />' does not exist in the namespace \[...\]</pc>" or "<pc dataRefEnd="id8" dataRefStart="id7" id="p3">The type or namespace name '<ph dataRef="id9" id="ph3" />' does not exist in the current context</pc>".</source>
					<target>The C# compiler gives the error "<pc dataRefEnd="id2" dataRefStart="id1" id="p1">The type or namespace name '<ph dataRef="id3" id="ph1" />' could not be found \[...\]</pc>" or "<pc dataRefEnd="id5" dataRefStart="id4" id="p2">The type or namespace name '<ph dataRef="id6" id="ph2" />' does not exist in the namespace \[...\]</pc>" or "<pc dataRefEnd="id8" dataRefStart="id7" id="p3">The type or namespace name '<ph dataRef="id9" id="ph3" />' does not exist in the current context</pc>".</target>
				</segment>
			</unit>
			<unit id="152" translate="yes">
				<segment state="initial">
					<source>This is likely to mean that type is implemented in an extension SDK (although there may be cases where the remedy is not so straightforward).</source>
					<target>This is likely to mean that type is implemented in an extension SDK (although there may be cases where the remedy is not so straightforward).</target>
				</segment>
			</unit>
			<unit id="153" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/bg124285)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5"> &gt; </data>
					<data id="id6">**</data>
					<data id="id7">**</data>
				</originalData>
				<segment state="initial">
					<source>Use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Windows APIs</pc> reference content to determine what extension SDK implements the API and then use Visual Studio's <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Add</pc><ph dataRef="id5" id="ph1" /><pc dataRefEnd="id7" dataRefStart="id6" id="p3">Reference</pc> command to add a reference to that SDK to your project.</source>
					<target>Use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Windows APIs</pc> reference content to determine what extension SDK implements the API and then use Visual Studio's <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Add</pc><ph dataRef="id5" id="ph1" /><pc dataRefEnd="id7" dataRefStart="id6" id="p3">Reference</pc> command to add a reference to that SDK to your project.</target>
				</segment>
			</unit>
			<unit id="154" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn949001)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>If your app targets the set of APIs known as the universal device family then it's vital that you use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ApiInformation</pc></pc> class to test at runtime for the presence of extension SDK before you call them (this is called adaptive code).</source>
					<target>If your app targets the set of APIs known as the universal device family then it's vital that you use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ApiInformation</pc></pc> class to test at runtime for the presence of extension SDK before you call them (this is called adaptive code).</target>
				</segment>
			</unit>
			<unit id="155" translate="yes">
				<segment state="initial">
					<source>If a universal API exists, then that's always preferable to an API in an extension SDK.</source>
					<target>If a universal API exists, then that's always preferable to an API in an extension SDK.</target>
				</segment>
			</unit>
			<unit id="156" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](w8x-to-uwp-porting-to-a-uwp-project.md#extension-sdks)</data>
				</originalData>
				<segment state="initial">
					<source>For more info, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Extension SDKs</pc>.</source>
					<target>For more info, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Extension SDKs</pc>.</target>
				</segment>
			</unit>
			<unit id="157" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](w8x-to-uwp-porting-xaml-and-ui.md)</data>
				</originalData>
				<segment state="initial">
					<source>The next topic is <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Porting XAML and UI</pc>.</source>
					<target>The next topic is <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Porting XAML and UI</pc>.</target>
				</segment>
			</unit>
		</group>
	</file>
</xliff>