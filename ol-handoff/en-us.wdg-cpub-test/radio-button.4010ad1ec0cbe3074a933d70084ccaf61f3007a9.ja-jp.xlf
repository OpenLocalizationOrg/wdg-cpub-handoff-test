<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="ja-jp" version="2.0" xml:space="preserve" xmlns="urn:oasis:names:tc:xliff:document:2.0">
	<file id="1">
		<mda:metadata>
			<mda:metaGroup>
				<mda:meta type="tool-id">mdxliff</mda:meta>
				<mda:meta type="tool-name">mdxliff</mda:meta>
				<mda:meta type="tool-version">1.0-2eb3c86</mda:meta>
				<mda:meta type="tool-company">Microsoft</mda:meta>
			</mda:metaGroup>
		<mda:metaGroup><mda:meta type="olfilehash">1d14ed97fd7f7bdb6adc312177553187e507fd2d</mda:meta><mda:meta type="olfilepath">wdg-cpub-test\ndolci2\controls-and-patterns\radio-button.md</mda:meta><mda:meta type="oltranslationpriority"></mda:meta><mda:meta type="oltranslationtype">Human Translation</mda:meta><mda:meta type="olskeletonhash">1145129870bdc3392996c2eab4827e9716564f85</mda:meta><mda:meta type="olxliffhash">af616bcd521b546d9a0d6c82e6bec85d6ab0f072</mda:meta></mda:metaGroup></mda:metadata>
		<group id="content">
			<unit id="101" translate="yes">
				<segment state="initial">
					<source>Radio buttons let users select one option from two or more choices.</source>
					<target>Radio buttons let users select one option from two or more choices.</target>
				</segment>
			</unit>
			<unit id="102" translate="yes">
				<segment state="initial">
					<source>Guidelines for radio buttons</source>
					<target>Guidelines for radio buttons</target>
				</segment>
			</unit>
			<unit id="103" translate="yes">
				<segment state="initial">
					<source>Radio buttons</source>
					<target>Radio buttons</target>
				</segment>
			</unit>
			<unit id="104" translate="yes">
				<segment state="initial">
					<source>Radio buttons let users select one option from two or more choices.</source>
					<target>Radio buttons let users select one option from two or more choices.</target>
				</segment>
			</unit>
			<unit id="105" translate="yes">
				<segment state="initial">
					<source>Each option is represented by one radio button; a user can select only one radio button in a radio button group.</source>
					<target>Each option is represented by one radio button; a user can select only one radio button in a radio button group.</target>
				</segment>
			</unit>
			<unit id="106" translate="yes">
				<segment state="initial">
					<source>(If you're curious about the name, radio buttons are named for the channel preset buttons on a radio.)</source>
					<target>(If you're curious about the name, radio buttons are named for the channel preset buttons on a radio.)</target>
				</segment>
			</unit>
			<unit id="107" translate="yes">
				<segment state="initial">
					<source>Radio buttons</source>
					<target>Radio buttons</target>
				</segment>
			</unit>
			<unit id="108" translate="yes">
				<segment state="initial">
					<source>Important APIs</source>
					<target>Important APIs</target>
				</segment>
			</unit>
			<unit id="109" translate="yes">
				<segment state="initial">
					<source>RadioButton class</source>
					<target>RadioButton class</target>
				</segment>
			</unit>
			<unit id="110" translate="yes">
				<segment state="initial">
					<source>Checked event</source>
					<target>Checked event</target>
				</segment>
			</unit>
			<unit id="111" translate="yes">
				<segment state="initial">
					<source>IsChecked property</source>
					<target>IsChecked property</target>
				</segment>
			</unit>
			<unit id="112" translate="yes">
				<segment state="initial">
					<source>Is this the right control?</source>
					<target>Is this the right control?</target>
				</segment>
			</unit>
			<unit id="113" translate="yes">
				<segment state="initial">
					<source>Use radio buttons to present users with two or more mutually exclusive options, as here.</source>
					<target>Use radio buttons to present users with two or more mutually exclusive options, as here.</target>
				</segment>
			</unit>
			<unit id="114" translate="yes">
				<segment state="initial">
					<source>A group of radio buttons</source>
					<target>A group of radio buttons</target>
				</segment>
			</unit>
			<unit id="115" translate="yes">
				<segment state="initial">
					<source>Radio buttons add clarity and weight to very important options in your app.</source>
					<target>Radio buttons add clarity and weight to very important options in your app.</target>
				</segment>
			</unit>
			<unit id="116" translate="yes">
				<segment state="initial">
					<source>Use radio buttons when the options being presented are important enough to command more screen space and where the clarity of the choice demands very explicit options.</source>
					<target>Use radio buttons when the options being presented are important enough to command more screen space and where the clarity of the choice demands very explicit options.</target>
				</segment>
			</unit>
			<unit id="117" translate="yes">
				<segment state="initial">
					<source>Radio buttons emphasize all options equally, and that may draw more attention to the options than necessary.</source>
					<target>Radio buttons emphasize all options equally, and that may draw more attention to the options than necessary.</target>
				</segment>
			</unit>
			<unit id="118" translate="yes">
				<segment state="initial">
					<source>Consider using other controls, unless the options deserve extra attention from the user.</source>
					<target>Consider using other controls, unless the options deserve extra attention from the user.</target>
				</segment>
			</unit>
			<unit id="119" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](lists.md)</data>
				</originalData>
				<segment state="initial">
					<source>For example, if the default option is recommended for most users in most situations, use a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">drop-down list</pc> instead.</source>
					<target>For example, if the default option is recommended for most users in most situations, use a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">drop-down list</pc> instead.</target>
				</segment>
			</unit>
			<unit id="120" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](checkbox.md)</data>
					<data id="id3">[</data>
					<data id="id4">](toggles.md)</data>
				</originalData>
				<segment state="initial">
					<source>If there are only two mutually exclusive options, combine them into a single <pc dataRefEnd="id2" dataRefStart="id1" id="p1">checkbox</pc> or <pc dataRefEnd="id4" dataRefStart="id3" id="p2">toggle switch</pc>.</source>
					<target>If there are only two mutually exclusive options, combine them into a single <pc dataRefEnd="id2" dataRefStart="id1" id="p1">checkbox</pc> or <pc dataRefEnd="id4" dataRefStart="id3" id="p2">toggle switch</pc>.</target>
				</segment>
			</unit>
			<unit id="121" translate="yes">
				<segment state="initial">
					<source>For example, use a checkbox for "I agree" instead of two radio buttons for "I agree" and "I don't agree."</source>
					<target>For example, use a checkbox for "I agree" instead of two radio buttons for "I agree" and "I don't agree."</target>
				</segment>
			</unit>
			<unit id="122" translate="yes">
				<segment state="initial">
					<source>Two ways of presenting a binary choice</source>
					<target>Two ways of presenting a binary choice</target>
				</segment>
			</unit>
			<unit id="123" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](checkbox.md)</data>
					<data id="id3">[</data>
					<data id="id4">](lists.md)</data>
				</originalData>
				<segment state="initial">
					<source>When the user can select multiple options, use a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">checkbox</pc> or <pc dataRefEnd="id4" dataRefStart="id3" id="p2">list box</pc> control instead.</source>
					<target>When the user can select multiple options, use a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">checkbox</pc> or <pc dataRefEnd="id4" dataRefStart="id3" id="p2">list box</pc> control instead.</target>
				</segment>
			</unit>
			<unit id="124" translate="yes">
				<segment state="initial">
					<source>Selecting multiple options with check boxes</source>
					<target>Selecting multiple options with check boxes</target>
				</segment>
			</unit>
			<unit id="125" translate="yes">
				<segment state="initial">
					<source>Don't use radio buttons when the options are numbers that have fixed steps, like 10, 20, 30.</source>
					<target>Don't use radio buttons when the options are numbers that have fixed steps, like 10, 20, 30.</target>
				</segment>
			</unit>
			<unit id="126" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](slider.md)</data>
				</originalData>
				<segment state="initial">
					<source>Use a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">slider</pc> control instead.</source>
					<target>Use a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">slider</pc> control instead.</target>
				</segment>
			</unit>
			<unit id="127" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](lists.md)</data>
					<data id="id3">[</data>
					<data id="id4">](lists.md)</data>
					<data id="id5">[</data>
					<data id="id6">](lists.md)</data>
				</originalData>
				<segment state="initial">
					<source>If there are more than 8 options, use a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">drop-down list</pc>, a single-select <pc dataRefEnd="id4" dataRefStart="id3" id="p2">list box</pc>, or a <pc dataRefEnd="id6" dataRefStart="id5" id="p3">list box</pc> instead.</source>
					<target>If there are more than 8 options, use a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">drop-down list</pc>, a single-select <pc dataRefEnd="id4" dataRefStart="id3" id="p2">list box</pc>, or a <pc dataRefEnd="id6" dataRefStart="id5" id="p3">list box</pc> instead.</target>
				</segment>
			</unit>
			<unit id="128" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](lists.md)</data>
				</originalData>
				<segment state="initial">
					<source>If the available options are based on the app’s current context, or can otherwise vary dynamically, use a single-select <pc dataRefEnd="id2" dataRefStart="id1" id="p1">list box</pc> instead.</source>
					<target>If the available options are based on the app’s current context, or can otherwise vary dynamically, use a single-select <pc dataRefEnd="id2" dataRefStart="id1" id="p1">list box</pc> instead.</target>
				</segment>
			</unit>
			<unit id="129" translate="yes">
				<segment state="initial">
					<source>Example</source>
					<target>Example</target>
				</segment>
			</unit>
			<unit id="130" translate="yes">
				<segment state="initial">
					<source>Radio buttons in the Microsoft Edge browser settings.</source>
					<target>Radio buttons in the Microsoft Edge browser settings.</target>
				</segment>
			</unit>
			<unit id="131" translate="yes">
				<segment state="initial">
					<source>Radio buttons in the Microsoft Edge browser settings</source>
					<target>Radio buttons in the Microsoft Edge browser settings</target>
				</segment>
			</unit>
			<unit id="132" translate="yes">
				<segment state="initial">
					<source>Create a radio button</source>
					<target>Create a radio button</target>
				</segment>
			</unit>
			<unit id="133" translate="yes">
				<segment state="initial">
					<source>Radio buttons work in groups.</source>
					<target>Radio buttons work in groups.</target>
				</segment>
			</unit>
			<unit id="134" translate="yes">
				<segment state="initial">
					<source>There are 2 ways you can group radio button controls:</source>
					<target>There are 2 ways you can group radio button controls:</target>
				</segment>
			</unit>
			<unit id="135" translate="yes">
				<segment state="initial">
					<source>Put them inside the same parent container.</source>
					<target>Put them inside the same parent container.</target>
				</segment>
			</unit>
			<unit id="136" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.radiobutton.groupname.aspx)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Set the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">GroupName</pc></pc> property on each radio button to the same value.</source>
					<target>Set the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">GroupName</pc></pc> property on each radio button to the same value.</target>
				</segment>
			</unit>
			<unit id="137" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">&amp;nbsp;&amp;nbsp;</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc><ph dataRef="id3" id="ph1" />A group of radio buttons behaves like a single control when accessed via the keyboard.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc><ph dataRef="id3" id="ph1" />A group of radio buttons behaves like a single control when accessed via the keyboard.</target>
				</segment>
			</unit>
			<unit id="138" translate="yes">
				<segment state="initial">
					<source>Only the selected choice is accessible using the Tab key but users can cycle through the group using arrow keys.</source>
					<target>Only the selected choice is accessible using the Tab key but users can cycle through the group using arrow keys.</target>
				</segment>
			</unit>
			<unit id="139" translate="yes">
				<segment state="initial">
					<source>In this example, the first group of radio buttons is implicitly grouped by being in the same stack panel.</source>
					<target>In this example, the first group of radio buttons is implicitly grouped by being in the same stack panel.</target>
				</segment>
			</unit>
			<unit id="140" translate="yes">
				<segment state="initial">
					<source>The second group is divided between 2 stack panels, so they're explicitly grouped by GroupName.</source>
					<target>The second group is divided between 2 stack panels, so they're explicitly grouped by GroupName.</target>
				</segment>
			</unit>
			<unit id="141" translate="yes">
				<segment state="initial">
					<source>The radio button groups look like this.</source>
					<target>The radio button groups look like this.</target>
				</segment>
			</unit>
			<unit id="142" translate="yes">
				<segment state="initial">
					<source>Radio buttons in two groups</source>
					<target>Radio buttons in two groups</target>
				</segment>
			</unit>
			<unit id="143" translate="yes">
				<originalData>
					<data id="id1">*</data>
					<data id="id2">*</data>
					<data id="id3">*</data>
					<data id="id4">*</data>
				</originalData>
				<segment state="initial">
					<source>A radio button has two states: <pc dataRefEnd="id2" dataRefStart="id1" id="p1">selected</pc> or <pc dataRefEnd="id4" dataRefStart="id3" id="p2">cleared</pc>.</source>
					<target>A radio button has two states: <pc dataRefEnd="id2" dataRefStart="id1" id="p1">selected</pc> or <pc dataRefEnd="id4" dataRefStart="id3" id="p2">cleared</pc>.</target>
				</segment>
			</unit>
			<unit id="144" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.primitives.togglebutton.ischecked.aspx)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source>When a radio button is selected, its <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">IsChecked</pc></pc> property is <pc dataRefEnd="id6" dataRefStart="id5" id="p3">true</pc>.</source>
					<target>When a radio button is selected, its <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">IsChecked</pc></pc> property is <pc dataRefEnd="id6" dataRefStart="id5" id="p3">true</pc>.</target>
				</segment>
			</unit>
			<unit id="145" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>When a radio button is cleared, its <pc dataRefEnd="id2" dataRefStart="id1" id="p1">IsChecked</pc> property is <pc dataRefEnd="id4" dataRefStart="id3" id="p2">false</pc>.</source>
					<target>When a radio button is cleared, its <pc dataRefEnd="id2" dataRefStart="id1" id="p1">IsChecked</pc> property is <pc dataRefEnd="id4" dataRefStart="id3" id="p2">false</pc>.</target>
				</segment>
			</unit>
			<unit id="146" translate="yes">
				<segment state="initial">
					<source>A radio button can be cleared by clicking another radio button in the same group, but it cannot be cleared by clicking it again.</source>
					<target>A radio button can be cleared by clicking another radio button in the same group, but it cannot be cleared by clicking it again.</target>
				</segment>
			</unit>
			<unit id="147" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>However, you can clear a radio button programmatically by setting its IsChecked property to <pc dataRefEnd="id2" dataRefStart="id1" id="p1">false</pc>.</source>
					<target>However, you can clear a radio button programmatically by setting its IsChecked property to <pc dataRefEnd="id2" dataRefStart="id1" id="p1">false</pc>.</target>
				</segment>
			</unit>
			<unit id="148" translate="yes">
				<segment state="initial">
					<source>Recommendations</source>
					<target>Recommendations</target>
				</segment>
			</unit>
			<unit id="149" translate="yes">
				<segment state="initial">
					<source>Make sure that the purpose and current state of a set of radio buttons is clear.</source>
					<target>Make sure that the purpose and current state of a set of radio buttons is clear.</target>
				</segment>
			</unit>
			<unit id="150" translate="yes">
				<segment state="initial">
					<source>Always give visual feedback when the user taps a radio button.</source>
					<target>Always give visual feedback when the user taps a radio button.</target>
				</segment>
			</unit>
			<unit id="151" translate="yes">
				<segment state="initial">
					<source>Give visual feedback as the user interacts with radio buttons.</source>
					<target>Give visual feedback as the user interacts with radio buttons.</target>
				</segment>
			</unit>
			<unit id="152" translate="yes">
				<segment state="initial">
					<source>Normal, pressed, checked, and disabled are examples of radio button states.</source>
					<target>Normal, pressed, checked, and disabled are examples of radio button states.</target>
				</segment>
			</unit>
			<unit id="153" translate="yes">
				<segment state="initial">
					<source>A user taps a radio button to activate the related option.</source>
					<target>A user taps a radio button to activate the related option.</target>
				</segment>
			</unit>
			<unit id="154" translate="yes">
				<segment state="initial">
					<source>Tapping an activated option doesn’t deactivate it, but tapping another option transfers activation to that option.</source>
					<target>Tapping an activated option doesn’t deactivate it, but tapping another option transfers activation to that option.</target>
				</segment>
			</unit>
			<unit id="155" translate="yes">
				<segment state="initial">
					<source>Reserve visual effects and animations for touch feedback, and for the checked state; in the unchecked state, radio button controls should appear unused or inactive (but not disabled).</source>
					<target>Reserve visual effects and animations for touch feedback, and for the checked state; in the unchecked state, radio button controls should appear unused or inactive (but not disabled).</target>
				</segment>
			</unit>
			<unit id="156" translate="yes">
				<segment state="initial">
					<source>Limit the radio button’s text content to a single line.</source>
					<target>Limit the radio button’s text content to a single line.</target>
				</segment>
			</unit>
			<unit id="157" translate="yes">
				<segment state="initial">
					<source>You can customize the radio button’s visuals to display a description of the option in smaller font size below the main line of text.</source>
					<target>You can customize the radio button’s visuals to display a description of the option in smaller font size below the main line of text.</target>
				</segment>
			</unit>
			<unit id="158" translate="yes">
				<segment state="initial">
					<source>If the text content is dynamic, consider how the button will resize and what will happen to visuals around it.</source>
					<target>If the text content is dynamic, consider how the button will resize and what will happen to visuals around it.</target>
				</segment>
			</unit>
			<unit id="159" translate="yes">
				<segment state="initial">
					<source>Use the default font unless your brand guidelines tell you to use another.</source>
					<target>Use the default font unless your brand guidelines tell you to use another.</target>
				</segment>
			</unit>
			<unit id="160" translate="yes">
				<segment state="initial">
					<source>Enclose the radio button in a label element so that tapping the label selects the radio button.</source>
					<target>Enclose the radio button in a label element so that tapping the label selects the radio button.</target>
				</segment>
			</unit>
			<unit id="161" translate="yes">
				<segment state="initial">
					<source>Place the label text after the radio button control, not before or above it.</source>
					<target>Place the label text after the radio button control, not before or above it.</target>
				</segment>
			</unit>
			<unit id="162" translate="yes">
				<segment state="initial">
					<source>Consider customizing your radio buttons.</source>
					<target>Consider customizing your radio buttons.</target>
				</segment>
			</unit>
			<unit id="163" translate="yes">
				<segment state="initial">
					<source>By default, a radio button consists of two concentric circles—the inner one filled (and shown when the radio button is checked), the outer one stroked—and some text content.</source>
					<target>By default, a radio button consists of two concentric circles—the inner one filled (and shown when the radio button is checked), the outer one stroked—and some text content.</target>
				</segment>
			</unit>
			<unit id="164" translate="yes">
				<segment state="initial">
					<source>But we encourage you to be creative.</source>
					<target>But we encourage you to be creative.</target>
				</segment>
			</unit>
			<unit id="165" translate="yes">
				<segment state="initial">
					<source>Users are comfortable interacting directly with the content of an app.</source>
					<target>Users are comfortable interacting directly with the content of an app.</target>
				</segment>
			</unit>
			<unit id="166" translate="yes">
				<segment state="initial">
					<source>So you may choose to show the actual content on offer, whether that’s presented with graphics or as subtle textual toggle buttons.</source>
					<target>So you may choose to show the actual content on offer, whether that’s presented with graphics or as subtle textual toggle buttons.</target>
				</segment>
			</unit>
			<unit id="167" translate="yes">
				<segment state="initial">
					<source>Don't put more than 8 options in a radio button group.</source>
					<target>Don't put more than 8 options in a radio button group.</target>
				</segment>
			</unit>
			<unit id="168" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](lists.md)</data>
					<data id="id3">[</data>
					<data id="id4">](lists.md)</data>
					<data id="id5">[</data>
					<data id="id6">](lists.md)</data>
				</originalData>
				<segment state="initial">
					<source>When you need to present more options, use a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">drop-down list</pc>, <pc dataRefEnd="id4" dataRefStart="id3" id="p2">list box</pc>, or a <pc dataRefEnd="id6" dataRefStart="id5" id="p3">list view</pc> instead.</source>
					<target>When you need to present more options, use a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">drop-down list</pc>, <pc dataRefEnd="id4" dataRefStart="id3" id="p2">list box</pc>, or a <pc dataRefEnd="id6" dataRefStart="id5" id="p3">list view</pc> instead.</target>
				</segment>
			</unit>
			<unit id="169" translate="yes">
				<segment state="initial">
					<source>Don't put two radio button groups next to each other.</source>
					<target>Don't put two radio button groups next to each other.</target>
				</segment>
			</unit>
			<unit id="170" translate="yes">
				<segment state="initial">
					<source>When two radio button groups are right next to each other, it's difficult to determine which buttons belong to which group.</source>
					<target>When two radio button groups are right next to each other, it's difficult to determine which buttons belong to which group.</target>
				</segment>
			</unit>
			<unit id="171" translate="yes">
				<segment state="initial">
					<source>Use group labels to separate them.</source>
					<target>Use group labels to separate them.</target>
				</segment>
			</unit>
			<unit id="172" translate="yes">
				<segment state="initial">
					<source>Additional usage guidance</source>
					<target>Additional usage guidance</target>
				</segment>
			</unit>
			<unit id="173" translate="yes">
				<segment state="initial">
					<source>This illustration shows the proper way to position and space radio buttons.</source>
					<target>This illustration shows the proper way to position and space radio buttons.</target>
				</segment>
			</unit>
			<unit id="174" translate="yes">
				<segment state="initial">
					<source>A set of radio buttons</source>
					<target>A set of radio buttons</target>
				</segment>
			</unit>
			<unit id="175" translate="yes">
				<segment state="initial">
					<source>Related topics</source>
					<target>Related topics</target>
				</segment>
			</unit>
			<unit id="176" translate="yes">
				<segment state="initial">
					<source>For designers</source>
					<target>For designers</target>
				</segment>
			</unit>
			<unit id="177" translate="yes">
				<segment state="initial">
					<source>Guidelines for buttons</source>
					<target>Guidelines for buttons</target>
				</segment>
			</unit>
			<unit id="178" translate="yes">
				<segment state="initial">
					<source>Guidelines for toggle switches</source>
					<target>Guidelines for toggle switches</target>
				</segment>
			</unit>
			<unit id="179" translate="yes">
				<segment state="initial">
					<source>Guidelines for checkboxes</source>
					<target>Guidelines for checkboxes</target>
				</segment>
			</unit>
			<unit id="180" translate="yes">
				<segment state="initial">
					<source>Guidelines for drop-down lists</source>
					<target>Guidelines for drop-down lists</target>
				</segment>
			</unit>
			<unit id="181" translate="yes">
				<segment state="initial">
					<source>Guidelines for list view and grid view controls</source>
					<target>Guidelines for list view and grid view controls</target>
				</segment>
			</unit>
			<unit id="182" translate="yes">
				<segment state="initial">
					<source>Guidelines for sliders</source>
					<target>Guidelines for sliders</target>
				</segment>
			</unit>
			<unit id="183" translate="yes">
				<segment state="initial">
					<source>Guidelines for the select control</source>
					<target>Guidelines for the select control</target>
				</segment>
			</unit>
			<unit id="184" translate="yes">
				<segment state="initial">
					<source>For developers (XAML)</source>
					<target>For developers (XAML)</target>
				</segment>
			</unit>
			<unit id="185" translate="yes">
				<segment state="initial">
					<source>Windows.UI.Xaml.Controls RadioButton class</source>
					<target>Windows.UI.Xaml.Controls RadioButton class</target>
				</segment>
			</unit>
		</group>
	</file>
</xliff>