<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="ja-jp" version="2.0" xml:space="preserve" xmlns="urn:oasis:names:tc:xliff:document:2.0">
	<file id="1">
		<mda:metadata>
			<mda:metaGroup>
				<mda:meta type="tool-id">mdxliff</mda:meta>
				<mda:meta type="tool-name">mdxliff</mda:meta>
				<mda:meta type="tool-version">1.0-2eb3c86</mda:meta>
				<mda:meta type="tool-company">Microsoft</mda:meta>
			</mda:metaGroup>
		<mda:metaGroup><mda:meta type="olfilehash">0226dc9c3cd902389ee4f2c411f846325156c462</mda:meta><mda:meta type="olfilepath">wdg-cpub-test\ndolci2\controls-and-patterns\date-and-time.md</mda:meta><mda:meta type="oltranslationpriority"></mda:meta><mda:meta type="oltranslationtype">Human Translation</mda:meta><mda:meta type="olskeletonhash">9b2afa6b2ac2711fa36e943d4a7828ee7600d594</mda:meta><mda:meta type="olxliffhash">0c9f46e46c2704236aeaf8f356c7606937e7e486</mda:meta></mda:metaGroup></mda:metadata>
		<group id="content">
			<unit id="101" translate="yes">
				<segment state="initial">
					<source>Date and time controls let you view and set the date and time.</source>
					<target>Date and time controls let you view and set the date and time.</target>
				</segment>
			</unit>
			<unit id="102" translate="yes">
				<segment state="initial">
					<source>This article provides design guidelines and helps you pick the right control.</source>
					<target>This article provides design guidelines and helps you pick the right control.</target>
				</segment>
			</unit>
			<unit id="103" translate="yes">
				<segment state="initial">
					<source>Guidelines for date and time controls</source>
					<target>Guidelines for date and time controls</target>
				</segment>
			</unit>
			<unit id="104" translate="yes">
				<segment state="initial">
					<source>Calendar, date, and time controls</source>
					<target>Calendar, date, and time controls</target>
				</segment>
			</unit>
			<unit id="105" translate="yes">
				<segment state="initial">
					<source>Date and time controls give you standard, localized ways to let a user view and set date and time values in your app.</source>
					<target>Date and time controls give you standard, localized ways to let a user view and set date and time values in your app.</target>
				</segment>
			</unit>
			<unit id="106" translate="yes">
				<segment state="initial">
					<source>This article provides design guidelines and helps you pick the right control.</source>
					<target>This article provides design guidelines and helps you pick the right control.</target>
				</segment>
			</unit>
			<unit id="107" translate="yes">
				<segment state="initial">
					<source>Important APIs</source>
					<target>Important APIs</target>
				</segment>
			</unit>
			<unit id="108" translate="yes">
				<segment state="initial">
					<source>CalendarView class</source>
					<target>CalendarView class</target>
				</segment>
			</unit>
			<unit id="109" translate="yes">
				<segment state="initial">
					<source>CalendarDatePicker class</source>
					<target>CalendarDatePicker class</target>
				</segment>
			</unit>
			<unit id="110" translate="yes">
				<segment state="initial">
					<source>DatePicker class</source>
					<target>DatePicker class</target>
				</segment>
			</unit>
			<unit id="111" translate="yes">
				<segment state="initial">
					<source>TimePicker class</source>
					<target>TimePicker class</target>
				</segment>
			</unit>
			<unit id="112" translate="yes">
				<segment state="initial">
					<source>Which date or time control should you use?</source>
					<target>Which date or time control should you use?</target>
				</segment>
			</unit>
			<unit id="113" translate="yes">
				<segment state="initial">
					<source>There are four date and time controls to choose from; the control you use depends on your scenario.</source>
					<target>There are four date and time controls to choose from; the control you use depends on your scenario.</target>
				</segment>
			</unit>
			<unit id="114" translate="yes">
				<segment state="initial">
					<source>Use this info to pick the right control to use in your app.</source>
					<target>Use this info to pick the right control to use in your app.</target>
				</segment>
			</unit>
			<unit id="115" translate="yes">
				<segment state="initial">
					<source>Calendar view</source>
					<target>Calendar view</target>
				</segment>
			</unit>
			<unit id="116" translate="yes">
				<segment state="initial">
					<source>Example of calendar view</source>
					<target>Example of calendar view</target>
				</segment>
			</unit>
			<unit id="117" translate="yes">
				<segment state="initial">
					<source>Use to pick a single date or a range of dates from an always visible calendar.</source>
					<target>Use to pick a single date or a range of dates from an always visible calendar.</target>
				</segment>
			</unit>
			<unit id="118" translate="yes">
				<segment state="initial">
					<source>Calendar date picker</source>
					<target>Calendar date picker</target>
				</segment>
			</unit>
			<unit id="119" translate="yes">
				<segment state="initial">
					<source>Example of calendar date picker</source>
					<target>Example of calendar date picker</target>
				</segment>
			</unit>
			<unit id="120" translate="yes">
				<segment state="initial">
					<source>Use to pick a single date from a contextual calendar.</source>
					<target>Use to pick a single date from a contextual calendar.</target>
				</segment>
			</unit>
			<unit id="121" translate="yes">
				<segment state="initial">
					<source>Date picker</source>
					<target>Date picker</target>
				</segment>
			</unit>
			<unit id="122" translate="yes">
				<segment state="initial">
					<source>Example of date picker</source>
					<target>Example of date picker</target>
				</segment>
			</unit>
			<unit id="123" translate="yes">
				<segment state="initial">
					<source>Use to pick a single known date when contextual info isn't important.</source>
					<target>Use to pick a single known date when contextual info isn't important.</target>
				</segment>
			</unit>
			<unit id="124" translate="yes">
				<segment state="initial">
					<source>Time picker</source>
					<target>Time picker</target>
				</segment>
			</unit>
			<unit id="125" translate="yes">
				<segment state="initial">
					<source>Example of time picker</source>
					<target>Example of time picker</target>
				</segment>
			</unit>
			<unit id="126" translate="yes">
				<segment state="initial">
					<source>Use to pick a single time value.</source>
					<target>Use to pick a single time value.</target>
				</segment>
			</unit>
			<unit id="127" translate="yes">
				<segment state="initial">
					<source>Calendar view</source>
					<target>Calendar view</target>
				</segment>
			</unit>
			<unit id="128" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">CalendarView</pc> lets a user view and interact with a calendar that they can navigate by month, year, or decade.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">CalendarView</pc> lets a user view and interact with a calendar that they can navigate by month, year, or decade.</target>
				</segment>
			</unit>
			<unit id="129" translate="yes">
				<segment state="initial">
					<source>A user can select a single date or a range of dates.</source>
					<target>A user can select a single date or a range of dates.</target>
				</segment>
			</unit>
			<unit id="130" translate="yes">
				<segment state="initial">
					<source>It doesn't have a picker surface and the calendar is always visible.</source>
					<target>It doesn't have a picker surface and the calendar is always visible.</target>
				</segment>
			</unit>
			<unit id="131" translate="yes">
				<segment state="initial">
					<source>The calendar view is made up of 3 separate views: the month view, year view, and decade view.</source>
					<target>The calendar view is made up of 3 separate views: the month view, year view, and decade view.</target>
				</segment>
			</unit>
			<unit id="132" translate="yes">
				<segment state="initial">
					<source>By default, it starts with the month view open, but you can specify any view as the startup view.</source>
					<target>By default, it starts with the month view open, but you can specify any view as the startup view.</target>
				</segment>
			</unit>
			<unit id="133" translate="yes">
				<segment state="initial">
					<source>Example of calendar date picker</source>
					<target>Example of calendar date picker</target>
				</segment>
			</unit>
			<unit id="134" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>If you need to let a user select multiple dates, you must use a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">CalendarView</pc>.</source>
					<target>If you need to let a user select multiple dates, you must use a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">CalendarView</pc>.</target>
				</segment>
			</unit>
			<unit id="135" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>If you need to let a user pick only a single date and don’t need a calendar to be always visible, consider using a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">CalendarDatePicker</pc> or <pc dataRefEnd="id4" dataRefStart="id3" id="p2">DatePicker</pc> control.</source>
					<target>If you need to let a user pick only a single date and don’t need a calendar to be always visible, consider using a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">CalendarDatePicker</pc> or <pc dataRefEnd="id4" dataRefStart="id3" id="p2">DatePicker</pc> control.</target>
				</segment>
			</unit>
			<unit id="136" translate="yes">
				<segment state="initial">
					<source>Calendar date picker</source>
					<target>Calendar date picker</target>
				</segment>
			</unit>
			<unit id="137" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">CalendarDatePicker</pc> is a drop down control that’s optimized for picking a single date from a calendar view where contextual information like the day of the week or fullness of the calendar is important.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">CalendarDatePicker</pc> is a drop down control that’s optimized for picking a single date from a calendar view where contextual information like the day of the week or fullness of the calendar is important.</target>
				</segment>
			</unit>
			<unit id="138" translate="yes">
				<segment state="initial">
					<source>You can modify the calendar to provide additional context or to limit available dates.</source>
					<target>You can modify the calendar to provide additional context or to limit available dates.</target>
				</segment>
			</unit>
			<unit id="139" translate="yes">
				<segment state="initial">
					<source>The entry point displays placeholder text if a date has not been set; otherwise, it displays the chosen date.</source>
					<target>The entry point displays placeholder text if a date has not been set; otherwise, it displays the chosen date.</target>
				</segment>
			</unit>
			<unit id="140" translate="yes">
				<segment state="initial">
					<source>When the user selects the entry point, a calendar view expands for the user to make a date selection.</source>
					<target>When the user selects the entry point, a calendar view expands for the user to make a date selection.</target>
				</segment>
			</unit>
			<unit id="141" translate="yes">
				<segment state="initial">
					<source>The calendar view overlays other UI; it doesn't push other UI out of the way.</source>
					<target>The calendar view overlays other UI; it doesn't push other UI out of the way.</target>
				</segment>
			</unit>
			<unit id="142" translate="yes">
				<segment state="initial">
					<source>Example of calendar date picker</source>
					<target>Example of calendar date picker</target>
				</segment>
			</unit>
			<unit id="143" translate="yes">
				<segment state="initial">
					<source>Use a calendar date picker for things like choosing an appointment or departure date.</source>
					<target>Use a calendar date picker for things like choosing an appointment or departure date.</target>
				</segment>
			</unit>
			<unit id="144" translate="yes">
				<segment state="initial">
					<source>Date picker</source>
					<target>Date picker</target>
				</segment>
			</unit>
			<unit id="145" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">DatePicker</pc> control provides a standardized way to choose a specific date.</source>
					<target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">DatePicker</pc> control provides a standardized way to choose a specific date.</target>
				</segment>
			</unit>
			<unit id="146" translate="yes">
				<segment state="initial">
					<source>The entry point displays the chosen date, and when the user selects the entry point, a picker surface expands vertically from the middle for the user to make a selection.</source>
					<target>The entry point displays the chosen date, and when the user selects the entry point, a picker surface expands vertically from the middle for the user to make a selection.</target>
				</segment>
			</unit>
			<unit id="147" translate="yes">
				<segment state="initial">
					<source>The date picker overlays other UI; it doesn't push other UI out of the way.</source>
					<target>The date picker overlays other UI; it doesn't push other UI out of the way.</target>
				</segment>
			</unit>
			<unit id="148" translate="yes">
				<segment state="initial">
					<source>Example of the date picker expanding</source>
					<target>Example of the date picker expanding</target>
				</segment>
			</unit>
			<unit id="149" translate="yes">
				<segment state="initial">
					<source>Use a date picker to let a user pick a known date, such as a date of birth, where the context of the calendar is not important.</source>
					<target>Use a date picker to let a user pick a known date, such as a date of birth, where the context of the calendar is not important.</target>
				</segment>
			</unit>
			<unit id="150" translate="yes">
				<segment state="initial">
					<source>Time picker</source>
					<target>Time picker</target>
				</segment>
			</unit>
			<unit id="151" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">TimePicker</pc> is used to select a single time value for things like appointments or a departure time.</source>
					<target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">TimePicker</pc> is used to select a single time value for things like appointments or a departure time.</target>
				</segment>
			</unit>
			<unit id="152" translate="yes">
				<segment state="initial">
					<source>It's a static display that is set by the user or in code, but it doesn't update to display the current time.</source>
					<target>It's a static display that is set by the user or in code, but it doesn't update to display the current time.</target>
				</segment>
			</unit>
			<unit id="153" translate="yes">
				<segment state="initial">
					<source>The entry point displays the chosen time, and when the user selects the entry point, a picker surface expands vertically from the middle for the user to make a selection.</source>
					<target>The entry point displays the chosen time, and when the user selects the entry point, a picker surface expands vertically from the middle for the user to make a selection.</target>
				</segment>
			</unit>
			<unit id="154" translate="yes">
				<segment state="initial">
					<source>The time picker overlays other UI; it doesn't push other UI out of the way.</source>
					<target>The time picker overlays other UI; it doesn't push other UI out of the way.</target>
				</segment>
			</unit>
			<unit id="155" translate="yes">
				<segment state="initial">
					<source>Example of the time picker expanding</source>
					<target>Example of the time picker expanding</target>
				</segment>
			</unit>
			<unit id="156" translate="yes">
				<segment state="initial">
					<source>Use a time picker to let a user pick a single time value.</source>
					<target>Use a time picker to let a user pick a single time value.</target>
				</segment>
			</unit>
			<unit id="157" translate="yes">
				<segment state="initial">
					<source>Create a date or time control</source>
					<target>Create a date or time control</target>
				</segment>
			</unit>
			<unit id="158" translate="yes">
				<segment state="initial">
					<source>See these articles for info and examples specific to each date and time control.</source>
					<target>See these articles for info and examples specific to each date and time control.</target>
				</segment>
			</unit>
			<unit id="159" translate="yes">
				<segment state="initial">
					<source>Calendar view</source>
					<target>Calendar view</target>
				</segment>
			</unit>
			<unit id="160" translate="yes">
				<segment state="initial">
					<source>Calendar date picker</source>
					<target>Calendar date picker</target>
				</segment>
			</unit>
			<unit id="161" translate="yes">
				<segment state="initial">
					<source>Date picker</source>
					<target>Date picker</target>
				</segment>
			</unit>
			<unit id="162" translate="yes">
				<segment state="initial">
					<source>Time Picker</source>
					<target>Time Picker</target>
				</segment>
			</unit>
			<unit id="163" translate="yes">
				<segment state="initial">
					<source>Globalization</source>
					<target>Globalization</target>
				</segment>
			</unit>
			<unit id="164" translate="yes">
				<segment state="initial">
					<source>The XAML date controls support each of the calendar systems supported by Windows.</source>
					<target>The XAML date controls support each of the calendar systems supported by Windows.</target>
				</segment>
			</unit>
			<unit id="165" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.globalization.calendaridentifiers.aspx)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>These calendars are specified in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.Globalization.CalendarIdentifiers</pc></pc> class.</source>
					<target>These calendars are specified in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.Globalization.CalendarIdentifiers</pc></pc> class.</target>
				</segment>
			</unit>
			<unit id="166" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>Each control uses the correct calendar for your app's default language, or you can set the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">CalendarIdentifier</pc> property to use a specific calendar system.</source>
					<target>Each control uses the correct calendar for your app's default language, or you can set the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">CalendarIdentifier</pc> property to use a specific calendar system.</target>
				</segment>
			</unit>
			<unit id="167" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.globalization.clockidentifiers.aspx)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>The time picker control supports each of the clock systems specified in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.Globalization.ClockIdentifiers</pc></pc> class.</source>
					<target>The time picker control supports each of the clock systems specified in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.Globalization.ClockIdentifiers</pc></pc> class.</target>
				</segment>
			</unit>
			<unit id="168" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.timepicker.clockidentifier.aspx)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>You can set the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ClockIdentifier</pc></pc> property to use either a 12-hour clock or 24-hour clock.</source>
					<target>You can set the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ClockIdentifier</pc></pc> property to use either a 12-hour clock or 24-hour clock.</target>
				</segment>
			</unit>
			<unit id="169" translate="yes">
				<segment state="initial">
					<source>The type of the property is String, but you must use values that correspond to the static string properties of the ClockIdentifiers class.</source>
					<target>The type of the property is String, but you must use values that correspond to the static string properties of the ClockIdentifiers class.</target>
				</segment>
			</unit>
			<unit id="170" translate="yes">
				<segment state="initial">
					<source>These are: TwelveHour (the string "12HourClock")and TwentyFourHour (the string "24HourClock").</source>
					<target>These are: TwelveHour (the string "12HourClock")and TwentyFourHour (the string "24HourClock").</target>
				</segment>
			</unit>
			<unit id="171" translate="yes">
				<segment state="initial">
					<source>"12HourClock" is the default value.</source>
					<target>"12HourClock" is the default value.</target>
				</segment>
			</unit>
			<unit id="172" translate="yes">
				<segment state="initial">
					<source>DateTime and Calendar values</source>
					<target>DateTime and Calendar values</target>
				</segment>
			</unit>
			<unit id="173" translate="yes">
				<segment state="initial">
					<source>The date objects used in the XAML date and time controls have a different representation depending on your programming language.</source>
					<target>The date objects used in the XAML date and time controls have a different representation depending on your programming language.</target>
				</segment>
			</unit>
			<unit id="174" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/xaml/system.datetimeoffset.aspx)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>C# and Visual Basic use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">System.DateTimeOffset</pc></pc> structure that is part of .NET.</source>
					<target>C# and Visual Basic use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">System.DateTimeOffset</pc></pc> structure that is part of .NET.</target>
				</segment>
			</unit>
			<unit id="175" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/xaml/br205770.aspx)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>C++/CX uses the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows::Foundation::DateTime</pc></pc> structure.</source>
					<target>C++/CX uses the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows::Foundation::DateTime</pc></pc> structure.</target>
				</segment>
			</unit>
			<unit id="176" translate="yes">
				<segment state="initial">
					<source>A related concept is the Calendar class, which influences how dates are interpreted in context.</source>
					<target>A related concept is the Calendar class, which influences how dates are interpreted in context.</target>
				</segment>
			</unit>
			<unit id="177" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.globalization.calendar.aspx)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>All Windows Runtime apps can use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.Globalization.Calendar</pc></pc> class.</source>
					<target>All Windows Runtime apps can use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.Globalization.Calendar</pc></pc> class.</target>
				</segment>
			</unit>
			<unit id="178" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/xaml/system.globalization.calendar.aspx)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>C# and Visual Basic apps can alternatively use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">System.Globalization.Calendar</pc></pc> class, which has very similar functionality.</source>
					<target>C# and Visual Basic apps can alternatively use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">System.Globalization.Calendar</pc></pc> class, which has very similar functionality.</target>
				</segment>
			</unit>
			<unit id="179" translate="yes">
				<segment state="initial">
					<source>(Windows Runtime apps can use the base .NET Calendar class but not the specific implementations; for example, GregorianCalendar.)</source>
					<target>(Windows Runtime apps can use the base .NET Calendar class but not the specific implementations; for example, GregorianCalendar.)</target>
				</segment>
			</unit>
			<unit id="180" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/xaml/system.datetime.aspx)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/xaml/system.datetimeoffset.aspx)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>.NET also supports a type named <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">DateTime</pc></pc>, which is implicitly convertible to a <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">DateTimeOffset</pc></pc>.</source>
					<target>.NET also supports a type named <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">DateTime</pc></pc>, which is implicitly convertible to a <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">DateTimeOffset</pc></pc>.</target>
				</segment>
			</unit>
			<unit id="181" translate="yes">
				<segment state="initial">
					<source>So you might see a "DateTime" type being used in .NET code that's used to set values that are really DateTimeOffset.</source>
					<target>So you might see a "DateTime" type being used in .NET code that's used to set values that are really DateTimeOffset.</target>
				</segment>
			</unit>
			<unit id="182" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/xaml/system.datetimeoffset.aspx)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>For more info on the difference between DateTime and DateTimeOffset, see Remarks in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">DateTimeOffset</pc></pc> class.</source>
					<target>For more info on the difference between DateTime and DateTimeOffset, see Remarks in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">DateTimeOffset</pc></pc> class.</target>
				</segment>
			</unit>
			<unit id="183" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">&amp;nbsp;&amp;nbsp;</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc><ph dataRef="id3" id="ph1" />Properties that take date objects can't be set as a XAML attribute string, because the Windows Runtime XAML parser doesn't have a conversion logic for converting strings to dates as DateTime/DateTimeOffset objects.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc><ph dataRef="id3" id="ph1" />Properties that take date objects can't be set as a XAML attribute string, because the Windows Runtime XAML parser doesn't have a conversion logic for converting strings to dates as DateTime/DateTimeOffset objects.</target>
				</segment>
			</unit>
			<unit id="184" translate="yes">
				<segment state="initial">
					<source>You typically set these values in code.</source>
					<target>You typically set these values in code.</target>
				</segment>
			</unit>
			<unit id="185" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](../xaml-platform/binding-markup-extension.md)</data>
				</originalData>
				<segment state="initial">
					<source>Another possible technique is to define a date that's available as a data object or in the data context, then set the property as a XAML attribute that references a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">\{Binding\} markup extension</pc> expression that can access the date as data.</source>
					<target>Another possible technique is to define a date that's available as a data object or in the data context, then set the property as a XAML attribute that references a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">\{Binding\} markup extension</pc> expression that can access the date as data.</target>
				</segment>
			</unit>
			<unit id="186" translate="yes">
				<segment state="initial">
					<source>\[This article contains information that is specific to Universal Windows Platform (UWP) apps and Windows 10.</source>
					<target>\[This article contains information that is specific to Universal Windows Platform (UWP) apps and Windows 10.</target>
				</segment>
			</unit>
			<unit id="187" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://go.microsoft.com/fwlink/p/?linkid=258743)</data>
				</originalData>
				<segment state="initial">
					<source>For Windows 8.1 guidance, please download the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Windows 8.1 guidelines PDF</pc>.\]</source>
					<target>For Windows 8.1 guidance, please download the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Windows 8.1 guidelines PDF</pc>.\]</target>
				</segment>
			</unit>
			<unit id="188" translate="yes">
				<segment state="initial">
					<source>Related topics</source>
					<target>Related topics</target>
				</segment>
			</unit>
			<unit id="189" translate="yes">
				<segment state="initial">
					<source>For developers (XAML)</source>
					<target>For developers (XAML)</target>
				</segment>
			</unit>
			<unit id="190" translate="yes">
				<segment state="initial">
					<source>CalendarView class</source>
					<target>CalendarView class</target>
				</segment>
			</unit>
			<unit id="191" translate="yes">
				<segment state="initial">
					<source>CalendarDatePicker class</source>
					<target>CalendarDatePicker class</target>
				</segment>
			</unit>
			<unit id="192" translate="yes">
				<segment state="initial">
					<source>DatePicker class</source>
					<target>DatePicker class</target>
				</segment>
			</unit>
			<unit id="193" translate="yes">
				<segment state="initial">
					<source>TimePicker class</source>
					<target>TimePicker class</target>
				</segment>
			</unit>
		</group>
	</file>
</xliff>