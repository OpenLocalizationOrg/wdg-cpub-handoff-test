<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="it-it" version="2.0" xml:space="preserve" xmlns="urn:oasis:names:tc:xliff:document:2.0">
	<file id="1">
		<mda:metadata>
			<mda:metaGroup>
				<mda:meta type="tool-id">mdxliff</mda:meta>
				<mda:meta type="tool-name">mdxliff</mda:meta>
				<mda:meta type="tool-version">1.0-2eb3c86</mda:meta>
				<mda:meta type="tool-company">Microsoft</mda:meta>
			</mda:metaGroup>
		<mda:metaGroup><mda:meta type="olfilehash">af6dcd812b93e4043ed501f9d5b4eb23ca0ec19c</mda:meta><mda:meta type="olfilepath">wdg-cpub-test\ndolci2\controls-and-patterns\tiles-and-notifications-sending-a-local-tile-notification.md</mda:meta><mda:meta type="oltranslationpriority"></mda:meta><mda:meta type="oltranslationtype">Human Translation</mda:meta><mda:meta type="olskeletonhash">d7c6769b9e21086c1b5dccc5318da2bf25a62851</mda:meta><mda:meta type="olxliffhash">c11fafbdc1e699c804164f2000262162fcbc91a4</mda:meta></mda:metaGroup></mda:metadata>
		<group id="content">
			<unit id="101" translate="yes">
				<segment state="initial">
					<source>This article describes how to send a local tile notification to a primary tile and a secondary tile using adaptive tile templates.</source>
					<target>This article describes how to send a local tile notification to a primary tile and a secondary tile using adaptive tile templates.</target>
				</segment>
			</unit>
			<unit id="102" translate="yes">
				<segment state="initial">
					<source>Send a local tile notification</source>
					<target>Send a local tile notification</target>
				</segment>
			</unit>
			<unit id="103" translate="yes">
				<segment state="initial">
					<source>Send a local tile notification</source>
					<target>Send a local tile notification</target>
				</segment>
			</unit>
			<unit id="104" translate="yes">
				<segment state="initial">
					<source>\[ Updated for UWP apps on Windows 10.</source>
					<target>\[ Updated for UWP apps on Windows 10.</target>
				</segment>
			</unit>
			<unit id="105" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](http://go.microsoft.com/fwlink/p/?linkid=619132)</data>
				</originalData>
				<segment state="initial">
					<source>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</source>
					<target>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</target>
				</segment>
			</unit>
			<unit id="106" translate="yes">
				<segment state="initial">
					<source>Primary app tiles in Windows 10 are defined in your app manifest, while secondary tiles are programmatically created and defined by your app code.</source>
					<target>Primary app tiles in Windows 10 are defined in your app manifest, while secondary tiles are programmatically created and defined by your app code.</target>
				</segment>
			</unit>
			<unit id="107" translate="yes">
				<segment state="initial">
					<source>This article describes how to send a local tile notification to a primary tile and a secondary tile using adaptive tile templates.</source>
					<target>This article describes how to send a local tile notification to a primary tile and a secondary tile using adaptive tile templates.</target>
				</segment>
			</unit>
			<unit id="108" translate="yes">
				<segment state="initial">
					<source>(A local notification is one that's sent from app code as opposed to one that's pushed or pulled from a web server.)</source>
					<target>(A local notification is one that's sent from app code as opposed to one that's pushed or pulled from a web server.)</target>
				</segment>
			</unit>
			<unit id="109" translate="yes">
				<segment state="initial">
					<source>default tile and tile with notification</source>
					<target>default tile and tile with notification</target>
				</segment>
			</unit>
			<unit id="110" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">[</data>
					<data id="id4">](tiles-and-notifications-create-adaptive-tiles.md)</data>
					<data id="id5">[</data>
					<data id="id6">](tiles-and-notifications-adaptive-tiles-schema.md)</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>   Learn about <pc dataRefEnd="id4" dataRefStart="id3" id="p2">creating adaptive tiles</pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3">adaptive tile template schema</pc>.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>   Learn about <pc dataRefEnd="id4" dataRefStart="id3" id="p2">creating adaptive tiles</pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3">adaptive tile template schema</pc>.</target>
				</segment>
			</unit>
			<unit id="111" translate="yes">
				<segment state="initial">
					<source>Install the NuGet package</source>
					<target>Install the NuGet package</target>
				</segment>
			</unit>
			<unit id="112" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://www.nuget.org/packages/NotificationsExtensions.Win10/)</data>
				</originalData>
				<segment state="initial">
					<source>We recommend installing the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">NotificationsExtensions NuGet package</pc>, which simplifies things by generating tile payloads with objects instead of raw XML.</source>
					<target>We recommend installing the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">NotificationsExtensions NuGet package</pc>, which simplifies things by generating tile payloads with objects instead of raw XML.</target>
				</segment>
			</unit>
			<unit id="113" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://github.com/WindowsNotifications/NotificationsExtensions/wiki)</data>
				</originalData>
				<segment state="initial">
					<source>The inline code examples in this article are for C# with the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">NotificationsExtensions</pc> NuGet package installed.</source>
					<target>The inline code examples in this article are for C# with the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">NotificationsExtensions</pc> NuGet package installed.</target>
				</segment>
			</unit>
			<unit id="114" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://github.com/WindowsNotifications/NotificationsExtensions/wiki)</data>
				</originalData>
				<segment state="initial">
					<source>(If you'd prefer to create your own XML, you can find code examples without <pc dataRefEnd="id2" dataRefStart="id1" id="p1">NotificationsExtensions</pc> toward the end of the article.)</source>
					<target>(If you'd prefer to create your own XML, you can find code examples without <pc dataRefEnd="id2" dataRefStart="id1" id="p1">NotificationsExtensions</pc> toward the end of the article.)</target>
				</segment>
			</unit>
			<unit id="115" translate="yes">
				<segment state="initial">
					<source>Add namespace declarations</source>
					<target>Add namespace declarations</target>
				</segment>
			</unit>
			<unit id="116" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br208661)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>To access the tile APIs, include the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.UI.Notifications</pc></pc> namespace.</source>
					<target>To access the tile APIs, include the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.UI.Notifications</pc></pc> namespace.</target>
				</segment>
			</unit>
			<unit id="117" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">[</data>
					<data id="id4">](https://github.com/WindowsNotifications/NotificationsExtensions/wiki)</data>
				</originalData>
				<segment state="initial">
					<source>We also recommend including the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">NotificationsExtensions.Tiles</pc> namespace so that you can take advantage of our tile helper APIs (you must install the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">NotificationsExtensions</pc> NuGet package to access these APIs).</source>
					<target>We also recommend including the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">NotificationsExtensions.Tiles</pc> namespace so that you can take advantage of our tile helper APIs (you must install the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">NotificationsExtensions</pc> NuGet package to access these APIs).</target>
				</segment>
			</unit>
			<unit id="118" translate="yes">
				<segment state="initial">
					<source>Create the notification content</source>
					<target>Create the notification content</target>
				</segment>
			</unit>
			<unit id="119" translate="yes">
				<segment state="initial">
					<source>In Windows 10, tile payloads are defined using adaptive tile templates, which allow you to create custom visual layouts for your notifications.</source>
					<target>In Windows 10, tile payloads are defined using adaptive tile templates, which allow you to create custom visual layouts for your notifications.</target>
				</segment>
			</unit>
			<unit id="120" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](tiles-and-notifications-create-adaptive-tiles.md)</data>
					<data id="id3">[</data>
					<data id="id4">](tiles-and-notifications-adaptive-tiles-schema.md)</data>
				</originalData>
				<segment state="initial">
					<source>(To learn what's possible with adaptive tiles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Create adaptive tiles</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Adaptive tile templates</pc> articles.)</source>
					<target>(To learn what's possible with adaptive tiles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Create adaptive tiles</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Adaptive tile templates</pc> articles.)</target>
				</segment>
			</unit>
			<unit id="121" translate="yes">
				<segment state="initial">
					<source>This code example creates adaptive tile content for medium and wide tiles.</source>
					<target>This code example creates adaptive tile content for medium and wide tiles.</target>
				</segment>
			</unit>
			<unit id="122" translate="yes">
				<segment state="initial">
					<source>The notification content looks like the following when displayed on a medium tile:</source>
					<target>The notification content looks like the following when displayed on a medium tile:</target>
				</segment>
			</unit>
			<unit id="123" translate="yes">
				<segment state="initial">
					<source>notification content on a medium tile</source>
					<target>notification content on a medium tile</target>
				</segment>
			</unit>
			<unit id="124" translate="yes">
				<segment state="initial">
					<source>Create the notification</source>
					<target>Create the notification</target>
				</segment>
			</unit>
			<unit id="125" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br208616)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Once you have your notification content, you'll need to create a new <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">TileNotification</pc></pc>.</source>
					<target>Once you have your notification content, you'll need to create a new <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">TileNotification</pc></pc>.</target>
				</segment>
			</unit>
			<unit id="126" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">[</data>
					<data id="id4">](https://msdn.microsoft.com/library/windows/apps/br208620)</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
					<data id="id9">[</data>
					<data id="id10">](https://github.com/WindowsNotifications/NotificationsExtensions/wiki)</data>
				</originalData>
				<segment state="initial">
					<source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">TileNotification</pc> constructor takes a Windows Runtime <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">XmlDocument</pc></pc> object, which you can obtain from the <pc dataRefEnd="id8" dataRefStart="id7" id="p4">TileContent.GetXml</pc> method if you're using <pc dataRefEnd="id10" dataRefStart="id9" id="p5">NotificationsExtensions</pc>.</source>
					<target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">TileNotification</pc> constructor takes a Windows Runtime <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">XmlDocument</pc></pc> object, which you can obtain from the <pc dataRefEnd="id8" dataRefStart="id7" id="p4">TileContent.GetXml</pc> method if you're using <pc dataRefEnd="id10" dataRefStart="id9" id="p5">NotificationsExtensions</pc>.</target>
				</segment>
			</unit>
			<unit id="127" translate="yes">
				<segment state="initial">
					<source>This code example creates a notification for a new tile.</source>
					<target>This code example creates a notification for a new tile.</target>
				</segment>
			</unit>
			<unit id="128" translate="yes">
				<segment state="initial">
					<source>Set an expiration time for the notification (optional)</source>
					<target>Set an expiration time for the notification (optional)</target>
				</segment>
			</unit>
			<unit id="129" translate="yes">
				<segment state="initial">
					<source>By default, local tile and badge notifications don't expire, while push, periodic, and scheduled notifications expire after three days.</source>
					<target>By default, local tile and badge notifications don't expire, while push, periodic, and scheduled notifications expire after three days.</target>
				</segment>
			</unit>
			<unit id="130" translate="yes">
				<segment state="initial">
					<source>Because tile content shouldn't persist longer than necessary, it's a best practice to set an expiration time that makes sense for your app, especially on local tile and badge notifications.</source>
					<target>Because tile content shouldn't persist longer than necessary, it's a best practice to set an expiration time that makes sense for your app, especially on local tile and badge notifications.</target>
				</segment>
			</unit>
			<unit id="131" translate="yes">
				<segment state="initial">
					<source>This code example creates a notification that expires and will be removed from the tile after ten minutes.</source>
					<target>This code example creates a notification that expires and will be removed from the tile after ten minutes.</target>
				</segment>
			</unit>
			<unit id="132" translate="yes">
				<segment state="initial">
					<source>Send the notification</source>
					<target>Send the notification</target>
				</segment>
			</unit>
			<unit id="133" translate="yes">
				<segment state="initial">
					<source>Although locally sending a tile notification is simple, sending the notification to a primary or secondary tile is a bit different.</source>
					<target>Although locally sending a tile notification is simple, sending the notification to a primary or secondary tile is a bit different.</target>
				</segment>
			</unit>
			<unit id="134" translate="yes">
				<segment state="initial">
					<source>Primary tile</source>
					<target>Primary tile</target>
				</segment>
			</unit>
			<unit id="135" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br208622)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>To send a notification to a primary tile, use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">TileUpdateManager</pc></pc> to create a tile updater for the primary tile, and send the notification by calling "Update".</source>
					<target>To send a notification to a primary tile, use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">TileUpdateManager</pc></pc> to create a tile updater for the primary tile, and send the notification by calling "Update".</target>
				</segment>
			</unit>
			<unit id="136" translate="yes">
				<segment state="initial">
					<source>Regardless of whether it's visible, your app's primary tile always exists, so you can send notifications to it even when it's not pinned.</source>
					<target>Regardless of whether it's visible, your app's primary tile always exists, so you can send notifications to it even when it's not pinned.</target>
				</segment>
			</unit>
			<unit id="137" translate="yes">
				<segment state="initial">
					<source>If the user pins your primary tile later, the notifications that you sent will appear then.</source>
					<target>If the user pins your primary tile later, the notifications that you sent will appear then.</target>
				</segment>
			</unit>
			<unit id="138" translate="yes">
				<segment state="initial">
					<source>This code example sends a notification to a primary tile.</source>
					<target>This code example sends a notification to a primary tile.</target>
				</segment>
			</unit>
			<unit id="139" translate="yes">
				<segment state="initial">
					<source>Secondary tile</source>
					<target>Secondary tile</target>
				</segment>
			</unit>
			<unit id="140" translate="yes">
				<segment state="initial">
					<source>To send a notification to a secondary tile, first make sure that the secondary tile exists.</source>
					<target>To send a notification to a secondary tile, first make sure that the secondary tile exists.</target>
				</segment>
			</unit>
			<unit id="141" translate="yes">
				<segment state="initial">
					<source>If you try to create a tile updater for a secondary tile that doesn't exist (for example, if the user unpinned the secondary tile), an exception will be thrown.</source>
					<target>If you try to create a tile updater for a secondary tile that doesn't exist (for example, if the user unpinned the secondary tile), an exception will be thrown.</target>
				</segment>
			</unit>
			<unit id="142" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br242205)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>You can use <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SecondaryTile.Exists</pc></pc>(tileId) to discover if your secondary tile is pinned, and then create a tile updater for the secondary tile and send the notification.</source>
					<target>You can use <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SecondaryTile.Exists</pc></pc>(tileId) to discover if your secondary tile is pinned, and then create a tile updater for the secondary tile and send the notification.</target>
				</segment>
			</unit>
			<unit id="143" translate="yes">
				<segment state="initial">
					<source>This code example sends a notification to a secondary tile.</source>
					<target>This code example sends a notification to a secondary tile.</target>
				</segment>
			</unit>
			<unit id="144" translate="yes">
				<segment state="initial">
					<source>default tile and tile with notification</source>
					<target>default tile and tile with notification</target>
				</segment>
			</unit>
			<unit id="145" translate="yes">
				<segment state="initial">
					<source>Clear notifications on the tile (optional)</source>
					<target>Clear notifications on the tile (optional)</target>
				</segment>
			</unit>
			<unit id="146" translate="yes">
				<segment state="initial">
					<source>In most cases, you should clear a notification once the user has interacted with that content.</source>
					<target>In most cases, you should clear a notification once the user has interacted with that content.</target>
				</segment>
			</unit>
			<unit id="147" translate="yes">
				<segment state="initial">
					<source>For example, when the user launches your app, you might want to clear all the notifications from the tile.</source>
					<target>For example, when the user launches your app, you might want to clear all the notifications from the tile.</target>
				</segment>
			</unit>
			<unit id="148" translate="yes">
				<segment state="initial">
					<source>If your notifications are time-bound, we recommend that you set an expiration time on the notification instead of explicitly clearing the notification.</source>
					<target>If your notifications are time-bound, we recommend that you set an expiration time on the notification instead of explicitly clearing the notification.</target>
				</segment>
			</unit>
			<unit id="149" translate="yes">
				<segment state="initial">
					<source>This code example clears the tile notification.</source>
					<target>This code example clears the tile notification.</target>
				</segment>
			</unit>
			<unit id="150" translate="yes">
				<segment state="initial">
					<source>For a tile with the notification queue enabled and notifications in the queue, calling the Clear method empties the queue.</source>
					<target>For a tile with the notification queue enabled and notifications in the queue, calling the Clear method empties the queue.</target>
				</segment>
			</unit>
			<unit id="151" translate="yes">
				<segment state="initial">
					<source>You can't, however, clear a notification via your app's server; only the local app code can clear notifications.</source>
					<target>You can't, however, clear a notification via your app's server; only the local app code can clear notifications.</target>
				</segment>
			</unit>
			<unit id="152" translate="yes">
				<segment state="initial">
					<source>Periodic or push notifications can only add new notifications or replace existing notifications.</source>
					<target>Periodic or push notifications can only add new notifications or replace existing notifications.</target>
				</segment>
			</unit>
			<unit id="153" translate="yes">
				<segment state="initial">
					<source>A local call to the Clear method will clear the tile whether or not the notifications themselves came via push, periodic, or local.</source>
					<target>A local call to the Clear method will clear the tile whether or not the notifications themselves came via push, periodic, or local.</target>
				</segment>
			</unit>
			<unit id="154" translate="yes">
				<segment state="initial">
					<source>Scheduled notifications that haven't yet appeared are not cleared by this method.</source>
					<target>Scheduled notifications that haven't yet appeared are not cleared by this method.</target>
				</segment>
			</unit>
			<unit id="155" translate="yes">
				<segment state="initial">
					<source>tile with notification and tile after being cleared</source>
					<target>tile with notification and tile after being cleared</target>
				</segment>
			</unit>
			<unit id="156" translate="yes">
				<segment state="initial">
					<source>Next steps</source>
					<target>Next steps</target>
				</segment>
			</unit>
			<unit id="157" translate="yes">
				<segment state="initial">
					<source>Using the notification queue</source>
					<target>Using the notification queue</target>
				</segment>
			</unit>
			<unit id="158" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/xaml/hh868234)</data>
				</originalData>
				<segment state="initial">
					<source>Now that you have done your first tile update, you can expand the functionality of the tile by enabling a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">notification queue</pc>.</source>
					<target>Now that you have done your first tile update, you can expand the functionality of the tile by enabling a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">notification queue</pc>.</target>
				</segment>
			</unit>
			<unit id="159" translate="yes">
				<segment state="initial">
					<source>Other notification delivery methods</source>
					<target>Other notification delivery methods</target>
				</segment>
			</unit>
			<unit id="160" translate="yes">
				<segment state="initial">
					<source>This article shows you how to send the tile update as a notification.</source>
					<target>This article shows you how to send the tile update as a notification.</target>
				</segment>
			</unit>
			<unit id="161" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](tiles-and-notifications-choosing-a-notification-delivery-method.md)</data>
				</originalData>
				<segment state="initial">
					<source>To explore other methods of notification delivery, including scheduled, periodic, and push, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Delivering notifications</pc>.</source>
					<target>To explore other methods of notification delivery, including scheduled, periodic, and push, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Delivering notifications</pc>.</target>
				</segment>
			</unit>
			<unit id="162" translate="yes">
				<segment state="initial">
					<source>XmlEncode delivery method</source>
					<target>XmlEncode delivery method</target>
				</segment>
			</unit>
			<unit id="163" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://github.com/WindowsNotifications/NotificationsExtensions/wiki)</data>
				</originalData>
				<segment state="initial">
					<source>If you're not using <pc dataRefEnd="id2" dataRefStart="id1" id="p1">NotificationsExtensions</pc>, this notification delivery method is another alternative.</source>
					<target>If you're not using <pc dataRefEnd="id2" dataRefStart="id1" id="p1">NotificationsExtensions</pc>, this notification delivery method is another alternative.</target>
				</segment>
			</unit>
			<unit id="164" translate="yes">
				<segment state="initial">
					<source>Code examples without NotificationsExtensions</source>
					<target>Code examples without NotificationsExtensions</target>
				</segment>
			</unit>
			<unit id="165" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://github.com/WindowsNotifications/NotificationsExtensions/wiki)</data>
				</originalData>
				<segment state="initial">
					<source>If you prefer to work with raw XML instead of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">NotificationsExtensions</pc> NuGet package, use these alternate code examples to first three examples provided in this article.</source>
					<target>If you prefer to work with raw XML instead of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">NotificationsExtensions</pc> NuGet package, use these alternate code examples to first three examples provided in this article.</target>
				</segment>
			</unit>
			<unit id="166" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://github.com/WindowsNotifications/NotificationsExtensions/wiki)</data>
				</originalData>
				<segment state="initial">
					<source>The rest of the code examples can be used either with <pc dataRefEnd="id2" dataRefStart="id1" id="p1">NotificationsExtensions</pc> or with raw XML.</source>
					<target>The rest of the code examples can be used either with <pc dataRefEnd="id2" dataRefStart="id1" id="p1">NotificationsExtensions</pc> or with raw XML.</target>
				</segment>
			</unit>
			<unit id="167" translate="yes">
				<segment state="initial">
					<source>Add namespace declarations</source>
					<target>Add namespace declarations</target>
				</segment>
			</unit>
			<unit id="168" translate="yes">
				<segment state="initial">
					<source>Create the notification content</source>
					<target>Create the notification content</target>
				</segment>
			</unit>
			<unit id="169" translate="yes">
				<segment state="initial">
					<source>Create the notification</source>
					<target>Create the notification</target>
				</segment>
			</unit>
			<unit id="170" translate="yes">
				<segment state="initial">
					<source>Related topics</source>
					<target>Related topics</target>
				</segment>
			</unit>
			<unit id="171" translate="yes">
				<segment state="initial">
					<source>Create adaptive tiles</source>
					<target>Create adaptive tiles</target>
				</segment>
			</unit>
			<unit id="172" translate="yes">
				<segment state="initial">
					<source>Adaptive tile templates: schema and documentation</source>
					<target>Adaptive tile templates: schema and documentation</target>
				</segment>
			</unit>
			<unit id="173" translate="yes">
				<segment state="initial">
					<source>NotificationsExtensions.Win10 (NuGet package)</source>
					<target>NotificationsExtensions.Win10 (NuGet package)</target>
				</segment>
			</unit>
			<unit id="174" translate="yes">
				<segment state="initial">
					<source>NotificationsExtensions on GitHub</source>
					<target>NotificationsExtensions on GitHub</target>
				</segment>
			</unit>
			<unit id="175" translate="yes">
				<segment state="initial">
					<source>Full code sample on GitHub</source>
					<target>Full code sample on GitHub</target>
				</segment>
			</unit>
			<unit id="176" translate="yes">
				<segment state="initial">
					<source>Windows.UI.Notifications namespace</source>
					<target>Windows.UI.Notifications namespace</target>
				</segment>
			</unit>
			<unit id="177" translate="yes">
				<segment state="initial">
					<source>How to use the notification queue (XAML)</source>
					<target>How to use the notification queue (XAML)</target>
				</segment>
			</unit>
			<unit id="178" translate="yes">
				<segment state="initial">
					<source>Delivering notifications</source>
					<target>Delivering notifications</target>
				</segment>
			</unit>
		</group>
	</file>
</xliff>