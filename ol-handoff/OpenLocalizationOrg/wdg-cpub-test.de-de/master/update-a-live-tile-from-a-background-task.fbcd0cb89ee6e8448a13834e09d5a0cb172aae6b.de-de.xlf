<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="de-de" version="2.0" xml:space="preserve" xmlns="urn:oasis:names:tc:xliff:document:2.0">
	<file id="1">
		<mda:metadata>
			<mda:metaGroup>
				<mda:meta type="tool-id">mdxliff</mda:meta>
				<mda:meta type="tool-name">mdxliff</mda:meta>
				<mda:meta type="tool-version">1.0-10daaac</mda:meta>
				<mda:meta type="tool-company">Microsoft</mda:meta>
			</mda:metaGroup>
		<mda:metaGroup><mda:meta type="olfilehash">f1cb301b5bedc2ce09bb8f1d25698ae3dd085871</mda:meta><mda:meta type="olfilepath">wdg-cpub-test\ndolci2\launch-resume\update-a-live-tile-from-a-background-task.md</mda:meta><mda:meta type="oltranslationpriority"></mda:meta><mda:meta type="oltranslationtype">Human Translation</mda:meta><mda:meta type="olskeletonhash">fa9530428352ffaf1acc366b649f871fab67a9fe</mda:meta><mda:meta type="olxliffhash">6dc32d1c0b26289b8ab44dcf7ed633c7da853e7e</mda:meta></mda:metaGroup></mda:metadata>
		<group id="content">
			<unit id="101" translate="yes">
				<segment state="initial">
					<source>Update a live tile from a background task</source>
				</segment>
			</unit>
			<unit id="102" translate="yes">
				<segment state="initial">
					<source>Use a background task to update your app's live tile with fresh content.</source>
				</segment>
			</unit>
			<unit id="103" translate="yes">
				<segment state="initial">
					<source>Update a live tile from a background task</source>
				</segment>
			</unit>
			<unit id="104" translate="yes">
				<segment state="initial">
					<source>\[ Updated for UWP apps on Windows 10.</source>
				</segment>
			</unit>
			<unit id="105" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](http://go.microsoft.com/fwlink/p/?linkid=619132)</data>
				</originalData>
				<segment state="initial">
					<source>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</source>
				</segment>
			</unit>
			<unit id="106" translate="yes">
				<segment state="initial">
					<source>Important APIs</source>
				</segment>
			</unit>
			<unit id="107" translate="yes">
				<segment state="initial">
					<source>IBackgroundTask</source>
				</segment>
			</unit>
			<unit id="108" translate="yes">
				<segment state="initial">
					<source>BackgroundTaskBuilder</source>
				</segment>
			</unit>
			<unit id="109" translate="yes">
				<segment state="initial">
					<source>Use a background task to update your app's live tile with fresh content.</source>
				</segment>
			</unit>
			<unit id="110" translate="yes">
				<segment state="initial">
					<source>Here's a video that shows how to add live tiles to your apps.</source>
				</segment>
			</unit>
			<unit id="111" translate="yes">
				<segment state="initial">
					<source>One Dev Minute - Updating a live tile from a background task</source>
				</segment>
			</unit>
			<unit id="112" translate="yes">
				<segment state="initial">
					<source>Create the background task project</source>
				</segment>
			</unit>
			<unit id="113" translate="yes">
				<segment state="initial">
					<source>To enable a live tile for your app, add a new Windows Runtime Component project to your solution.</source>
				</segment>
			</unit>
			<unit id="114" translate="yes">
				<segment state="initial">
					<source>This is a separate assembly that the OS loads and runs in the background when a user installs your app.</source>
				</segment>
			</unit>
			<unit id="115" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>In Solution Explorer, right-click the solution, point to <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Add</pc>, and click or tap <pc dataRefEnd="id4" dataRefStart="id3" id="p2">New Project</pc>.</source>
				</segment>
			</unit>
			<unit id="116" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
					<data id="id7">&amp;gt;</data>
				</originalData>
				<segment state="initial">
					<source>In the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Add New Project</pc> dialog, select the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows Runtime Component</pc> template in the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Visual C# <ph dataRef="id7" id="ph1" /> Windows Store</pc> section.</source>
				</segment>
			</unit>
			<unit id="117" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>Name the project BackgroundTasks and click or tap <pc dataRefEnd="id2" dataRefStart="id1" id="p1">OK</pc>.</source>
				</segment>
			</unit>
			<unit id="118" translate="yes">
				<segment state="initial">
					<source>Microsoft Visual Studio adds the new project to the solution.</source>
				</segment>
			</unit>
			<unit id="119" translate="yes">
				<segment state="initial">
					<source>In the main project, add a reference to the BackgroundTasks project.</source>
				</segment>
			</unit>
			<unit id="120" translate="yes">
				<segment state="initial">
					<source>Implement the background task</source>
				</segment>
			</unit>
			<unit id="121" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br224794)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Implement the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">IBackgroundTask</pc></pc> interface to create a class that updates your app's live tile.</source>
				</segment>
			</unit>
			<unit id="122" translate="yes">
				<segment state="initial">
					<source>Your background work goes in the Run method.</source>
				</segment>
			</unit>
			<unit id="123" translate="yes">
				<segment state="initial">
					<source>In this case, the task gets a syndication feed for the MSDN blogs.</source>
				</segment>
			</unit>
			<unit id="124" translate="yes">
				<segment state="initial">
					<source>To prevent the task from closing prematurely while asynchronous code is still running, get a deferral.</source>
				</segment>
			</unit>
			<unit id="125" translate="yes">
				<segment state="initial">
					<source>In Solution Explorer, rename the automatically generated file, Class1.cs, to BlogFeedBackgroundTask.cs.</source>
				</segment>
			</unit>
			<unit id="126" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>In BlogFeedBackgroundTask.cs, replace the automatically generated code with the stub code for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">BlogFeedBackgroundTask</pc> class.</source>
				</segment>
			</unit>
			<unit id="127" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>In the Run method implementation, add code for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">GetMSDNBlogFeed</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">UpdateTile</pc> methods.</source>
				</segment>
			</unit>
			<unit id="128" translate="yes">
				<segment state="initial">
					<source>Set up the package manifest</source>
				</segment>
			</unit>
			<unit id="129" translate="yes">
				<segment state="initial">
					<source>To set up the package manifest, open it and add a new background task declaration.</source>
				</segment>
			</unit>
			<unit id="130" translate="yes">
				<segment state="initial">
					<source>Set the entry point for the task to the class name, including its namespace.</source>
				</segment>
			</unit>
			<unit id="131" translate="yes">
				<segment state="initial">
					<source>In Solution Explorer, open Package.appxmanifest.</source>
				</segment>
			</unit>
			<unit id="132" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>Click or tap the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Declarations</pc> tab.</source>
				</segment>
			</unit>
			<unit id="133" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source>Under <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Available Declarations</pc>, select <pc dataRefEnd="id4" dataRefStart="id3" id="p2">BackgroundTasks</pc> and click <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Add</pc>.</source>
				</segment>
			</unit>
			<unit id="134" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Visual Studio adds <pc dataRefEnd="id2" dataRefStart="id1" id="p1">BackgroundTasks</pc> under <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Supported Declarations</pc>.</source>
				</segment>
			</unit>
			<unit id="135" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Under <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Supported task types</pc>, ensure that <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Timer</pc> is checked.</source>
				</segment>
			</unit>
			<unit id="136" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Under <pc dataRefEnd="id2" dataRefStart="id1" id="p1">App settings</pc>, set the entry point to <pc dataRefEnd="id4" dataRefStart="id3" id="p2">BackgroundTasks.BlogFeedBackgroundTask</pc>.</source>
				</segment>
			</unit>
			<unit id="137" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>Click or tap the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Application UI</pc> tab.</source>
				</segment>
			</unit>
			<unit id="138" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Set <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Lock screen notifications</pc> to <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Badge and Tile Text</pc>.</source>
				</segment>
			</unit>
			<unit id="139" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>Set a path to a 24x24 pixel icon in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Badge logo</pc> field.</source>
				</segment>
			</unit>
			<unit id="140" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Important</pc>  This icon must use monochrome and transparent pixels only.</source>
				</segment>
			</unit>
			<unit id="141" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>In the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Small logo</pc> field, set a path to a 30x30 pixel icon.</source>
				</segment>
			</unit>
			<unit id="142" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>In the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Wide logo</pc> field, set a path to a 310x150 pixel icon.</source>
				</segment>
			</unit>
			<unit id="143" translate="yes">
				<segment state="initial">
					<source>Register the background task</source>
				</segment>
			</unit>
			<unit id="144" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br224768)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Create a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">BackgroundTaskBuilder</pc></pc> to register your task.</source>
				</segment>
			</unit>
			<unit id="145" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  Starting in Windows 8.1, background task registration parameters are validated at the time of registration.</source>
				</segment>
			</unit>
			<unit id="146" translate="yes">
				<segment state="initial">
					<source>An error is returned if any of the registration parameters are invalid.</source>
				</segment>
			</unit>
			<unit id="147" translate="yes">
				<segment state="initial">
					<source>Your app must be able to handle scenarios where background task registration fails - for example, use a conditional statement to check for registration errors and then retry failed registration using different parameter values.</source>
				</segment>
			</unit>
			<unit id="148" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>In your app's main page, add the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">RegisterBackgroundTask</pc> method and call it in the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">OnNavigatedTo</pc> event handler.</source>
				</segment>
			</unit>
			<unit id="149" translate="yes">
				<segment state="initial">
					<source>Debug the background task</source>
				</segment>
			</unit>
			<unit id="150" translate="yes">
				<segment state="initial">
					<source>To debug the background task, set a breakpoint in the task’s Run method.</source>
				</segment>
			</unit>
			<unit id="151" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>In the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Debug Location</pc> toolbar, select your background task.</source>
				</segment>
			</unit>
			<unit id="152" translate="yes">
				<segment state="initial">
					<source>This causes the system to call the Run method immediately.</source>
				</segment>
			</unit>
			<unit id="153" translate="yes">
				<segment state="initial">
					<source>Set a breakpoint in the task’s Run method.</source>
				</segment>
			</unit>
			<unit id="154" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">&amp;gt;</data>
				</originalData>
				<segment state="initial">
					<source>Press F5 or tap <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Debug <ph dataRef="id3" id="ph1" /> Start Debugging</pc> to deploy and run the app.</source>
				</segment>
			</unit>
			<unit id="155" translate="yes">
				<segment state="initial">
					<source>After the app launches, switch back to Visual Studio.</source>
				</segment>
			</unit>
			<unit id="156" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>Ensure that the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Debug Location</pc> toolbar is visible.</source>
				</segment>
			</unit>
			<unit id="157" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">&amp;gt;</data>
				</originalData>
				<segment state="initial">
					<source>It's on the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">View <ph dataRef="id3" id="ph1" /> Toolbars</pc> menu.</source>
				</segment>
			</unit>
			<unit id="158" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source>On the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Debug Location</pc> toolbar, click the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Suspend</pc> dropdown and select <pc dataRefEnd="id6" dataRefStart="id5" id="p3">BlogFeedBackgroundTask</pc>.</source>
				</segment>
			</unit>
			<unit id="159" translate="yes">
				<segment state="initial">
					<source>Visual Studio suspends execution at the breakpoint.</source>
				</segment>
			</unit>
			<unit id="160" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">&amp;gt;</data>
				</originalData>
				<segment state="initial">
					<source>Press F5 or tap <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Debug <ph dataRef="id3" id="ph1" /> Continue</pc> to continue running the app.</source>
				</segment>
			</unit>
			<unit id="161" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">&amp;gt;</data>
				</originalData>
				<segment state="initial">
					<source>Press Shift+F5 or tap <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Debug <ph dataRef="id3" id="ph1" /> Stop Debugging</pc> to stop debugging.</source>
				</segment>
			</unit>
			<unit id="162" translate="yes">
				<segment state="initial">
					<source>Return to the app's tile on the Start screen.</source>
				</segment>
			</unit>
			<unit id="163" translate="yes">
				<segment state="initial">
					<source>After a few seconds, tile notifications appear on your app's tile.</source>
				</segment>
			</unit>
			<unit id="164" translate="yes">
				<segment state="initial">
					<source>Related topics</source>
				</segment>
			</unit>
			<unit id="165" translate="yes">
				<segment state="initial">
					<source>BackgroundTaskBuilder</source>
				</segment>
			</unit>
			<unit id="166" translate="yes">
				<segment state="initial">
					<source>TileUpdateManager</source>
				</segment>
			</unit>
			<unit id="167" translate="yes">
				<segment state="initial">
					<source>TileNotification</source>
				</segment>
			</unit>
			<unit id="168" translate="yes">
				<segment state="initial">
					<source>Support your app with background tasks</source>
				</segment>
			</unit>
			<unit id="169" translate="yes">
				<segment state="initial">
					<source>Guidelines and checklist for tiles and badges</source>
				</segment>
			</unit>
		</group>
	</file>
</xliff>