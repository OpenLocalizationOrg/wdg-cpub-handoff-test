<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="de-de" version="2.0" xml:space="preserve" xmlns="urn:oasis:names:tc:xliff:document:2.0">
	<file id="1">
		<mda:metadata>
			<mda:metaGroup>
				<mda:meta type="tool-id">mdxliff</mda:meta>
				<mda:meta type="tool-name">mdxliff</mda:meta>
				<mda:meta type="tool-version">1.0-10daaac</mda:meta>
				<mda:meta type="tool-company">Microsoft</mda:meta>
			</mda:metaGroup>
		<mda:metaGroup><mda:meta type="olfilehash">69148015b0432890946631d7ba27f5c3b6e1de6b</mda:meta><mda:meta type="olfilepath">wdg-cpub-test\HoverTest\browsers\internet-explorer\ie11-ieak\proxy-auto-config-examples.md</mda:meta><mda:meta type="oltranslationpriority"></mda:meta><mda:meta type="oltranslationtype">Human Translation</mda:meta><mda:meta type="olskeletonhash">c1b4a73c5e3fe0bdb3efb8930e4dc7f4718468ae</mda:meta><mda:meta type="olxliffhash">d20d36e697c62cbbddac0715c15256b9ab48a3f5</mda:meta></mda:metaGroup></mda:metadata>
		<group id="content">
			<unit id="101" translate="yes">
				<segment state="initial">
					<source>Learn about how to use a proxy auto-configuration (.pac) file to specify an automatic proxy URL.</source>
				</segment>
			</unit>
			<unit id="102" translate="yes">
				<segment state="initial">
					<source>Use proxy auto-configuration (.pac) files with IEAK 11 (Internet Explorer Administration Kit 11 for IT Pros)</source>
				</segment>
			</unit>
			<unit id="103" translate="yes">
				<segment state="initial">
					<source>Use proxy auto-configuration (.pac) files with IEAK 11</source>
				</segment>
			</unit>
			<unit id="104" translate="yes">
				<segment state="initial">
					<source>These are various ways you can use a proxy auto-configuration (.pac) file to specify an automatic proxy URL.</source>
				</segment>
			</unit>
			<unit id="105" translate="yes">
				<segment state="initial">
					<source>We've included some examples here to help guide you, but you'll need to change the proxy names, port numbers, and IP addresses to match your organization's info.</source>
				</segment>
			</unit>
			<unit id="106" translate="yes">
				<segment state="initial">
					<source>Included examples:</source>
				</segment>
			</unit>
			<unit id="107" translate="yes">
				<segment state="initial">
					<source>Example 1: Connect directly if the host is local</source>
				</segment>
			</unit>
			<unit id="108" translate="yes">
				<segment state="initial">
					<source>Example 2: Connect directly if the host is inside the firewall</source>
				</segment>
			</unit>
			<unit id="109" translate="yes">
				<segment state="initial">
					<source>Example 3: Connect directly if the host name is resolvable</source>
				</segment>
			</unit>
			<unit id="110" translate="yes">
				<segment state="initial">
					<source>Example 4: Connect directly if the host is in specified subnet</source>
				</segment>
			</unit>
			<unit id="111" translate="yes">
				<segment state="initial">
					<source>Example 5: Determine the connection type based on the host domain</source>
				</segment>
			</unit>
			<unit id="112" translate="yes">
				<segment state="initial">
					<source>Example 6: Determine the connection type based on the protocol</source>
				</segment>
			</unit>
			<unit id="113" translate="yes">
				<segment state="initial">
					<source>Example 7: Determine the proxy server based on the host name matching the IP address</source>
				</segment>
			</unit>
			<unit id="114" translate="yes">
				<segment state="initial">
					<source>Example 8: Connect using a proxy server if the host IP address matches the specified IP address</source>
				</segment>
			</unit>
			<unit id="115" translate="yes">
				<segment state="initial">
					<source>Example 9: Connect using a proxy server if there are periods in the host name</source>
				</segment>
			</unit>
			<unit id="116" translate="yes">
				<segment state="initial">
					<source>Example 10: Connect using a proxy server based on specific days of the week</source>
				</segment>
			</unit>
			<unit id="117" translate="yes">
				<segment state="initial">
					<source>Example 1: Connect directly if the host is local</source>
				</segment>
			</unit>
			<unit id="118" translate="yes">
				<segment state="initial">
					<source>In this example, if the host is local, it can connect directly.</source>
				</segment>
			</unit>
			<unit id="119" translate="yes">
				<segment state="initial">
					<source>However, if the server isn't local, it must connect through a proxy server.</source>
				</segment>
			</unit>
			<unit id="120" translate="yes">
				<originalData>
					<data id="id1">`isPlainHostName`</data>
				</originalData>
				<segment state="initial">
					<source>Specifically, the <ph dataRef="id1" id="ph1" /> function looks to see if there are any periods (.) in the host name.</source>
				</segment>
			</unit>
			<unit id="121" translate="yes">
				<segment state="initial">
					<source>If the function finds periods, it means the host isn’t local and it returns false.</source>
				</segment>
			</unit>
			<unit id="122" translate="yes">
				<segment state="initial">
					<source>Otherwise, the function returns true.</source>
				</segment>
			</unit>
			<unit id="123" translate="yes">
				<segment state="initial">
					<source>Example 2: Connect directly if the host is inside the firewall</source>
				</segment>
			</unit>
			<unit id="124" translate="yes">
				<segment state="initial">
					<source>In this example, if the host is inside the firewall, it can connect directly.</source>
				</segment>
			</unit>
			<unit id="125" translate="yes">
				<segment state="initial">
					<source>However, if the server is outside the firewall, it must connect through a proxy server.</source>
				</segment>
			</unit>
			<unit id="126" translate="yes">
				<originalData>
					<data id="id1">`localHostOrDomainIs`</data>
				</originalData>
				<segment state="initial">
					<source>Specifically, the <ph dataRef="id1" id="ph1" /> function only runs for URLs in the local domain.</source>
				</segment>
			</unit>
			<unit id="127" translate="yes">
				<originalData>
					<data id="id1">`dnsDomainIs`</data>
				</originalData>
				<segment state="initial">
					<source>If the host domain name matches the provided domain information, the <ph dataRef="id1" id="ph1" /> function returns true.</source>
				</segment>
			</unit>
			<unit id="128" translate="yes">
				<segment state="initial">
					<source>Example 3: Connect directly if the host name is resolvable</source>
				</segment>
			</unit>
			<unit id="129" translate="yes">
				<segment state="initial">
					<source>In this example, if the host name can be resolved, it can connect directly.</source>
				</segment>
			</unit>
			<unit id="130" translate="yes">
				<segment state="initial">
					<source>However, if the name can’t be resolved, the server must connect through a proxy server.</source>
				</segment>
			</unit>
			<unit id="131" translate="yes">
				<segment state="initial">
					<source>Specifically, this function requests the DNS server to resolve the host name it's passed.</source>
				</segment>
			</unit>
			<unit id="132" translate="yes">
				<segment state="initial">
					<source>If the name can be resolved, a direct connection is made.</source>
				</segment>
			</unit>
			<unit id="133" translate="yes">
				<segment state="initial">
					<source>If it can't, the connection is made using a proxy.</source>
				</segment>
			</unit>
			<unit id="134" translate="yes">
				<segment state="initial">
					<source>This is particularly useful when an internal DNS server is used to resolve all internal host names.</source>
				</segment>
			</unit>
			<unit id="135" translate="yes">
				<segment state="initial">
					<source>Important</source>
				</segment>
			</unit>
			<unit id="136" translate="yes">
				<originalData>
					<data id="id1">`isResolvable`</data>
				</originalData>
				<segment state="initial">
					<source>The <ph dataRef="id1" id="ph1" /> function queries a Domain Name System (DNS) server.</source>
				</segment>
			</unit>
			<unit id="137" translate="yes">
				<segment state="initial">
					<source>References to Object Model objects, properties, or methods cause the proxy auto-configuration file to fail silently.</source>
				</segment>
			</unit>
			<unit id="138" translate="yes">
				<originalData>
					<data id="id1">`window.open(...)`</data>
					<data id="id2">`alert(...)`</data>
					<data id="id3">`password(...)`</data>
				</originalData>
				<segment state="initial">
					<source>For example, the references <ph dataRef="id1" id="ph1" />, <ph dataRef="id2" id="ph2" />, and <ph dataRef="id3" id="ph3" /> all cause the proxy auto-configuration file to fail.</source>
				</segment>
			</unit>
			<unit id="139" translate="yes">
				<segment state="initial">
					<source>Example 4: Connect directly if the host is in specified subnet</source>
				</segment>
			</unit>
			<unit id="140" translate="yes">
				<segment state="initial">
					<source>In this example, if the host is in a specified subnet, it can connect directly.</source>
				</segment>
			</unit>
			<unit id="141" translate="yes">
				<segment state="initial">
					<source>However, if the server is outside of the specified subnet, it must connect through a proxy server.</source>
				</segment>
			</unit>
			<unit id="142" translate="yes">
				<originalData>
					<data id="id1">`isInNet`</data>
				</originalData>
				<segment state="initial">
					<source>Specifically, the <ph dataRef="id1" id="ph1" /> (host, pattern, mask) function returns true if the host IP address matches the specified pattern.</source>
				</segment>
			</unit>
			<unit id="143" translate="yes">
				<segment state="initial">
					<source>The mask indicates which part of the IP address to match (255=match, 0=ignore).</source>
				</segment>
			</unit>
			<unit id="144" translate="yes">
				<segment state="initial">
					<source>Important</source>
				</segment>
			</unit>
			<unit id="145" translate="yes">
				<originalData>
					<data id="id1">`isInNet`</data>
				</originalData>
				<segment state="initial">
					<source>The <ph dataRef="id1" id="ph1" /> function queries a DNS server.</source>
				</segment>
			</unit>
			<unit id="146" translate="yes">
				<segment state="initial">
					<source>References to Object Model objects, properties, or methods cause the proxy auto-configuration file to fail silently.</source>
				</segment>
			</unit>
			<unit id="147" translate="yes">
				<originalData>
					<data id="id1">`window.open(...)`</data>
					<data id="id2">`alert(...)`</data>
					<data id="id3">`password(...)`</data>
				</originalData>
				<segment state="initial">
					<source>For example, the references <ph dataRef="id1" id="ph1" />, <ph dataRef="id2" id="ph2" />, and <ph dataRef="id3" id="ph3" /> all cause the proxy auto-configuration file to fail.</source>
				</segment>
			</unit>
			<unit id="148" translate="yes">
				<segment state="initial">
					<source>Example 5: Determine the connection type based on the host domain</source>
				</segment>
			</unit>
			<unit id="149" translate="yes">
				<segment state="initial">
					<source>In this example, if the host is local, the server can connect directly.</source>
				</segment>
			</unit>
			<unit id="150" translate="yes">
				<segment state="initial">
					<source>However, if the host isn’t local, this function determines which proxy to use based on the host domain.</source>
				</segment>
			</unit>
			<unit id="151" translate="yes">
				<originalData>
					<data id="id1">`shExpMatch(str, shexp)`</data>
					<data id="id2">`str`</data>
					<data id="id3">`shexp`</data>
				</originalData>
				<segment state="initial">
					<source>Specifically, the <ph dataRef="id1" id="ph1" /> function returns true if <ph dataRef="id2" id="ph2" /> matches the <ph dataRef="id3" id="ph3" /> using shell expression patterns.</source>
				</segment>
			</unit>
			<unit id="152" translate="yes">
				<segment state="initial">
					<source>This is particularly useful when the host domain name is one of the criteria for proxy selection.</source>
				</segment>
			</unit>
			<unit id="153" translate="yes">
				<segment state="initial">
					<source>Example 6: Determine the connection type based on the protocol</source>
				</segment>
			</unit>
			<unit id="154" translate="yes">
				<segment state="initial">
					<source>In this example, the in-use protocol is extracted from the server and used to make a proxy selection.</source>
				</segment>
			</unit>
			<unit id="155" translate="yes">
				<segment state="initial">
					<source>If no protocol match occurs, the server is directly connected.</source>
				</segment>
			</unit>
			<unit id="156" translate="yes">
				<originalData>
					<data id="id1">`substring`</data>
				</originalData>
				<segment state="initial">
					<source>Specifically the <ph dataRef="id1" id="ph1" /> function extracts the specified number of characters from a string.</source>
				</segment>
			</unit>
			<unit id="157" translate="yes">
				<segment state="initial">
					<source>This is particularly useful when protocol is one of the criteria for proxy selection.</source>
				</segment>
			</unit>
			<unit id="158" translate="yes">
				<segment state="initial">
					<source>Example 7: Determine the proxy server based on the host name matching the IP address</source>
				</segment>
			</unit>
			<unit id="159" translate="yes">
				<segment state="initial">
					<source>In this example, the proxy server is selected by translating the host name into an IP address and then comparing the address to a specified string.</source>
				</segment>
			</unit>
			<unit id="160" translate="yes">
				<segment state="initial">
					<source>Important</source>
				</segment>
			</unit>
			<unit id="161" translate="yes">
				<originalData>
					<data id="id1">`dnsResolve`</data>
				</originalData>
				<segment state="initial">
					<source>The <ph dataRef="id1" id="ph1" /> function queries a DNS server.</source>
				</segment>
			</unit>
			<unit id="162" translate="yes">
				<segment state="initial">
					<source>References to Object Model objects, properties, or methods cause the proxy auto-configuration file to fail silently.</source>
				</segment>
			</unit>
			<unit id="163" translate="yes">
				<originalData>
					<data id="id1">`window.open(...)`</data>
					<data id="id2">`alert(...)`</data>
					<data id="id3">`password(...)`</data>
				</originalData>
				<segment state="initial">
					<source>For example, the references <ph dataRef="id1" id="ph1" />, <ph dataRef="id2" id="ph2" />, and <ph dataRef="id3" id="ph3" /> all cause the proxy auto-configuration file to fail.</source>
				</segment>
			</unit>
			<unit id="164" translate="yes">
				<segment state="initial">
					<source>Example 8: Connect using a proxy server if the host IP address matches the specified IP address</source>
				</segment>
			</unit>
			<unit id="165" translate="yes">
				<segment state="initial">
					<source>In this example, the proxy server is selected by explicitly getting the IP address and then comparing it to a specified string.</source>
				</segment>
			</unit>
			<unit id="166" translate="yes">
				<segment state="initial">
					<source>If no protocol match occurs, the server makes a direct connection.</source>
				</segment>
			</unit>
			<unit id="167" translate="yes">
				<originalData>
					<data id="id1">`myIpAddress`</data>
				</originalData>
				<segment state="initial">
					<source>Specifically, the <ph dataRef="id1" id="ph1" /> function returns the IP address (in integer-period format) for the host that the browser is running on.</source>
				</segment>
			</unit>
			<unit id="168" translate="yes">
				<segment state="initial">
					<source>Example 9: Connect using a proxy server if there are periods in the host name</source>
				</segment>
			</unit>
			<unit id="169" translate="yes">
				<segment state="initial">
					<source>In this example, the function looks to see if there are periods (.) in the host name.</source>
				</segment>
			</unit>
			<unit id="170" translate="yes">
				<segment state="initial">
					<source>If there are any periods, the connection occurs using a proxy server.</source>
				</segment>
			</unit>
			<unit id="171" translate="yes">
				<segment state="initial">
					<source>If there are no periods, a direct connection occurs.</source>
				</segment>
			</unit>
			<unit id="172" translate="yes">
				<originalData>
					<data id="id1">`dnsDomainLevels`</data>
				</originalData>
				<segment state="initial">
					<source>Specifically, the <ph dataRef="id1" id="ph1" /> function returns an integer equal to the number of periods in the host name.</source>
				</segment>
			</unit>
			<unit id="173" translate="yes">
				<segment state="initial">
					<source>Note</source>
				</segment>
			</unit>
			<unit id="174" translate="yes">
				<segment state="initial">
					<source>This is another way to determine connection types based on host name characteristics.</source>
				</segment>
			</unit>
			<unit id="175" translate="yes">
				<segment state="initial">
					<source>Example 10: Connect using a proxy server based on specific days of the week</source>
				</segment>
			</unit>
			<unit id="176" translate="yes">
				<segment state="initial">
					<source>In this example, the function decides whether to connect to a proxy server, based on the days of the week.</source>
				</segment>
			</unit>
			<unit id="177" translate="yes">
				<segment state="initial">
					<source>Connecting on days that don’t fall between the specified date parameters let the server make a direct connection.</source>
				</segment>
			</unit>
			<unit id="178" translate="yes">
				<originalData>
					<data id="id1">`weekdayRange(day1 [,day2] [,GMT] )`</data>
					<data id="id2">`day1`</data>
					<data id="id3">`day2`</data>
					<data id="id4">`GMT`</data>
				</originalData>
				<segment state="initial">
					<source>Specifically the <ph dataRef="id1" id="ph1" /> function returns whether the current system time falls within the range specified by the parameters <ph dataRef="id2" id="ph2" />, <ph dataRef="id3" id="ph3" />, and <ph dataRef="id4" id="ph4" />.</source>
				</segment>
			</unit>
			<unit id="179" translate="yes">
				<segment state="initial">
					<source>Only the first parameter is required.</source>
				</segment>
			</unit>
			<unit id="180" translate="yes">
				<segment state="initial">
					<source>The GMT parameter presumes time values are in Greenwich Mean Time rather than the local time zone.</source>
				</segment>
			</unit>
			<unit id="181" translate="yes">
				<segment state="initial">
					<source>This function is particularly useful for situations where you want to use a proxy server for heavy traffic times, but allow a direct connection when traffic is light.</source>
				</segment>
			</unit>
		</group>
	</file>
</xliff>