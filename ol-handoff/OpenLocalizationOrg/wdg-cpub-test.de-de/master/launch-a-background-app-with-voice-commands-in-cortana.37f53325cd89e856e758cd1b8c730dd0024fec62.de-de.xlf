<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="de-de" version="2.0" xml:space="preserve" xmlns="urn:oasis:names:tc:xliff:document:2.0">
	<file id="1">
		<mda:metadata>
			<mda:metaGroup>
				<mda:meta type="tool-id">mdxliff</mda:meta>
				<mda:meta type="tool-name">mdxliff</mda:meta>
				<mda:meta type="tool-version">1.0-10daaac</mda:meta>
				<mda:meta type="tool-company">Microsoft</mda:meta>
			</mda:metaGroup>
		<mda:metaGroup><mda:meta type="olfilehash">95a625e6e2c692eefb02a962966830abec615e19</mda:meta><mda:meta type="olfilepath">wdg-cpub-test\ndolci2\input-and-devices\launch-a-background-app-with-voice-commands-in-cortana.md</mda:meta><mda:meta type="oltranslationpriority"></mda:meta><mda:meta type="oltranslationtype">Human Translation</mda:meta><mda:meta type="olskeletonhash">dc99f7b126e5e720a3aec2ac083c78062693bb56</mda:meta><mda:meta type="olxliffhash">daa5509ac3e9ea45342178021b78f5f69e97c9f1</mda:meta></mda:metaGroup></mda:metadata>
		<group id="content">
			<unit id="101" translate="yes">
				<segment state="initial">
					<source>In addition to using voice commands within Cortana to access system features, you can also extend Cortana with features and functionality from a background app using voice commands that specify an action or command to execute within the app.</source>
				</segment>
			</unit>
			<unit id="102" translate="yes">
				<segment state="initial">
					<source>Launch a background app with voice commands in Cortana</source>
				</segment>
			</unit>
			<unit id="103" translate="yes">
				<segment state="initial">
					<source>Launch a background app with voice commands in Cortana</source>
				</segment>
			</unit>
			<unit id="104" translate="yes">
				<segment state="initial">
					<source>\[ Updated for UWP apps on Windows 10.</source>
				</segment>
			</unit>
			<unit id="105" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](http://go.microsoft.com/fwlink/p/?linkid=619132)</data>
				</originalData>
				<segment state="initial">
					<source>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</source>
				</segment>
			</unit>
			<unit id="106" translate="yes">
				<segment state="initial">
					<source>Important APIs</source>
				</segment>
			</unit>
			<unit id="107" translate="yes">
				<segment state="initial">
					<source>Windows.ApplicationModel.VoiceCommands</source>
				</segment>
			</unit>
			<unit id="108" translate="yes">
				<segment state="initial">
					<source>VCD elements and attributes v1.2</source>
				</segment>
			</unit>
			<unit id="109" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>In addition to using voice commands within <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Cortana</pc> to access system features, you can also extend <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Cortana</pc> with features and functionality from a background app using voice commands that specify an action or command to execute within the app.</source>
				</segment>
			</unit>
			<unit id="110" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>When an app handles a voice command in the background, it can display feedback on the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Cortana</pc> canvas and communicate with the user using the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Cortana</pc> voice.</source>
				</segment>
			</unit>
			<unit id="111" translate="yes">
				<segment state="initial">
					<source>Note</source>
				</segment>
			</unit>
			<unit id="112" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>A voice command is a single utterance with a specific intent, defined in a Voice Command Definition (VCD) file, directed at an installed app through <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Cortana</pc>.</source>
				</segment>
			</unit>
			<unit id="113" translate="yes">
				<segment state="initial">
					<source>A voice command definition can vary in complexity.</source>
				</segment>
			</unit>
			<unit id="114" translate="yes">
				<segment state="initial">
					<source>It can support anything from a single, constrained utterance to a collection of more flexible, natural language utterances, all denoting the same intent.</source>
				</segment>
			</unit>
			<unit id="115" translate="yes">
				<segment state="initial">
					<source>A VCD file defines one or more voice commands, each with a unique intent.</source>
				</segment>
			</unit>
			<unit id="116" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>The target app can be launched in the foreground (the app takes focus) or activated in the background (<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Cortana</pc> retains focus but provides results from the app), depending on the complexity of the interaction.</source>
				</segment>
			</unit>
			<unit id="117" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>For example, voice commands that require additional context or user input (such as sending a message to a specific contact) are best handled in a foreground app, while basic commands can be handled in <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Cortana</pc> through a background app.</source>
				</segment>
			</unit>
			<unit id="118" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">[</data>
					<data id="id4">](http://go.microsoft.com/fwlink/p/?LinkID=619899)</data>
				</originalData>
				<segment state="initial">
					<source>We demonstrate these features here with a trip planning and management app named <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Adventure Works</pc> from the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Cortana voice command sample</pc>.</source>
				</segment>
			</unit>
			<unit id="119" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Here's an overview of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Adventure Works</pc> app integrated with the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Cortana</pc> canvas.</source>
				</segment>
			</unit>
			<unit id="120" translate="yes">
				<segment state="initial">
					<source>cortana canvas overview</source>
				</segment>
			</unit>
			<unit id="121" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source>To view an <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Adventure Works</pc> trip without <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Cortana</pc>, a user would launch the app and navigate to the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Upcoming trips</pc> page.</source>
				</segment>
			</unit>
			<unit id="122" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>Using voice commands through <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Cortana</pc> to launch your app in the background, the user can instead just say, "Adventure Works, when is my trip to Las Vegas?".</source>
				</segment>
			</unit>
			<unit id="123" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>Your app handles the command and <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Cortana</pc> displays results along with your app icon and other app info, if provided.</source>
				</segment>
			</unit>
			<unit id="124" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>Here's an example of a basic trip query and <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Cortana</pc> result screen that both shows and speaks "Your next trip to Las Vegas is on August 1st".</source>
				</segment>
			</unit>
			<unit id="125" translate="yes">
				<segment state="initial">
					<source>a basic query and result screen using the adventure works app in the background</source>
				</segment>
			</unit>
			<unit id="126" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>These are the basic steps to add voice-command functionality and extend <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Cortana</pc> with background functionality from your app using speech or keyboard input:</source>
				</segment>
			</unit>
			<unit id="127" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn921731)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source>Create an app service (see <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.ApplicationModel.AppService</pc></pc>) that <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Cortana</pc> invokes in the background.</source>
				</segment>
			</unit>
			<unit id="128" translate="yes">
				<segment state="initial">
					<source>Create a VCD file.</source>
				</segment>
			</unit>
			<unit id="129" translate="yes">
				<segment state="initial">
					<source>This is an XML document that defines all the spoken commands that the user can say to initiate actions or invoke commands when activating your app.</source>
				</segment>
			</unit>
			<unit id="130" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn706593)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>See <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">VCD elements and attributes v1.2</pc></pc>.</source>
				</segment>
			</unit>
			<unit id="131" translate="yes">
				<segment state="initial">
					<source>Register the command sets in the VCD file when the app is launched.</source>
				</segment>
			</unit>
			<unit id="132" translate="yes">
				<segment state="initial">
					<source>Handle the background activation of the app service and the execution of the voice command.</source>
				</segment>
			</unit>
			<unit id="133" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>Display and speak the appropriate feedback to the voice command within <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Cortana</pc>.</source>
				</segment>
			</unit>
			<unit id="134" translate="yes">
				<segment state="initial">
					<source>**Prerequisites:  **</source>
				</segment>
			</unit>
			<unit id="135" translate="yes">
				<segment state="initial">
					<source>If you're new to developing Universal Windows Platform (UWP) apps, have a look through these topics to get familiar with the technologies discussed here.</source>
				</segment>
			</unit>
			<unit id="136" translate="yes">
				<segment state="initial">
					<source>Create your first app</source>
				</segment>
			</unit>
			<unit id="137" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/mt185584)</data>
				</originalData>
				<segment state="initial">
					<source>Learn about events with <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Events and routed events overview</pc></source>
				</segment>
			</unit>
			<unit id="138" translate="yes">
				<segment state="initial">
					<source>**User experience guidelines:  **</source>
				</segment>
			</unit>
			<unit id="139" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn974233)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/dn596121)</data>
				</originalData>
				<segment state="initial">
					<source>See <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Cortana design guidelines</pc> for info about how to integrate your app with <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Cortana</pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Speech design guidelines</pc> for helpful tips on designing a useful and engaging speech-enabled app.</source>
				</segment>
			</unit>
			<unit id="140" translate="yes">
				<segment state="initial">
					<source>Create a new solution with a primary project in Visual Studio</source>
				</segment>
			</unit>
			<unit id="141" translate="yes">
				<segment state="initial">
					<source>Launch Microsoft Visual Studio 2015.</source>
				</segment>
			</unit>
			<unit id="142" translate="yes">
				<segment state="initial">
					<source>The Visual Studio 2015 Start page appears.</source>
				</segment>
			</unit>
			<unit id="143" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">&amp;gt;</data>
					<data id="id6">**</data>
					<data id="id7">**</data>
				</originalData>
				<segment state="initial">
					<source>On the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">File</pc> menu, select <pc dataRefEnd="id4" dataRefStart="id3" id="p2">New</pc> <ph dataRef="id5" id="ph1" /> <pc dataRefEnd="id7" dataRefStart="id6" id="p3">Project</pc>.</source>
				</segment>
			</unit>
			<unit id="144" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">New Project</pc> dialog appears.</source>
				</segment>
			</unit>
			<unit id="145" translate="yes">
				<segment state="initial">
					<source>The left pane of the dialog lets you select the type of templates to display.</source>
				</segment>
			</unit>
			<unit id="146" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">&amp;gt;</data>
					<data id="id4">&amp;gt;</data>
					<data id="id5">&amp;gt;</data>
					<data id="id6">**</data>
					<data id="id7">**</data>
				</originalData>
				<segment state="initial">
					<source>In the left pane, expand <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Installed <ph dataRef="id3" id="ph1" /> Templates <ph dataRef="id4" id="ph2" /> Visual C# <ph dataRef="id5" id="ph3" /> Windows</pc>, then pick the <pc dataRefEnd="id7" dataRefStart="id6" id="p2">Universal</pc> template group.</source>
				</segment>
			</unit>
			<unit id="147" translate="yes">
				<segment state="initial">
					<source>The dialog's center pane displays a list of project templates for Universal Windows Platform (UWP) apps.</source>
				</segment>
			</unit>
			<unit id="148" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>In the center pane, select the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Blank App (Universal Windows)</pc> template.</source>
				</segment>
			</unit>
			<unit id="149" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Blank App</pc> template creates a minimal UWP app that compiles and runs, but contains no user-interface controls or data.</source>
				</segment>
			</unit>
			<unit id="150" translate="yes">
				<segment state="initial">
					<source>You add controls to the app over the course of this tutorial.</source>
				</segment>
			</unit>
			<unit id="151" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>In the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Name</pc> text box, type your project name.</source>
				</segment>
			</unit>
			<unit id="152" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>Click <pc dataRefEnd="id2" dataRefStart="id1" id="p1">OK</pc> to create the project.</source>
				</segment>
			</unit>
			<unit id="153" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>Microsoft Visual Studio creates your project and displays it in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Solution Explorer</pc>.</source>
				</segment>
			</unit>
			<unit id="154" translate="yes">
				<segment state="initial">
					<source>Create an app service project</source>
				</segment>
			</unit>
			<unit id="155" translate="yes">
				<originalData>
					<data id="id1">&amp;gt;</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
				</originalData>
				<segment state="initial">
					<source>Right-click your Solution name, select Add-<ph dataRef="id1" id="ph1" />New Project, and then select <pc dataRefEnd="id3" dataRefStart="id2" id="p1">Windows Runtime Component</pc>.</source>
				</segment>
			</unit>
			<unit id="156" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn921731)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>This is the component that will implement the app service (see <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.ApplicationModel.AppService</pc></pc>).</source>
				</segment>
			</unit>
			<unit id="157" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>Type a name for the project (for example, "VoiceCommandService") and click <pc dataRefEnd="id2" dataRefStart="id1" id="p1">OK</pc>.</source>
				</segment>
			</unit>
			<unit id="158" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>In <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Solution Explorer</pc>, select the "VoiceCommandService" project and rename the "Class1.cs" file generated by Visual Studio.</source>
				</segment>
			</unit>
			<unit id="159" translate="yes">
				<segment state="initial">
					<source>For example, "YourAppVoiceCommandService.cs".</source>
				</segment>
			</unit>
			<unit id="160" translate="yes">
				<segment state="initial">
					<source>In the "YourAppVoiceCommandService.cs" file, add the following using directive.</source>
				</segment>
			</unit>
			<unit id="161" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br224794)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Create a new class that implements the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">IBackgroundTask</pc></pc> interface.</source>
				</segment>
			</unit>
			<unit id="162" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br224811)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Run</pc></pc> method of this class is the required entry point, called when <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Cortana</pc> recognizes the voice command.</source>
				</segment>
			</unit>
			<unit id="163" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  The background task class itself, and all other classes in the background task project, need to be sealed public classes.</source>
				</segment>
			</unit>
			<unit id="164" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>Here's a basic background task class for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Adventure Works</pc> app.</source>
				</segment>
			</unit>
			<unit id="165" translate="yes">
				<segment state="initial">
					<source>Note that we've renamed the default namespace assigned by Visual Studio.</source>
				</segment>
			</unit>
			<unit id="166" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>Declare your background task as an <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AppService</pc> in the app manifest.</source>
				</segment>
			</unit>
			<unit id="167" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>In <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Solution Explorer</pc>, right click the "Package.appxmanifest" file and select <pc dataRefEnd="id4" dataRefStart="id3" id="p2">View Code</pc>.</source>
				</segment>
			</unit>
			<unit id="168" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn934738)</data>
				</originalData>
				<segment state="initial">
					<source>Find the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">****Application****</pc> element.</source>
				</segment>
			</unit>
			<unit id="169" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn934720)</data>
					<data id="id3">[</data>
					<data id="id4">](https://msdn.microsoft.com/library/windows/apps/dn934738)</data>
				</originalData>
				<segment state="initial">
					<source>Add an <pc dataRefEnd="id2" dataRefStart="id1" id="p1">****Extensions****</pc> element to the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">****Application****</pc> element.</source>
				</segment>
			</unit>
			<unit id="170" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn986788)</data>
					<data id="id3">[</data>
					<data id="id4">](https://msdn.microsoft.com/library/windows/apps/dn934720)</data>
				</originalData>
				<segment state="initial">
					<source>Add a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">****uap:Extension****</pc> element to the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">****Extensions****</pc> element.</source>
				</segment>
			</unit>
			<unit id="171" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source>Add a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Category</pc> attribute to the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">uap:Extension</pc> element and set the value of the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Category</pc> attribute to "windows.appService".</source>
				</segment>
			</unit>
			<unit id="172" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
					<data id="id7">[</data>
					<data id="id8">](https://msdn.microsoft.com/library/windows/apps/br224794)</data>
					<data id="id9">**</data>
					<data id="id10">**</data>
				</originalData>
				<segment state="initial">
					<source>Add an <pc dataRefEnd="id2" dataRefStart="id1" id="p1">EntryPoint</pc> attribute to the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">uap:Extension</pc> element and set the value of the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">EntryPoint</pc> attribute to the name of the class that implements <pc dataRefEnd="id8" dataRefStart="id7" id="p4"><pc dataRefEnd="id10" dataRefStart="id9" id="p5">IBackgroundTask</pc></pc>, in this case "AdventureWorks.VoiceCommands.AdventureWorksVoiceCommandService".</source>
				</segment>
			</unit>
			<unit id="173" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn934779)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Add a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">****uap:AppService****</pc> element to the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">uap:Extension</pc> element.</source>
				</segment>
			</unit>
			<unit id="174" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">[</data>
					<data id="id4">](https://msdn.microsoft.com/library/windows/apps/dn934779)</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source>Add a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Name</pc> attribute to the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">****uap:AppService****</pc> element and set the value of the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Name</pc> attribute to a name for the app service, in this case "AdventureWorksVoiceCommandService".</source>
				</segment>
			</unit>
			<unit id="175" translate="yes">
				<segment state="initial">
					<source>Create a VCD file</source>
				</segment>
			</unit>
			<unit id="176" translate="yes">
				<originalData>
					<data id="id1">&amp;gt;</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
				</originalData>
				<segment state="initial">
					<source>In Visual Studio, right-click your primary project name, select Add-<ph dataRef="id1" id="ph1" />New Item, and then select <pc dataRefEnd="id3" dataRefStart="id2" id="p1">Text File</pc>.</source>
				</segment>
			</unit>
			<unit id="177" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn706593)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Type a name for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">VCD</pc></pc> file and be sure to append the ".xml" file extension.</source>
				</segment>
			</unit>
			<unit id="178" translate="yes">
				<segment state="initial">
					<source>For example, "AdventureWorksCommands.xml".</source>
				</segment>
			</unit>
			<unit id="179" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>Click <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Add</pc>.</source>
				</segment>
			</unit>
			<unit id="180" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">[</data>
					<data id="id4">](https://msdn.microsoft.com/library/windows/apps/dn706593)</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source>In <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Solution Explorer</pc>, select the <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">VCD</pc></pc> file.</source>
				</segment>
			</unit>
			<unit id="181" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
					<data id="id9">**</data>
					<data id="id10">**</data>
				</originalData>
				<segment state="initial">
					<source>In the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Properties</pc> window, set <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Build action</pc> to <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Content</pc>, and then set <pc dataRefEnd="id8" dataRefStart="id7" id="p4">Copy to output directory</pc> to <pc dataRefEnd="id10" dataRefStart="id9" id="p5">Copy if newer</pc>.</source>
				</segment>
			</unit>
			<unit id="182" translate="yes">
				<segment state="initial">
					<source>Edit the VCD file</source>
				</segment>
			</unit>
			<unit id="183" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>For each language supported by your app, create a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">CommandSet</pc> of voice commands that your app can handle.</source>
				</segment>
			</unit>
			<unit id="184" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">[</data>
					<data id="id4">](https://msdn.microsoft.com/library/windows/apps/dn706593)</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source>Each <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Command</pc> declared in a <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">VCD</pc></pc> file must include this information:</source>
				</segment>
			</unit>
			<unit id="185" translate="yes">
				<segment state="initial">
					<source>A command Name used by the application to identify the voice command at runtime</source>
				</segment>
			</unit>
			<unit id="186" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>An <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Example</pc> element that contains a phrase describing how a user can invoke the command.</source>
				</segment>
			</unit>
			<unit id="187" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Cortana</pc> shows this example when the user says "What can I say?", "Help", or they tap <pc dataRefEnd="id4" dataRefStart="id3" id="p2">See more</pc>.</source>
				</segment>
			</unit>
			<unit id="188" translate="yes">
				<segment state="initial">
					<source>see</source>
				</segment>
			</unit>
			<unit id="189" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>A <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ListenFor</pc> element that contains the words or phrases that your app recognizes to initiate a command.</source>
				</segment>
			</unit>
			<unit id="190" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>Each command needs to have at least one <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ListenFor</pc> element.</source>
				</segment>
			</unit>
			<unit id="191" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>A <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Feedback</pc> element that contains the text for <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Cortana</pc> to display and speak as the application is launched.</source>
				</segment>
			</unit>
			<unit id="192" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>A <pc dataRefEnd="id2" dataRefStart="id1" id="p1">VoiceCommandService</pc> element to indicate the voice command launches the app in the background.</source>
				</segment>
			</unit>
			<unit id="193" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn706593)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>For more detail, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">VCD elements and attributes v1.2</pc></pc> reference.</source>
				</segment>
			</unit>
			<unit id="194" translate="yes">
				<segment state="initial">
					<source>You can specify multiple language versions for the commands used to activate your app and execute a command.</source>
				</segment>
			</unit>
			<unit id="195" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn722331)</data>
					<data id="id3">[</data>
					<data id="id4">](https://msdn.microsoft.com/library/windows/apps/dn722331)</data>
				</originalData>
				<segment state="initial">
					<source>You can create multiple <pc dataRefEnd="id2" dataRefStart="id1" id="p1">****CommandSet****</pc> elements, each with a different <pc dataRefEnd="id4" dataRefStart="id3" id="p2">****xml:lang****</pc> attribute to allow your app to be used in different markets.</source>
				</segment>
			</unit>
			<unit id="196" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn722331)</data>
					<data id="id3">[</data>
					<data id="id4">](https://msdn.microsoft.com/library/windows/apps/dn722331)</data>
				</originalData>
				<segment state="initial">
					<source>For example, an app for the United States might have a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">****CommandSet****</pc> for English and a <pc dataRefEnd="id4" dataRefStart="id3" id="p2">****CommandSet****</pc> for Spanish.</source>
				</segment>
			</unit>
			<unit id="197" translate="yes">
				<segment state="initial">
					<source>Caution</source>
				</segment>
			</unit>
			<unit id="198" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn722331)</data>
				</originalData>
				<segment state="initial">
					<source>To activate an app and initiate an action using a voice command, the app must register a VCD file that contains a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">****CommandSet****</pc> with a language that matches the speech language that the user selected on their device.</source>
				</segment>
			</unit>
			<unit id="199" translate="yes">
				<originalData>
					<data id="id1">&amp;gt;</data>
					<data id="id2">&amp;gt;</data>
					<data id="id3">&amp;gt;</data>
				</originalData>
				<segment state="initial">
					<source>This language is set by the user on the device Settings <ph dataRef="id1" id="ph1" /> System <ph dataRef="id2" id="ph2" /> Speech <ph dataRef="id3" id="ph3" /> Speech Language screen.</source>
				</segment>
			</unit>
			<unit id="200" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn706593)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source>Here's a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">VCD</pc></pc> file that defines a voice command for the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Adventure Works</pc> app.</source>
				</segment>
			</unit>
			<unit id="201" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
					<data id="id9">**</data>
					<data id="id10">**</data>
					<data id="id11">**</data>
					<data id="id12">**</data>
					<data id="id13">**</data>
					<data id="id14">**</data>
				</originalData>
				<segment state="initial">
					<source>For this example, <pc dataRefEnd="id2" dataRefStart="id1" id="p1">CommandPrefix</pc> is set to "Adventure Works", <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Command</pc> is set to "whenIsTripToDestination", <pc dataRefEnd="id6" dataRefStart="id5" id="p3">ListenFor</pc> specifies the text that can be recognized (with a reference to a <pc dataRefEnd="id8" dataRefStart="id7" id="p4">PhraseList</pc> element that constrains the recognized destinations), <pc dataRefEnd="id10" dataRefStart="id9" id="p5">VoiceCommandService</pc> indicates that the voice command is handled by an app service in the background, and <pc dataRefEnd="id12" dataRefStart="id11" id="p6">Feedback</pc> specifies what the user will hear when <pc dataRefEnd="id14" dataRefStart="id13" id="p7">Cortana</pc> launches the app service.</source>
				</segment>
			</unit>
			<unit id="202" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/dn934779)</data>
				</originalData>
				<segment state="initial">
					<source>The value of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Target</pc> attribute of the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">VoiceCommandService</pc> element needs to be the name of the app service as specified in the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">****uap:AppService****</pc> element of the package.appxmanifest.</source>
				</segment>
			</unit>
			<unit id="203" translate="yes">
				<segment state="initial">
					<source>In this example, the name of the app service is "AdventureWorksVoiceCommandService".</source>
				</segment>
			</unit>
			<unit id="204" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>The "whenIsTripToDestination" command has a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ListenFor</pc> element with a reference to a <pc dataRefEnd="id4" dataRefStart="id3" id="p2">PhraseList</pc> for a constrained set of destinations.</source>
				</segment>
			</unit>
			<unit id="205" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">ListenFor</pc> elements cannot be programmatically modified.</source>
				</segment>
			</unit>
			<unit id="206" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>However, <pc dataRefEnd="id2" dataRefStart="id1" id="p1">PhraseList</pc> elements associated with <pc dataRefEnd="id4" dataRefStart="id3" id="p2">ListenFor</pc> elements can be programmatically modified.</source>
				</segment>
			</unit>
			<unit id="207" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>Applications should modify the content of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">PhraseList</pc> at runtime based on the data set generated as the user uses the app.</source>
				</segment>
			</unit>
			<unit id="208" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](dynamically-modify-voice-command-definition--vcd--phrase-lists.md)</data>
				</originalData>
				<segment state="initial">
					<source>See <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Dynamically modify Voice Command Definition (VCD) phrase lists</pc>.</source>
				</segment>
			</unit>
			<unit id="209" translate="yes">
				<segment state="initial">
					<source>Install the VCD commands</source>
				</segment>
			</unit>
			<unit id="210" translate="yes">
				<segment state="initial">
					<source>Your app must run once to install the command sets in the VCD.</source>
				</segment>
			</unit>
			<unit id="211" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn708205)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/br242335)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>When your app is activated, call <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">InstallCommandDefinitionsFromStorageFileAsync</pc></pc> in the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">OnLaunched</pc></pc> handler to register the commands that the system should listen for.</source>
				</segment>
			</unit>
			<unit id="212" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  If a device backup occurs and your app reinstalls automatically, voice command data is not preserved.</source>
				</segment>
			</unit>
			<unit id="213" translate="yes">
				<segment state="initial">
					<source>To ensure the voice command data for your app stays intact, consider initializing your VCD file each time your app launches or activates, or store a setting that indicates if the VCD is currently installed and check the setting each time your app launches or activates.</source>
				</segment>
			</unit>
			<unit id="214" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br227171)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>In this example, we first define a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">StorageFile</pc></pc> object.</source>
				</segment>
			</unit>
			<unit id="215" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br227272)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>We then call <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">GetFileAsync</pc></pc> to initialize it with our "AdventureWorksCommands.xml" file.</source>
				</segment>
			</unit>
			<unit id="216" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br227171)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/dn708205)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>This <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">StorageFile</pc></pc> object is then passed to <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">InstallCommandDefinitionsFromStorageFileAsync</pc></pc>.</source>
				</segment>
			</unit>
			<unit id="217" translate="yes">
				<segment state="initial">
					<source>Handle the voice command in the app service</source>
				</segment>
			</unit>
			<unit id="218" translate="yes">
				<segment state="initial">
					<source>Specify in the app service how your app responds to voice-command activations after it has launched and the voice command sets have been installed.</source>
				</segment>
			</unit>
			<unit id="219" translate="yes">
				<segment state="initial">
					<source>Take a service deferral so your app service is not terminated while handling the voice command.</source>
				</segment>
			</unit>
			<unit id="220" translate="yes">
				<segment state="initial">
					<source>Confirm that your background task is running as an app service activated by a voice command.</source>
				</segment>
			</unit>
			<unit id="221" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br224802)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/dn921727)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>Cast the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">IBackgroundTaskInstance.TriggerDetails</pc></pc> to <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Windows.ApplicationModel.AppService.AppServiceTriggerDetails</pc></pc>.</source>
				</segment>
			</unit>
			<unit id="222" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br224807)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Check that <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">IBackgroundTaskInstance.TriggerDetails.Name</pc></pc> is the name of the app service in the "Package.appxmanifest" file.</source>
				</segment>
			</unit>
			<unit id="223" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br224802)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/dn974204)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
					<data id="id9">**</data>
					<data id="id10">**</data>
				</originalData>
				<segment state="initial">
					<source>Use <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">IBackgroundTaskInstance.TriggerDetails</pc></pc> to create a <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">VoiceCommandServiceConnection</pc></pc> to <pc dataRefEnd="id10" dataRefStart="id9" id="p5">Cortana</pc> to retrieve the voice command.</source>
				</segment>
			</unit>
			<unit id="224" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn974204)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/dn706584)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>Register an event handler for <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">VoiceCommandServiceConnection</pc></pc>.<pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">VoiceCommandCompleted</pc></pc> to receive notification when the app service is closed due to a user cancellation.</source>
				</segment>
			</unit>
			<unit id="225" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br224798)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Register an event handler for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">IBackgroundTaskInstance.Canceled</pc></pc> to receive notification when the app service is closed due to an unexpected failure.</source>
				</segment>
			</unit>
			<unit id="226" translate="yes">
				<segment state="initial">
					<source>Determine the name of the command and what was spoken.</source>
				</segment>
			</unit>
			<unit id="227" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn974162)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/dn706589)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>Use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">VoiceCommand</pc></pc>.<pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">CommandName</pc></pc> property to determine the name of the voice command.</source>
				</segment>
			</unit>
			<unit id="228" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn631441)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/dn631443)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>To determine what the user said, check the value of <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Text</pc></pc> or the semantic properties of the recognized phrase in the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">SpeechRecognitionSemanticInterpretation</pc></pc> dictionary.</source>
				</segment>
			</unit>
			<unit id="229" translate="yes">
				<segment state="initial">
					<source>Take the appropriate action in your app service.</source>
				</segment>
			</unit>
			<unit id="230" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>Display and speak the feedback to the voice command with <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Cortana</pc>.</source>
				</segment>
			</unit>
			<unit id="231" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">[</data>
					<data id="id4">](https://msdn.microsoft.com/library/windows/apps/dn974182)</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source>Determine the strings that you want <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Cortana</pc> to display and speak to the user in response to the voice command and create a <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">VoiceCommandResponse</pc></pc> object.</source>
				</segment>
			</unit>
			<unit id="232" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">[</data>
					<data id="id4">](https://msdn.microsoft.com/library/windows/apps/dn974233)</data>
				</originalData>
				<segment state="initial">
					<source>For guidance on how to select the feedback strings that <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Cortana</pc> shows and speaks, see <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Cortana design guidelines</pc>.</source>
				</segment>
			</unit>
			<unit id="233" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn974204)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
					<data id="id7">[</data>
					<data id="id8">](https://msdn.microsoft.com/library/windows/apps/dn706579)</data>
					<data id="id9">**</data>
					<data id="id10">**</data>
					<data id="id11">[</data>
					<data id="id12">](https://msdn.microsoft.com/library/windows/apps/dn706580)</data>
					<data id="id13">**</data>
					<data id="id14">**</data>
					<data id="id15">**</data>
					<data id="id16">**</data>
				</originalData>
				<segment state="initial">
					<source>Use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">VoiceCommandServiceConnection</pc></pc> instance to report progress or completion to <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Cortana</pc> by calling <pc dataRefEnd="id8" dataRefStart="id7" id="p4"><pc dataRefEnd="id10" dataRefStart="id9" id="p5">ReportProgressAsync</pc></pc> or <pc dataRefEnd="id12" dataRefStart="id11" id="p6"><pc dataRefEnd="id14" dataRefStart="id13" id="p7">ReportSuccessAsync</pc></pc> with the <pc dataRefEnd="id16" dataRefStart="id15" id="p8">VoiceCommandServiceConnection</pc> object.</source>
				</segment>
			</unit>
			<unit id="234" translate="yes">
				<segment state="initial">
					<source>For this example, we refer back to the VCD in Step 3: Edit the VCD file.</source>
				</segment>
			</unit>
			<unit id="235" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn706580)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Once launched, the app service has .5 seconds to call <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ReportSuccessAsync</pc></pc>.</source>
				</segment>
			</unit>
			<unit id="236" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Cortana</pc> uses the data provided by the app to show and say the feedback specified in the VCD file.</source>
				</segment>
			</unit>
			<unit id="237" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>If the app takes longer than .5 seconds to make the call, <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Cortana</pc> inserts a hand-off screen, as shown here.</source>
				</segment>
			</unit>
			<unit id="238" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Cortana</pc> displays the hand-off screen until the application calls <pc dataRefEnd="id4" dataRefStart="id3" id="p2">ReportSuccessAsync</pc>, or for up to 5 seconds.</source>
				</segment>
			</unit>
			<unit id="239" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">[</data>
					<data id="id4">](https://msdn.microsoft.com/library/windows/apps/dn974204)</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>If the app service doesn’t call <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ReportSuccessAsync</pc>, or any of the <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">VoiceCommandServiceConnection</pc></pc> methods that provide <pc dataRefEnd="id8" dataRefStart="id7" id="p4">Cortana</pc> with information, the user receives an error message and the app service is cancelled.</source>
				</segment>
			</unit>
			<unit id="240" translate="yes">
				<segment state="initial">
					<source>a basic query with progress and result screens using the adventure works app in the background</source>
				</segment>
			</unit>
			<unit id="241" translate="yes">
				<segment state="initial">
					<source>Image resources and scaling</source>
				</segment>
			</unit>
			<unit id="242" translate="yes">
				<segment state="initial">
					<source>UWP apps can automatically select the most appropriate image based on specific settings and device capabilities (high contrast, effective pixels, locale, and so on).</source>
				</segment>
			</unit>
			<unit id="243" translate="yes">
				<segment state="initial">
					<source>All you need to do is provide the images and ensure you use the appropriate naming convention and folder organization within the app project for the different resource versions.</source>
				</segment>
			</unit>
			<unit id="244" translate="yes">
				<segment state="initial">
					<source>If you don't provide the recommended resource versions, accessibility, localization, and image quality can suffer, depending on the user's preferences, abilities, device type, and location.</source>
				</segment>
			</unit>
			<unit id="245" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/mt412102)</data>
				</originalData>
				<segment state="initial">
					<source>For more detail on image resources for high contrast and scale factors, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Guidelines for tile and icon assets</pc>.</source>
				</segment>
			</unit>
			<unit id="246" translate="yes">
				<segment state="initial">
					<source>You name resources using qualifiers.</source>
				</segment>
			</unit>
			<unit id="247" translate="yes">
				<segment state="initial">
					<source>Resource qualifiers are folder and filename modifiers that identify the context in which a particular version of a resource should be used.</source>
				</segment>
			</unit>
			<unit id="248" translate="yes">
				<segment state="initial">
					<source>The standard naming convention is "foldername/qualifiername-value\[\_qualifiername-value\]/filename.qualifiername-value\[\_qualifiername-value\].ext".</source>
				</segment>
			</unit>
			<unit id="249" translate="yes">
				<segment state="initial">
					<source>For example: images/en-US/logo.scale-100\_contrast-white.png is simply referred to in code using the root folder and the filename: images/logo.png.</source>
				</segment>
			</unit>
			<unit id="250" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn611859)</data>
					<data id="id3">[</data>
					<data id="id4">](https://msdn.microsoft.com/library/windows/apps/xaml/hh965324)</data>
				</originalData>
				<segment state="initial">
					<source>See <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Guidelines for files, data, and globalization</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">How to name resources using qualifiers</pc>.</source>
				</segment>
			</unit>
			<unit id="251" translate="yes">
				<segment state="initial">
					<source>We recommend that you mark the default language on string resource files (such as "en-US\\resources.resw") and the default scale factor on images (such as "logo.scale-100.png"), even if you do not currently plan to provide localized or multiple resolution resources.</source>
				</segment>
			</unit>
			<unit id="252" translate="yes">
				<segment state="initial">
					<source>However, you should provide assets for 100, 200, and 400 scale factors.</source>
				</segment>
			</unit>
			<unit id="253" translate="yes">
				<segment state="initial">
					<source>Important</source>
				</segment>
			</unit>
			<unit id="254" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>Valid icon sizes for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Cortana</pc> content tile are:</source>
				</segment>
			</unit>
			<unit id="255" translate="yes">
				<segment state="initial">
					<source>68w x 68h</source>
				</segment>
			</unit>
			<unit id="256" translate="yes">
				<segment state="initial">
					<source>68w x 92h</source>
				</segment>
			</unit>
			<unit id="257" translate="yes">
				<segment state="initial">
					<source>280w x 140h</source>
				</segment>
			</unit>
			<unit id="258" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn974182)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/dn974204)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>The content tile is not validated until a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">VoiceCommandResponse</pc></pc> is passed to the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">VoiceCommandServiceConnection</pc></pc>.</source>
				</segment>
			</unit>
			<unit id="259" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>If you pass a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">VoiceCommandResponse</pc> object to <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Cortana</pc> that contains a content tile with an image that does not adhere to these size ratios, an exception might occur.</source>
				</segment>
			</unit>
			<unit id="260" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">[</data>
					<data id="id4">](https://msdn.microsoft.com/library/windows/apps/dn974168)</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
					<data id="id7">[</data>
					<data id="id8">](https://msdn.microsoft.com/library/windows/apps/dn974169)</data>
					<data id="id9">**</data>
					<data id="id10">**</data>
				</originalData>
				<segment state="initial">
					<source>In this example from the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Adventure Works</pc> app (VoiceCommandService\\AdventureWorksVoiceCommandService.cs), we specify a simple grey square ("GreyTile.png") as the app logo on the <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">VoiceCommandContentTile</pc></pc> using the <pc dataRefEnd="id8" dataRefStart="id7" id="p4"><pc dataRefEnd="id10" dataRefStart="id9" id="p5">TitleWith68x68IconAndText</pc></pc> tile template.</source>
				</segment>
			</unit>
			<unit id="261" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/hh701741)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>The logo variants are located in VoiceCommandService\\Images, and are retrieved using the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">GetFileFromApplicationUriAsync</pc></pc> method.</source>
				</segment>
			</unit>
			<unit id="262" translate="yes">
				<segment state="initial">
					<source>Related articles</source>
				</segment>
			</unit>
			<unit id="263" translate="yes">
				<segment state="initial">
					<source>Developers</source>
				</segment>
			</unit>
			<unit id="264" translate="yes">
				<segment state="initial">
					<source>Cortana interactions</source>
				</segment>
			</unit>
			<unit id="265" translate="yes">
				<segment state="initial">
					<source>Define custom recognition constraints</source>
				</segment>
			</unit>
			<unit id="266" translate="yes">
				<segment state="initial">
					<source>Interact with a background app in Cortana</source>
				</segment>
			</unit>
			<unit id="267" translate="yes">
				<segment state="initial">
					<source>VCD elements and attributes v1.2</source>
				</segment>
			</unit>
			<unit id="268" translate="yes">
				<segment state="initial">
					<source>Quickstart: Using file or image resources</source>
				</segment>
			</unit>
			<unit id="269" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/xaml/hh965324)</data>
					<data id="id3">
</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">How to name resources using qualifiers</pc><ph dataRef="id3" id="ph1" /><pc dataRefEnd="id5" dataRefStart="id4" id="p2">Designers</pc></source>
				</segment>
			</unit>
			<unit id="270" translate="yes">
				<segment state="initial">
					<source>Cortana design guidelines</source>
				</segment>
			</unit>
			<unit id="271" translate="yes">
				<segment state="initial">
					<source>Speech design guidelines</source>
				</segment>
			</unit>
			<unit id="272" translate="yes">
				<segment state="initial">
					<source>Responsive design 101 for UWP apps</source>
				</segment>
			</unit>
			<unit id="273" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/mt412102)</data>
					<data id="id3">
</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Guidelines for tile and icon assets</pc><ph dataRef="id3" id="ph1" /><pc dataRefEnd="id5" dataRefStart="id4" id="p2">Samples</pc></source>
				</segment>
			</unit>
			<unit id="274" translate="yes">
				<segment state="initial">
					<source>Cortana voice command sample</source>
				</segment>
			</unit>
		</group>
	</file>
</xliff>