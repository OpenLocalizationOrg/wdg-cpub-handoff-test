<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="de-de" version="2.0" xml:space="preserve" xmlns="urn:oasis:names:tc:xliff:document:2.0">
	<file id="1">
		<mda:metadata>
			<mda:metaGroup>
				<mda:meta type="tool-id">mdxliff</mda:meta>
				<mda:meta type="tool-name">mdxliff</mda:meta>
				<mda:meta type="tool-version">1.0-10daaac</mda:meta>
				<mda:meta type="tool-company">Microsoft</mda:meta>
			</mda:metaGroup>
		<mda:metaGroup><mda:meta type="olfilehash">870a686048e3e711bcb3ccdc8d7b5a53049fab2a</mda:meta><mda:meta type="olfilepath">wdg-cpub-test\ndolci2\globalizing\guidelines-and-checklist-for-globalizing-your-app.md</mda:meta><mda:meta type="oltranslationpriority"></mda:meta><mda:meta type="oltranslationtype">Human Translation</mda:meta><mda:meta type="olskeletonhash">e618645e1934bc37b4cfd45c0e264497803b742e</mda:meta><mda:meta type="olxliffhash">4bf979242c131dde155b87ececef4fcefaec721b</mda:meta></mda:metaGroup></mda:metadata>
		<group id="content">
			<unit id="101" translate="yes">
				<segment state="initial">
					<source>Follow these best practices when globalizing your apps for a wider audience and when localizing your apps for a specific market.</source>
				</segment>
			</unit>
			<unit id="102" translate="yes">
				<segment state="initial">
					<source>Guidelines for globalization and localization</source>
				</segment>
			</unit>
			<unit id="103" translate="yes">
				<segment state="initial">
					<source>Globalization and localization do's and don'ts</source>
				</segment>
			</unit>
			<unit id="104" translate="yes">
				<segment state="initial">
					<source>\[ Updated for UWP apps on Windows 10.</source>
				</segment>
			</unit>
			<unit id="105" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](http://go.microsoft.com/fwlink/p/?linkid=619132)</data>
				</originalData>
				<segment state="initial">
					<source>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</source>
				</segment>
			</unit>
			<unit id="106" translate="yes">
				<segment state="initial">
					<source>Important APIs</source>
				</segment>
			</unit>
			<unit id="107" translate="yes">
				<segment state="initial">
					<source>Globalization</source>
				</segment>
			</unit>
			<unit id="108" translate="yes">
				<segment state="initial">
					<source>Globalization.NumberFormatting</source>
				</segment>
			</unit>
			<unit id="109" translate="yes">
				<segment state="initial">
					<source>Globalization.DateTimeFormatting</source>
				</segment>
			</unit>
			<unit id="110" translate="yes">
				<segment state="initial">
					<source>Resources</source>
				</segment>
			</unit>
			<unit id="111" translate="yes">
				<segment state="initial">
					<source>Resources.Core</source>
				</segment>
			</unit>
			<unit id="112" translate="yes">
				<segment state="initial">
					<source>Follow these best practices when globalizing your apps for a wider audience and when localizing your apps for a specific market.</source>
				</segment>
			</unit>
			<unit id="113" translate="yes">
				<segment state="initial">
					<source>Globalization</source>
				</segment>
			</unit>
			<unit id="114" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br206813)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Prepare your app to easily adapt to different markets by choosing globally appropriate terms and images for your UI, using <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Globalization</pc></pc> APIs to format app data, and avoiding assumptions based on location or language.</source>
				</segment>
			</unit>
			<unit id="115" translate="yes">
				<segment state="initial">
					<source>Recommendation</source>
				</segment>
			</unit>
			<unit id="116" translate="yes">
				<segment state="initial">
					<source>Description</source>
				</segment>
			</unit>
			<unit id="117" translate="yes">
				<segment state="initial">
					<source>Use the correct formats for numbers, dates, times, addresses, and phone numbers.</source>
				</segment>
			</unit>
			<unit id="118" translate="yes">
				<segment state="initial">
					<source>The formatting used for numbers, dates, times, and other forms of data varies between cultures, regions, languages, and markets.</source>
				</segment>
			</unit>
			<unit id="119" translate="yes">
				<originalData>
					<data id="id1">&lt;strong&gt;</data>
					<data id="id2">&lt;/strong&gt;</data>
				</originalData>
				<segment state="initial">
					<source>If you're displaying numbers, dates, times, or other data, use [<ph dataRef="id1" id="ph1" />Globalization<ph dataRef="id2" id="ph2" />](https://msdn.microsoft.com/library/windows/apps/br206813) APIs to get the format appropriate for a particular audience.</source>
				</segment>
			</unit>
			<unit id="120" translate="yes">
				<segment state="initial">
					<source>Support international paper sizes.</source>
				</segment>
			</unit>
			<unit id="121" translate="yes">
				<segment state="initial">
					<source>The most common paper sizes differ between countries, so if you include features that depend on paper size, like printing, be sure to support and test common international sizes.</source>
				</segment>
			</unit>
			<unit id="122" translate="yes">
				<segment state="initial">
					<source>Support international units of measurement and currencies.</source>
				</segment>
			</unit>
			<unit id="123" translate="yes">
				<segment state="initial">
					<source>Different units and scales are used in different countries, although the most popular are the metric system and the imperial system.</source>
				</segment>
			</unit>
			<unit id="124" translate="yes">
				<originalData>
					<data id="id1">&lt;strong&gt;</data>
					<data id="id2">&lt;/strong&gt;</data>
				</originalData>
				<segment state="initial">
					<source>If you deal with measurements, like length, temperature, or area, get the correct system measurement by using the [<ph dataRef="id1" id="ph1" />CurrenciesInUse<ph dataRef="id2" id="ph2" />](https://msdn.microsoft.com/library/windows/apps/br206793) property.</source>
				</segment>
			</unit>
			<unit id="125" translate="yes">
				<segment state="initial">
					<source>Display text and fonts correctly.</source>
				</segment>
			</unit>
			<unit id="126" translate="yes">
				<segment state="initial">
					<source>The ideal font, font size, and direction of text varies between different markets.</source>
				</segment>
			</unit>
			<unit id="127" translate="yes">
				<originalData>
					<data id="id1">&lt;strong&gt;</data>
					<data id="id2">&lt;/strong&gt;</data>
				</originalData>
				<segment state="initial">
					<source>For more info, see [<ph dataRef="id1" id="ph1" />Adjust layout and fonts, and support RTL<ph dataRef="id2" id="ph2" />](adjust-layout-and-fonts--and-support-rtl.md).</source>
				</segment>
			</unit>
			<unit id="128" translate="yes">
				<segment state="initial">
					<source>Use Unicode for character encoding.</source>
				</segment>
			</unit>
			<unit id="129" translate="yes">
				<segment state="initial">
					<source>By default, recent versions of Microsoft Visual Studio use Unicode character encoding for all documents.</source>
				</segment>
			</unit>
			<unit id="130" translate="yes">
				<segment state="initial">
					<source>If you're using a different editor, be sure to save source files in the appropriate Unicode character encodings.</source>
				</segment>
			</unit>
			<unit id="131" translate="yes">
				<segment state="initial">
					<source>All Windows Runtime APIs return UTF-16 encoded strings.</source>
				</segment>
			</unit>
			<unit id="132" translate="yes">
				<segment state="initial">
					<source>Record the language of input.</source>
				</segment>
			</unit>
			<unit id="133" translate="yes">
				<segment state="initial">
					<source>When your app asks users for text input, record the language of input.</source>
				</segment>
			</unit>
			<unit id="134" translate="yes">
				<segment state="initial">
					<source>This ensures that when the input is displayed later it's presented to the user with the appropriate formatting.</source>
				</segment>
			</unit>
			<unit id="135" translate="yes">
				<originalData>
					<data id="id1">&lt;strong&gt;</data>
					<data id="id2">&lt;/strong&gt;</data>
				</originalData>
				<segment state="initial">
					<source>Use the [<ph dataRef="id1" id="ph1" />CurrentInputMethodLanguage<ph dataRef="id2" id="ph2" />](https://msdn.microsoft.com/library/windows/apps/hh700658) property to get the current input language.</source>
				</segment>
			</unit>
			<unit id="136" translate="yes">
				<segment state="initial">
					<source>Don't use language to assume a user's location, and don't use location to assume a user's language.</source>
				</segment>
			</unit>
			<unit id="137" translate="yes">
				<segment state="initial">
					<source>In Windows, the user's language and location are separate concepts.</source>
				</segment>
			</unit>
			<unit id="138" translate="yes">
				<segment state="initial">
					<source>A user can speak a particular regional variant of a language, like en-gb for English as spoken in Great Britain, but the user can be in an entirely different country or region.</source>
				</segment>
			</unit>
			<unit id="139" translate="yes">
				<segment state="initial">
					<source>Consider whether your apps require knowledge about the user's language, like for UI text, or location, like for licensing issues.</source>
				</segment>
			</unit>
			<unit id="140" translate="yes">
				<originalData>
					<data id="id1">&lt;strong&gt;</data>
					<data id="id2">&lt;/strong&gt;</data>
				</originalData>
				<segment state="initial">
					<source>For more info, see [<ph dataRef="id1" id="ph1" />Manage language and region<ph dataRef="id2" id="ph2" />](manage-language-and-region.md).</source>
				</segment>
			</unit>
			<unit id="141" translate="yes">
				<segment state="initial">
					<source>Don't use colloquialisms and metaphors.</source>
				</segment>
			</unit>
			<unit id="142" translate="yes">
				<segment state="initial">
					<source>Language that's specific to a demographic group, such as culture and age, can be hard to understand or translate, because only people in that demographic group use that language.</source>
				</segment>
			</unit>
			<unit id="143" translate="yes">
				<segment state="initial">
					<source>Similarly, metaphors might make sense to one person but mean nothing to someone else.</source>
				</segment>
			</unit>
			<unit id="144" translate="yes">
				<originalData>
					<data id="id1">&amp;quot;</data>
					<data id="id2">&amp;quot;</data>
				</originalData>
				<segment state="initial">
					<source>For example, a <ph dataRef="id1" id="ph1" />bluebird<ph dataRef="id2" id="ph2" /> means something specific to those who are part of skiing culture, but those who aren’t part of that culture don’t understand the reference.</source>
				</segment>
			</unit>
			<unit id="145" translate="yes">
				<segment state="initial">
					<source>If you plan to localize your app and you use an informal voice or tone, be sure that you adequately explain to localizers the meaning and voice to be translated.</source>
				</segment>
			</unit>
			<unit id="146" translate="yes">
				<segment state="initial">
					<source>Don't use technical jargon, abbreviations, or acronyms.</source>
				</segment>
			</unit>
			<unit id="147" translate="yes">
				<segment state="initial">
					<source>Technical language is less likely to be understood by non-technical audiences or people from other cultures or regions, and it's difficult to translate.</source>
				</segment>
			</unit>
			<unit id="148" translate="yes">
				<segment state="initial">
					<source>People don't use these kinds of words in everyday conversations.</source>
				</segment>
			</unit>
			<unit id="149" translate="yes">
				<segment state="initial">
					<source>Technical language often appears in error messages to identify hardware and software issues.</source>
				</segment>
			</unit>
			<unit id="150" translate="yes">
				<segment state="initial">
					<source>At times, this might be be necessary, but you should rewrite strings to be non-technical.</source>
				</segment>
			</unit>
			<unit id="151" translate="yes">
				<segment state="initial">
					<source>Don't use images that might be offensive.</source>
				</segment>
			</unit>
			<unit id="152" translate="yes">
				<segment state="initial">
					<source>Images that might be appropriate in your own culture may be offensive or misinterpreted in other cultures.</source>
				</segment>
			</unit>
			<unit id="153" translate="yes">
				<segment state="initial">
					<source>Avoid use of religious symbols, animals, or color combinations that are associated with national flags or political movements.</source>
				</segment>
			</unit>
			<unit id="154" translate="yes">
				<segment state="initial">
					<source>Avoid political offense in maps or when referring to regions.</source>
				</segment>
			</unit>
			<unit id="155" translate="yes">
				<segment state="initial">
					<source>Maps may include controversial regional or national boundaries, and they're a frequent source of political offense.</source>
				</segment>
			</unit>
			<unit id="156" translate="yes">
				<originalData>
					<data id="id1">&amp;quot;</data>
					<data id="id2">&amp;quot;</data>
				</originalData>
				<segment state="initial">
					<source>Be careful that any UI used for selecting a nation refers to it as a <ph dataRef="id1" id="ph1" />country/region<ph dataRef="id2" id="ph2" />.</source>
				</segment>
			</unit>
			<unit id="157" translate="yes">
				<originalData>
					<data id="id1">&amp;quot;</data>
					<data id="id2">&amp;quot;</data>
				</originalData>
				<segment state="initial">
					<source>Putting a disputed territory in a list labeled <ph dataRef="id1" id="ph1" />Countries<ph dataRef="id2" id="ph2" />, like in an address form, could get you in trouble.</source>
				</segment>
			</unit>
			<unit id="158" translate="yes">
				<segment state="initial">
					<source>Don't use string comparison by itself to compare language tags.</source>
				</segment>
			</unit>
			<unit id="159" translate="yes">
				<segment state="initial">
					<source>BCP-47 language tags are complex.</source>
				</segment>
			</unit>
			<unit id="160" translate="yes">
				<segment state="initial">
					<source>There are a number of issues when comparing language tags, including issues with matching script information, legacy tags, and multiple regional variants.</source>
				</segment>
			</unit>
			<unit id="161" translate="yes">
				<segment state="initial">
					<source>The resource management system in Windows takes care of matching for you.</source>
				</segment>
			</unit>
			<unit id="162" translate="yes">
				<segment state="initial">
					<source>You can specify a set of resources in any languages, and the system chooses the appropriate one for the user and the app.</source>
				</segment>
			</unit>
			<unit id="163" translate="yes">
				<originalData>
					<data id="id1">&lt;strong&gt;</data>
					<data id="id2">&lt;/strong&gt;</data>
				</originalData>
				<segment state="initial">
					<source>For more on resource management, see [<ph dataRef="id1" id="ph1" />Defining app resources<ph dataRef="id2" id="ph2" />](https://msdn.microsoft.com/library/windows/apps/xaml/hh965321).</source>
				</segment>
			</unit>
			<unit id="164" translate="yes">
				<segment state="initial">
					<source>Don't assume that sorting is always alphabetic.</source>
				</segment>
			</unit>
			<unit id="165" translate="yes">
				<segment state="initial">
					<source>For languages that don't use Latin script, sorting is based on things like pronunciation, number of pen strokes, and other factors.</source>
				</segment>
			</unit>
			<unit id="166" translate="yes">
				<segment state="initial">
					<source>Even languages that use Latin script don't always use alphabetic sorting.</source>
				</segment>
			</unit>
			<unit id="167" translate="yes">
				<segment state="initial">
					<source>For example, in some cultures, a phone book might not be sorted alphabetically.</source>
				</segment>
			</unit>
			<unit id="168" translate="yes">
				<segment state="initial">
					<source>The system can handle sorting for you, but if you create your own sorting algorithm, be sure to take into account the sorting methods used in your target markets.</source>
				</segment>
			</unit>
			<unit id="169" translate="yes">
				<segment state="initial">
					<source>Localization</source>
				</segment>
			</unit>
			<unit id="170" translate="yes">
				<segment state="initial">
					<source>Recommendation</source>
				</segment>
			</unit>
			<unit id="171" translate="yes">
				<segment state="initial">
					<source>Description</source>
				</segment>
			</unit>
			<unit id="172" translate="yes">
				<segment state="initial">
					<source>Separate resources such as UI strings and images from code.</source>
				</segment>
			</unit>
			<unit id="173" translate="yes">
				<segment state="initial">
					<source>Design your apps so that resources, like strings and images, are separated from your code.</source>
				</segment>
			</unit>
			<unit id="174" translate="yes">
				<segment state="initial">
					<source>This enables them to be independently maintained, localized, and customized for different scaling factors, accessibility options, and a number of other user and machine contexts.</source>
				</segment>
			</unit>
			<unit id="175" translate="yes">
				<segment state="initial">
					<source>Separate string resources from your app's code to create a single language-independent codebase.</source>
				</segment>
			</unit>
			<unit id="176" translate="yes">
				<segment state="initial">
					<source>Always separate strings from app code and markup, and place them into a resource file, like a ResW or ResJSON file.</source>
				</segment>
			</unit>
			<unit id="177" translate="yes">
				<segment state="initial">
					<source>Use the resource infrastructure in Windows to handle the selection of the most appropriate resources to match the user's runtime environment.</source>
				</segment>
			</unit>
			<unit id="178" translate="yes">
				<segment state="initial">
					<source>Isolate other localizable resource files.</source>
				</segment>
			</unit>
			<unit id="179" translate="yes">
				<segment state="initial">
					<source>Take other files that require localization, like images that contain text to be translated or that need to be changed due to cultural sensitivity, and place them in folders tagged with language names.</source>
				</segment>
			</unit>
			<unit id="180" translate="yes">
				<segment state="initial">
					<source>Set your default language, and mark all of your resources, even the ones in your default language.</source>
				</segment>
			</unit>
			<unit id="181" translate="yes">
				<segment state="initial">
					<source>Always set the default language for your apps appropriately in the app manifest (package.appxmanifest).</source>
				</segment>
			</unit>
			<unit id="182" translate="yes">
				<segment state="initial">
					<source>The default language determines the language that's used when the user doesn't speak any of the supported languages of the app.</source>
				</segment>
			</unit>
			<unit id="183" translate="yes">
				<segment state="initial">
					<source>Mark default language resources, for example en-us/Logo.png, with their language, so the system can tell which language the resource is in and how it's used in particular situations.</source>
				</segment>
			</unit>
			<unit id="184" translate="yes">
				<segment state="initial">
					<source>Determine the resources of your app that require localization.</source>
				</segment>
			</unit>
			<unit id="185" translate="yes">
				<segment state="initial">
					<source>What needs to change if your app is to be localized for other markets?</source>
				</segment>
			</unit>
			<unit id="186" translate="yes">
				<segment state="initial">
					<source>Text strings require translation into other languages.</source>
				</segment>
			</unit>
			<unit id="187" translate="yes">
				<segment state="initial">
					<source>Images may need to be adapted for other cultures.</source>
				</segment>
			</unit>
			<unit id="188" translate="yes">
				<segment state="initial">
					<source>Consider how localization affects other resources that your app uses, like audio or video.</source>
				</segment>
			</unit>
			<unit id="189" translate="yes">
				<segment state="initial">
					<source>Use resource identifiers in the code and markup to refer to resources.</source>
				</segment>
			</unit>
			<unit id="190" translate="yes">
				<segment state="initial">
					<source>Instead of having string literals or specific file names for images in your markup, use references to the resources.</source>
				</segment>
			</unit>
			<unit id="191" translate="yes">
				<segment state="initial">
					<source>Be sure to use unique identifiers for each resource.</source>
				</segment>
			</unit>
			<unit id="192" translate="yes">
				<originalData>
					<data id="id1">&lt;strong&gt;</data>
					<data id="id2">&lt;/strong&gt;</data>
				</originalData>
				<segment state="initial">
					<source>For more info, see [<ph dataRef="id1" id="ph1" />How to name resources using qualifiers<ph dataRef="id2" id="ph2" />](https://msdn.microsoft.com/en-us/library/windows/apps/xaml/Hh965324).</source>
				</segment>
			</unit>
			<unit id="193" translate="yes">
				<segment state="initial">
					<source>Listen for events that fire when the system changes and it begins to use a different set of qualifiers.</source>
				</segment>
			</unit>
			<unit id="194" translate="yes">
				<segment state="initial">
					<source>Reprocess the document so that the correct resources can be loaded.</source>
				</segment>
			</unit>
			<unit id="195" translate="yes">
				<segment state="initial">
					<source>Enable text size to increase.</source>
				</segment>
			</unit>
			<unit id="196" translate="yes">
				<segment state="initial">
					<source>Allocate text buffers dynamically, since text size may expand when translated.</source>
				</segment>
			</unit>
			<unit id="197" translate="yes">
				<segment state="initial">
					<source>If you must use static buffers, make them extra-large (perhaps doubling the length of the English string) to accommodate potential expansion when strings are translated.</source>
				</segment>
			</unit>
			<unit id="198" translate="yes">
				<segment state="initial">
					<source>There also may be limited space available for a user interface.</source>
				</segment>
			</unit>
			<unit id="199" translate="yes">
				<segment state="initial">
					<source>To accommodate localized languages, ensure that your string length is approximately 40% longer than what you would need for the English language.</source>
				</segment>
			</unit>
			<unit id="200" translate="yes">
				<segment state="initial">
					<source>For really short strings, such as single words, you may needs as much as 300% more space.</source>
				</segment>
			</unit>
			<unit id="201" translate="yes">
				<segment state="initial">
					<source>In addition, enabling multiline support and text-wrapping in a control will leave more space to display each string.</source>
				</segment>
			</unit>
			<unit id="202" translate="yes">
				<segment state="initial">
					<source>Support mirroring.</source>
				</segment>
			</unit>
			<unit id="203" translate="yes">
				<segment state="initial">
					<source>Text alignment and reading order can be left-to-right, as in English, or right-to-left (RTL), as in Arabic or Hebrew.</source>
				</segment>
			</unit>
			<unit id="204" translate="yes">
				<segment state="initial">
					<source>If you are localizing your product into languages that use a different reading order than your own, be sure that the layout of your UI elements supports mirroring.</source>
				</segment>
			</unit>
			<unit id="205" translate="yes">
				<segment state="initial">
					<source>Even items such as back buttons, UI transition effects, and images may need to be mirrored.</source>
				</segment>
			</unit>
			<unit id="206" translate="yes">
				<originalData>
					<data id="id1">&lt;strong&gt;</data>
					<data id="id2">&lt;/strong&gt;</data>
				</originalData>
				<segment state="initial">
					<source>For more info, see [<ph dataRef="id1" id="ph1" />Adjust layout and fonts, and support RTL<ph dataRef="id2" id="ph2" />](adjust-layout-and-fonts--and-support-rtl.md).</source>
				</segment>
			</unit>
			<unit id="207" translate="yes">
				<segment state="initial">
					<source>Comment strings.</source>
				</segment>
			</unit>
			<unit id="208" translate="yes">
				<segment state="initial">
					<source>Ensure that strings are properly commented, and only the strings that need to be translated are provided to localizers.</source>
				</segment>
			</unit>
			<unit id="209" translate="yes">
				<segment state="initial">
					<source>Over-localization is a common source of problems.</source>
				</segment>
			</unit>
			<unit id="210" translate="yes">
				<segment state="initial">
					<source>Use short strings.</source>
				</segment>
			</unit>
			<unit id="211" translate="yes">
				<segment state="initial">
					<source>Shorter strings are easier to translate and enable translation recycling.</source>
				</segment>
			</unit>
			<unit id="212" translate="yes">
				<segment state="initial">
					<source>Translation recycling saves money because the same string isn't sent to the localizer twice.</source>
				</segment>
			</unit>
			<unit id="213" translate="yes">
				<segment state="initial">
					<source>Strings longer than 8192 characters may not be supported by some localization tools, so keep string length to 4000 or less.</source>
				</segment>
			</unit>
			<unit id="214" translate="yes">
				<segment state="initial">
					<source>Provide strings that contain an entire sentence.</source>
				</segment>
			</unit>
			<unit id="215" translate="yes">
				<segment state="initial">
					<source>Provide strings that contain an entire sentence, instead of breaking the sentence into individual words, because the translation of words may depend on their position in a sentence.</source>
				</segment>
			</unit>
			<unit id="216" translate="yes">
				<segment state="initial">
					<source>Also, don't assume that a phrase with multiple parameters will keep those parameters in the same order for every language.</source>
				</segment>
			</unit>
			<unit id="217" translate="yes">
				<segment state="initial">
					<source>Optimize image and audio files for localization.</source>
				</segment>
			</unit>
			<unit id="218" translate="yes">
				<segment state="initial">
					<source>Reduce localization costs by avoiding use of text in images or speech in audio files.</source>
				</segment>
			</unit>
			<unit id="219" translate="yes">
				<segment state="initial">
					<source>If you're localizing to a language with a different reading direction than your own, using symmetrical images and effects make it easier to support mirroring.</source>
				</segment>
			</unit>
			<unit id="220" translate="yes">
				<segment state="initial">
					<source>Don't re-use strings in different contexts.</source>
				</segment>
			</unit>
			<unit id="221" translate="yes">
				<originalData>
					<data id="id1">&amp;quot;</data>
					<data id="id2">&amp;quot;</data>
					<data id="id3">&amp;quot;</data>
					<data id="id4">&amp;quot;</data>
				</originalData>
				<segment state="initial">
					<source>Don't re-use strings in different contexts, because even simple words like <ph dataRef="id1" id="ph1" />on<ph dataRef="id2" id="ph2" /> and <ph dataRef="id3" id="ph3" />off<ph dataRef="id4" id="ph4" /> may be translated differently, depending on the context.</source>
				</segment>
			</unit>
			<unit id="222" translate="yes">
				<segment state="initial">
					<source>Related articles</source>
				</segment>
			</unit>
			<unit id="223" translate="yes">
				<segment state="initial">
					<source>Samples</source>
				</segment>
			</unit>
			<unit id="224" translate="yes">
				<segment state="initial">
					<source>Application resources and localization sample</source>
				</segment>
			</unit>
			<unit id="225" translate="yes">
				<segment state="initial">
					<source>Globalization preferences sample</source>
				</segment>
			</unit>
		</group>
	</file>
</xliff>