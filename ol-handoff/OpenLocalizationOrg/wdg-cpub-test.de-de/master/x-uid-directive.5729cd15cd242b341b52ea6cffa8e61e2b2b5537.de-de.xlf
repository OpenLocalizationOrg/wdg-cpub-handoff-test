<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="de-de" version="2.0" xml:space="preserve" xmlns="urn:oasis:names:tc:xliff:document:2.0">
	<file id="1">
		<mda:metadata>
			<mda:metaGroup>
				<mda:meta type="tool-id">mdxliff</mda:meta>
				<mda:meta type="tool-name">mdxliff</mda:meta>
				<mda:meta type="tool-version">1.0-10daaac</mda:meta>
				<mda:meta type="tool-company">Microsoft</mda:meta>
			</mda:metaGroup>
		<mda:metaGroup><mda:meta type="olfilehash">5880add499ff902e320c9d594279444f28668da0</mda:meta><mda:meta type="olfilepath">wdg-cpub-test\ndolci1\xaml-platform\x-uid-directive.md</mda:meta><mda:meta type="oltranslationpriority"></mda:meta><mda:meta type="oltranslationtype">Human Translation</mda:meta><mda:meta type="olskeletonhash">86041311b1d7a9b5e4b38330c7bf19800d3cbdcb</mda:meta><mda:meta type="olxliffhash">b07ec60a05c5dd858da8b735f4712cdea2c31dc1</mda:meta></mda:metaGroup></mda:metadata>
		<group id="content">
			<unit id="101" translate="yes">
				<segment state="initial">
					<source>Provides a unique identifier for markup elements.</source>
				</segment>
			</unit>
			<unit id="102" translate="yes">
				<segment state="initial">
					<source>For Universal Windows Platform (UWP) XAML, this unique identifier is used by XAML localization processes and tools, such as using resources from a .resw resource file.</source>
				</segment>
			</unit>
			<unit id="103" translate="yes">
				<segment state="initial">
					<source>x:Uid directive'</source>
				</segment>
			</unit>
			<unit id="104" translate="yes">
				<segment state="initial">
					<source>x:Uid directive</source>
				</segment>
			</unit>
			<unit id="105" translate="yes">
				<segment state="initial">
					<source>\[ Updated for UWP apps on Windows 10.</source>
				</segment>
			</unit>
			<unit id="106" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](http://go.microsoft.com/fwlink/p/?linkid=619132)</data>
				</originalData>
				<segment state="initial">
					<source>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</source>
				</segment>
			</unit>
			<unit id="107" translate="yes">
				<segment state="initial">
					<source>Provides a unique identifier for markup elements.</source>
				</segment>
			</unit>
			<unit id="108" translate="yes">
				<segment state="initial">
					<source>For Universal Windows Platform (UWP) XAML, this unique identifier is used by XAML localization processes and tools, such as using resources from a .resw resource file.</source>
				</segment>
			</unit>
			<unit id="109" translate="yes">
				<segment state="initial">
					<source>XAML attribute usage</source>
				</segment>
			</unit>
			<unit id="110" translate="yes">
				<segment state="initial">
					<source>XAML values</source>
				</segment>
			</unit>
			<unit id="111" translate="yes">
				<segment state="initial">
					<source>Term</source>
				</segment>
			</unit>
			<unit id="112" translate="yes">
				<segment state="initial">
					<source>Description</source>
				</segment>
			</unit>
			<unit id="113" translate="yes">
				<segment state="initial">
					<source>stringID</source>
				</segment>
			</unit>
			<unit id="114" translate="yes">
				<segment state="initial">
					<source>A string that uniquely identifies a XAML element in an app, and becomes part of the resource path in a resource file.</source>
				</segment>
			</unit>
			<unit id="115" translate="yes">
				<segment state="initial">
					<source>See Remarks.</source>
				</segment>
			</unit>
			<unit id="116" translate="yes">
				<segment state="initial">
					<source>Remarks</source>
				</segment>
			</unit>
			<unit id="117" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>Use <pc dataRefEnd="id2" dataRefStart="id1" id="p1">x:Uid</pc> to identify an object element in your XAML.</source>
				</segment>
			</unit>
			<unit id="118" translate="yes">
				<segment state="initial">
					<source>Typically this object element is an instance of a control class or other element that is displayed in a UI.</source>
				</segment>
			</unit>
			<unit id="119" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>The relationship between the string you use in <pc dataRefEnd="id2" dataRefStart="id1" id="p1">x:Uid</pc> and the strings you use in a resources file is that the resource file strings are the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">x:Uid</pc> followed by a dot (.) and then by the name of a specific property of the element that's being localized.</source>
				</segment>
			</unit>
			<unit id="120" translate="yes">
				<segment state="initial">
					<source>Consider this example:</source>
				</segment>
			</unit>
			<unit id="121" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>To specify content to replace the display text <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Go</pc>, you must specify a new resource that comes from a resource file.</source>
				</segment>
			</unit>
			<unit id="122" translate="yes">
				<segment state="initial">
					<source>Your resource file should contain an entry for the resource named "GoButton.Content".</source>
				</segment>
			</unit>
			<unit id="123" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br209366)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/br209265)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Content</pc></pc> in this case is a specific property that's inherited by the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Button</pc></pc> class.</source>
				</segment>
			</unit>
			<unit id="124" translate="yes">
				<segment state="initial">
					<source>You might also provide localized values for other properties of this button, for example you could provide a resource-based value for "GoButton.FlowDirection".</source>
				</segment>
			</unit>
			<unit id="125" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">[</data>
					<data id="id4">](https://msdn.microsoft.com/library/windows/apps/xaml/hh965329)</data>
				</originalData>
				<segment state="initial">
					<source>For more info on how to use <pc dataRefEnd="id2" dataRefStart="id1" id="p1">x:Uid</pc> and resource files together, see <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Quickstart: Translating UI resources</pc>.</source>
				</segment>
			</unit>
			<unit id="126" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>The validity of which strings can be used for an <pc dataRefEnd="id2" dataRefStart="id1" id="p1">x:Uid</pc> value is controlled in a practical sense by which strings are legal as an identifier in a resource file and a resource path.</source>
				</segment>
			</unit>
			<unit id="127" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">x:Uid</pc> is discrete from <pc dataRefEnd="id4" dataRefStart="id3" id="p2">x:Name</pc> both because of the stated XAML localization scenario, and so that identifiers that are used for localization have no dependencies on the programming model implications of <pc dataRefEnd="id6" dataRefStart="id5" id="p3">x:Name</pc>.</source>
				</segment>
			</unit>
			<unit id="128" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Also, <pc dataRefEnd="id2" dataRefStart="id1" id="p1">x:Name</pc> is governed by the XAML namescope concept, whereas uniqueness for <pc dataRefEnd="id4" dataRefStart="id3" id="p2">x:Uid</pc> is controlled by the package resource index (PRI) system.</source>
				</segment>
			</unit>
			<unit id="129" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/jj552947)</data>
				</originalData>
				<segment state="initial">
					<source>For more info, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Resource Management System</pc>.</source>
				</segment>
			</unit>
			<unit id="130" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>UWP XAML has somewhat different rules for <pc dataRefEnd="id2" dataRefStart="id1" id="p1">x:Uid</pc> uniqueness than previous XAML-utilizing technologies used.</source>
				</segment>
			</unit>
			<unit id="131" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>For UWP XAML it is legal for the same <pc dataRefEnd="id2" dataRefStart="id1" id="p1">x:Uid</pc> ID value to exist as a directive on multiple XAML elements.</source>
				</segment>
			</unit>
			<unit id="132" translate="yes">
				<segment state="initial">
					<source>However, each such element must then share the same resolution logic when resolving the resources in a resource file.</source>
				</segment>
			</unit>
			<unit id="133" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Also, all XAML files in a project share a single resource scope for purposes of <pc dataRefEnd="id2" dataRefStart="id1" id="p1">x:Uid</pc> resolution, there is no concept of <pc dataRefEnd="id4" dataRefStart="id3" id="p2">x:Uid</pc> scopes being aligned to individual XAML files.</source>
				</segment>
			</unit>
			<unit id="134" translate="yes">
				<segment state="initial">
					<source>In some cases you'll be using a resource path rather than built-in functionality of the package resource index (PRI) system.</source>
				</segment>
			</unit>
			<unit id="135" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Any string used as an <pc dataRefEnd="id2" dataRefStart="id1" id="p1">x:Uid</pc> value defines a resource path that begins with ms-resource:///Resources/ and includes the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">x:Uid</pc> string.</source>
				</segment>
			</unit>
			<unit id="136" translate="yes">
				<segment state="initial">
					<source>The path is completed by the names of the properties you specify in a resources file or are otherwise targeting.</source>
				</segment>
			</unit>
			<unit id="137" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>Don't put <pc dataRefEnd="id2" dataRefStart="id1" id="p1">x:Uid</pc> on property elements, that isn't allowed in Windows Runtime XAML.</source>
				</segment>
			</unit>
		</group>
	</file>
</xliff>