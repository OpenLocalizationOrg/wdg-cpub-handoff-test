<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="de-de" version="2.0" xml:space="preserve" xmlns="urn:oasis:names:tc:xliff:document:2.0">
	<file id="1">
		<mda:metadata>
			<mda:metaGroup>
				<mda:meta type="tool-id">mdxliff</mda:meta>
				<mda:meta type="tool-name">mdxliff</mda:meta>
				<mda:meta type="tool-version">1.0-10daaac</mda:meta>
				<mda:meta type="tool-company">Microsoft</mda:meta>
			</mda:metaGroup>
		<mda:metaGroup><mda:meta type="olfilehash">9b013e5154608d58c84085247b3e9c6fcc42e478</mda:meta><mda:meta type="olfilepath">wdg-cpub-test\v-paulj\Windows-driver-docs_develop\signing_a_driver_for_public_release.md</mda:meta><mda:meta type="oltranslationpriority"></mda:meta><mda:meta type="oltranslationtype">Human Translation</mda:meta><mda:meta type="olskeletonhash">14600b7f7458395ed08b4e4592cc67faaa3ed691</mda:meta><mda:meta type="olxliffhash">4799de681f6781cf6687afd28dae25a23ff62491</mda:meta></mda:metaGroup></mda:metadata>
		<group id="content">
			<unit id="101" translate="yes">
				<segment state="initial">
					<source>Signing a Driver for Public Release</source>
				</segment>
			</unit>
			<unit id="102" translate="yes">
				<segment state="initial">
					<source>Before you release a driver package to the public, we recommend that you submit the package for certification.</source>
				</segment>
			</unit>
			<unit id="103" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](http://go.microsoft.com/fwlink/p/?LinkID=248337)</data>
					<data id="id3">[</data>
					<data id="id4">](http://go.microsoft.com/fwlink/p/?LinkID=248336)</data>
				</originalData>
				<segment state="initial">
					<source>For more information, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Windows Hardware Certification</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Hardware Dashboard Services</pc>.</source>
				</segment>
			</unit>
			<unit id="104" translate="yes">
				<segment state="initial">
					<source>To submit a driver package for certification, you must sign the package with a certificate that you obtain from a trusted certification authority like VeriSign.</source>
				</segment>
			</unit>
			<unit id="105" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](http://go.microsoft.com/fwlink/p/?LinkID=248298)</data>
				</originalData>
				<segment state="initial">
					<source>For more information, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Get a VeriSign Certificate</pc>.</source>
				</segment>
			</unit>
			<unit id="106" translate="yes">
				<segment state="initial">
					<source>You will also need a cross certificate, which is provided by Microsoft.</source>
				</segment>
			</unit>
			<unit id="107" translate="yes">
				<segment state="initial">
					<source>Suppose you have obtained a pair of files from Verisign: a private key file (PVK) and a software publishing certificate (SPC).</source>
				</segment>
			</unit>
			<unit id="108" translate="yes">
				<segment state="initial">
					<source>Also suppose you have a Microsoft Visual Studio solution that contains a driver project named MyDriver and a driver package project named MyDriver Package.</source>
				</segment>
			</unit>
			<unit id="109" translate="yes">
				<segment state="initial">
					<source>To sign your driver package, follow these steps.</source>
				</segment>
			</unit>
			<unit id="110" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/en-us/Library/Windows/Hardware/Ff550672)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Pvk2Pfx</pc></pc> tool to create a Personal Information Exchange (PFX) certificate.</source>
				</segment>
			</unit>
			<unit id="111" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Pvk2Pfx</pc> tool takes your PVK and SPC files as input and creates a single PFX file.</source>
				</segment>
			</unit>
			<unit id="112" translate="yes">
				<segment state="initial">
					<source>For this exercise, assume that your PFX file is named MyCert.pfx.</source>
				</segment>
			</unit>
			<unit id="113" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  Once you have created your PFX file, you can reuse it for other driver projects and on other driver development computers.</source>
				</segment>
			</unit>
			<unit id="114" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](http://go.microsoft.com/fwlink/p/?LinkID=248296)</data>
				</originalData>
				<segment state="initial">
					<source>To determine which cross certificate you need, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Cross-Certificates for Kernel Mode Code Signing</pc>.</source>
				</segment>
			</unit>
			<unit id="115" translate="yes">
				<segment state="initial">
					<source>Verify that the required cross certificate is in $(BASEDIR)\\CrossCertificates, where $(BASEDIR) is the base directory of the Windows kits (for example c:\\Program Files (x86)\\Windows Kits\\8.0\\CrossCertificates).</source>
				</segment>
			</unit>
			<unit id="116" translate="yes">
				<segment state="initial">
					<source>If the required cross certificate is not there, download the cross certificate from Microsoft, and copy it to $(BASEDIR)\\CrossCertificates.</source>
				</segment>
			</unit>
			<unit id="117" translate="yes">
				<segment state="initial">
					<source>In Visual Studio, open the solution that contains the MyDriver and MyDriver Package projects.</source>
				</segment>
			</unit>
			<unit id="118" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>If the Solution Explorer window is not already open, choose <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Solution Explorer</pc> from the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">View</pc> menu.</source>
				</segment>
			</unit>
			<unit id="119" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>In the Solution Explorer window, right-click the package project, <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MyDriver Package</pc>, and choose <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Properties</pc>.</source>
				</segment>
			</unit>
			<unit id="120" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">&amp;gt;</data>
					<data id="id4">&amp;gt;</data>
				</originalData>
				<segment state="initial">
					<source>In the property pages for the package, navigate to <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Configuration Properties <ph dataRef="id3" id="ph1" /> Driver Signing <ph dataRef="id4" id="ph2" /> General</pc>.</source>
				</segment>
			</unit>
			<unit id="121" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>In the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Sign Mode</pc> drop-down list, select <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Production Sign</pc>.</source>
				</segment>
			</unit>
			<unit id="122" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>For <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Production Certificate</pc>, do one of the following:</source>
				</segment>
			</unit>
			<unit id="123" translate="yes">
				<segment state="initial">
					<source>Enter the path to your signing certificate (for example c:\\Certs\\MyCert.pfx).</source>
				</segment>
			</unit>
			<unit id="124" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>Choose <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Select From File</pc>, and browse to your signing certificate.</source>
				</segment>
			</unit>
			<unit id="125" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>Choose <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Select From Store</pc> and choose a certificate that you previously imported into a certificate store.</source>
				</segment>
			</unit>
			<unit id="126" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  To import a certificate into a store, right-click the certificate file (PFX file), and choose <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Install PFX</pc>.</source>
				</segment>
			</unit>
			<unit id="127" translate="yes">
				<segment state="initial">
					<source>Follow the instructions in the Certificate Import Wizard.</source>
				</segment>
			</unit>
			<unit id="128" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  If you decide to use a different certificate at a later time, be sure that your new certificate gets imported into the certificate store.</source>
				</segment>
			</unit>
			<unit id="129" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>If you choose <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Select From File</pc> and browse to your new certificate, the new certificate will be automatically imported into the certificate store.</source>
				</segment>
			</unit>
			<unit id="130" translate="yes">
				<segment state="initial">
					<source>However, if you manually enter the path to your new certificate, it will not be automatically imported into the certificate store.</source>
				</segment>
			</unit>
			<unit id="131" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>In that case, you must right-click your new certificate file and choose <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Install PFX</pc>.</source>
				</segment>
			</unit>
			<unit id="132" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">&amp;gt;</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
				</originalData>
				<segment state="initial">
					<source>On the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Driver Signing <ph dataRef="id3" id="ph1" /> General</pc> property page, for <pc dataRefEnd="id5" dataRefStart="id4" id="p2">TimeStampServer</pc>, select one of the time stamp servers in the drop-down list.</source>
				</segment>
			</unit>
			<unit id="133" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  Using one of the time stamp servers in the drop-down list requires that you be connected to the Internet when you build your driver package.</source>
				</segment>
			</unit>
			<unit id="134" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>If you need to be disconnected from the Internet when you build your driver package, clear the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">TimeStampServer</pc> field.</source>
				</segment>
			</unit>
			<unit id="135" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">&amp;gt;</data>
					<data id="id4">&amp;gt;</data>
				</originalData>
				<segment state="initial">
					<source>In the property pages for the package, navigate to <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Configuration Properties <ph dataRef="id3" id="ph1" /> Inf2Cat <ph dataRef="id4" id="ph2" /> General</pc>.</source>
				</segment>
			</unit>
			<unit id="136" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>In the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Run Inf2Cat</pc> drop-down list, select <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Yes</pc>.</source>
				</segment>
			</unit>
			<unit id="137" translate="yes">
				<segment state="initial">
					<source>Close the property pages for the package.</source>
				</segment>
			</unit>
			<unit id="138" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Right-click the driver project, <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MyDriver</pc>, and choose <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Properties</pc></source>
				</segment>
			</unit>
			<unit id="139" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">&amp;gt;</data>
					<data id="id4">&amp;gt;</data>
				</originalData>
				<segment state="initial">
					<source>In the property pages for the driver, navigate to <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Configuration Properties <ph dataRef="id3" id="ph1" /> Driver Signing <ph dataRef="id4" id="ph2" /> General</pc>.</source>
				</segment>
			</unit>
			<unit id="140" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>Set <pc dataRefEnd="id2" dataRefStart="id1" id="p1">TimeStampServer</pc> to the same value that you used in the driver package properties.</source>
				</segment>
			</unit>
			<unit id="141" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source>Set <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Sign Mode</pc> to <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Production Sign</pc>, and set <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Production Certificate</pc> to the same value that you used in the driver package properties.</source>
				</segment>
			</unit>
			<unit id="142" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>When you are ready to build your driver package, press <pc dataRefEnd="id2" dataRefStart="id1" id="p1">F5</pc>.</source>
				</segment>
			</unit>
			<unit id="143" translate="yes">
				<segment state="initial">
					<source>Visual Studio will automatically sign your package and your driver file.</source>
				</segment>
			</unit>
			<unit id="144" translate="yes">
				<segment state="initial">
					<source>If you have configured deployment, Visual Studio will also deploy your signed driver package to a test computer.</source>
				</segment>
			</unit>
			<unit id="145" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/en-us/Library/Windows/Hardware/Dn745909)</data>
				</originalData>
				<segment state="initial">
					<source>For more information, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Provision a computer for driver deployment and testing (WDK 8.1)</pc>.</source>
				</segment>
			</unit>
			<unit id="146" translate="yes">
				<segment state="initial">
					<source>Viewing the driver package files</source>
				</segment>
			</unit>
			<unit id="147" translate="yes">
				<segment state="initial">
					<source>After you build your solution, navigate in File Explorer to the folder that contains your driver package.</source>
				</segment>
			</unit>
			<unit id="148" translate="yes">
				<segment state="initial">
					<source>One of the files in the package is a catalog file.</source>
				</segment>
			</unit>
			<unit id="149" translate="yes">
				<segment state="initial">
					<source>The catalog file contains the digital signature for the package.</source>
				</segment>
			</unit>
			<unit id="150" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/en-us/Library/Windows/Hardware/Hh439654)</data>
				</originalData>
				<segment state="initial">
					<source>For an example of viewing the files in a signed package, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Writing a KMDF driver based on a template</pc>.</source>
				</segment>
			</unit>
			<unit id="151" translate="yes">
				<segment state="initial">
					<source>Getting a WHQL release signature</source>
				</segment>
			</unit>
			<unit id="152" translate="yes">
				<segment state="initial">
					<source>When your driver package passes the certification tests, it can be signed by Windows Hardware Quality Labs (WHQL).</source>
				</segment>
			</unit>
			<unit id="153" translate="yes">
				<segment state="initial">
					<source>If your driver package is signed by WHQL, it can be distributed through the Windows Update program or other Microsoft-supported distribution mechanisms.</source>
				</segment>
			</unit>
			<unit id="154" translate="yes">
				<segment state="initial">
					<source>Signing a package compared to signing an individual driver file</source>
				</segment>
			</unit>
			<unit id="155" translate="yes">
				<segment state="initial">
					<source>A driver package contains several files.</source>
				</segment>
			</unit>
			<unit id="156" translate="yes">
				<segment state="initial">
					<source>Typically a driver package has one or more driver files, an information file (INF file), and a catalog file.</source>
				</segment>
			</unit>
			<unit id="157" translate="yes">
				<segment state="initial">
					<source>The catalog file contains information about the other files in the package.</source>
				</segment>
			</unit>
			<unit id="158" translate="yes">
				<segment state="initial">
					<source>When you sign the catalog file, the signature in the catalog file serves as the signature for the entire driver package.</source>
				</segment>
			</unit>
			<unit id="159" translate="yes">
				<originalData>
					<data id="id1">*</data>
					<data id="id2">*</data>
					<data id="id3">*</data>
					<data id="id4">*</data>
				</originalData>
				<segment state="initial">
					<source>In other words, <pc dataRefEnd="id2" dataRefStart="id1" id="p1">signing the catalog file</pc> is the same as <pc dataRefEnd="id4" dataRefStart="id3" id="p2">signing the driver package</pc>.</source>
				</segment>
			</unit>
			<unit id="160" translate="yes">
				<segment state="initial">
					<source>In most cases, it is sufficient to sign the driver package, and it is not necessary to sign individual driver files.</source>
				</segment>
			</unit>
			<unit id="161" translate="yes">
				<segment state="initial">
					<source>Sometimes, however, you need to sign both the package and the individual driver files.</source>
				</segment>
			</unit>
			<unit id="162" translate="yes">
				<segment state="initial">
					<source>For example, boot-start driver files must be individually signed.</source>
				</segment>
			</unit>
			<unit id="163" translate="yes">
				<originalData>
					<data id="id1">*</data>
					<data id="id2">*</data>
				</originalData>
				<segment state="initial">
					<source>Signing an individual driver file is referred to as <pc dataRefEnd="id2" dataRefStart="id1" id="p1">embedding a signature in the driver file</pc>.</source>
				</segment>
			</unit>
			<unit id="164" translate="yes">
				<segment state="initial">
					<source>Suppose you have a Visual Studio solution that contains a driver project named MyDriver and a driver package project named MyDriver Package.</source>
				</segment>
			</unit>
			<unit id="165" translate="yes">
				<segment state="initial">
					<source>Visual Studio provides two sets of property pages: one for My Driver and one for My Driver Package.</source>
				</segment>
			</unit>
			<unit id="166" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>To sign the driver package, set the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Driver Signing</pc> properties of My Driver Package.</source>
				</segment>
			</unit>
			<unit id="167" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>To embed a signature in the individual driver file, set the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Driver Signing</pc> properties of My Driver.</source>
				</segment>
			</unit>
			<unit id="168" translate="yes">
				<segment state="initial">
					<source>When you set the driver package properties for production signing, remember to adjust the signing properties of the individual driver files accordingly.</source>
				</segment>
			</unit>
			<unit id="169" translate="yes">
				<segment state="initial">
					<source>Either turn off signing for the individual driver files, or set the individual driver files to use the same certificate that you specified for the package.</source>
				</segment>
			</unit>
			<unit id="170" translate="yes">
				<segment state="initial">
					<source>Signing a driver package with two signatures</source>
				</segment>
			</unit>
			<unit id="171" translate="yes">
				<segment state="initial">
					<source>In some cases, you might want to sign a driver package with two different signatures.</source>
				</segment>
			</unit>
			<unit id="172" translate="yes">
				<segment state="initial">
					<source>For example, suppose you want your driver to run on Windows Vista and Windows 7, 8, 8.1, and 10.</source>
				</segment>
			</unit>
			<unit id="173" translate="yes">
				<segment state="initial">
					<source>Windows Vista supports only SHA1 signatures, but the later versions of Windows also support SHA2.</source>
				</segment>
			</unit>
			<unit id="174" translate="yes">
				<segment state="initial">
					<source>** Note **  SHA1 deprecation does not apply to drivers.</source>
				</segment>
			</unit>
			<unit id="175" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](http://social.technet.microsoft.com/wiki/contents/articles/32288.windows-enforcement-of-authenticode-code-signing-and-timestamping.aspx)</data>
				</originalData>
				<segment state="initial">
					<source>For info about the end of SHA1 support in Windows, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Windows Enforcement of Authenticode Code Signing and Timestamping</pc>.</source>
				</segment>
			</unit>
			<unit id="176" translate="yes">
				<segment state="initial">
					<source>You can sign your driver package with a primary signature that uses SHA1.</source>
				</segment>
			</unit>
			<unit id="177" translate="yes">
				<segment state="initial">
					<source>Then you can append a secondary signature that uses SHA256.</source>
				</segment>
			</unit>
			<unit id="178" translate="yes">
				<segment state="initial">
					<source>You can use the same certificate for both signatures, or you can use separate certificates.</source>
				</segment>
			</unit>
			<unit id="179" translate="yes">
				<segment state="initial">
					<source>Here are the steps to create the two signatures using Visual Studio.</source>
				</segment>
			</unit>
			<unit id="180" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">*</data>
					<data id="id4">*</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source>In the Solution Explorer window, right-click <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Solution</pc> <pc dataRefEnd="id4" dataRefStart="id3" id="p2">SolutionName</pc>, and choose <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Configuration Manager</pc>.</source>
				</segment>
			</unit>
			<unit id="181" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>For the driver project and the package project, set <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Configuration</pc> to <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Win7 Release</pc>, and set <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Platform</pc> to <pc dataRefEnd="id8" dataRefStart="id7" id="p4">x64</pc>.</source>
				</segment>
			</unit>
			<unit id="182" translate="yes">
				<segment state="initial">
					<source>Open the property pages for the driver package.</source>
				</segment>
			</unit>
			<unit id="183" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">&amp;gt;</data>
					<data id="id4">&amp;gt;</data>
				</originalData>
				<segment state="initial">
					<source>Navigate to <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Configuration Properties <ph dataRef="id3" id="ph1" /> Driver Signing <ph dataRef="id4" id="ph2" /> General</pc>.</source>
				</segment>
			</unit>
			<unit id="184" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>In the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Sign Mode</pc> drop-down list, select <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Production Sign</pc>.</source>
				</segment>
			</unit>
			<unit id="185" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>For <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Production Certificate</pc>, enter the path to your signing certificate.</source>
				</segment>
			</unit>
			<unit id="186" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">&amp;gt;</data>
					<data id="id4">&amp;gt;</data>
				</originalData>
				<segment state="initial">
					<source>In the property pages for the driver package, navigate to <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Configuration Properties <ph dataRef="id3" id="ph1" /> Custom Build Step <ph dataRef="id4" id="ph2" /> General</pc>.</source>
				</segment>
			</unit>
			<unit id="187" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>For <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Description</pc>, select <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Performing Custom Build Step</pc>.</source>
				</segment>
			</unit>
			<unit id="188" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>For <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Execute After</pc>, select <pc dataRefEnd="id4" dataRefStart="id3" id="p2">DriverProductionSign</pc>.</source>
				</segment>
			</unit>
			<unit id="189" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>For <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Command Line</pc>, enter this command.</source>
				</segment>
			</unit>
			<unit id="190" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">*</data>
					<data id="id4">*</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Signtool sign /fd sha256 /ph /as /sha1</pc> <pc dataRefEnd="id4" dataRefStart="id3" id="p2">XX...XX</pc> <pc dataRefEnd="id6" dataRefStart="id5" id="p3">$(TargetPath)</pc></source>
				</segment>
			</unit>
			<unit id="191" translate="yes">
				<originalData>
					<data id="id1">*</data>
					<data id="id2">*</data>
				</originalData>
				<segment state="initial">
					<source>where <pc dataRefEnd="id2" dataRefStart="id1" id="p1">XX...XX</pc> is the hash of the certificate you are using for the the secondary signature.</source>
				</segment>
			</unit>
			<unit id="192" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  To see the hash (also called the thumb print) of a certificate, open a Command Prompt window and navigate to the directory that contains your certificate.</source>
				</segment>
			</unit>
			<unit id="193" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">*</data>
					<data id="id4">*</data>
					<data id="id5">*</data>
					<data id="id6">*</data>
				</originalData>
				<segment state="initial">
					<source>Enter the command <pc dataRefEnd="id2" dataRefStart="id1" id="p1">certutil -dump</pc> <pc dataRefEnd="id4" dataRefStart="id3" id="p2">CertName.pfx</pc>, where <pc dataRefEnd="id6" dataRefStart="id5" id="p3">CertName.pfx</pc> is the name of your certificate.</source>
				</segment>
			</unit>
			<unit id="194" translate="yes">
				<segment state="initial">
					<source>Related topics</source>
				</segment>
			</unit>
			<unit id="195" translate="yes">
				<segment state="initial">
					<source>Availability of SHA-2 Code Signing Support for Windows 7 and Windows Server 2008 R2</source>
				</segment>
			</unit>
			<unit id="196" translate="yes">
				<segment state="initial">
					<source>Signing a Driver</source>
				</segment>
			</unit>
			<unit id="197" translate="yes">
				<segment state="initial">
					<source>Windows Hardware Certification</source>
				</segment>
			</unit>
			<unit id="198" translate="yes">
				<segment state="initial">
					<source>Hardware Dashboard Services</source>
				</segment>
			</unit>
			<unit id="199" translate="yes">
				<segment state="initial">
					<source>Driver Signing Requirements for Windows</source>
				</segment>
			</unit>
			<unit id="200" translate="yes">
				<segment state="initial">
					<source>Cross-Certificates for Kernel Mode Code Signing</source>
				</segment>
			</unit>
			<unit id="201" translate="yes">
				<segment state="initial">
					<source>Kernel-Mode Code Signing Walkthrough</source>
				</segment>
			</unit>
			<unit id="202" translate="yes">
				<segment state="initial">
					<source>Driver Signing</source>
				</segment>
			</unit>
			<unit id="203" translate="yes">
				<segment state="initial">
					<source>Installing a Boot-Start Driver</source>
				</segment>
			</unit>
			<unit id="204" translate="yes">
				<segment state="initial">
					<source>Tools for Signing Drivers</source>
				</segment>
			</unit>
			<unit id="205" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">]</data>
					<data id="id3">(mailto:wsddocfb@microsoft.com?subject=Documentation%20feedback%20[VsDriver\vsdriver]:%20Signing%20a%20Driver%20for%20Public%20Release%20%20RELEASE:%20%289/30/2015%29&amp;body=%0A%0APRIVACY%20STATEMENT%0A%0AWe%20use%20your%20feedback%20to%20improve%20the%20documentation.%20We%20don't%20use%20your%20email%20address%20for%20any%20other%20purpose,%20and%20we'll%20remove%20your%20email%20address%20from%20our%20system%20after%20the%20issue%20that%20you're%20reporting%20is%20fixed.%20While%20we're%20working%20to%20fix%20this%20issue,%20we%20might%20send%20you%20an%20email%20message%20to%20ask%20for%20more%20info.%20Later,%20we%20might%20also%20send%20you%20an%20email%20message%20to%20let%20you%20know%20that%20we've%20addressed%20your%20feedback.%0A%0AFor%20more%20info%20about%20Microsoft's%20privacy%20policy,%20see%20http://privacy.microsoft.com/en-us/default. "</data>
					<data id="id4">")</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Send comments about this topic to Microsoft</pc><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Send comments about this topic to Microsoft</pc></source>
				</segment>
			</unit>
		</group>
	</file>
</xliff>