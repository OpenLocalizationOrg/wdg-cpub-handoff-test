<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="de-de" version="2.0" xml:space="preserve" xmlns="urn:oasis:names:tc:xliff:document:2.0">
	<file id="1">
		<mda:metadata>
			<mda:metaGroup>
				<mda:meta type="tool-id">mdxliff</mda:meta>
				<mda:meta type="tool-name">mdxliff</mda:meta>
				<mda:meta type="tool-version">1.0-10daaac</mda:meta>
				<mda:meta type="tool-company">Microsoft</mda:meta>
			</mda:metaGroup>
		<mda:metaGroup><mda:meta type="olfilehash">47b9b5c9984c302147cf7db155bf19f9c82e6efb</mda:meta><mda:meta type="olfilepath">wdg-cpub-test\ndolci2\porting\getting-started-animation.md</mda:meta><mda:meta type="oltranslationpriority"></mda:meta><mda:meta type="oltranslationtype">Human Translation</mda:meta><mda:meta type="olskeletonhash">6572bcade1ddddc99b964072509b5c6ca2ef6e0a</mda:meta><mda:meta type="olxliffhash">bdd1c5b561c880c5668f5041e6afcbcb2a729af8</mda:meta></mda:metaGroup></mda:metadata>
		<group id="content">
			<unit id="101" translate="yes">
				<segment state="initial">
					<source>Getting started with Animation</source>
				</segment>
			</unit>
			<unit id="102" translate="yes">
				<segment state="initial">
					<source>In this project, we're going to move a rectangle, apply a fade effect, and then bring it back into view.</source>
				</segment>
			</unit>
			<unit id="103" translate="yes">
				<segment state="initial">
					<source>Getting started: Animation</source>
				</segment>
			</unit>
			<unit id="104" translate="yes">
				<segment state="initial">
					<source>\[ Updated for UWP apps on Windows 10.</source>
				</segment>
			</unit>
			<unit id="105" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](http://go.microsoft.com/fwlink/p/?linkid=619132)</data>
				</originalData>
				<segment state="initial">
					<source>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</source>
				</segment>
			</unit>
			<unit id="106" translate="yes">
				<segment state="initial">
					<source>Adding animations</source>
				</segment>
			</unit>
			<unit id="107" translate="yes">
				<segment state="initial">
					<source>In iOS, you most often create animation effects programmatically.</source>
				</segment>
			</unit>
			<unit id="108" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>For example, you might use animations provided by the block-based <pc dataRefEnd="id2" dataRefStart="id1" id="p1">UIView</pc> class's <pc dataRefEnd="id4" dataRefStart="id3" id="p2">animateWithDuration</pc> methods, or the older non-block based methods.</source>
				</segment>
			</unit>
			<unit id="109" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>Or, you might explicitly use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">CALayer</pc> class to animate layers.</source>
				</segment>
			</unit>
			<unit id="110" translate="yes">
				<segment state="initial">
					<source>Animations in Windows apps can be created programmatically, but they can also be defined declaratively with Extensible Application Markup Language (XAML).</source>
				</segment>
			</unit>
			<unit id="111" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>You can use Microsoft Visual Studio to edit XAML code directly, but Visual Studio also comes with a tool called <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Blend</pc>, which creates XAML code for you as you work with animations in a designer.</source>
				</segment>
			</unit>
			<unit id="112" translate="yes">
				<segment state="initial">
					<source>In fact, Blend allows you to open, design, build, and run complete Visual Studio projects, graphically.</source>
				</segment>
			</unit>
			<unit id="113" translate="yes">
				<segment state="initial">
					<source>The following walkthrough lets you try this out.</source>
				</segment>
			</unit>
			<unit id="114" translate="yes">
				<segment state="initial">
					<source>Create a new Universal Windows Platform (UWP) app and name it something like "SimpleAnimation".</source>
				</segment>
			</unit>
			<unit id="115" translate="yes">
				<segment state="initial">
					<source>In this project, we're going to move a rectangle, apply a fade effect, and then bring it back into view.</source>
				</segment>
			</unit>
			<unit id="116" translate="yes">
				<originalData>
					<data id="id1">*</data>
					<data id="id2">*</data>
				</originalData>
				<segment state="initial">
					<source>Animations in XAML are based on the concept of <pc dataRefEnd="id2" dataRefStart="id1" id="p1">storyboards</pc> (not to be confused with iOS storyboards).</source>
				</segment>
			</unit>
			<unit id="117" translate="yes">
				<originalData>
					<data id="id1">*</data>
					<data id="id2">*</data>
				</originalData>
				<segment state="initial">
					<source>Storyboards use <pc dataRefEnd="id2" dataRefStart="id1" id="p1">keyframes</pc> to animate property changes.</source>
				</segment>
			</unit>
			<unit id="118" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source>With your project open, in <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Solution Explorer</pc>, right-click the project's name and then select <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Open in Blend</pc> or <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Design in Blend</pc>, as shown in the following figure.</source>
				</segment>
			</unit>
			<unit id="119" translate="yes">
				<segment state="initial">
					<source>Visual Studio continues to run in the background.</source>
				</segment>
			</unit>
			<unit id="120" translate="yes">
				<segment state="initial">
					<source>open in blend menu command</source>
				</segment>
			</unit>
			<unit id="121" translate="yes">
				<segment state="initial">
					<source>After Blend starts, you should see something similar to the following figure.</source>
				</segment>
			</unit>
			<unit id="122" translate="yes">
				<segment state="initial">
					<source>blend development environment</source>
				</segment>
			</unit>
			<unit id="123" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Double-click on <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MainPage.xaml</pc> in the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Solution Explorer</pc> on the left hand side.</source>
				</segment>
			</unit>
			<unit id="124" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source>Next, from the vertical strip of tools on the edge of the central <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Design View</pc>, select the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Rectangle</pc> tool, and then draw a rectangle in <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Design View</pc>, as shown in the following figure.</source>
				</segment>
			</unit>
			<unit id="125" translate="yes">
				<segment state="initial">
					<source>adding a rectangle to design view</source>
				</segment>
			</unit>
			<unit id="126" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>To make the rectangle green, look in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Properties</pc> window, and in the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Brush</pc> area, click on the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Solid color brush</pc> button, and then click the <pc dataRefEnd="id8" dataRefStart="id7" id="p4">Color eyedropper</pc> icon.</source>
				</segment>
			</unit>
			<unit id="127" translate="yes">
				<segment state="initial">
					<source>Click somewhere in the green band of hues.</source>
				</segment>
			</unit>
			<unit id="128" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source>To begin animating the rectangle, in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Objects and Timeline</pc> window, tap the plus symbol (<pc dataRefEnd="id4" dataRefStart="id3" id="p2">New</pc>) button as shown in the following figure, and then tap <pc dataRefEnd="id6" dataRefStart="id5" id="p3">OK</pc>.</source>
				</segment>
			</unit>
			<unit id="129" translate="yes">
				<segment state="initial">
					<source>adding a storyboard</source>
				</segment>
			</unit>
			<unit id="130" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>A storyboard appears in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Objects and Timeline</pc> window (you may need to resize the view to see it properly).</source>
				</segment>
			</unit>
			<unit id="131" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Design View</pc> display changes to show that <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Storyboard1 timeline recording is on</pc>.</source>
				</segment>
			</unit>
			<unit id="132" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>To capture the current state of the rectangle, in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Objects and Timeline</pc> window, tap the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Record Keyframe</pc> button just above the yellow arrow, as shown in the following figure.</source>
				</segment>
			</unit>
			<unit id="133" translate="yes">
				<segment state="initial">
					<source>recording a keyframe</source>
				</segment>
			</unit>
			<unit id="134" translate="yes">
				<segment state="initial">
					<source>Now, let's move the rectangle and fade it away.</source>
				</segment>
			</unit>
			<unit id="135" translate="yes">
				<segment state="initial">
					<source>To do this, drag the orange/yellow arrow to the 2-second position, and then move your green rectangle slightly to the right.</source>
				</segment>
			</unit>
			<unit id="136" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>Then, in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Properties</pc> window, in the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Appearance</pc> area, change the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Opacity</pc> property to <pc dataRefEnd="id8" dataRefStart="id7" id="p4">0</pc>, as shown in the following figure.</source>
				</segment>
			</unit>
			<unit id="137" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>To preview the animation, tap the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Play</pc> button in the Storyboard panel.</source>
				</segment>
			</unit>
			<unit id="138" translate="yes">
				<segment state="initial">
					<source>properties windows and play button</source>
				</segment>
			</unit>
			<unit id="139" translate="yes">
				<segment state="initial">
					<source>Next, let's bring the rectangle back into view.</source>
				</segment>
			</unit>
			<unit id="140" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>In the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Objects and Timeline</pc> window, double-click <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Storyboard1</pc>.</source>
				</segment>
			</unit>
			<unit id="141" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source>Then, in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Properties</pc> window, in the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Common</pc> area, select <pc dataRefEnd="id6" dataRefStart="id5" id="p3">AutoReverse</pc>, as shown in the following figure.</source>
				</segment>
			</unit>
			<unit id="142" translate="yes">
				<segment state="initial">
					<source>selecting a storyboard</source>
				</segment>
			</unit>
			<unit id="143" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>Finally, click on the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Play</pc> button to see what happens.</source>
				</segment>
			</unit>
			<unit id="144" translate="yes">
				<segment state="initial">
					<source>You can build and run the project by clicking on the green run button at the top of the window (or just press F5).</source>
				</segment>
			</unit>
			<unit id="145" translate="yes">
				<segment state="initial">
					<source>If you do this, you'll see your project will indeed build and run, but the green rectangle will stubbornly sit perfectly still, like a toddler denied candy in a supermarket aisle.</source>
				</segment>
			</unit>
			<unit id="146" translate="yes">
				<segment state="initial">
					<source>To start the animation, you'll need to add a line of code to the project.</source>
				</segment>
			</unit>
			<unit id="147" translate="yes">
				<segment state="initial">
					<source>Here's how.</source>
				</segment>
			</unit>
			<unit id="148" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Save the project, by opening the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">File</pc> menu, and selecting <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Save MainPage.xaml</pc>.</source>
				</segment>
			</unit>
			<unit id="149" translate="yes">
				<segment state="initial">
					<source>Return to Visual Studio.</source>
				</segment>
			</unit>
			<unit id="150" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>If Visual Studio displays a dialog box asking whether you want to reload the modified file, select <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Yes</pc>.</source>
				</segment>
			</unit>
			<unit id="151" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Double-click the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MainPage.xaml.cs</pc> file, which is hidden under <pc dataRefEnd="id4" dataRefStart="id3" id="p2">MainPage.xaml</pc>, to open it, and add the following code just above the public MainPage() method:</source>
				</segment>
			</unit>
			<unit id="152" translate="yes">
				<segment state="initial">
					<source>Run the project again, and watch the rectangle animate.</source>
				</segment>
			</unit>
			<unit id="153" translate="yes">
				<segment state="initial">
					<source>Hurrah!</source>
				</segment>
			</unit>
			<unit id="154" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>If you open the MainPage.xaml file, in <pc dataRefEnd="id2" dataRefStart="id1" id="p1">XAML</pc> view, you'll see the XAML code that Blend added for you as you worked in the designer.</source>
				</segment>
			</unit>
			<unit id="155" translate="yes">
				<originalData>
					<data id="id1">`&lt;Storyboard&gt;`</data>
					<data id="id2">`&lt;Rectangle&gt;`</data>
				</originalData>
				<segment state="initial">
					<source>In particular, look at the code in the <ph dataRef="id1" id="ph1" /> and <ph dataRef="id2" id="ph2" /> elements.</source>
				</segment>
			</unit>
			<unit id="156" translate="yes">
				<segment state="initial">
					<source>The following code shows an example.</source>
				</segment>
			</unit>
			<unit id="157" translate="yes">
				<segment state="initial">
					<source>Ellipses indicate unrelated code omitted for brevity, and line breaks have been added for code readability.)</source>
				</segment>
			</unit>
			<unit id="158" translate="yes">
				<segment state="initial">
					<source>You can edit this XAML manually, or return to Blend to continue working on it there.</source>
				</segment>
			</unit>
			<unit id="159" translate="yes">
				<segment state="initial">
					<source>Blend makes it fun to create interesting user interfaces, and the ability to animate them using a graphical tool can dramatically speed up development time.</source>
				</segment>
			</unit>
			<unit id="160" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/mt187350)</data>
				</originalData>
				<segment state="initial">
					<source>For more info about animations, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Animations overview</pc>.</source>
				</segment>
			</unit>
			<unit id="161" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">[</data>
					<data id="id4">](https://msdn.microsoft.com/library/windows/apps/hh465165)</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  For info about animations for Windows Store apps using JavaScript and HTML, see <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Animating your UI (HTML)</pc>.</source>
				</segment>
			</unit>
			<unit id="162" translate="yes">
				<segment state="initial">
					<source>Next step</source>
				</segment>
			</unit>
			<unit id="163" translate="yes">
				<segment state="initial">
					<source>Getting started: What next?</source>
				</segment>
			</unit>
		</group>
	</file>
</xliff>