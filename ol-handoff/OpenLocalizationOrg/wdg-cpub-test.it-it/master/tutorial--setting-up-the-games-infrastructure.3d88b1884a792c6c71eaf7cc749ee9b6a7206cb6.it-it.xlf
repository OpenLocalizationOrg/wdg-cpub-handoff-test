<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="it-it" version="2.0" xml:space="preserve" xmlns="urn:oasis:names:tc:xliff:document:2.0">
	<file id="1">
		<mda:metadata>
			<mda:metaGroup>
				<mda:meta type="tool-id">mdxliff</mda:meta>
				<mda:meta type="tool-name">mdxliff</mda:meta>
				<mda:meta type="tool-version">1.0-00ddeee</mda:meta>
				<mda:meta type="tool-company">Microsoft</mda:meta>
			</mda:metaGroup>
		<mda:metaGroup><mda:meta type="olfilehash">807d9e648fd5a884fdfc2a0da02dfc1d99c9aa96</mda:meta><mda:meta type="olfilepath">wdg-cpub-test\ndolci2\gaming\tutorial--setting-up-the-games-infrastructure.md</mda:meta><mda:meta type="oltranslationpriority"></mda:meta><mda:meta type="oltranslationtype">Human Translation</mda:meta><mda:meta type="olskeletonhash">8401b87580d6928ea76f1775d8e60a44789cb25a</mda:meta><mda:meta type="olxliffhash">0b4c86f3de7d33ca80b234fac0dd0b555754b71e</mda:meta></mda:metaGroup></mda:metadata>
		<group id="content">
			<unit id="101" translate="yes">
				<segment state="initial">
					<source>Set up the game project</source>
					<target>Set up the game project</target>
				</segment>
			</unit>
			<unit id="102" translate="yes">
				<segment state="initial">
					<source>The first step in assembling your game is to set up a project in Microsoft Visual Studio in such a way that you minimize the amount of code infrastructure work you need to do.</source>
					<target>The first step in assembling your game is to set up a project in Microsoft Visual Studio in such a way that you minimize the amount of code infrastructure work you need to do.</target>
				</segment>
			</unit>
			<unit id="103" translate="yes">
				<segment state="initial">
					<source>Set up the game project</source>
					<target>Set up the game project</target>
				</segment>
			</unit>
			<unit id="104" translate="yes">
				<segment state="initial">
					<source>\[ Updated for UWP apps on Windows 10.</source>
					<target>\[ Updated for UWP apps on Windows 10.</target>
				</segment>
			</unit>
			<unit id="105" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](http://go.microsoft.com/fwlink/p/?linkid=619132)</data>
				</originalData>
				<segment state="initial">
					<source>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</source>
					<target>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</target>
				</segment>
			</unit>
			<unit id="106" translate="yes">
				<segment state="initial">
					<source>The first step in assembling your game is to set up a project in Microsoft Visual Studio in such a way that you minimize the amount of code infrastructure work you need to do.</source>
					<target>The first step in assembling your game is to set up a project in Microsoft Visual Studio in such a way that you minimize the amount of code infrastructure work you need to do.</target>
				</segment>
			</unit>
			<unit id="107" translate="yes">
				<segment state="initial">
					<source>You can save yourself a lot of time and hassle by using the right template and configuring the project specifically for game development.</source>
					<target>You can save yourself a lot of time and hassle by using the right template and configuring the project specifically for game development.</target>
				</segment>
			</unit>
			<unit id="108" translate="yes">
				<segment state="initial">
					<source>We step you through the setup and configuration of a simple game project.</source>
					<target>We step you through the setup and configuration of a simple game project.</target>
				</segment>
			</unit>
			<unit id="109" translate="yes">
				<segment state="initial">
					<source>Objective</source>
					<target>Objective</target>
				</segment>
			</unit>
			<unit id="110" translate="yes">
				<segment state="initial">
					<source>To learn how to set up a Direct3D game project in Visual Studio.</source>
					<target>To learn how to set up a Direct3D game project in Visual Studio.</target>
				</segment>
			</unit>
			<unit id="111" translate="yes">
				<segment state="initial">
					<source>Setting up the game project</source>
					<target>Setting up the game project</target>
				</segment>
			</unit>
			<unit id="112" translate="yes">
				<segment state="initial">
					<source>You can write a game from scratch, with just a handy text editor, a few samples, and a hat full of raw brainpower.</source>
					<target>You can write a game from scratch, with just a handy text editor, a few samples, and a hat full of raw brainpower.</target>
				</segment>
			</unit>
			<unit id="113" translate="yes">
				<segment state="initial">
					<source>But that probably isn't the most effective use of your time.</source>
					<target>But that probably isn't the most effective use of your time.</target>
				</segment>
			</unit>
			<unit id="114" translate="yes">
				<segment state="initial">
					<source>If you're new to Universal Windows Platform (UWP) development, why not let Visual Studio shoulder some of the burden?</source>
					<target>If you're new to Universal Windows Platform (UWP) development, why not let Visual Studio shoulder some of the burden?</target>
				</segment>
			</unit>
			<unit id="115" translate="yes">
				<segment state="initial">
					<source>Here's what to do to get your project off to a roaring start.</source>
					<target>Here's what to do to get your project off to a roaring start.</target>
				</segment>
			</unit>
			<unit id="116" translate="yes">
				<segment state="initial">
					<source>1. Pick the right template</source>
					<target>1. Pick the right template</target>
				</segment>
			</unit>
			<unit id="117" translate="yes">
				<segment state="initial">
					<source>A Visual Studio template is a collection of settings and code files that target a specific type of app based on the preferred language and technology.</source>
					<target>A Visual Studio template is a collection of settings and code files that target a specific type of app based on the preferred language and technology.</target>
				</segment>
			</unit>
			<unit id="118" translate="yes">
				<segment state="initial">
					<source>In Microsoft Visual Studio 2015, you'll find a number of templates that can dramatically ease game and graphics app development.</source>
					<target>In Microsoft Visual Studio 2015, you'll find a number of templates that can dramatically ease game and graphics app development.</target>
				</segment>
			</unit>
			<unit id="119" translate="yes">
				<segment state="initial">
					<source>If you don't use a template, you must develop much of the basic graphics rendering and display framework yourself, which can be a bit of a chore to a new game developer.</source>
					<target>If you don't use a template, you must develop much of the basic graphics rendering and display framework yourself, which can be a bit of a chore to a new game developer.</target>
				</segment>
			</unit>
			<unit id="120" translate="yes">
				<segment state="initial">
					<source>The right template for this tutorial, is the one titled DirectX 11 App (Universal Windows).</source>
					<target>The right template for this tutorial, is the one titled DirectX 11 App (Universal Windows).</target>
				</segment>
			</unit>
			<unit id="121" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">&amp;gt;</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
				</originalData>
				<segment state="initial">
					<source>In Visual Studio 2015, click <pc dataRefEnd="id2" dataRefStart="id1" id="p1">File...</pc> <ph dataRef="id3" id="ph1" /> <pc dataRefEnd="id5" dataRefStart="id4" id="p2">New Project</pc>, and then:</source>
					<target>In Visual Studio 2015, click <pc dataRefEnd="id2" dataRefStart="id1" id="p1">File...</pc> <ph dataRef="id3" id="ph1" /> <pc dataRefEnd="id5" dataRefStart="id4" id="p2">New Project</pc>, and then:</target>
				</segment>
			</unit>
			<unit id="122" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>From <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Templates</pc>, select <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Visual C++</pc>, <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Windows</pc>, <pc dataRefEnd="id8" dataRefStart="id7" id="p4">Universal</pc>.</source>
					<target>From <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Templates</pc>, select <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Visual C++</pc>, <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Windows</pc>, <pc dataRefEnd="id8" dataRefStart="id7" id="p4">Universal</pc>.</target>
				</segment>
			</unit>
			<unit id="123" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>In the center pane, select <pc dataRefEnd="id2" dataRefStart="id1" id="p1">DirectX 11 App (Universal Windows)</pc>.</source>
					<target>In the center pane, select <pc dataRefEnd="id2" dataRefStart="id1" id="p1">DirectX 11 App (Universal Windows)</pc>.</target>
				</segment>
			</unit>
			<unit id="124" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>Give your game project a name, and click <pc dataRefEnd="id2" dataRefStart="id1" id="p1">OK</pc>.</source>
					<target>Give your game project a name, and click <pc dataRefEnd="id2" dataRefStart="id1" id="p1">OK</pc>.</target>
				</segment>
			</unit>
			<unit id="125" translate="yes">
				<segment state="initial">
					<source>selecting the direct3d application template</source>
					<target>selecting the direct3d application template</target>
				</segment>
			</unit>
			<unit id="126" translate="yes">
				<segment state="initial">
					<source>This template provides you with the basic framework for a UWP app using DirectX with C++.</source>
					<target>This template provides you with the basic framework for a UWP app using DirectX with C++.</target>
				</segment>
			</unit>
			<unit id="127" translate="yes">
				<segment state="initial">
					<source>Go on, build and run it with F5!</source>
					<target>Go on, build and run it with F5!</target>
				</segment>
			</unit>
			<unit id="128" translate="yes">
				<segment state="initial">
					<source>Check out that powder blue screen.</source>
					<target>Check out that powder blue screen.</target>
				</segment>
			</unit>
			<unit id="129" translate="yes">
				<segment state="initial">
					<source>Take a moment and review the code that the template provides.</source>
					<target>Take a moment and review the code that the template provides.</target>
				</segment>
			</unit>
			<unit id="130" translate="yes">
				<segment state="initial">
					<source>Tthe template creates multiple code files containing the basic functionality for a UWP app using DirectX with C++.</source>
					<target>Tthe template creates multiple code files containing the basic functionality for a UWP app using DirectX with C++.</target>
				</segment>
			</unit>
			<unit id="131" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](#3-review-the-included-libraries-and-headers)</data>
				</originalData>
				<segment state="initial">
					<source>We talk more about the other code files in <pc dataRefEnd="id2" dataRefStart="id1" id="p1">step 3</pc>.</source>
					<target>We talk more about the other code files in <pc dataRefEnd="id2" dataRefStart="id1" id="p1">step 3</pc>.</target>
				</segment>
			</unit>
			<unit id="132" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>Right now, let's quickly inspect <pc dataRefEnd="id2" dataRefStart="id1" id="p1">App.h</pc>.</source>
					<target>Right now, let's quickly inspect <pc dataRefEnd="id2" dataRefStart="id1" id="p1">App.h</pc>.</target>
				</segment>
			</unit>
			<unit id="133" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/hh700495)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/hh700509)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
					<data id="id9">[</data>
					<data id="id10">](https://msdn.microsoft.com/library/windows/apps/hh700501)</data>
					<data id="id11">**</data>
					<data id="id12">**</data>
					<data id="id13">[</data>
					<data id="id14">](https://msdn.microsoft.com/library/windows/apps/hh700505)</data>
					<data id="id15">**</data>
					<data id="id16">**</data>
					<data id="id17">[</data>
					<data id="id18">](https://msdn.microsoft.com/library/windows/apps/hh700523)</data>
					<data id="id19">**</data>
					<data id="id20">**</data>
					<data id="id21">[</data>
					<data id="id22">](https://msdn.microsoft.com/library/windows/apps/hh700469)</data>
					<data id="id23">**</data>
					<data id="id24">**</data>
				</originalData>
				<segment state="initial">
					<source>You create these 5 methods, <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Initialize</pc></pc>, <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">SetWindow</pc></pc>, <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">Load</pc></pc>, <pc dataRefEnd="id14" dataRefStart="id13" id="p7"><pc dataRefEnd="id16" dataRefStart="id15" id="p8">Run</pc></pc>, and <pc dataRefEnd="id18" dataRefStart="id17" id="p9"><pc dataRefEnd="id20" dataRefStart="id19" id="p10">Uninitialize</pc></pc>, when implementing the <pc dataRefEnd="id22" dataRefStart="id21" id="p11"><pc dataRefEnd="id24" dataRefStart="id23" id="p12">IFrameworkView</pc></pc> interface that defines a view provider.</source>
					<target>You create these 5 methods, <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Initialize</pc></pc>, <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">SetWindow</pc></pc>, <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">Load</pc></pc>, <pc dataRefEnd="id14" dataRefStart="id13" id="p7"><pc dataRefEnd="id16" dataRefStart="id15" id="p8">Run</pc></pc>, and <pc dataRefEnd="id18" dataRefStart="id17" id="p9"><pc dataRefEnd="id20" dataRefStart="id19" id="p10">Uninitialize</pc></pc>, when implementing the <pc dataRefEnd="id22" dataRefStart="id21" id="p11"><pc dataRefEnd="id24" dataRefStart="id23" id="p12">IFrameworkView</pc></pc> interface that defines a view provider.</target>
				</segment>
			</unit>
			<unit id="134" translate="yes">
				<segment state="initial">
					<source>These methods are run by the app singleton that is created when your game is launched, and load all your app's resources as well as connect the appropriate event handlers.</source>
					<target>These methods are run by the app singleton that is created when your game is launched, and load all your app's resources as well as connect the appropriate event handlers.</target>
				</segment>
			</unit>
			<unit id="135" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Your <pc dataRefEnd="id2" dataRefStart="id1" id="p1">main</pc> method is in the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">App.cpp</pc> source file.</source>
					<target>Your <pc dataRefEnd="id2" dataRefStart="id1" id="p1">main</pc> method is in the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">App.cpp</pc> source file.</target>
				</segment>
			</unit>
			<unit id="136" translate="yes">
				<segment state="initial">
					<source>It looks like this:</source>
					<target>It looks like this:</target>
				</segment>
			</unit>
			<unit id="137" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/hh700469)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>Right now, it creates an instance of the Direct3D view provider from the view provider factory (<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Direct3DApplicationSource</pc>, defined in <pc dataRefEnd="id4" dataRefStart="id3" id="p2">App.h</pc>), and passes it to the app singleton to run (<pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">CoreApplication::Run</pc></pc>).</source>
					<target>Right now, it creates an instance of the Direct3D view provider from the view provider factory (<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Direct3DApplicationSource</pc>, defined in <pc dataRefEnd="id4" dataRefStart="id3" id="p2">App.h</pc>), and passes it to the app singleton to run (<pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">CoreApplication::Run</pc></pc>).</target>
				</segment>
			</unit>
			<unit id="138" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/hh700505)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source>This means that the starting point for your game lives in the body of the implementation of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">IFrameworkView::Run</pc></pc> method, in this case, <pc dataRefEnd="id6" dataRefStart="id5" id="p3">App::Run</pc>.</source>
					<target>This means that the starting point for your game lives in the body of the implementation of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">IFrameworkView::Run</pc></pc> method, in this case, <pc dataRefEnd="id6" dataRefStart="id5" id="p3">App::Run</pc>.</target>
				</segment>
			</unit>
			<unit id="139" translate="yes">
				<segment state="initial">
					<source>Here's the code:</source>
					<target>Here's the code:</target>
				</segment>
			</unit>
			<unit id="140" translate="yes">
				<segment state="initial">
					<source>If the window for your game isn't closed, this dispatches all events, updates the timer, and renders and presents the results of your graphics pipeline.</source>
					<target>If the window for your game isn't closed, this dispatches all events, updates the timer, and renders and presents the results of your graphics pipeline.</target>
				</segment>
			</unit>
			<unit id="141" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](tutorial--building-the-games-metro-style-app-framework.md)</data>
					<data id="id3">[</data>
					<data id="id4">](tutorial--assembling-the-rendering-pipeline.md)</data>
				</originalData>
				<segment state="initial">
					<source>We talk about this in greater detail in <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Defining the game's UWP framework</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Assembling the rendering pipeline</pc>.</source>
					<target>We talk about this in greater detail in <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Defining the game's UWP framework</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Assembling the rendering pipeline</pc>.</target>
				</segment>
			</unit>
			<unit id="142" translate="yes">
				<segment state="initial">
					<source>At this point, you should have a sense of the basic code structure of a UWP DirectX game.</source>
					<target>At this point, you should have a sense of the basic code structure of a UWP DirectX game.</target>
				</segment>
			</unit>
			<unit id="143" translate="yes">
				<segment state="initial">
					<source>2. Review and update the package.appxmanifest file</source>
					<target>2. Review and update the package.appxmanifest file</target>
				</segment>
			</unit>
			<unit id="144" translate="yes">
				<segment state="initial">
					<source>The code files aren't all there is to the template.</source>
					<target>The code files aren't all there is to the template.</target>
				</segment>
			</unit>
			<unit id="145" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">package.appxmanifest</pc> file contains metadata about your project that are used for packaging and launching your game and for submission to the Windows Store.</source>
					<target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">package.appxmanifest</pc> file contains metadata about your project that are used for packaging and launching your game and for submission to the Windows Store.</target>
				</segment>
			</unit>
			<unit id="146" translate="yes">
				<segment state="initial">
					<source>It also contains important info the player's system uses to provide access to the system resources the game needs to run.</source>
					<target>It also contains important info the player's system uses to provide access to the system resources the game needs to run.</target>
				</segment>
			</unit>
			<unit id="147" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source>Launch the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Manifest Designer</pc> by double-clicking the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">package.appxmanifest</pc> file in <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Solution Explorer</pc>.</source>
					<target>Launch the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Manifest Designer</pc> by double-clicking the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">package.appxmanifest</pc> file in <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Solution Explorer</pc>.</target>
				</segment>
			</unit>
			<unit id="148" translate="yes">
				<segment state="initial">
					<source>You see this view:</source>
					<target>You see this view:</target>
				</segment>
			</unit>
			<unit id="149" translate="yes">
				<segment state="initial">
					<source>the package.appx manifest editor.</source>
					<target>the package.appx manifest editor.</target>
				</segment>
			</unit>
			<unit id="150" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">[</data>
					<data id="id4">](https://msdn.microsoft.com/library/windows/apps/br230259.aspx)</data>
				</originalData>
				<segment state="initial">
					<source>For more info about the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">package.appxmanifest</pc> file and packaging, see <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Manifest Designer</pc>.</source>
					<target>For more info about the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">package.appxmanifest</pc> file and packaging, see <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Manifest Designer</pc>.</target>
				</segment>
			</unit>
			<unit id="151" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>For now, take a look at the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Capabilities</pc> tab and look at the options provided.</source>
					<target>For now, take a look at the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Capabilities</pc> tab and look at the options provided.</target>
				</segment>
			</unit>
			<unit id="152" translate="yes">
				<segment state="initial">
					<source>the default capabilities of a direct3d app.</source>
					<target>the default capabilities of a direct3d app.</target>
				</segment>
			</unit>
			<unit id="153" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>If you don't select the capabilities that your game uses, such as access to the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Internet</pc> for global high score board, you won't be able to access the corresponding resources or features.</source>
					<target>If you don't select the capabilities that your game uses, such as access to the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Internet</pc> for global high score board, you won't be able to access the corresponding resources or features.</target>
				</segment>
			</unit>
			<unit id="154" translate="yes">
				<segment state="initial">
					<source>When you create a new game, make sure that you select the capabilities that your game needs to run!</source>
					<target>When you create a new game, make sure that you select the capabilities that your game needs to run!</target>
				</segment>
			</unit>
			<unit id="155" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>Now, let's look at the rest of the files that come with the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">DirectX 11 App (Universal Windows)</pc> template.</source>
					<target>Now, let's look at the rest of the files that come with the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">DirectX 11 App (Universal Windows)</pc> template.</target>
				</segment>
			</unit>
			<unit id="156" translate="yes">
				<segment state="initial">
					<source>3. Review the included libraries and headers</source>
					<target>3. Review the included libraries and headers</target>
				</segment>
			</unit>
			<unit id="157" translate="yes">
				<segment state="initial">
					<source>There are a few files we haven't looked at yet.</source>
					<target>There are a few files we haven't looked at yet.</target>
				</segment>
			</unit>
			<unit id="158" translate="yes">
				<segment state="initial">
					<source>These files provide additional tools and support common to Direct3D game development scenarios.</source>
					<target>These files provide additional tools and support common to Direct3D game development scenarios.</target>
				</segment>
			</unit>
			<unit id="159" translate="yes">
				<segment state="initial">
					<source>Template Source File</source>
					<target>Template Source File</target>
				</segment>
			</unit>
			<unit id="160" translate="yes">
				<segment state="initial">
					<source>Description</source>
					<target>Description</target>
				</segment>
			</unit>
			<unit id="161" translate="yes">
				<segment state="initial">
					<source>StepTimer.h</source>
					<target>StepTimer.h</target>
				</segment>
			</unit>
			<unit id="162" translate="yes">
				<segment state="initial">
					<source>Defines a high-resolution timer useful for gaming or interactive rendering apps.</source>
					<target>Defines a high-resolution timer useful for gaming or interactive rendering apps.</target>
				</segment>
			</unit>
			<unit id="163" translate="yes">
				<segment state="initial">
					<source>Sample3DSceneRenderer.h/.cpp</source>
					<target>Sample3DSceneRenderer.h/.cpp</target>
				</segment>
			</unit>
			<unit id="164" translate="yes">
				<segment state="initial">
					<source>Defines a basic renderer implementation that connects a Direct3D swap chain and graphics adapter to your UWP using DirectX.</source>
					<target>Defines a basic renderer implementation that connects a Direct3D swap chain and graphics adapter to your UWP using DirectX.</target>
				</segment>
			</unit>
			<unit id="165" translate="yes">
				<segment state="initial">
					<source>DirectXHelper.h</source>
					<target>DirectXHelper.h</target>
				</segment>
			</unit>
			<unit id="166" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>Implements a single method, <pc dataRefEnd="id2" dataRefStart="id1" id="p1">DX::ThrowIfFailed</pc>, that converts the error HRESULT values returned by DirectX APIs into Windows Runtime exceptions.</source>
					<target>Implements a single method, <pc dataRefEnd="id2" dataRefStart="id1" id="p1">DX::ThrowIfFailed</pc>, that converts the error HRESULT values returned by DirectX APIs into Windows Runtime exceptions.</target>
				</segment>
			</unit>
			<unit id="167" translate="yes">
				<segment state="initial">
					<source>Use this method to put a break point for debugging DirectX errors.</source>
					<target>Use this method to put a break point for debugging DirectX errors.</target>
				</segment>
			</unit>
			<unit id="168" translate="yes">
				<segment state="initial">
					<source>pch.h/.cpp</source>
					<target>pch.h/.cpp</target>
				</segment>
			</unit>
			<unit id="169" translate="yes">
				<segment state="initial">
					<source>Contains all the Windows system includes for the APIs used by a Direct3D app, including the DirectX 11 APIs.</source>
					<target>Contains all the Windows system includes for the APIs used by a Direct3D app, including the DirectX 11 APIs.</target>
				</segment>
			</unit>
			<unit id="170" translate="yes">
				<segment state="initial">
					<source>SamplePixelShader.hlsl</source>
					<target>SamplePixelShader.hlsl</target>
				</segment>
			</unit>
			<unit id="171" translate="yes">
				<segment state="initial">
					<source>Contains the high-level shader language (HLSL) code for a very basic pixel shader.</source>
					<target>Contains the high-level shader language (HLSL) code for a very basic pixel shader.</target>
				</segment>
			</unit>
			<unit id="172" translate="yes">
				<segment state="initial">
					<source>SampleVertexShader.hlsl</source>
					<target>SampleVertexShader.hlsl</target>
				</segment>
			</unit>
			<unit id="173" translate="yes">
				<segment state="initial">
					<source>Contains the high-level shader language (HLSL) code for a very basic vertex shader.</source>
					<target>Contains the high-level shader language (HLSL) code for a very basic vertex shader.</target>
				</segment>
			</unit>
			<unit id="174" translate="yes">
				<segment state="initial">
					<source>Next steps</source>
					<target>Next steps</target>
				</segment>
			</unit>
			<unit id="175" translate="yes">
				<segment state="initial">
					<source>At this point, you can create a UWP with DirectX game project and identify the components and files provided by the DirectX 11 App (Universal Windows) template.</source>
					<target>At this point, you can create a UWP with DirectX game project and identify the components and files provided by the DirectX 11 App (Universal Windows) template.</target>
				</segment>
			</unit>
			<unit id="176" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](tutorial--building-the-games-metro-style-app-framework.md)</data>
				</originalData>
				<segment state="initial">
					<source>In the next tutorial, <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Defining the game's UWP framework</pc>, we work with a completed game and examine how it uses and extends many of the concepts and components that the template provides.</source>
					<target>In the next tutorial, <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Defining the game's UWP framework</pc>, we work with a completed game and examine how it uses and extends many of the concepts and components that the template provides.</target>
				</segment>
			</unit>
		</group>
	</file>
</xliff>