<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="it-it" version="2.0" xml:space="preserve" xmlns="urn:oasis:names:tc:xliff:document:2.0">
	<file id="1">
		<mda:metadata>
			<mda:metaGroup>
				<mda:meta type="tool-id">mdxliff</mda:meta>
				<mda:meta type="tool-name">mdxliff</mda:meta>
				<mda:meta type="tool-version">1.0-00ddeee</mda:meta>
				<mda:meta type="tool-company">Microsoft</mda:meta>
			</mda:metaGroup>
		<mda:metaGroup><mda:meta type="olfilehash">5865fa4b645858c14437f1a31848274e6d995e02</mda:meta><mda:meta type="olfilepath">wdg-cpub-test\ndolci2\launch-resume\create-and-register-a-background-task.md</mda:meta><mda:meta type="oltranslationpriority"></mda:meta><mda:meta type="oltranslationtype">Human Translation</mda:meta><mda:meta type="olskeletonhash">9111634d4d00e1c515a5f70bbf970a9e103d5550</mda:meta><mda:meta type="olxliffhash">38733b14135d86b1bd28142ae4bd7ed5e03e5b56</mda:meta></mda:metaGroup></mda:metadata>
		<group id="content">
			<unit id="101" translate="yes">
				<segment state="initial">
					<source>Create and register a background task</source>
					<target>Create and register a background task</target>
				</segment>
			</unit>
			<unit id="102" translate="yes">
				<segment state="initial">
					<source>Create a background task class and register it to run when your app is not in the foreground.</source>
					<target>Create a background task class and register it to run when your app is not in the foreground.</target>
				</segment>
			</unit>
			<unit id="103" translate="yes">
				<segment state="initial">
					<source>Create and register a background task</source>
					<target>Create and register a background task</target>
				</segment>
			</unit>
			<unit id="104" translate="yes">
				<segment state="initial">
					<source>\[ Updated for UWP apps on Windows 10.</source>
					<target>\[ Updated for UWP apps on Windows 10.</target>
				</segment>
			</unit>
			<unit id="105" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](http://go.microsoft.com/fwlink/p/?linkid=619132)</data>
				</originalData>
				<segment state="initial">
					<source>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</source>
					<target>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</target>
				</segment>
			</unit>
			<unit id="106" translate="yes">
				<segment state="initial">
					<source>Important APIs</source>
					<target>Important APIs</target>
				</segment>
			</unit>
			<unit id="107" translate="yes">
				<segment state="initial">
					<source>IBackgroundTask</source>
					<target>IBackgroundTask</target>
				</segment>
			</unit>
			<unit id="108" translate="yes">
				<segment state="initial">
					<source>BackgroundTaskBuilder</source>
					<target>BackgroundTaskBuilder</target>
				</segment>
			</unit>
			<unit id="109" translate="yes">
				<segment state="initial">
					<source>BackgroundTaskCompletedEventHandler</source>
					<target>BackgroundTaskCompletedEventHandler</target>
				</segment>
			</unit>
			<unit id="110" translate="yes">
				<segment state="initial">
					<source>Create a background task class and register it to run when your app is not in the foreground.</source>
					<target>Create a background task class and register it to run when your app is not in the foreground.</target>
				</segment>
			</unit>
			<unit id="111" translate="yes">
				<segment state="initial">
					<source>Create the Background Task class</source>
					<target>Create the Background Task class</target>
				</segment>
			</unit>
			<unit id="112" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br224794)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>You can run code in the background by writing classes that implement the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">IBackgroundTask</pc></pc> interface.</source>
					<target>You can run code in the background by writing classes that implement the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">IBackgroundTask</pc></pc> interface.</target>
				</segment>
			</unit>
			<unit id="113" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br224839)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/hh700517)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>This code will run when a specific event is triggered by using, for example, <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SystemTrigger</pc></pc> or <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">MaintenanceTrigger</pc></pc>.</source>
					<target>This code will run when a specific event is triggered by using, for example, <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SystemTrigger</pc></pc> or <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">MaintenanceTrigger</pc></pc>.</target>
				</segment>
			</unit>
			<unit id="114" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br224794)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>The following steps show you how to write a new class that implements the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">IBackgroundTask</pc></pc> interface.</source>
					<target>The following steps show you how to write a new class that implements the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">IBackgroundTask</pc></pc> interface.</target>
				</segment>
			</unit>
			<unit id="115" translate="yes">
				<segment state="initial">
					<source>Before getting started, create a new project in your solution for background tasks.</source>
					<target>Before getting started, create a new project in your solution for background tasks.</target>
				</segment>
			</unit>
			<unit id="116" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br224847)</data>
				</originalData>
				<segment state="initial">
					<source>Add a new empty class for your background task and import the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Windows.ApplicationModel.Background</pc> namespace.</source>
					<target>Add a new empty class for your background task and import the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Windows.ApplicationModel.Background</pc> namespace.</target>
				</segment>
			</unit>
			<unit id="117" translate="yes">
				<segment state="initial">
					<source>Create a new project for background tasks and add it to your solution.</source>
					<target>Create a new project for background tasks and add it to your solution.</target>
				</segment>
			</unit>
			<unit id="118" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">&amp;gt;</data>
				</originalData>
				<segment state="initial">
					<source>To do this, right-click on your solution node in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Solution Explorer</pc> and select Add-<ph dataRef="id3" id="ph1" />New Project.</source>
					<target>To do this, right-click on your solution node in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Solution Explorer</pc> and select Add-<ph dataRef="id3" id="ph1" />New Project.</target>
				</segment>
			</unit>
			<unit id="119" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>Then select the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Windows Runtime Component (Universal Windows)</pc> project type, name the project, and click OK.</source>
					<target>Then select the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Windows Runtime Component (Universal Windows)</pc> project type, name the project, and click OK.</target>
				</segment>
			</unit>
			<unit id="120" translate="yes">
				<segment state="initial">
					<source>Reference the background tasks project from your Universal Windows Platform (UWP) app project.</source>
					<target>Reference the background tasks project from your Universal Windows Platform (UWP) app project.</target>
				</segment>
			</unit>
			<unit id="121" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>For a C++ app, right-click on your app project and select <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Properties</pc>.</source>
					<target>For a C++ app, right-click on your app project and select <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Properties</pc>.</target>
				</segment>
			</unit>
			<unit id="122" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source>Then go to <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Common Properties</pc> and click <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Add New Reference</pc>, check the box next to your background tasks project, and click <pc dataRefEnd="id6" dataRefStart="id5" id="p3">OK</pc> on both dialogs.</source>
					<target>Then go to <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Common Properties</pc> and click <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Add New Reference</pc>, check the box next to your background tasks project, and click <pc dataRefEnd="id6" dataRefStart="id5" id="p3">OK</pc> on both dialogs.</target>
				</segment>
			</unit>
			<unit id="123" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>For a C# app, in your app project, right click on <pc dataRefEnd="id2" dataRefStart="id1" id="p1">References</pc> and select <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Add New Reference</pc>.</source>
					<target>For a C# app, in your app project, right click on <pc dataRefEnd="id2" dataRefStart="id1" id="p1">References</pc> and select <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Add New Reference</pc>.</target>
				</segment>
			</unit>
			<unit id="124" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source>Under <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Solution</pc>, select <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Projects</pc> and then select the name of your background task project and click <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Ok</pc>.</source>
					<target>Under <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Solution</pc>, select <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Projects</pc> and then select the name of your background task project and click <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Ok</pc>.</target>
				</segment>
			</unit>
			<unit id="125" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br224794)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Create a new class that implements the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">IBackgroundTask</pc></pc> interface.</source>
					<target>Create a new class that implements the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">IBackgroundTask</pc></pc> interface.</target>
				</segment>
			</unit>
			<unit id="126" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br224811)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Run</pc></pc> method is a required entry point that will be called when the specified event is triggered; this method is required in every background task.</source>
					<target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Run</pc></pc> method is a required entry point that will be called when the specified event is triggered; this method is required in every background task.</target>
				</segment>
			</unit>
			<unit id="127" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  The background task class itself - and all other classes in the background task project - need to be <pc dataRefEnd="id4" dataRefStart="id3" id="p2">public</pc> classes that are <pc dataRefEnd="id6" dataRefStart="id5" id="p3">sealed</pc>.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  The background task class itself - and all other classes in the background task project - need to be <pc dataRefEnd="id4" dataRefStart="id3" id="p2">public</pc> classes that are <pc dataRefEnd="id6" dataRefStart="id5" id="p3">sealed</pc>.</target>
				</segment>
			</unit>
			<unit id="128" translate="yes">
				<segment state="initial">
					<source>The following sample code shows a very basic starting point for a background task class:</source>
					<target>The following sample code shows a very basic starting point for a background task class:</target>
				</segment>
			</unit>
			<unit id="129" translate="yes">
				<segment state="initial">
					<source>If you run any asynchronous code in your background task, then your background task needs to use a deferral.</source>
					<target>If you run any asynchronous code in your background task, then your background task needs to use a deferral.</target>
				</segment>
			</unit>
			<unit id="130" translate="yes">
				<segment state="initial">
					<source>If you don't use a deferral, then the background task process can terminate unexpectedly if the Run method completes before your asynchronous method call has completed.</source>
					<target>If you don't use a deferral, then the background task process can terminate unexpectedly if the Run method completes before your asynchronous method call has completed.</target>
				</segment>
			</unit>
			<unit id="131" translate="yes">
				<segment state="initial">
					<source>Request the deferral in the Run method before calling the asynchronous method.</source>
					<target>Request the deferral in the Run method before calling the asynchronous method.</target>
				</segment>
			</unit>
			<unit id="132" translate="yes">
				<segment state="initial">
					<source>Save the deferral to a global variable so it can be accessed from the asynchronous method.</source>
					<target>Save the deferral to a global variable so it can be accessed from the asynchronous method.</target>
				</segment>
			</unit>
			<unit id="133" translate="yes">
				<segment state="initial">
					<source>Declare the deferral complete after the asynchronous code completes.</source>
					<target>Declare the deferral complete after the asynchronous code completes.</target>
				</segment>
			</unit>
			<unit id="134" translate="yes">
				<segment state="initial">
					<source>The following sample code gets the deferral, saves it, and releases it when the asynchronous code is complete:</source>
					<target>The following sample code gets the deferral, saves it, and releases it when the asynchronous code is complete:</target>
				</segment>
			</unit>
			<unit id="135" translate="yes">
				<segment state="initial">
					<source>The following steps are completed in one of your app classes (for example, MainPage.xaml.cs).</source>
					<target>The following steps are completed in one of your app classes (for example, MainPage.xaml.cs).</target>
				</segment>
			</unit>
			<unit id="136" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">[</data>
					<data id="id4">](register-a-background-task.md)</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  You can also create a function dedicated to registering background tasks - see <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Register a background task</pc>.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  You can also create a function dedicated to registering background tasks - see <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Register a background task</pc>.</target>
				</segment>
			</unit>
			<unit id="137" translate="yes">
				<segment state="initial">
					<source>In that case, instead of using the next 3 steps, you can simply construct the trigger and provide it to the registration function along with the task name, task entry point, and (optionally) a condition.</source>
					<target>In that case, instead of using the next 3 steps, you can simply construct the trigger and provide it to the registration function along with the task name, task entry point, and (optionally) a condition.</target>
				</segment>
			</unit>
			<unit id="138" translate="yes">
				<segment state="initial">
					<source>Register the background task to run</source>
					<target>Register the background task to run</target>
				</segment>
			</unit>
			<unit id="139" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br224787)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Find out if the background task is already registered by iterating through the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">BackgroundTaskRegistration.AllTasks</pc></pc> property.</source>
					<target>Find out if the background task is already registered by iterating through the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">BackgroundTaskRegistration.AllTasks</pc></pc> property.</target>
				</segment>
			</unit>
			<unit id="140" translate="yes">
				<segment state="initial">
					<source>This step is important; if your app doesn't check for existing background task registrations, it could easily register the task multiple times, causing issues with performance and maxing out the task's available CPU time before work can complete.</source>
					<target>This step is important; if your app doesn't check for existing background task registrations, it could easily register the task multiple times, causing issues with performance and maxing out the task's available CPU time before work can complete.</target>
				</segment>
			</unit>
			<unit id="141" translate="yes">
				<segment state="initial">
					<source>The following example iterates on the AllTasks property and sets a flag variable to true if the task is already registered:</source>
					<target>The following example iterates on the AllTasks property and sets a flag variable to true if the task is already registered:</target>
				</segment>
			</unit>
			<unit id="142" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br224768)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>If the background task is not already registered, use <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">BackgroundTaskBuilder</pc></pc> to create an instance of your background task.</source>
					<target>If the background task is not already registered, use <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">BackgroundTaskBuilder</pc></pc> to create an instance of your background task.</target>
				</segment>
			</unit>
			<unit id="143" translate="yes">
				<segment state="initial">
					<source>The task entry point should be the name of your background task class prefixed by the namespace.</source>
					<target>The task entry point should be the name of your background task class prefixed by the namespace.</target>
				</segment>
			</unit>
			<unit id="144" translate="yes">
				<segment state="initial">
					<source>The background task trigger controls when the background task will run.</source>
					<target>The background task trigger controls when the background task will run.</target>
				</segment>
			</unit>
			<unit id="145" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br224839)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>For a list of possible triggers, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SystemTrigger</pc></pc>.</source>
					<target>For a list of possible triggers, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SystemTrigger</pc></pc>.</target>
				</segment>
			</unit>
			<unit id="146" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>For example, this code creates a new background task and sets it to run when the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">TimeZoneChanged</pc> trigger is fired:</source>
					<target>For example, this code creates a new background task and sets it to run when the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">TimeZoneChanged</pc> trigger is fired:</target>
				</segment>
			</unit>
			<unit id="147" translate="yes">
				<segment state="initial">
					<source>You can add a condition to control when your task will run after the trigger event occurs (optional).</source>
					<target>You can add a condition to control when your task will run after the trigger event occurs (optional).</target>
				</segment>
			</unit>
			<unit id="148" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>For example, if you don't want the task to run until the user is present, use the condition <pc dataRefEnd="id2" dataRefStart="id1" id="p1">UserPresent</pc>.</source>
					<target>For example, if you don't want the task to run until the user is present, use the condition <pc dataRefEnd="id2" dataRefStart="id1" id="p1">UserPresent</pc>.</target>
				</segment>
			</unit>
			<unit id="149" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br224835)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>For a list of possible conditions, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SystemConditionType</pc></pc>.</source>
					<target>For a list of possible conditions, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SystemConditionType</pc></pc>.</target>
				</segment>
			</unit>
			<unit id="150" translate="yes">
				<segment state="initial">
					<source>The following sample code assigns a condition requiring the user to be present:</source>
					<target>The following sample code assigns a condition requiring the user to be present:</target>
				</segment>
			</unit>
			<unit id="151" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br224768)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Register the background task by calling the Register method on the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">BackgroundTaskBuilder</pc></pc> object.</source>
					<target>Register the background task by calling the Register method on the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">BackgroundTaskBuilder</pc></pc> object.</target>
				</segment>
			</unit>
			<unit id="152" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br224786)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>Store the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">BackgroundTaskRegistration</pc></pc> result so it can be used in the next step.</source>
					<target>Store the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">BackgroundTaskRegistration</pc></pc> result so it can be used in the next step.</target>
				</segment>
			</unit>
			<unit id="153" translate="yes">
				<segment state="initial">
					<source>The following code registers the background task and stores the result:</source>
					<target>The following code registers the background task and stores the result:</target>
				</segment>
			</unit>
			<unit id="154" translate="yes">
				<segment state="initial">
					<source>Handle background task completion using event handlers</source>
					<target>Handle background task completion using event handlers</target>
				</segment>
			</unit>
			<unit id="155" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br224781)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>You should register a method with the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">BackgroundTaskCompletedEventHandler</pc></pc>, so that your app can get results from the background task.</source>
					<target>You should register a method with the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">BackgroundTaskCompletedEventHandler</pc></pc>, so that your app can get results from the background task.</target>
				</segment>
			</unit>
			<unit id="156" translate="yes">
				<segment state="initial">
					<source>When the app is launched or resumed, the mark method will be called if the background task has completed since the last time the app was in the foreground.</source>
					<target>When the app is launched or resumed, the mark method will be called if the background task has completed since the last time the app was in the foreground.</target>
				</segment>
			</unit>
			<unit id="157" translate="yes">
				<segment state="initial">
					<source>(The OnCompleted method will be called immediately if the background task completes while your app is currently in the foreground.)</source>
					<target>(The OnCompleted method will be called immediately if the background task completes while your app is currently in the foreground.)</target>
				</segment>
			</unit>
			<unit id="158" translate="yes">
				<segment state="initial">
					<source>Write an OnCompleted method to handle the completion of background tasks.</source>
					<target>Write an OnCompleted method to handle the completion of background tasks.</target>
				</segment>
			</unit>
			<unit id="159" translate="yes">
				<segment state="initial">
					<source>For example, the background task result might cause a UI update.</source>
					<target>For example, the background task result might cause a UI update.</target>
				</segment>
			</unit>
			<unit id="160" translate="yes">
				<originalData>
					<data id="id1">*</data>
					<data id="id2">*</data>
				</originalData>
				<segment state="initial">
					<source>The method footprint shown here is required for the OnCompleted event handler method, even though this example does not use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">args</pc> parameter.</source>
					<target>The method footprint shown here is required for the OnCompleted event handler method, even though this example does not use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">args</pc> parameter.</target>
				</segment>
			</unit>
			<unit id="161" translate="yes">
				<segment state="initial">
					<source>The following sample code recognizes background task completion and calls an example UI update method that takes a message string.</source>
					<target>The following sample code recognizes background task completion and calls an example UI update method that takes a message string.</target>
				</segment>
			</unit>
			<unit id="162" translate="yes">
				<segment state="initial">
					<source>Go back to where you registered the background task.</source>
					<target>Go back to where you registered the background task.</target>
				</segment>
			</unit>
			<unit id="163" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br224781)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>After that line of code, add a new <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">BackgroundTaskCompletedEventHandler</pc></pc> object.</source>
					<target>After that line of code, add a new <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">BackgroundTaskCompletedEventHandler</pc></pc> object.</target>
				</segment>
			</unit>
			<unit id="164" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>Provide your OnCompleted method as the parameter for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">BackgroundTaskCompletedEventHandler</pc> constructor.</source>
					<target>Provide your OnCompleted method as the parameter for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">BackgroundTaskCompletedEventHandler</pc> constructor.</target>
				</segment>
			</unit>
			<unit id="165" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br224781)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/br224786)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>The following sample code adds a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">BackgroundTaskCompletedEventHandler</pc></pc> to the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">BackgroundTaskRegistration</pc></pc>:</source>
					<target>The following sample code adds a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">BackgroundTaskCompletedEventHandler</pc></pc> to the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">BackgroundTaskRegistration</pc></pc>:</target>
				</segment>
			</unit>
			<unit id="166" translate="yes">
				<segment state="initial">
					<source>Declare that your app uses background tasks in the app manifest</source>
					<target>Declare that your app uses background tasks in the app manifest</target>
				</segment>
			</unit>
			<unit id="167" translate="yes">
				<segment state="initial">
					<source>Before your app can run background tasks, you must declare each background task in the app manifest.</source>
					<target>Before your app can run background tasks, you must declare each background task in the app manifest.</target>
				</segment>
			</unit>
			<unit id="168" translate="yes">
				<segment state="initial">
					<source>If your app attempts to register a background task with a trigger that isn't listed in the manifest, the registration will fail.</source>
					<target>If your app attempts to register a background task with a trigger that isn't listed in the manifest, the registration will fail.</target>
				</segment>
			</unit>
			<unit id="169" translate="yes">
				<segment state="initial">
					<source>Open the package manifest designer by opening the file named Package.appxmanifest.</source>
					<target>Open the package manifest designer by opening the file named Package.appxmanifest.</target>
				</segment>
			</unit>
			<unit id="170" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>Open the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Declarations</pc> tab.</source>
					<target>Open the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Declarations</pc> tab.</target>
				</segment>
			</unit>
			<unit id="171" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source>From the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Available Declarations</pc> drop-down, select <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Background Tasks</pc> and click <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Add</pc>.</source>
					<target>From the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Available Declarations</pc> drop-down, select <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Background Tasks</pc> and click <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Add</pc>.</target>
				</segment>
			</unit>
			<unit id="172" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>Select the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">System event</pc> checkbox.</source>
					<target>Select the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">System event</pc> checkbox.</target>
				</segment>
			</unit>
			<unit id="173" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>In the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Entry point:</pc> textbox, enter the namespace and name of your background class which is for this example is RuntimeComponent1.ExampleBackgroundTask.</source>
					<target>In the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Entry point:</pc> textbox, enter the namespace and name of your background class which is for this example is RuntimeComponent1.ExampleBackgroundTask.</target>
				</segment>
			</unit>
			<unit id="174" translate="yes">
				<segment state="initial">
					<source>Close the manfiest designer.</source>
					<target>Close the manfiest designer.</target>
				</segment>
			</unit>
			<unit id="175" translate="yes">
				<segment state="initial">
					<source>The following Extensions element is added to your Package.appxmanifest file to register the background task:</source>
					<target>The following Extensions element is added to your Package.appxmanifest file to register the background task:</target>
				</segment>
			</unit>
			<unit id="176" translate="yes">
				<segment state="initial">
					<source>Summary and next steps</source>
					<target>Summary and next steps</target>
				</segment>
			</unit>
			<unit id="177" translate="yes">
				<segment state="initial">
					<source>You should now understand the basics of how to write a background task class, how to register the background task from within your app, and how to make your app recognize when the background task is complete.</source>
					<target>You should now understand the basics of how to write a background task class, how to register the background task from within your app, and how to make your app recognize when the background task is complete.</target>
				</segment>
			</unit>
			<unit id="178" translate="yes">
				<segment state="initial">
					<source>You should also understand how to update the application manifest so that your app can successfully register the background task.</source>
					<target>You should also understand how to update the application manifest so that your app can successfully register the background task.</target>
				</segment>
			</unit>
			<unit id="179" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">[</data>
					<data id="id4">](http://go.microsoft.com/fwlink/p/?LinkId=618666)</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  Download the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">background task sample</pc> to see similar code examples in the context of a complete and robust UWP app that uses background tasks.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  Download the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">background task sample</pc> to see similar code examples in the context of a complete and robust UWP app that uses background tasks.</target>
				</segment>
			</unit>
			<unit id="180" translate="yes">
				<segment state="initial">
					<source>See the following related topics for API reference, background task conceptual guidance, and more detailed instructions for writing apps that use background tasks.</source>
					<target>See the following related topics for API reference, background task conceptual guidance, and more detailed instructions for writing apps that use background tasks.</target>
				</segment>
			</unit>
			<unit id="181" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  This article is for Windows 10 developers writing Universal Windows Platform (UWP) apps.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  This article is for Windows 10 developers writing Universal Windows Platform (UWP) apps.</target>
				</segment>
			</unit>
			<unit id="182" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](http://go.microsoft.com/fwlink/p/?linkid=619132)</data>
				</originalData>
				<segment state="initial">
					<source>If you’re developing for Windows 8.x or Windows Phone 8.x, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archived documentation</pc>.</source>
					<target>If you’re developing for Windows 8.x or Windows Phone 8.x, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archived documentation</pc>.</target>
				</segment>
			</unit>
			<unit id="183" translate="yes">
				<segment state="initial">
					<source>Related topics</source>
					<target>Related topics</target>
				</segment>
			</unit>
			<unit id="184" translate="yes">
				<segment state="initial">
					<source>Detailed background task instructional topics</source>
					<target>Detailed background task instructional topics</target>
				</segment>
			</unit>
			<unit id="185" translate="yes">
				<segment state="initial">
					<source>Respond to system events with background tasks</source>
					<target>Respond to system events with background tasks</target>
				</segment>
			</unit>
			<unit id="186" translate="yes">
				<segment state="initial">
					<source>Register a background task</source>
					<target>Register a background task</target>
				</segment>
			</unit>
			<unit id="187" translate="yes">
				<segment state="initial">
					<source>Set conditions for running a background task</source>
					<target>Set conditions for running a background task</target>
				</segment>
			</unit>
			<unit id="188" translate="yes">
				<segment state="initial">
					<source>Use a maintenance trigger</source>
					<target>Use a maintenance trigger</target>
				</segment>
			</unit>
			<unit id="189" translate="yes">
				<segment state="initial">
					<source>Handle a cancelled background task</source>
					<target>Handle a cancelled background task</target>
				</segment>
			</unit>
			<unit id="190" translate="yes">
				<segment state="initial">
					<source>Monitor background task progress and completion</source>
					<target>Monitor background task progress and completion</target>
				</segment>
			</unit>
			<unit id="191" translate="yes">
				<segment state="initial">
					<source>Run a background task on a timer</source>
					<target>Run a background task on a timer</target>
				</segment>
			</unit>
			<unit id="192" translate="yes">
				<segment state="initial">
					<source>Background task guidance</source>
					<target>Background task guidance</target>
				</segment>
			</unit>
			<unit id="193" translate="yes">
				<segment state="initial">
					<source>Guidelines for background tasks</source>
					<target>Guidelines for background tasks</target>
				</segment>
			</unit>
			<unit id="194" translate="yes">
				<segment state="initial">
					<source>Debug a background task</source>
					<target>Debug a background task</target>
				</segment>
			</unit>
			<unit id="195" translate="yes">
				<segment state="initial">
					<source>How to trigger suspend, resume, and background events in Windows Store apps (when debugging)</source>
					<target>How to trigger suspend, resume, and background events in Windows Store apps (when debugging)</target>
				</segment>
			</unit>
			<unit id="196" translate="yes">
				<segment state="initial">
					<source>Background Task API Reference</source>
					<target>Background Task API Reference</target>
				</segment>
			</unit>
			<unit id="197" translate="yes">
				<segment state="initial">
					<source>Windows.ApplicationModel.Background</source>
					<target>Windows.ApplicationModel.Background</target>
				</segment>
			</unit>
		</group>
	</file>
</xliff>