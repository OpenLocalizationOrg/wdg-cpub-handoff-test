<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="it-it" version="2.0" xml:space="preserve" xmlns="urn:oasis:names:tc:xliff:document:2.0">
	<file id="1">
		<mda:metadata>
			<mda:metaGroup>
				<mda:meta type="tool-id">mdxliff</mda:meta>
				<mda:meta type="tool-name">mdxliff</mda:meta>
				<mda:meta type="tool-version">1.0-00ddeee</mda:meta>
				<mda:meta type="tool-company">Microsoft</mda:meta>
			</mda:metaGroup>
		<mda:metaGroup><mda:meta type="olfilehash">8f690ac45f1a7926fd62eae2bd151dbd32e20b01</mda:meta><mda:meta type="olfilepath">wdg-cpub-test\ndolci2\security\authentication-and-user-identity.md</mda:meta><mda:meta type="oltranslationpriority"></mda:meta><mda:meta type="oltranslationtype">Human Translation</mda:meta><mda:meta type="olskeletonhash">aebc3c242603830e8c7318b9fe37e566f02b09d6</mda:meta><mda:meta type="olxliffhash">32758cac79c6cace502d75c28a7b938c7f067827</mda:meta></mda:metaGroup></mda:metadata>
		<group id="content">
			<unit id="101" translate="yes">
				<segment state="initial">
					<source>Authentication and user identity</source>
					<target>Authentication and user identity</target>
				</segment>
			</unit>
			<unit id="102" translate="yes">
				<segment state="initial">
					<source>Universal Windows Platform (UWP) apps have several options for user authentication, ranging from simple single sign-on (SSO) using Web authentication broker to highly secure two-factor authentication.</source>
					<target>Universal Windows Platform (UWP) apps have several options for user authentication, ranging from simple single sign-on (SSO) using Web authentication broker to highly secure two-factor authentication.</target>
				</segment>
			</unit>
			<unit id="103" translate="yes">
				<segment state="initial">
					<source>Authentication and user identity</source>
					<target>Authentication and user identity</target>
				</segment>
			</unit>
			<unit id="104" translate="yes">
				<segment state="initial">
					<source>\[ Updated for UWP apps on Windows 10.</source>
					<target>\[ Updated for UWP apps on Windows 10.</target>
				</segment>
			</unit>
			<unit id="105" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](http://go.microsoft.com/fwlink/p/?linkid=619132)</data>
				</originalData>
				<segment state="initial">
					<source>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</source>
					<target>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</target>
				</segment>
			</unit>
			<unit id="106" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](web-authentication-broker.md)</data>
				</originalData>
				<segment state="initial">
					<source>Universal Windows Platform (UWP) apps have several options for user authentication, ranging from simple single sign-on (SSO) using <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Web authentication broker</pc> to highly secure two-factor authentication.</source>
					<target>Universal Windows Platform (UWP) apps have several options for user authentication, ranging from simple single sign-on (SSO) using <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Web authentication broker</pc> to highly secure two-factor authentication.</target>
				</segment>
			</unit>
			<unit id="107" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](web-authentication-broker.md)</data>
				</originalData>
				<segment state="initial">
					<source>For regular app connections to third-party identity provider services, such as Facebook, Twitter, Flickr, and so on, use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Web authentication broker</pc>.</source>
					<target>For regular app connections to third-party identity provider services, such as Facebook, Twitter, Flickr, and so on, use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Web authentication broker</pc>.</target>
				</segment>
			</unit>
			<unit id="108" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](credential-locker.md)</data>
				</originalData>
				<segment state="initial">
					<source>For added convenience, use <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Credential Locker</pc> to save and roam the user's login information.</source>
					<target>For added convenience, use <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Credential Locker</pc> to save and roam the user's login information.</target>
				</segment>
			</unit>
			<unit id="109" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](microsoft-passport.md)</data>
				</originalData>
				<segment state="initial">
					<source>Enterprises using Windows 10 should strongly consider using <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Microsoft Passport and Windows Hello</pc>, which enables highly secure two-factor authentication.</source>
					<target>Enterprises using Windows 10 should strongly consider using <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Microsoft Passport and Windows Hello</pc>, which enables highly secure two-factor authentication.</target>
				</segment>
			</unit>
			<unit id="110" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](smart-cards.md)</data>
					<data id="id3">[</data>
					<data id="id4">](fingerprint-biometrics.md)</data>
				</originalData>
				<segment state="initial">
					<source>If using Microsoft Passport is not possible,<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Smart cards</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Fingerprint biometrics</pc> can add an additional layer of security.</source>
					<target>If using Microsoft Passport is not possible,<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Smart cards</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Fingerprint biometrics</pc> can add an additional layer of security.</target>
				</segment>
			</unit>
			<unit id="111" translate="yes">
				<segment state="initial">
					<source>Topic</source>
					<target>Topic</target>
				</segment>
			</unit>
			<unit id="112" translate="yes">
				<segment state="initial">
					<source>Description</source>
					<target>Description</target>
				</segment>
			</unit>
			<unit id="113" translate="yes">
				<segment state="initial">
					<source>Microsoft Passport and Windows Hello</source>
					<target>Microsoft Passport and Windows Hello</target>
				</segment>
			</unit>
			<unit id="114" translate="yes">
				<segment state="initial">
					<source>Microsoft Passport and Windows Hello replaces passwords with strong two-factor authentication (2FA) by verifying existing credentials and by creating a device-specific credential that a biometric or PIN-based user gesture protects.</source>
					<target>Microsoft Passport and Windows Hello replaces passwords with strong two-factor authentication (2FA) by verifying existing credentials and by creating a device-specific credential that a biometric or PIN-based user gesture protects.</target>
				</segment>
			</unit>
			<unit id="115" translate="yes">
				<segment state="initial">
					<source>This combination effectively replaces physical and virtual smart cards as well as reusable passwords for logon and access control.</source>
					<target>This combination effectively replaces physical and virtual smart cards as well as reusable passwords for logon and access control.</target>
				</segment>
			</unit>
			<unit id="116" translate="yes">
				<segment state="initial">
					<source>Create a Microsoft Passport login app</source>
					<target>Create a Microsoft Passport login app</target>
				</segment>
			</unit>
			<unit id="117" translate="yes">
				<segment state="initial">
					<source>Part 1 of a complete walkthrough on how to create a Windows 10 UWP (Universal Windows Platform) app that uses Microsoft Passport as an alternative to traditional username and password authentication systems.</source>
					<target>Part 1 of a complete walkthrough on how to create a Windows 10 UWP (Universal Windows Platform) app that uses Microsoft Passport as an alternative to traditional username and password authentication systems.</target>
				</segment>
			</unit>
			<unit id="118" translate="yes">
				<segment state="initial">
					<source>Create a Microsoft Passport login service</source>
					<target>Create a Microsoft Passport login service</target>
				</segment>
			</unit>
			<unit id="119" translate="yes">
				<segment state="initial">
					<source>Part 2 of a complete walkthrough on how to use Microsoft Passport as an alternative to traditional username and password authentication systems in Windows 10 UWP (Universal Windows platform) apps.</source>
					<target>Part 2 of a complete walkthrough on how to use Microsoft Passport as an alternative to traditional username and password authentication systems in Windows 10 UWP (Universal Windows platform) apps.</target>
				</segment>
			</unit>
			<unit id="120" translate="yes">
				<segment state="initial">
					<source>Credential Locker</source>
					<target>Credential Locker</target>
				</segment>
			</unit>
			<unit id="121" translate="yes">
				<segment state="initial">
					<source>Credential Locker is a convenient and secure way to store user credentials that your app uses to connect to services like media, social networking, and so on.</source>
					<target>Credential Locker is a convenient and secure way to store user credentials that your app uses to connect to services like media, social networking, and so on.</target>
				</segment>
			</unit>
			<unit id="122" translate="yes">
				<segment state="initial">
					<source>You can store a user's userid and password in the Credential Locker, and then automatically log them on to services when they use your app.</source>
					<target>You can store a user's userid and password in the Credential Locker, and then automatically log them on to services when they use your app.</target>
				</segment>
			</unit>
			<unit id="123" translate="yes">
				<segment state="initial">
					<source>Credentials stored in the Credential Locker automatically roam with a users's Microsoft Account.</source>
					<target>Credentials stored in the Credential Locker automatically roam with a users's Microsoft Account.</target>
				</segment>
			</unit>
			<unit id="124" translate="yes">
				<segment state="initial">
					<source>Web authentication broker</source>
					<target>Web authentication broker</target>
				</segment>
			</unit>
			<unit id="125" translate="yes">
				<segment state="initial">
					<source>Web authentication broker supports the OAuth and OpenID internet authentication protocols, so you can integrate your app with a web service that provides user authentication.</source>
					<target>Web authentication broker supports the OAuth and OpenID internet authentication protocols, so you can integrate your app with a web service that provides user authentication.</target>
				</segment>
			</unit>
			<unit id="126" translate="yes">
				<segment state="initial">
					<source>This allows you to utilize user identity in your apps from services such as Facebook, Flickr, Google, and Twitter.</source>
					<target>This allows you to utilize user identity in your apps from services such as Facebook, Flickr, Google, and Twitter.</target>
				</segment>
			</unit>
			<unit id="127" translate="yes">
				<segment state="initial">
					<source>You can also use the web authentication broker to enable single sign-on (SSO) for multiple internet authenticated apps.</source>
					<target>You can also use the web authentication broker to enable single sign-on (SSO) for multiple internet authenticated apps.</target>
				</segment>
			</unit>
			<unit id="128" translate="yes">
				<segment state="initial">
					<source>Fingerprint biometrics</source>
					<target>Fingerprint biometrics</target>
				</segment>
			</unit>
			<unit id="129" translate="yes">
				<segment state="initial">
					<source>Including a request for fingerprint authentication when the user must consent to a particular action increases the security of your app.</source>
					<target>Including a request for fingerprint authentication when the user must consent to a particular action increases the security of your app.</target>
				</segment>
			</unit>
			<unit id="130" translate="yes">
				<segment state="initial">
					<source>For example, you could require fingerprint authentication before authorizing an in-app purchase, or access to restricted resources.</source>
					<target>For example, you could require fingerprint authentication before authorizing an in-app purchase, or access to restricted resources.</target>
				</segment>
			</unit>
			<unit id="131" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn279134)</data>
					<data id="id3">[</data>
					<data id="id4">](https://msdn.microsoft.com/library/windows/apps/hh701356)</data>
				</originalData>
				<segment state="initial">
					<source>Fingerprint authentication is managed using the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">UserConsentVerifier</pc> class in the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.Security.Credentials.UI</pc> namespace.</source>
					<target>Fingerprint authentication is managed using the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">UserConsentVerifier</pc> class in the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.Security.Credentials.UI</pc> namespace.</target>
				</segment>
			</unit>
			<unit id="132" translate="yes">
				<segment state="initial">
					<source>Smart cards</source>
					<target>Smart cards</target>
				</segment>
			</unit>
			<unit id="133" translate="yes">
				<segment state="initial">
					<source>Smart cards and virtual smart cards provide a high level of authentication for your app.</source>
					<target>Smart cards and virtual smart cards provide a high level of authentication for your app.</target>
				</segment>
			</unit>
			<unit id="134" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn263949)</data>
				</originalData>
				<segment state="initial">
					<source>You can use the APIs in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Windows.Devices.SmartCards</pc> namespace to authenticate a user using a smart card, gather information about smart card devices, and manage smart card devices, such as requesting a PIN reset.</source>
					<target>You can use the APIs in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Windows.Devices.SmartCards</pc> namespace to authenticate a user using a smart card, gather information about smart card devices, and manage smart card devices, such as requesting a PIN reset.</target>
				</segment>
			</unit>
			<unit id="135" translate="yes">
				<segment state="initial">
					<source>You can also create Trusted Platform Module (TPM) Virtual Smart Cards that provide smart card-level authentication without requiring a physical smart card from your user.</source>
					<target>You can also create Trusted Platform Module (TPM) Virtual Smart Cards that provide smart card-level authentication without requiring a physical smart card from your user.</target>
				</segment>
			</unit>
			<unit id="136" translate="yes">
				<segment state="initial">
					<source>Shared certificates</source>
					<target>Shared certificates</target>
				</segment>
			</unit>
			<unit id="137" translate="yes">
				<segment state="initial">
					<source>Certificate authentication provides a high level of trust when authenticating a user.</source>
					<target>Certificate authentication provides a high level of trust when authenticating a user.</target>
				</segment>
			</unit>
			<unit id="138" translate="yes">
				<segment state="initial">
					<source>Apps that require secure authentication beyond a userid and password combination can use certificates for authentication.</source>
					<target>Apps that require secure authentication beyond a userid and password combination can use certificates for authentication.</target>
				</segment>
			</unit>
		</group>
	</file>
</xliff>