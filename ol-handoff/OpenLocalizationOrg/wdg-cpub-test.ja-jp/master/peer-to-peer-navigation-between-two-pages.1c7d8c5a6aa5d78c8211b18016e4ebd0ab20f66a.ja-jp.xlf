<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="ja-jp" version="2.0" xml:space="preserve" xmlns="urn:oasis:names:tc:xliff:document:2.0">
	<file id="1">
		<mda:metadata>
			<mda:metaGroup>
				<mda:meta type="tool-id">mdxliff</mda:meta>
				<mda:meta type="tool-name">mdxliff</mda:meta>
				<mda:meta type="tool-version">1.0-00ddeee</mda:meta>
				<mda:meta type="tool-company">Microsoft</mda:meta>
			</mda:metaGroup>
		<mda:metaGroup><mda:meta type="olfilehash">f0c419674105f3406b3acf0a05287726485f0aaf</mda:meta><mda:meta type="olfilepath">wdg-cpub-test\ndolci2\layout\peer-to-peer-navigation-between-two-pages.md</mda:meta><mda:meta type="oltranslationpriority"></mda:meta><mda:meta type="oltranslationtype">Human Translation</mda:meta><mda:meta type="olskeletonhash">c9f8b99865dd03a3d46348de73916d82e2fe7e6d</mda:meta><mda:meta type="olxliffhash">d0a013c495d2d64663e16a929af355081b00dffd</mda:meta></mda:metaGroup></mda:metadata>
		<group id="content">
			<unit id="101" translate="yes">
				<segment state="initial">
					<source>Learn how to navigate in a basic two page peer-to-peer Universal Windows Platform (UWP) app.</source>
					<target>Learn how to navigate in a basic two page peer-to-peer Universal Windows Platform (UWP) app.</target>
				</segment>
			</unit>
			<unit id="102" translate="yes">
				<segment state="initial">
					<source>Peer-to-peer navigation between two pages</source>
					<target>Peer-to-peer navigation between two pages</target>
				</segment>
			</unit>
			<unit id="103" translate="yes">
				<segment state="initial">
					<source>Peer-to-peer navigation between two pages</source>
					<target>Peer-to-peer navigation between two pages</target>
				</segment>
			</unit>
			<unit id="104" translate="yes">
				<segment state="initial">
					<source>\[ Updated for UWP apps on Windows 10.</source>
					<target>\[ Updated for UWP apps on Windows 10.</target>
				</segment>
			</unit>
			<unit id="105" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](http://go.microsoft.com/fwlink/p/?linkid=619132)</data>
				</originalData>
				<segment state="initial">
					<source>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</source>
					<target>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</target>
				</segment>
			</unit>
			<unit id="106" translate="yes">
				<segment state="initial">
					<source>Learn how to navigate in a basic two page peer-to-peer Universal Windows Platform (UWP) app.</source>
					<target>Learn how to navigate in a basic two page peer-to-peer Universal Windows Platform (UWP) app.</target>
				</segment>
			</unit>
			<unit id="107" translate="yes">
				<segment state="initial">
					<source>two-page peer-to-peer navigation example</source>
					<target>two-page peer-to-peer navigation example</target>
				</segment>
			</unit>
			<unit id="108" translate="yes">
				<segment state="initial">
					<source>Important APIs</source>
					<target>Important APIs</target>
				</segment>
			</unit>
			<unit id="109" translate="yes">
				<segment state="initial">
					<source>Windows.UI.Xaml.Controls.Frame</source>
					<target>Windows.UI.Xaml.Controls.Frame</target>
				</segment>
			</unit>
			<unit id="110" translate="yes">
				<segment state="initial">
					<source>Windows.UI.Xaml.Controls.Page</source>
					<target>Windows.UI.Xaml.Controls.Page</target>
				</segment>
			</unit>
			<unit id="111" translate="yes">
				<segment state="initial">
					<source>Windows.UI.Xaml.Navigation</source>
					<target>Windows.UI.Xaml.Navigation</target>
				</segment>
			</unit>
			<unit id="112" translate="yes">
				<segment state="initial">
					<source>Create the blank app</source>
					<target>Create the blank app</target>
				</segment>
			</unit>
			<unit id="113" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">&amp;gt;</data>
				</originalData>
				<segment state="initial">
					<source>On the Microsoft Visual Studio menu, choose <pc dataRefEnd="id2" dataRefStart="id1" id="p1">File <ph dataRef="id3" id="ph1" /> New Project</pc>.</source>
					<target>On the Microsoft Visual Studio menu, choose <pc dataRefEnd="id2" dataRefStart="id1" id="p1">File <ph dataRef="id3" id="ph1" /> New Project</pc>.</target>
				</segment>
			</unit>
			<unit id="114" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">&amp;gt;</data>
					<data id="id6">&amp;gt;</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
					<data id="id9">&amp;gt;</data>
					<data id="id10">&amp;gt;</data>
				</originalData>
				<segment state="initial">
					<source>In the left pane of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">New Project</pc> dialog box, choose the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Visual C# -<ph dataRef="id5" id="ph1" /> Windows -<ph dataRef="id6" id="ph2" /> Universal</pc> or the <pc dataRefEnd="id8" dataRefStart="id7" id="p3">Visual C++ -<ph dataRef="id9" id="ph3" /> Windows -<ph dataRef="id10" id="ph4" /> Universal</pc> node.</source>
					<target>In the left pane of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">New Project</pc> dialog box, choose the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Visual C# -<ph dataRef="id5" id="ph1" /> Windows -<ph dataRef="id6" id="ph2" /> Universal</pc> or the <pc dataRefEnd="id8" dataRefStart="id7" id="p3">Visual C++ -<ph dataRef="id9" id="ph3" /> Windows -<ph dataRef="id10" id="ph4" /> Universal</pc> node.</target>
				</segment>
			</unit>
			<unit id="115" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>In the center pane, choose <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Blank App</pc>.</source>
					<target>In the center pane, choose <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Blank App</pc>.</target>
				</segment>
			</unit>
			<unit id="116" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source>In the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Name</pc> box, enter <pc dataRefEnd="id4" dataRefStart="id3" id="p2">NavApp1</pc>, and then choose the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">OK</pc> button.</source>
					<target>In the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Name</pc> box, enter <pc dataRefEnd="id4" dataRefStart="id3" id="p2">NavApp1</pc>, and then choose the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">OK</pc> button.</target>
				</segment>
			</unit>
			<unit id="117" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>The solution is created and the project files appear in <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Solution Explorer</pc>.</source>
					<target>The solution is created and the project files appear in <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Solution Explorer</pc>.</target>
				</segment>
			</unit>
			<unit id="118" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Important</pc>  When you run Visual Studio for the first time, it prompts you to obtain a developer license.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Important</pc>  When you run Visual Studio for the first time, it prompts you to obtain a developer license.</target>
				</segment>
			</unit>
			<unit id="119" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn706236)</data>
				</originalData>
				<segment state="initial">
					<source>For more info, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Enable your device for development</pc>.</source>
					<target>For more info, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Enable your device for development</pc>.</target>
				</segment>
			</unit>
			<unit id="120" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">&amp;gt;</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
				</originalData>
				<segment state="initial">
					<source>To run the program, choose <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Debug</pc> <ph dataRef="id3" id="ph1" /> <pc dataRefEnd="id5" dataRefStart="id4" id="p2">Start Debugging</pc> from the menu, or press F5.</source>
					<target>To run the program, choose <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Debug</pc> <ph dataRef="id3" id="ph1" /> <pc dataRefEnd="id5" dataRefStart="id4" id="p2">Start Debugging</pc> from the menu, or press F5.</target>
				</segment>
			</unit>
			<unit id="121" translate="yes">
				<segment state="initial">
					<source>A blank page is displayed.</source>
					<target>A blank page is displayed.</target>
				</segment>
			</unit>
			<unit id="122" translate="yes">
				<segment state="initial">
					<source>Press Shift+F5 to stop debugging and return to Visual Studio.</source>
					<target>Press Shift+F5 to stop debugging and return to Visual Studio.</target>
				</segment>
			</unit>
			<unit id="123" translate="yes">
				<segment state="initial">
					<source>Add basic pages</source>
					<target>Add basic pages</target>
				</segment>
			</unit>
			<unit id="124" translate="yes">
				<segment state="initial">
					<source>Next, add two content pages to the project.</source>
					<target>Next, add two content pages to the project.</target>
				</segment>
			</unit>
			<unit id="125" translate="yes">
				<segment state="initial">
					<source>Do the following steps two times to add two pages to navigate between.</source>
					<target>Do the following steps two times to add two pages to navigate between.</target>
				</segment>
			</unit>
			<unit id="126" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>In <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Solution Explorer</pc>, right-click the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">BlankApp</pc> project node to open the shortcut menu.</source>
					<target>In <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Solution Explorer</pc>, right-click the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">BlankApp</pc> project node to open the shortcut menu.</target>
				</segment>
			</unit>
			<unit id="127" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">&amp;gt;</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
				</originalData>
				<segment state="initial">
					<source>Choose <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Add</pc> <ph dataRef="id3" id="ph1" /> <pc dataRefEnd="id5" dataRefStart="id4" id="p2">New Item</pc> from the shortcut menu.</source>
					<target>Choose <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Add</pc> <ph dataRef="id3" id="ph1" /> <pc dataRefEnd="id5" dataRefStart="id4" id="p2">New Item</pc> from the shortcut menu.</target>
				</segment>
			</unit>
			<unit id="128" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>In the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Add New Item</pc> dialog box, choose <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Blank Page</pc> in the middle pane.</source>
					<target>In the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Add New Item</pc> dialog box, choose <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Blank Page</pc> in the middle pane.</target>
				</segment>
			</unit>
			<unit id="129" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>In the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Name</pc> box, enter <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Page1</pc> (or <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Page2</pc>) and press the <pc dataRefEnd="id8" dataRefStart="id7" id="p4">Add</pc> button.</source>
					<target>In the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Name</pc> box, enter <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Page1</pc> (or <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Page2</pc>) and press the <pc dataRefEnd="id8" dataRefStart="id7" id="p4">Add</pc> button.</target>
				</segment>
			</unit>
			<unit id="130" translate="yes">
				<segment state="initial">
					<source>These files should now be listed as part of your NavApp1 project.</source>
					<target>These files should now be listed as part of your NavApp1 project.</target>
				</segment>
			</unit>
			<unit id="131" translate="yes">
				<segment state="initial">
					<source>CS</source>
					<target>CS</target>
				</segment>
			</unit>
			<unit id="132" translate="yes">
				<segment state="initial">
					<source>C++</source>
					<target>C++</target>
				</segment>
			</unit>
			<unit id="133" translate="yes">
				<segment state="initial">
					<source>Page1.xaml</source>
					<target>Page1.xaml</target>
				</segment>
			</unit>
			<unit id="134" translate="yes">
				<segment state="initial">
					<source>Page1.xaml.cs</source>
					<target>Page1.xaml.cs</target>
				</segment>
			</unit>
			<unit id="135" translate="yes">
				<segment state="initial">
					<source>Page2.xaml</source>
					<target>Page2.xaml</target>
				</segment>
			</unit>
			<unit id="136" translate="yes">
				<segment state="initial">
					<source>Page2.xaml.cs</source>
					<target>Page2.xaml.cs</target>
				</segment>
			</unit>
			<unit id="137" translate="yes">
				<segment state="initial">
					<source>Page1.xaml</source>
					<target>Page1.xaml</target>
				</segment>
			</unit>
			<unit id="138" translate="yes">
				<segment state="initial">
					<source>Page1.xaml.cpp</source>
					<target>Page1.xaml.cpp</target>
				</segment>
			</unit>
			<unit id="139" translate="yes">
				<segment state="initial">
					<source>Page1.xaml.h</source>
					<target>Page1.xaml.h</target>
				</segment>
			</unit>
			<unit id="140" translate="yes">
				<segment state="initial">
					<source>Page2.xaml</source>
					<target>Page2.xaml</target>
				</segment>
			</unit>
			<unit id="141" translate="yes">
				<segment state="initial">
					<source>Page2.xaml.cpp</source>
					<target>Page2.xaml.cpp</target>
				</segment>
			</unit>
			<unit id="142" translate="yes">
				<segment state="initial">
					<source>Page2.xaml.h</source>
					<target>Page2.xaml.h</target>
				</segment>
			</unit>
			<unit id="143" translate="yes">
				<segment state="initial">
					<source>Note</source>
					<target>Note</target>
				</segment>
			</unit>
			<unit id="144" translate="yes">
				<segment state="initial">
					<source>Functions are declared in the header (.h) file and implemented in the code-behind file (.cpp).</source>
					<target>Functions are declared in the header (.h) file and implemented in the code-behind file (.cpp).</target>
				</segment>
			</unit>
			<unit id="145" translate="yes">
				<segment state="initial">
					<source>Add the following content to the UI of Page1.xaml.</source>
					<target>Add the following content to the UI of Page1.xaml.</target>
				</segment>
			</unit>
			<unit id="146" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br209652)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">`pageTitle`</data>
					<data id="id6">[</data>
					<data id="id7">](https://msdn.microsoft.com/library/windows/apps/br242704)</data>
					<data id="id8">**</data>
					<data id="id9">**</data>
				</originalData>
				<segment state="initial">
					<source>Add a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">TextBlock</pc></pc> element named <ph dataRef="id5" id="ph1" /> as a child element of the root <pc dataRefEnd="id7" dataRefStart="id6" id="p3"><pc dataRefEnd="id9" dataRefStart="id8" id="p4">Grid</pc></pc>.</source>
					<target>Add a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">TextBlock</pc></pc> element named <ph dataRef="id5" id="ph1" /> as a child element of the root <pc dataRefEnd="id7" dataRefStart="id6" id="p3"><pc dataRefEnd="id9" dataRefStart="id8" id="p4">Grid</pc></pc>.</target>
				</segment>
			</unit>
			<unit id="147" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br209676)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">`Page 1`</data>
				</originalData>
				<segment state="initial">
					<source>Change the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Text</pc></pc> property to <ph dataRef="id5" id="ph1" />.</source>
					<target>Change the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Text</pc></pc> property to <ph dataRef="id5" id="ph1" />.</target>
				</segment>
			</unit>
			<unit id="148" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br242739)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/br242704)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
					<data id="id9">`pageTitle`</data>
					<data id="id10">[</data>
					<data id="id11">](https://msdn.microsoft.com/library/windows/apps/br209652)</data>
					<data id="id12">**</data>
					<data id="id13">**</data>
				</originalData>
				<segment state="initial">
					<source>Add the following <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">HyperlinkButton</pc></pc> element as a child element of the root <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Grid</pc></pc> and after the <ph dataRef="id9" id="ph1" /> <pc dataRefEnd="id11" dataRefStart="id10" id="p5"><pc dataRefEnd="id13" dataRefStart="id12" id="p6">TextBlock</pc></pc> element.</source>
					<target>Add the following <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">HyperlinkButton</pc></pc> element as a child element of the root <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Grid</pc></pc> and after the <ph dataRef="id9" id="ph1" /> <pc dataRefEnd="id11" dataRefStart="id10" id="p5"><pc dataRefEnd="id13" dataRefStart="id12" id="p6">TextBlock</pc></pc> element.</target>
				</segment>
			</unit>
			<unit id="149" translate="yes">
				<originalData>
					<data id="id1">`Page1`</data>
					<data id="id2">`Click`</data>
					<data id="id3">[</data>
					<data id="id4">](https://msdn.microsoft.com/library/windows/apps/br242739)</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source>Add the following code to the <ph dataRef="id1" id="ph1" /> class in the Page1.xaml code-behind file to handle the <ph dataRef="id2" id="ph2" /> event of the <pc dataRefEnd="id4" dataRefStart="id3" id="p1"><pc dataRefEnd="id6" dataRefStart="id5" id="p2">HyperlinkButton</pc></pc> you added previously.</source>
					<target>Add the following code to the <ph dataRef="id1" id="ph1" /> class in the Page1.xaml code-behind file to handle the <ph dataRef="id2" id="ph2" /> event of the <pc dataRefEnd="id4" dataRefStart="id3" id="p1"><pc dataRefEnd="id6" dataRefStart="id5" id="p2">HyperlinkButton</pc></pc> you added previously.</target>
				</segment>
			</unit>
			<unit id="150" translate="yes">
				<segment state="initial">
					<source>Here, we navigate to Page2.xaml.</source>
					<target>Here, we navigate to Page2.xaml.</target>
				</segment>
			</unit>
			<unit id="151" translate="yes">
				<segment state="initial">
					<source>Make the following changes to the UI of Page2.xaml.</source>
					<target>Make the following changes to the UI of Page2.xaml.</target>
				</segment>
			</unit>
			<unit id="152" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br209652)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">`pageTitle`</data>
					<data id="id6">[</data>
					<data id="id7">](https://msdn.microsoft.com/library/windows/apps/br242704)</data>
					<data id="id8">**</data>
					<data id="id9">**</data>
				</originalData>
				<segment state="initial">
					<source>Add a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">TextBlock</pc></pc> element named <ph dataRef="id5" id="ph1" /> as a child element of the root <pc dataRefEnd="id7" dataRefStart="id6" id="p3"><pc dataRefEnd="id9" dataRefStart="id8" id="p4">Grid</pc></pc>.</source>
					<target>Add a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">TextBlock</pc></pc> element named <ph dataRef="id5" id="ph1" /> as a child element of the root <pc dataRefEnd="id7" dataRefStart="id6" id="p3"><pc dataRefEnd="id9" dataRefStart="id8" id="p4">Grid</pc></pc>.</target>
				</segment>
			</unit>
			<unit id="153" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br209676)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">`Page 2`</data>
				</originalData>
				<segment state="initial">
					<source>Change the value of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Text</pc></pc> property to <ph dataRef="id5" id="ph1" />.</source>
					<target>Change the value of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Text</pc></pc> property to <ph dataRef="id5" id="ph1" />.</target>
				</segment>
			</unit>
			<unit id="154" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br242739)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/br242704)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
					<data id="id9">`pageTitle`</data>
					<data id="id10">[</data>
					<data id="id11">](https://msdn.microsoft.com/library/windows/apps/br209652)</data>
					<data id="id12">**</data>
					<data id="id13">**</data>
				</originalData>
				<segment state="initial">
					<source>Add the following <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">HyperlinkButton</pc></pc> element as a child element of the root <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Grid</pc></pc> and after the <ph dataRef="id9" id="ph1" /> <pc dataRefEnd="id11" dataRefStart="id10" id="p5"><pc dataRefEnd="id13" dataRefStart="id12" id="p6">TextBlock</pc></pc> element.</source>
					<target>Add the following <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">HyperlinkButton</pc></pc> element as a child element of the root <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Grid</pc></pc> and after the <ph dataRef="id9" id="ph1" /> <pc dataRefEnd="id11" dataRefStart="id10" id="p5"><pc dataRefEnd="id13" dataRefStart="id12" id="p6">TextBlock</pc></pc> element.</target>
				</segment>
			</unit>
			<unit id="155" translate="yes">
				<originalData>
					<data id="id1">`Page2`</data>
					<data id="id2">`Click`</data>
					<data id="id3">[</data>
					<data id="id4">](https://msdn.microsoft.com/library/windows/apps/br242739)</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source>Add the following code to the <ph dataRef="id1" id="ph1" /> class in the Page2.xaml code-behind file to handle the <ph dataRef="id2" id="ph2" /> event of the <pc dataRefEnd="id4" dataRefStart="id3" id="p1"><pc dataRefEnd="id6" dataRefStart="id5" id="p2">HyperlinkButton</pc></pc> you added previously.</source>
					<target>Add the following code to the <ph dataRef="id1" id="ph1" /> class in the Page2.xaml code-behind file to handle the <ph dataRef="id2" id="ph2" /> event of the <pc dataRefEnd="id4" dataRefStart="id3" id="p1"><pc dataRefEnd="id6" dataRefStart="id5" id="p2">HyperlinkButton</pc></pc> you added previously.</target>
				</segment>
			</unit>
			<unit id="156" translate="yes">
				<segment state="initial">
					<source>Here, we navigate to Page1.xaml.</source>
					<target>Here, we navigate to Page1.xaml.</target>
				</segment>
			</unit>
			<unit id="157" translate="yes">
				<segment state="initial">
					<source>Note</source>
					<target>Note</target>
				</segment>
			</unit>
			<unit id="158" translate="yes">
				<originalData>
					<data id="id1">`#include`</data>
				</originalData>
				<segment state="initial">
					<source>For C++ projects, you must add a <ph dataRef="id1" id="ph1" /> directive in the header file of each page that references another page.</source>
					<target>For C++ projects, you must add a <ph dataRef="id1" id="ph1" /> directive in the header file of each page that references another page.</target>
				</segment>
			</unit>
			<unit id="159" translate="yes">
				<originalData>
					<data id="id1">`#include "Page2.xaml.h"`</data>
					<data id="id2">`#include "Page1.xaml.h"`</data>
				</originalData>
				<segment state="initial">
					<source>For the inter-page navigation example presented here, page1.xaml.h file contains <ph dataRef="id1" id="ph1" />, in turn, page2.xaml.h contains <ph dataRef="id2" id="ph2" />.</source>
					<target>For the inter-page navigation example presented here, page1.xaml.h file contains <ph dataRef="id1" id="ph1" />, in turn, page2.xaml.h contains <ph dataRef="id2" id="ph2" />.</target>
				</segment>
			</unit>
			<unit id="160" translate="yes">
				<segment state="initial">
					<source>Now that we've prepared the content pages, we need to make Page1.xaml display when the app starts.</source>
					<target>Now that we've prepared the content pages, we need to make Page1.xaml display when the app starts.</target>
				</segment>
			</unit>
			<unit id="161" translate="yes">
				<originalData>
					<data id="id1">`OnLaunched`</data>
				</originalData>
				<segment state="initial">
					<source>Open the app.xaml code-behind file and change the <ph dataRef="id1" id="ph1" /> handler.</source>
					<target>Open the app.xaml code-behind file and change the <ph dataRef="id1" id="ph1" /> handler.</target>
				</segment>
			</unit>
			<unit id="162" translate="yes">
				<originalData>
					<data id="id1">`Page1`</data>
					<data id="id2">[</data>
					<data id="id3">](https://msdn.microsoft.com/library/windows/apps/br242694)</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">`MainPage`</data>
				</originalData>
				<segment state="initial">
					<source>Here, we specify <ph dataRef="id1" id="ph1" /> in the call to <pc dataRefEnd="id3" dataRefStart="id2" id="p1"><pc dataRefEnd="id5" dataRefStart="id4" id="p2">Frame.Navigate</pc></pc> instead of <ph dataRef="id6" id="ph2" />.</source>
					<target>Here, we specify <ph dataRef="id1" id="ph1" /> in the call to <pc dataRefEnd="id3" dataRefStart="id2" id="p1"><pc dataRefEnd="id5" dataRefStart="id4" id="p2">Frame.Navigate</pc></pc> instead of <ph dataRef="id6" id="ph2" />.</target>
				</segment>
			</unit>
			<unit id="163" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">[</data>
					<data id="id4">](https://msdn.microsoft.com/library/windows/apps/br242694)</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  The code here uses the return value of <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">Navigate</pc></pc> to throw an app exception if the navigation to the app's initial window frame fails.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  The code here uses the return value of <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">Navigate</pc></pc> to throw an app exception if the navigation to the app's initial window frame fails.</target>
				</segment>
			</unit>
			<unit id="164" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>When <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Navigate</pc> returns <pc dataRefEnd="id4" dataRefStart="id3" id="p2">true</pc>, the navigation happens.</source>
					<target>When <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Navigate</pc> returns <pc dataRefEnd="id4" dataRefStart="id3" id="p2">true</pc>, the navigation happens.</target>
				</segment>
			</unit>
			<unit id="165" translate="yes">
				<segment state="initial">
					<source>Now, build and run the app.</source>
					<target>Now, build and run the app.</target>
				</segment>
			</unit>
			<unit id="166" translate="yes">
				<segment state="initial">
					<source>Click the link that says "Click to go to page 2".</source>
					<target>Click the link that says "Click to go to page 2".</target>
				</segment>
			</unit>
			<unit id="167" translate="yes">
				<segment state="initial">
					<source>The second page that says "Page 2" at the top should be loaded and displayed in the frame.</source>
					<target>The second page that says "Page 2" at the top should be loaded and displayed in the frame.</target>
				</segment>
			</unit>
			<unit id="168" translate="yes">
				<segment state="initial">
					<source>Frame and Page classes</source>
					<target>Frame and Page classes</target>
				</segment>
			</unit>
			<unit id="169" translate="yes">
				<segment state="initial">
					<source>Before we add more functionality to our app, let's look at how the pages we added provide navigation support for the app.</source>
					<target>Before we add more functionality to our app, let's look at how the pages we added provide navigation support for the app.</target>
				</segment>
			</unit>
			<unit id="170" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br242682)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">`rootFrame`</data>
					<data id="id6">`App.OnLaunched`</data>
				</originalData>
				<segment state="initial">
					<source>First, a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Frame</pc></pc> (<ph dataRef="id5" id="ph1" />) is created for the app in the <ph dataRef="id6" id="ph2" /> method of the App.xaml code-behind file.</source>
					<target>First, a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Frame</pc></pc> (<ph dataRef="id5" id="ph1" />) is created for the app in the <ph dataRef="id6" id="ph2" /> method of the App.xaml code-behind file.</target>
				</segment>
			</unit>
			<unit id="171" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br242694)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Navigate</pc></pc> method is used to display content in this <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Frame</pc>.</source>
					<target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Navigate</pc></pc> method is used to display content in this <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Frame</pc>.</target>
				</segment>
			</unit>
			<unit id="172" translate="yes">
				<segment state="initial">
					<source>Note</source>
					<target>Note</target>
				</segment>
			</unit>
			<unit id="173" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br242682)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/br242694)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
					<data id="id9">[</data>
					<data id="id10">](https://msdn.microsoft.com/library/windows/apps/dn996568)</data>
					<data id="id11">**</data>
					<data id="id12">**</data>
					<data id="id13">[</data>
					<data id="id14">](https://msdn.microsoft.com/library/windows/apps/br242693)</data>
					<data id="id15">**</data>
					<data id="id16">**</data>
					<data id="id17">[</data>
					<data id="id18">](https://msdn.microsoft.com/library/windows/apps/dn279543)</data>
					<data id="id19">**</data>
					<data id="id20">**</data>
					<data id="id21">[</data>
					<data id="id22">](https://msdn.microsoft.com/library/windows/apps/dn279547)</data>
					<data id="id23">**</data>
					<data id="id24">**</data>
					<data id="id25">[</data>
					<data id="id26">](https://msdn.microsoft.com/library/windows/apps/hh967995)</data>
					<data id="id27">**</data>
					<data id="id28">**</data>
				</originalData>
				<segment state="initial">
					<source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Frame</pc></pc> class supports various navigation methods such as <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Navigate</pc></pc>, <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">GoBack</pc></pc>, and <pc dataRefEnd="id14" dataRefStart="id13" id="p7"><pc dataRefEnd="id16" dataRefStart="id15" id="p8">GoForward</pc></pc>, and properties such as <pc dataRefEnd="id18" dataRefStart="id17" id="p9"><pc dataRefEnd="id20" dataRefStart="id19" id="p10">BackStack</pc></pc>, <pc dataRefEnd="id22" dataRefStart="id21" id="p11"><pc dataRefEnd="id24" dataRefStart="id23" id="p12">ForwardStack</pc></pc>, and <pc dataRefEnd="id26" dataRefStart="id25" id="p13"><pc dataRefEnd="id28" dataRefStart="id27" id="p14">BackStackDepth</pc></pc>.</source>
					<target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Frame</pc></pc> class supports various navigation methods such as <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Navigate</pc></pc>, <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">GoBack</pc></pc>, and <pc dataRefEnd="id14" dataRefStart="id13" id="p7"><pc dataRefEnd="id16" dataRefStart="id15" id="p8">GoForward</pc></pc>, and properties such as <pc dataRefEnd="id18" dataRefStart="id17" id="p9"><pc dataRefEnd="id20" dataRefStart="id19" id="p10">BackStack</pc></pc>, <pc dataRefEnd="id22" dataRefStart="id21" id="p11"><pc dataRefEnd="id24" dataRefStart="id23" id="p12">ForwardStack</pc></pc>, and <pc dataRefEnd="id26" dataRefStart="id25" id="p13"><pc dataRefEnd="id28" dataRefStart="id27" id="p14">BackStackDepth</pc></pc>.</target>
				</segment>
			</unit>
			<unit id="174" translate="yes">
				<originalData>
					<data id="id1">`Page1`</data>
					<data id="id2">[</data>
					<data id="id3">](https://msdn.microsoft.com/library/windows/apps/br242694)</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
				</originalData>
				<segment state="initial">
					<source>In our example, <ph dataRef="id1" id="ph1" /> is passed to the <pc dataRefEnd="id3" dataRefStart="id2" id="p1"><pc dataRefEnd="id5" dataRefStart="id4" id="p2">Navigate</pc></pc> method.</source>
					<target>In our example, <ph dataRef="id1" id="ph1" /> is passed to the <pc dataRefEnd="id3" dataRefStart="id2" id="p1"><pc dataRefEnd="id5" dataRefStart="id4" id="p2">Navigate</pc></pc> method.</target>
				</segment>
			</unit>
			<unit id="175" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br242682)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source>This method sets the content of the app's current window to the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Frame</pc></pc> and loads the content of the page you specify into the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Frame</pc> (Page1.xaml in our example, or MainPage.xaml, by default).</source>
					<target>This method sets the content of the app's current window to the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Frame</pc></pc> and loads the content of the page you specify into the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Frame</pc> (Page1.xaml in our example, or MainPage.xaml, by default).</target>
				</segment>
			</unit>
			<unit id="176" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br227503)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>is a subclass of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Page</pc></pc> class.</source>
					<target>is a subclass of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Page</pc></pc> class.</target>
				</segment>
			</unit>
			<unit id="177" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">[</data>
					<data id="id4">](https://msdn.microsoft.com/library/windows/apps/br227504)</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
					<data id="id7">[</data>
					<data id="id8">](https://msdn.microsoft.com/library/windows/apps/br242682)</data>
					<data id="id9">**</data>
					<data id="id10">**</data>
					<data id="id11">**</data>
					<data id="id12">**</data>
				</originalData>
				<segment state="initial">
					<source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Page</pc> class has a read-only <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">Frame</pc></pc> property that gets the <pc dataRefEnd="id8" dataRefStart="id7" id="p4"><pc dataRefEnd="id10" dataRefStart="id9" id="p5">Frame</pc></pc> containing the <pc dataRefEnd="id12" dataRefStart="id11" id="p6">Page</pc>.</source>
					<target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Page</pc> class has a read-only <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">Frame</pc></pc> property that gets the <pc dataRefEnd="id8" dataRefStart="id7" id="p4"><pc dataRefEnd="id10" dataRefStart="id9" id="p5">Frame</pc></pc> containing the <pc dataRefEnd="id12" dataRefStart="id11" id="p6">Page</pc>.</target>
				</segment>
			</unit>
			<unit id="178" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br227737)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/br242739)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
					<data id="id9">` Frame.Navigate(typeof(Page2))`</data>
					<data id="id10">**</data>
					<data id="id11">**</data>
				</originalData>
				<segment state="initial">
					<source>When the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Click</pc></pc> event handler of the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">HyperlinkButton</pc></pc> calls<ph dataRef="id9" id="ph1" />, the <pc dataRefEnd="id11" dataRefStart="id10" id="p5">Frame</pc> in the app's window displays the content of Page2.xaml.</source>
					<target>When the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Click</pc></pc> event handler of the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">HyperlinkButton</pc></pc> calls<ph dataRef="id9" id="ph1" />, the <pc dataRefEnd="id11" dataRefStart="id10" id="p5">Frame</pc> in the app's window displays the content of Page2.xaml.</target>
				</segment>
			</unit>
			<unit id="179" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn298572)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/dn279543)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
					<data id="id9">[</data>
					<data id="id10">](https://msdn.microsoft.com/library/windows/apps/dn279547)</data>
					<data id="id11">**</data>
					<data id="id12">**</data>
					<data id="id13">[</data>
					<data id="id14">](https://msdn.microsoft.com/library/windows/apps/br227504)</data>
					<data id="id15">**</data>
					<data id="id16">**</data>
				</originalData>
				<segment state="initial">
					<source>Whenever a page is loaded into the frame, that page is added as a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">PageStackEntry</pc></pc> to the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">BackStack</pc></pc> or <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">ForwardStack</pc></pc> of the <pc dataRefEnd="id14" dataRefStart="id13" id="p7"><pc dataRefEnd="id16" dataRefStart="id15" id="p8">Frame</pc></pc>.</source>
					<target>Whenever a page is loaded into the frame, that page is added as a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">PageStackEntry</pc></pc> to the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">BackStack</pc></pc> or <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">ForwardStack</pc></pc> of the <pc dataRefEnd="id14" dataRefStart="id13" id="p7"><pc dataRefEnd="id16" dataRefStart="id15" id="p8">Frame</pc></pc>.</target>
				</segment>
			</unit>
			<unit id="180" translate="yes">
				<segment state="initial">
					<source>Pass information between pages</source>
					<target>Pass information between pages</target>
				</segment>
			</unit>
			<unit id="181" translate="yes">
				<segment state="initial">
					<source>Our app navigates between two pages, but it really doesn't do anything interesting yet.</source>
					<target>Our app navigates between two pages, but it really doesn't do anything interesting yet.</target>
				</segment>
			</unit>
			<unit id="182" translate="yes">
				<segment state="initial">
					<source>Often, when an app has multiple pages, the pages need to share information.</source>
					<target>Often, when an app has multiple pages, the pages need to share information.</target>
				</segment>
			</unit>
			<unit id="183" translate="yes">
				<segment state="initial">
					<source>Let's pass some information from the first page to the second page.</source>
					<target>Let's pass some information from the first page to the second page.</target>
				</segment>
			</unit>
			<unit id="184" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br242739)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/br209635)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>In Page1.xaml, replace the the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">HyperlinkButton</pc></pc> you added earlier with the following <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">StackPanel</pc></pc>.</source>
					<target>In Page1.xaml, replace the the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">HyperlinkButton</pc></pc> you added earlier with the following <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">StackPanel</pc></pc>.</target>
				</segment>
			</unit>
			<unit id="185" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br209652)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/br209683)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
					<data id="id9">`name`</data>
				</originalData>
				<segment state="initial">
					<source>Here, we add a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">TextBlock</pc></pc> label and a <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">TextBox</pc></pc> (<ph dataRef="id9" id="ph1" />) for entering a text string.</source>
					<target>Here, we add a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">TextBlock</pc></pc> label and a <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">TextBox</pc></pc> (<ph dataRef="id9" id="ph1" />) for entering a text string.</target>
				</segment>
			</unit>
			<unit id="186" translate="yes">
				<originalData>
					<data id="id1">`HyperlinkButton_Click`</data>
					<data id="id2">`Text`</data>
					<data id="id3">`name`</data>
					<data id="id4">[</data>
					<data id="id5">](https://msdn.microsoft.com/library/windows/apps/br209683)</data>
					<data id="id6">**</data>
					<data id="id7">**</data>
					<data id="id8">`Navigate`</data>
				</originalData>
				<segment state="initial">
					<source>In the <ph dataRef="id1" id="ph1" /> event handler of the Page1.xaml code-behind file, add a parameter referencing the <ph dataRef="id2" id="ph2" /> property of the <ph dataRef="id3" id="ph3" /> <pc dataRefEnd="id5" dataRefStart="id4" id="p1"><pc dataRefEnd="id7" dataRefStart="id6" id="p2">TextBox</pc></pc> to the <ph dataRef="id8" id="ph4" /> method.</source>
					<target>In the <ph dataRef="id1" id="ph1" /> event handler of the Page1.xaml code-behind file, add a parameter referencing the <ph dataRef="id2" id="ph2" /> property of the <ph dataRef="id3" id="ph3" /> <pc dataRefEnd="id5" dataRefStart="id4" id="p1"><pc dataRefEnd="id7" dataRefStart="id6" id="p2">TextBox</pc></pc> to the <ph dataRef="id8" id="ph4" /> method.</target>
				</segment>
			</unit>
			<unit id="187" translate="yes">
				<originalData>
					<data id="id1">`OnNavigatedTo`</data>
				</originalData>
				<segment state="initial">
					<source>In the Page2.xaml code-behind file, override the <ph dataRef="id1" id="ph1" /> method with the following:</source>
					<target>In the Page2.xaml code-behind file, override the <ph dataRef="id1" id="ph1" /> method with the following:</target>
				</segment>
			</unit>
			<unit id="188" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source>Run the app, type your name in the text box, and then click the link that says <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Click to go to page 2</pc>.</source>
					<target>Run the app, type your name in the text box, and then click the link that says <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Click to go to page 2</pc>.</target>
				</segment>
			</unit>
			<unit id="189" translate="yes">
				<originalData>
					<data id="id1">`this.Frame.Navigate(typeof(Page2), tb1.Text)`</data>
					<data id="id2">[</data>
					<data id="id3">](https://msdn.microsoft.com/library/windows/apps/br227737)</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">[</data>
					<data id="id7">](https://msdn.microsoft.com/library/windows/apps/br242739)</data>
					<data id="id8">**</data>
					<data id="id9">**</data>
					<data id="id10">`name.Text`</data>
					<data id="id11">`Page2`</data>
				</originalData>
				<segment state="initial">
					<source>When you called <ph dataRef="id1" id="ph1" /> in the <pc dataRefEnd="id3" dataRefStart="id2" id="p1"><pc dataRefEnd="id5" dataRefStart="id4" id="p2">Click</pc></pc> event of the <pc dataRefEnd="id7" dataRefStart="id6" id="p3"><pc dataRefEnd="id9" dataRefStart="id8" id="p4">HyperlinkButton</pc></pc>, the <ph dataRef="id10" id="ph2" /> property was passed to <ph dataRef="id11" id="ph3" /> and the value from the event data is used for the message displayed on the page.</source>
					<target>When you called <ph dataRef="id1" id="ph1" /> in the <pc dataRefEnd="id3" dataRefStart="id2" id="p1"><pc dataRefEnd="id5" dataRefStart="id4" id="p2">Click</pc></pc> event of the <pc dataRefEnd="id7" dataRefStart="id6" id="p3"><pc dataRefEnd="id9" dataRefStart="id8" id="p4">HyperlinkButton</pc></pc>, the <ph dataRef="id10" id="ph2" /> property was passed to <ph dataRef="id11" id="ph3" /> and the value from the event data is used for the message displayed on the page.</target>
				</segment>
			</unit>
			<unit id="190" translate="yes">
				<segment state="initial">
					<source>Cache a page</source>
					<target>Cache a page</target>
				</segment>
			</unit>
			<unit id="191" translate="yes">
				<segment state="initial">
					<source>Page content and state is not cached by default, you must enable it in each page of your app.</source>
					<target>Page content and state is not cached by default, you must enable it in each page of your app.</target>
				</segment>
			</unit>
			<unit id="192" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](navigation-history-and-backwards-navigation.md)</data>
					<data id="id3">`Page2`</data>
					<data id="id4">[</data>
					<data id="id5">](https://msdn.microsoft.com/library/windows/apps/br209683)</data>
					<data id="id6">**</data>
					<data id="id7">**</data>
					<data id="id8">`Page1`</data>
				</originalData>
				<segment state="initial">
					<source>In our basic peer-to-peer example, there is no back button (we demonstrate back navigation in <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Back button navigation</pc>), but if you did click a back button on <ph dataRef="id3" id="ph1" />, the <pc dataRefEnd="id5" dataRefStart="id4" id="p2"><pc dataRefEnd="id7" dataRefStart="id6" id="p3">TextBox</pc></pc> (and any other field) on <ph dataRef="id8" id="ph2" /> would be set to its default state.</source>
					<target>In our basic peer-to-peer example, there is no back button (we demonstrate back navigation in <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Back button navigation</pc>), but if you did click a back button on <ph dataRef="id3" id="ph1" />, the <pc dataRefEnd="id5" dataRefStart="id4" id="p2"><pc dataRefEnd="id7" dataRefStart="id6" id="p3">TextBox</pc></pc> (and any other field) on <ph dataRef="id8" id="ph2" /> would be set to its default state.</target>
				</segment>
			</unit>
			<unit id="193" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br227506)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
				</originalData>
				<segment state="initial">
					<source>One way to work around this is to use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">NavigationCacheMode</pc></pc> property to specify that a page be added to the frame's page cache.</source>
					<target>One way to work around this is to use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">NavigationCacheMode</pc></pc> property to specify that a page be added to the frame's page cache.</target>
				</segment>
			</unit>
			<unit id="194" translate="yes">
				<originalData>
					<data id="id1">`Page1`</data>
					<data id="id2">[</data>
					<data id="id3">](https://msdn.microsoft.com/library/windows/apps/br227506)</data>
					<data id="id4">**</data>
					<data id="id5">**</data>
					<data id="id6">[</data>
					<data id="id7">](https://msdn.microsoft.com/library/windows/apps/br243284)</data>
					<data id="id8">**</data>
					<data id="id9">**</data>
				</originalData>
				<segment state="initial">
					<source>In the constructor of <ph dataRef="id1" id="ph1" />, set <pc dataRefEnd="id3" dataRefStart="id2" id="p1"><pc dataRefEnd="id5" dataRefStart="id4" id="p2">NavigationCacheMode</pc></pc> to <pc dataRefEnd="id7" dataRefStart="id6" id="p3"><pc dataRefEnd="id9" dataRefStart="id8" id="p4">Enabled</pc></pc>.</source>
					<target>In the constructor of <ph dataRef="id1" id="ph1" />, set <pc dataRefEnd="id3" dataRefStart="id2" id="p1"><pc dataRefEnd="id5" dataRefStart="id4" id="p2">NavigationCacheMode</pc></pc> to <pc dataRefEnd="id7" dataRefStart="id6" id="p3"><pc dataRefEnd="id9" dataRefStart="id8" id="p4">Enabled</pc></pc>.</target>
				</segment>
			</unit>
			<unit id="195" translate="yes">
				<segment state="initial">
					<source>This retains all content and state values for the page until the page cache for the frame is exceeded.</source>
					<target>This retains all content and state values for the page until the page cache for the frame is exceeded.</target>
				</segment>
			</unit>
			<unit id="196" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://msdn.microsoft.com/library/windows/apps/br227506)</data>
					<data id="id3">**</data>
					<data id="id4">**</data>
					<data id="id5">[</data>
					<data id="id6">](https://msdn.microsoft.com/library/windows/apps/br243284)</data>
					<data id="id7">**</data>
					<data id="id8">**</data>
				</originalData>
				<segment state="initial">
					<source>Set <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">NavigationCacheMode</pc></pc> to <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Required</pc></pc> if you want to ignore cache size limits for the frame.</source>
					<target>Set <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">NavigationCacheMode</pc></pc> to <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Required</pc></pc> if you want to ignore cache size limits for the frame.</target>
				</segment>
			</unit>
			<unit id="197" translate="yes">
				<segment state="initial">
					<source>However, cache size limits might be crucial, depending on the memory limits of a device.</source>
					<target>However, cache size limits might be crucial, depending on the memory limits of a device.</target>
				</segment>
			</unit>
			<unit id="198" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
					<data id="id3">[</data>
					<data id="id4">](https://msdn.microsoft.com/library/windows/apps/br242683)</data>
					<data id="id5">**</data>
					<data id="id6">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  The <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">CacheSize</pc></pc> property specifies the number of pages in the navigation history that can be cached for the frame.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  The <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">CacheSize</pc></pc> property specifies the number of pages in the navigation history that can be cached for the frame.</target>
				</segment>
			</unit>
			<unit id="199" translate="yes">
				<segment state="initial">
					<source>Related articles</source>
					<target>Related articles</target>
				</segment>
			</unit>
			<unit id="200" translate="yes">
				<segment state="initial">
					<source>Navigation design basics for UWP apps</source>
					<target>Navigation design basics for UWP apps</target>
				</segment>
			</unit>
			<unit id="201" translate="yes">
				<segment state="initial">
					<source>Guidelines for tabs and pivots</source>
					<target>Guidelines for tabs and pivots</target>
				</segment>
			</unit>
			<unit id="202" translate="yes">
				<segment state="initial">
					<source>Guidelines for navigation panes</source>
					<target>Guidelines for navigation panes</target>
				</segment>
			</unit>
		</group>
	</file>
</xliff>